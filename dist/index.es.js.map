{"version":3,"file":"index.es.js","sources":["../node_modules/.pnpm/react@19.1.1/node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/.pnpm/react@19.1.1/node_modules/react/cjs/react-jsx-runtime.development.js","../node_modules/.pnpm/react@19.1.1/node_modules/react/jsx-runtime.js","../node_modules/.pnpm/@microsoft+fetch-event-source@2.0.1/node_modules/@microsoft/fetch-event-source/lib/esm/parse.js","../node_modules/.pnpm/@microsoft+fetch-event-source@2.0.1/node_modules/@microsoft/fetch-event-source/lib/esm/fetch.js","../src/components/sse/useSSE.ts","../src/components/Playground/useMarkdownInfo.ts","../node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","../node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/schema.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/merge.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/normalize.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/info.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/types.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/defined-info.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/create.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/aria.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/html.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/svg.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xlink.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xmlns.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xml.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/hast-to-react.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/find.js","../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/index.js","../node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","../node_modules/.pnpm/inline-style-parser@0.2.4/node_modules/inline-style-parser/index.js","../node_modules/.pnpm/style-to-object@1.0.9/node_modules/style-to-object/cjs/index.js","../node_modules/.pnpm/style-to-js@1.1.17/node_modules/style-to-js/cjs/utilities.js","../node_modules/.pnpm/style-to-js@1.1.17/node_modules/style-to-js/cjs/index.js","../node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js","../node_modules/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js","../node_modules/.pnpm/vfile-message@4.0.3/node_modules/vfile-message/lib/index.js","../node_modules/.pnpm/hast-util-to-jsx-runtime@2.3.6/node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/.pnpm/html-url-attributes@3.0.1/node_modules/html-url-attributes/lib/index.js","../node_modules/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js","../node_modules/.pnpm/decode-named-character-reference@1.2.0/node_modules/decode-named-character-reference/index.dom.js","../node_modules/.pnpm/micromark-util-chunked@2.0.1/node_modules/micromark-util-chunked/index.js","../node_modules/.pnpm/micromark-util-combine-extensions@2.0.1/node_modules/micromark-util-combine-extensions/index.js","../node_modules/.pnpm/micromark-util-decode-numeric-character-reference@2.0.2/node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/.pnpm/micromark-util-normalize-identifier@2.0.1/node_modules/micromark-util-normalize-identifier/index.js","../node_modules/.pnpm/micromark-util-character@2.1.1/node_modules/micromark-util-character/index.js","../node_modules/.pnpm/micromark-util-sanitize-uri@2.0.1/node_modules/micromark-util-sanitize-uri/index.js","../node_modules/.pnpm/micromark-factory-space@2.0.1/node_modules/micromark-factory-space/index.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/content.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/document.js","../node_modules/.pnpm/micromark-util-classify-character@2.0.1/node_modules/micromark-util-classify-character/index.js","../node_modules/.pnpm/micromark-util-resolve-all@2.0.1/node_modules/micromark-util-resolve-all/index.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/.pnpm/micromark-util-subtokenize@2.1.0/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../node_modules/.pnpm/micromark-util-subtokenize@2.1.0/node_modules/micromark-util-subtokenize/index.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/content.js","../node_modules/.pnpm/micromark-factory-destination@2.0.1/node_modules/micromark-factory-destination/index.js","../node_modules/.pnpm/micromark-factory-label@2.0.1/node_modules/micromark-factory-label/index.js","../node_modules/.pnpm/micromark-factory-title@2.0.1/node_modules/micromark-factory-title/index.js","../node_modules/.pnpm/micromark-factory-whitespace@2.0.1/node_modules/micromark-factory-whitespace/index.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/.pnpm/micromark-util-html-tag-name@2.0.1/node_modules/micromark-util-html-tag-name/index.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/list.js","../node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/flow.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/text.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/constructs.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/create-tokenizer.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/parse.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/postprocess.js","../node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/preprocess.js","../node_modules/.pnpm/micromark-util-decode-string@2.0.1/node_modules/micromark-util-decode-string/index.js","../node_modules/.pnpm/mdast-util-from-markdown@2.0.2/node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/types.js","../node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/index.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js","../node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js","../node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/state.js","../node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/index.js","../node_modules/.pnpm/remark-rehype@11.1.2/node_modules/remark-rehype/lib/index.js","../node_modules/.pnpm/bail@2.0.2/node_modules/bail/index.js","../node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js","../node_modules/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js","../node_modules/.pnpm/trough@2.2.0/node_modules/trough/lib/index.js","../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minpath.browser.js","../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minproc.browser.js","../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.shared.js","../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.browser.js","../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/index.js","../node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/callable-instance.js","../node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/index.js","../node_modules/.pnpm/react-markdown@10.1.0_@types+react@19.1.9_react@19.1.1/node_modules/react-markdown/lib/index.js","../src/components/ContentRender/plugins/remark-custom-button.ts","../node_modules/.pnpm/@radix-ui+react-compose-ref_303c6274a24306088dca764f2c791de2/node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../node_modules/.pnpm/@radix-ui+react-slot@1.2.3_@types+react@19.1.9_react@19.1.1/node_modules/@radix-ui/react-slot/dist/index.mjs","../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs","../node_modules/.pnpm/class-variance-authority@0.7.1/node_modules/class-variance-authority/dist/index.mjs","../node_modules/.pnpm/tailwind-merge@3.3.1/node_modules/tailwind-merge/dist/bundle-mjs.mjs","../src/lib/utils.ts","../src/components/ui/button.tsx","../src/components/ContentRender/plugins/CustomButton.tsx","../src/components/ContentRender/plugins/remark-custom-variable.ts","../src/components/ui/input.tsx","../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.1/node_modules/lucide-react/dist/esm/shared/src/utils.js","../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.1/node_modules/lucide-react/dist/esm/defaultAttributes.js","../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.1/node_modules/lucide-react/dist/esm/Icon.js","../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.1/node_modules/lucide-react/dist/esm/createLucideIcon.js","../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.1/node_modules/lucide-react/dist/esm/icons/chevron-down.js","../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.1/node_modules/lucide-react/dist/esm/icons/send.js","../src/components/ContentRender/plugins/CustomVariable.tsx","../node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js","../node_modules/.pnpm/escape-string-regexp@5.0.0/node_modules/escape-string-regexp/index.js","../node_modules/.pnpm/mdast-util-find-and-replace@3.0.2/node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/.pnpm/mdast-util-gfm-autolink-literal@2.0.1/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/.pnpm/mdast-util-gfm-footnote@2.1.0/node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/.pnpm/mdast-util-gfm-strikethrough@2.0.0/node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/.pnpm/markdown-table@3.0.4/node_modules/markdown-table/index.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/break.js","../node_modules/.pnpm/longest-streak@3.1.0/node_modules/longest-streak/index.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/code.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-info.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/html.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../node_modules/.pnpm/mdast-util-phrasing@4.1.0/node_modules/mdast-util-phrasing/lib/index.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/root.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/text.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/index.js","../node_modules/.pnpm/mdast-util-gfm-table@2.0.0/node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/.pnpm/mdast-util-gfm-task-list-item@2.0.0/node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/.pnpm/mdast-util-gfm@3.1.0/node_modules/mdast-util-gfm/lib/index.js","../node_modules/.pnpm/micromark-extension-gfm-autolink-literal@2.1.0/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/.pnpm/micromark-extension-gfm-footnote@2.1.0/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/.pnpm/micromark-extension-gfm-strikethrough@2.1.0/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/edit-map.js","../node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/infer.js","../node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/.pnpm/micromark-extension-gfm-task-list-item@2.1.0/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/.pnpm/micromark-extension-gfm@3.0.0/node_modules/micromark-extension-gfm/index.js","../node_modules/.pnpm/remark-gfm@4.0.1/node_modules/remark-gfm/lib/index.js","../node_modules/.pnpm/unist-util-find-after@5.0.0/node_modules/unist-util-find-after/lib/index.js","../node_modules/.pnpm/hast-util-is-element@3.0.0/node_modules/hast-util-is-element/lib/index.js","../node_modules/.pnpm/hast-util-to-text@4.0.2/node_modules/hast-util-to-text/lib/index.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/arduino.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/bash.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/c.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/cpp.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/csharp.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/css.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/diff.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/go.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/graphql.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/ini.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/java.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/javascript.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/json.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/kotlin.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/less.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/lua.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/makefile.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/markdown.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/objectivec.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/perl.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/php.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/php-template.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/plaintext.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/python.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/python-repl.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/r.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/ruby.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/rust.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/scss.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/shell.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/sql.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/swift.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/typescript.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/vbnet.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/wasm.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/xml.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/es/languages/yaml.js","../node_modules/.pnpm/lowlight@3.3.0/node_modules/lowlight/lib/common.js","../node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/core.js","../node_modules/.pnpm/lowlight@3.3.0/node_modules/lowlight/lib/index.js","../node_modules/.pnpm/rehype-highlight@7.0.2/node_modules/rehype-highlight/lib/index.js","../src/components/ContentRender/utils/highlight-languages.ts","../src/components/ContentRender/useTypewriter.ts","../node_modules/.pnpm/mdast-util-newline-to-break@2.0.0/node_modules/mdast-util-newline-to-break/lib/index.js","../node_modules/.pnpm/remark-breaks@4.0.0/node_modules/remark-breaks/lib/index.js","../src/components/ContentRender/utils/process-markdown.ts","../src/components/ContentRender/ContentRender.tsx","../src/components/MarkdownFlow/MarkdownFlow.tsx","../src/components/MarkdownFlow/useScrollToBottom.ts","../src/components/MarkdownFlow/ScrollableMarkdownFlow.tsx","../src/components/Playground/Playground.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = require(\"react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      react_stack_bottom_frame: function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsx = function (type, config, maybeKey, source, self) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        !1,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n    exports.jsxs = function (type, config, maybeKey, source, self) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        !0,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export async function getBytes(stream, onChunk) {\r\n    const reader = stream.getReader();\r\n    let result;\r\n    while (!(result = await reader.read()).done) {\r\n        onChunk(result.value);\r\n    }\r\n}\r\nexport function getLines(onLine) {\r\n    let buffer;\r\n    let position;\r\n    let fieldLength;\r\n    let discardTrailingNewline = false;\r\n    return function onChunk(arr) {\r\n        if (buffer === undefined) {\r\n            buffer = arr;\r\n            position = 0;\r\n            fieldLength = -1;\r\n        }\r\n        else {\r\n            buffer = concat(buffer, arr);\r\n        }\r\n        const bufLength = buffer.length;\r\n        let lineStart = 0;\r\n        while (position < bufLength) {\r\n            if (discardTrailingNewline) {\r\n                if (buffer[position] === 10) {\r\n                    lineStart = ++position;\r\n                }\r\n                discardTrailingNewline = false;\r\n            }\r\n            let lineEnd = -1;\r\n            for (; position < bufLength && lineEnd === -1; ++position) {\r\n                switch (buffer[position]) {\r\n                    case 58:\r\n                        if (fieldLength === -1) {\r\n                            fieldLength = position - lineStart;\r\n                        }\r\n                        break;\r\n                    case 13:\r\n                        discardTrailingNewline = true;\r\n                    case 10:\r\n                        lineEnd = position;\r\n                        break;\r\n                }\r\n            }\r\n            if (lineEnd === -1) {\r\n                break;\r\n            }\r\n            onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\r\n            lineStart = position;\r\n            fieldLength = -1;\r\n        }\r\n        if (lineStart === bufLength) {\r\n            buffer = undefined;\r\n        }\r\n        else if (lineStart !== 0) {\r\n            buffer = buffer.subarray(lineStart);\r\n            position -= lineStart;\r\n        }\r\n    };\r\n}\r\nexport function getMessages(onId, onRetry, onMessage) {\r\n    let message = newMessage();\r\n    const decoder = new TextDecoder();\r\n    return function onLine(line, fieldLength) {\r\n        if (line.length === 0) {\r\n            onMessage === null || onMessage === void 0 ? void 0 : onMessage(message);\r\n            message = newMessage();\r\n        }\r\n        else if (fieldLength > 0) {\r\n            const field = decoder.decode(line.subarray(0, fieldLength));\r\n            const valueOffset = fieldLength + (line[fieldLength + 1] === 32 ? 2 : 1);\r\n            const value = decoder.decode(line.subarray(valueOffset));\r\n            switch (field) {\r\n                case 'data':\r\n                    message.data = message.data\r\n                        ? message.data + '\\n' + value\r\n                        : value;\r\n                    break;\r\n                case 'event':\r\n                    message.event = value;\r\n                    break;\r\n                case 'id':\r\n                    onId(message.id = value);\r\n                    break;\r\n                case 'retry':\r\n                    const retry = parseInt(value, 10);\r\n                    if (!isNaN(retry)) {\r\n                        onRetry(message.retry = retry);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction concat(a, b) {\r\n    const res = new Uint8Array(a.length + b.length);\r\n    res.set(a);\r\n    res.set(b, a.length);\r\n    return res;\r\n}\r\nfunction newMessage() {\r\n    return {\r\n        data: '',\r\n        event: '',\r\n        id: '',\r\n        retry: undefined,\r\n    };\r\n}\r\n//# sourceMappingURL=parse.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { getBytes, getLines, getMessages } from './parse';\r\nexport const EventStreamContentType = 'text/event-stream';\r\nconst DefaultRetryInterval = 1000;\r\nconst LastEventId = 'last-event-id';\r\nexport function fetchEventSource(input, _a) {\r\n    var { signal: inputSignal, headers: inputHeaders, onopen: inputOnOpen, onmessage, onclose, onerror, openWhenHidden, fetch: inputFetch } = _a, rest = __rest(_a, [\"signal\", \"headers\", \"onopen\", \"onmessage\", \"onclose\", \"onerror\", \"openWhenHidden\", \"fetch\"]);\r\n    return new Promise((resolve, reject) => {\r\n        const headers = Object.assign({}, inputHeaders);\r\n        if (!headers.accept) {\r\n            headers.accept = EventStreamContentType;\r\n        }\r\n        let curRequestController;\r\n        function onVisibilityChange() {\r\n            curRequestController.abort();\r\n            if (!document.hidden) {\r\n                create();\r\n            }\r\n        }\r\n        if (!openWhenHidden) {\r\n            document.addEventListener('visibilitychange', onVisibilityChange);\r\n        }\r\n        let retryInterval = DefaultRetryInterval;\r\n        let retryTimer = 0;\r\n        function dispose() {\r\n            document.removeEventListener('visibilitychange', onVisibilityChange);\r\n            window.clearTimeout(retryTimer);\r\n            curRequestController.abort();\r\n        }\r\n        inputSignal === null || inputSignal === void 0 ? void 0 : inputSignal.addEventListener('abort', () => {\r\n            dispose();\r\n            resolve();\r\n        });\r\n        const fetch = inputFetch !== null && inputFetch !== void 0 ? inputFetch : window.fetch;\r\n        const onopen = inputOnOpen !== null && inputOnOpen !== void 0 ? inputOnOpen : defaultOnOpen;\r\n        async function create() {\r\n            var _a;\r\n            curRequestController = new AbortController();\r\n            try {\r\n                const response = await fetch(input, Object.assign(Object.assign({}, rest), { headers, signal: curRequestController.signal }));\r\n                await onopen(response);\r\n                await getBytes(response.body, getLines(getMessages(id => {\r\n                    if (id) {\r\n                        headers[LastEventId] = id;\r\n                    }\r\n                    else {\r\n                        delete headers[LastEventId];\r\n                    }\r\n                }, retry => {\r\n                    retryInterval = retry;\r\n                }, onmessage)));\r\n                onclose === null || onclose === void 0 ? void 0 : onclose();\r\n                dispose();\r\n                resolve();\r\n            }\r\n            catch (err) {\r\n                if (!curRequestController.signal.aborted) {\r\n                    try {\r\n                        const interval = (_a = onerror === null || onerror === void 0 ? void 0 : onerror(err)) !== null && _a !== void 0 ? _a : retryInterval;\r\n                        window.clearTimeout(retryTimer);\r\n                        retryTimer = window.setTimeout(create, interval);\r\n                    }\r\n                    catch (innerErr) {\r\n                        dispose();\r\n                        reject(innerErr);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        create();\r\n    });\r\n}\r\nfunction defaultOnOpen(response) {\r\n    const contentType = response.headers.get('content-type');\r\n    if (!(contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(EventStreamContentType))) {\r\n        throw new Error(`Expected content-type to be ${EventStreamContentType}, Actual: ${contentType}`);\r\n    }\r\n}\r\n//# sourceMappingURL=fetch.js.map","import { useState, useEffect, useRef, useCallback } from 'react'\r\nimport { fetchEventSource } from '@microsoft/fetch-event-source'\r\n\r\ninterface UseSSEReturn<T = any> {\r\n  data: T | null\r\n  isLoading: boolean\r\n  error: Error | null\r\n  sseIndex: number | null\r\n  connect: () => Promise<void>\r\n  close: () => void\r\n}\r\n\r\nconst FINISHED_MESSAGE = '[DONE]'\r\n\r\ninterface UseSSEOptions extends RequestInit {\r\n  autoConnect?: boolean\r\n  onFinish?: (finalData: any, index: number) => void\r\n}\r\n\r\nconst useSSE = <T = any>(\r\n  url: string,\r\n  options: UseSSEOptions = {}\r\n): UseSSEReturn<T> => {\r\n  const [data, setData] = useState<T | null>(null)\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const [error, setError] = useState<Error | null>(null)\r\n  const [sseIndex, setSseIndex] = useState<number | null>(null)\r\n\r\n  const abortControllerRef = useRef<AbortController | null>(null)\r\n  const hasConnectedRef = useRef(false)\r\n  const mountedRef = useRef(true)\r\n  const isManuallyClosedRef = useRef(false)\r\n  const currentIndexRef = useRef(-1)\r\n  const finalDataRef = useRef<string>('')\r\n\r\n  const { autoConnect = true } = options\r\n\r\n  const connect = useCallback(async () => {\r\n    if (\r\n      hasConnectedRef.current ||\r\n      !mountedRef.current ||\r\n      isManuallyClosedRef.current\r\n    ) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      setError(null)\r\n      isManuallyClosedRef.current = false\r\n      hasConnectedRef.current = true\r\n\r\n      const newIndex = ++currentIndexRef.current\r\n      setSseIndex(newIndex)\r\n      finalDataRef.current = ''\r\n\r\n      const abortController = new AbortController()\r\n      abortControllerRef.current = abortController\r\n\r\n      await fetchEventSource(url, {\r\n        ...options,\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'text/event-stream',\r\n          'Content-Type': 'application/json',\r\n          'Cache-Control': 'no-cache',\r\n          ...Object.entries(options.headers || {}).reduce(\r\n            (acc, [key, value]) => {\r\n              acc[key] = String(value)\r\n              return acc\r\n            },\r\n            {} as Record<string, string>\r\n          )\r\n        },\r\n        signal: abortController.signal,\r\n        openWhenHidden: true,\r\n        onopen: async response => {\r\n          if (mountedRef.current && !isManuallyClosedRef.current) {\r\n            setIsLoading(false)\r\n            setError(null)\r\n          }\r\n        },\r\n        onmessage: event => {\r\n          if (mountedRef.current && !isManuallyClosedRef.current) {\r\n            if (event.data.toUpperCase() === FINISHED_MESSAGE) {\r\n              options.onFinish?.(finalDataRef.current, newIndex)\r\n              close()\r\n              return\r\n            }\r\n\r\n            try {\r\n              let parsedData: any = event.data\r\n              // try {\r\n              //   parsedData = JSON.parse(event.data)\r\n              // } catch (e) {}\r\n              // setData(parsedData)\r\n              finalDataRef.current += parsedData\r\n              setData(finalDataRef.current as any)\r\n            } catch (err) {\r\n            }\r\n          }\r\n        },\r\n        onclose: () => {\r\n          if (mountedRef.current && !isManuallyClosedRef.current) {\r\n            setIsLoading(false)\r\n          }\r\n        },\r\n        onerror: err => {\r\n          if (mountedRef.current && !isManuallyClosedRef.current) {\r\n            setError(err)\r\n            setIsLoading(false)\r\n          }\r\n          return\r\n        }\r\n      })\r\n    } catch (err) {\r\n      if (mountedRef.current && !isManuallyClosedRef.current) {\r\n        setError(err as Error)\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }, [url, JSON.stringify(options)])\r\n\r\n  const close = useCallback(() => {\r\n    isManuallyClosedRef.current = true\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort()\r\n      abortControllerRef.current = null\r\n    }\r\n    hasConnectedRef.current = false\r\n    if (mountedRef.current) {\r\n      setIsLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    mountedRef.current = true\r\n    isManuallyClosedRef.current = false\r\n    hasConnectedRef.current = false\r\n\r\n    if (autoConnect) {\r\n      const timeoutId = setTimeout(() => {\r\n        if (!hasConnectedRef.current) {\r\n          connect()\r\n        }\r\n      }, 100)\r\n\r\n      return () => {\r\n        mountedRef.current = false\r\n        isManuallyClosedRef.current = true\r\n        clearTimeout(timeoutId)\r\n        close()\r\n      }\r\n    } else {\r\n      return () => {\r\n        mountedRef.current = false\r\n        isManuallyClosedRef.current = true\r\n        close()\r\n      }\r\n    }\r\n  }, [connect, close, autoConnect])\r\n\r\n  // 监听 url 和 options 变化以重新连接\r\n  useEffect(() => {\r\n    // 如果不是首次加载，则关闭当前连接并重新连接\r\n    if (hasConnectedRef.current) {\r\n      close()\r\n      hasConnectedRef.current = false\r\n      isManuallyClosedRef.current = false\r\n      setData(null)\r\n      setError(null)\r\n      setIsLoading(true)\r\n      finalDataRef.current = ''\r\n\r\n      const timeoutId = setTimeout(() => {\r\n        if (!hasConnectedRef.current) {\r\n          connect()\r\n        }\r\n      }, 100)\r\n\r\n      return () => {\r\n        clearTimeout(timeoutId)\r\n      }\r\n    }\r\n  }, [url, JSON.stringify(options), connect, close])\r\n\r\n  return {\r\n    data,\r\n    isLoading,\r\n    error,\r\n    sseIndex,\r\n    connect,\r\n    close\r\n  }\r\n}\r\n\r\nexport default useSSE\r\n","import { useState, useEffect } from 'react';\r\n\r\ninterface MarkdownInfoData {\r\n  block_count: number;\r\n  variables: string[];\r\n  interaction_blocks: number[];\r\n  content_blocks: number[];\r\n}\r\n\r\ninterface MarkdownInfoResponse {\r\n  code: number;\r\n  message: string;\r\n  data: MarkdownInfoData;\r\n  trace: string;\r\n}\r\n\r\nconst useMarkdownInfo = (content: string) => {\r\n  const [data, setData] = useState<MarkdownInfoData | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMarkdownInfo = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // 使用 Next.js 内置的 fetch\r\n        const response = await fetch('https://play.dev.pillowai.cn/api/v1/playground/markdownflow_info', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',        \r\n          },\r\n          body: JSON.stringify({ content }),\r\n          // Next.js fetch 的缓存选项\r\n          cache: 'no-store',\r\n          // 或者使用 next: { revalidate: 0 } 来禁用缓存\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const result: MarkdownInfoResponse = await response.json();\r\n\r\n        if (result.code === 200) {\r\n          setData(result.data);\r\n        } else {\r\n          setError(result.message || '请求失败');\r\n        }\r\n      } catch (err: any) {\r\n        setError(err.message || '网络错误');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (content) {\r\n      fetchMarkdownInfo();\r\n    }\r\n  }, [content]);\r\n\r\n  return { data, loading, error };\r\n};\r\n\r\nexport default useMarkdownInfo;","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentType, JSX, ReactElement, ReactNode} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in keyof JSX.IntrinsicElements]?: ComponentType<JSX.IntrinsicElements[Key] & ExtraProps> | keyof JSX.IntrinsicElements\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @typedef HooksOptionsOnly\n *   Configuration specifically for {@linkcode MarkdownHooks}.\n * @property {ReactNode | null | undefined} [fallback]\n *   Content to render while the processor processing the markdown (optional).\n */\n\n/**\n * @typedef {Options & HooksOptionsOnly} HooksOptions\n *   Configuration for {@linkcode MarkdownHooks};\n *   extends the regular {@linkcode Options} with a `fallback` prop.\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {from: 'className', id: 'remove-classname'},\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<HooksOptions>} options\n *   Props.\n * @returns {ReactNode}\n *   React node.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    function () {\n      let cancelled = false\n      const file = createFile(options)\n\n      processor.run(processor.parse(file), file, function (error, tree) {\n        if (!cancelled) {\n          setError(error)\n          setTree(tree)\n        }\n      })\n\n      /**\n       * @returns {undefined}\n       *   Nothing.\n       */\n      return function () {\n        cancelled = true\n      }\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  if (error) throw error\n\n  return tree ? post(tree, options) : options.fallback\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","import { visit } from 'unist-util-visit'\r\nimport type { Node, Parent, Literal } from 'unist'\r\n\r\n// 定义自定义按钮节点类型\r\ninterface CustomButtonNode extends Node {\r\n  type: 'element'\r\n  data?: {\r\n    hName?: string\r\n    hProperties?: Record<string, any>\r\n    hChildren?: Array<{ type: string; value: string }>\r\n  }\r\n}\r\n\r\n// 正则表达式匹配 ?[按钮文本]\r\nconst BUTTON_REGEX = /\\?\\[([^\\]]+)\\]/\r\n\r\nexport default function remarkCustomButton () {\r\n  return (tree: Node) => {\r\n    visit(\r\n      tree,\r\n      'text',\r\n      (node: Literal, index: number | null, parent: Parent | null) => {\r\n        const value = node.value as string\r\n        const match = BUTTON_REGEX.exec(value)\r\n\r\n        // 如果没有匹配项或缺少父节点/索引则退出\r\n        if (!match || index === null || parent === null) return\r\n\r\n        const startIndex = match.index\r\n        const endIndex = startIndex + match[0].length\r\n\r\n        // 显式定义段落的联合类型\r\n        type Segment = Literal | CustomButtonNode\r\n\r\n        // 构建替换段（显式类型声明）\r\n        const segments: Segment[] = [\r\n          {\r\n            type: 'text',\r\n            value: value.substring(0, startIndex)\r\n          } as Literal,\r\n          {\r\n            type: 'element',\r\n            data: {\r\n              hName: 'custom-button',\r\n              hProperties: { buttonText: match[1] }\r\n            }\r\n          } as CustomButtonNode,\r\n          {\r\n            type: 'text',\r\n            value: value.substring(endIndex)\r\n          } as Literal\r\n        ]\r\n\r\n        // 替换原始节点\r\n        parent.children.splice(index, 1, ...segments)\r\n      }\r\n    )\r\n  }\r\n}\r\n","// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    classGroups\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  for (const classGroupId in classGroups) {\n    processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);\n  }\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst MODIFIER_SEPARATOR = ':';\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;\nconst createParseClassName = config => {\n  const {\n    prefix,\n    experimentalParseClassName\n  } = config;\n  /**\n   * Parse class name into parts.\n   *\n   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n   */\n  let parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let parenDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0 && parenDepth === 0) {\n        if (currentCharacter === MODIFIER_SEPARATOR) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + MODIFIER_SEPARATOR_LENGTH;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      } else if (currentCharacter === '(') {\n        parenDepth++;\n      } else if (currentCharacter === ')') {\n        parenDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);\n    const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (prefix) {\n    const fullPrefix = prefix + MODIFIER_SEPARATOR;\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {\n      isExternal: true,\n      modifiers: [],\n      hasImportantModifier: false,\n      baseClassName: className,\n      maybePostfixModifierPosition: undefined\n    };\n  }\n  if (experimentalParseClassName) {\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => experimentalParseClassName({\n      className,\n      parseClassName: parseClassNameOriginal\n    });\n  }\n  return parseClassName;\n};\nconst stripImportantModifier = baseClassName => {\n  if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(0, baseClassName.length - 1);\n  }\n  /**\n   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n   */\n  if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(1);\n  }\n  return baseClassName;\n};\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst createSortModifiers = config => {\n  const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map(modifier => [modifier, true]));\n  const sortModifiers = modifiers => {\n    if (modifiers.length <= 1) {\n      return modifiers;\n    }\n    const sortedModifiers = [];\n    let unsortedModifiers = [];\n    modifiers.forEach(modifier => {\n      const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];\n      if (isPositionSensitive) {\n        sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n        unsortedModifiers = [];\n      } else {\n        unsortedModifiers.push(modifier);\n      }\n    });\n    sortedModifiers.push(...unsortedModifiers.sort());\n    return sortedModifiers;\n  };\n  return sortModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  sortModifiers: createSortModifiers(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds,\n    sortModifiers\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      isExternal,\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    if (isExternal) {\n      result = originalClassName + (result.length > 0 ? ' ' + result : result);\n      continue;\n    }\n    let hasPostfixModifier = !!maybePostfixModifierPosition;\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i;\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isFraction = value => fractionRegex.test(value);\nconst isNumber = value => !!value && !Number.isNaN(Number(value));\nconst isInteger = value => !!value && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst isAny = () => true;\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst isAnyNonArbitrary = value => !isArbitraryValue(value) && !isArbitraryVariable(value);\nconst isArbitrarySize = value => getIsArbitraryValue(value, isLabelSize, isNever);\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, isLabelLength, isLengthOnly);\nconst isArbitraryNumber = value => getIsArbitraryValue(value, isLabelNumber, isNumber);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, isLabelPosition, isNever);\nconst isArbitraryImage = value => getIsArbitraryValue(value, isLabelImage, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, isLabelShadow, isShadow);\nconst isArbitraryVariable = value => arbitraryVariableRegex.test(value);\nconst isArbitraryVariableLength = value => getIsArbitraryVariable(value, isLabelLength);\nconst isArbitraryVariableFamilyName = value => getIsArbitraryVariable(value, isLabelFamilyName);\nconst isArbitraryVariablePosition = value => getIsArbitraryVariable(value, isLabelPosition);\nconst isArbitraryVariableSize = value => getIsArbitraryVariable(value, isLabelSize);\nconst isArbitraryVariableImage = value => getIsArbitraryVariable(value, isLabelImage);\nconst isArbitraryVariableShadow = value => getIsArbitraryVariable(value, isLabelShadow, true);\n// Helpers\nconst getIsArbitraryValue = (value, testLabel, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false) => {\n  const result = arbitraryVariableRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return shouldMatchNoLabel;\n  }\n  return false;\n};\n// Labels\nconst isLabelPosition = label => label === 'position' || label === 'percentage';\nconst isLabelImage = label => label === 'image' || label === 'url';\nconst isLabelSize = label => label === 'length' || label === 'size' || label === 'bg-size';\nconst isLabelLength = label => label === 'length';\nconst isLabelNumber = label => label === 'number';\nconst isLabelFamilyName = label => label === 'family-name';\nconst isLabelShadow = label => label === 'shadow';\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isAnyNonArbitrary,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isArbitraryVariable,\n  isArbitraryVariableFamilyName,\n  isArbitraryVariableImage,\n  isArbitraryVariableLength,\n  isArbitraryVariablePosition,\n  isArbitraryVariableShadow,\n  isArbitraryVariableSize,\n  isFraction,\n  isInteger,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  /**\n   * Theme getters for theme variable namespaces\n   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n   */\n  /***/\n  const themeColor = fromTheme('color');\n  const themeFont = fromTheme('font');\n  const themeText = fromTheme('text');\n  const themeFontWeight = fromTheme('font-weight');\n  const themeTracking = fromTheme('tracking');\n  const themeLeading = fromTheme('leading');\n  const themeBreakpoint = fromTheme('breakpoint');\n  const themeContainer = fromTheme('container');\n  const themeSpacing = fromTheme('spacing');\n  const themeRadius = fromTheme('radius');\n  const themeShadow = fromTheme('shadow');\n  const themeInsetShadow = fromTheme('inset-shadow');\n  const themeTextShadow = fromTheme('text-shadow');\n  const themeDropShadow = fromTheme('drop-shadow');\n  const themeBlur = fromTheme('blur');\n  const themePerspective = fromTheme('perspective');\n  const themeAspect = fromTheme('aspect');\n  const themeEase = fromTheme('ease');\n  const themeAnimate = fromTheme('animate');\n  /**\n   * Helpers to avoid repeating the same scales\n   *\n   * We use functions that create a new array every time they're called instead of static arrays.\n   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n   */\n  /***/\n  const scaleBreak = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const scalePosition = () => ['center', 'top', 'bottom', 'left', 'right', 'top-left',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'left-top', 'top-right',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'right-top', 'bottom-right',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'right-bottom', 'bottom-left',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'left-bottom'];\n  const scalePositionWithArbitrary = () => [...scalePosition(), isArbitraryVariable, isArbitraryValue];\n  const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const scaleOverscroll = () => ['auto', 'contain', 'none'];\n  const scaleUnambiguousSpacing = () => [isArbitraryVariable, isArbitraryValue, themeSpacing];\n  const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()];\n  const scaleGridTemplateColsRows = () => [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartAndEnd = () => ['auto', {\n    span: ['full', isInteger, isArbitraryVariable, isArbitraryValue]\n  }, isInteger, isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartOrEnd = () => [isInteger, 'auto', isArbitraryVariable, isArbitraryValue];\n  const scaleGridAutoColsRows = () => ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue];\n  const scaleAlignPrimaryAxis = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch', 'baseline', 'center-safe', 'end-safe'];\n  const scaleAlignSecondaryAxis = () => ['start', 'end', 'center', 'stretch', 'center-safe', 'end-safe'];\n  const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()];\n  const scaleSizing = () => [isFraction, 'auto', 'full', 'dvw', 'dvh', 'lvw', 'lvh', 'svw', 'svh', 'min', 'max', 'fit', ...scaleUnambiguousSpacing()];\n  const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue];\n  const scaleBgPosition = () => [...scalePosition(), isArbitraryVariablePosition, isArbitraryPosition, {\n    position: [isArbitraryVariable, isArbitraryValue]\n  }];\n  const scaleBgRepeat = () => ['no-repeat', {\n    repeat: ['', 'x', 'y', 'space', 'round']\n  }];\n  const scaleBgSize = () => ['auto', 'cover', 'contain', isArbitraryVariableSize, isArbitrarySize, {\n    size: [isArbitraryVariable, isArbitraryValue]\n  }];\n  const scaleGradientStopPosition = () => [isPercent, isArbitraryVariableLength, isArbitraryLength];\n  const scaleRadius = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', 'full', themeRadius, isArbitraryVariable, isArbitraryValue];\n  const scaleBorderWidth = () => ['', isNumber, isArbitraryVariableLength, isArbitraryLength];\n  const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'];\n  const scaleBlendMode = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const scaleMaskImagePosition = () => [isNumber, isPercent, isArbitraryVariablePosition, isArbitraryPosition];\n  const scaleBlur = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', themeBlur, isArbitraryVariable, isArbitraryValue];\n  const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()];\n  return {\n    cacheSize: 500,\n    theme: {\n      animate: ['spin', 'ping', 'pulse', 'bounce'],\n      aspect: ['video'],\n      blur: [isTshirtSize],\n      breakpoint: [isTshirtSize],\n      color: [isAny],\n      container: [isTshirtSize],\n      'drop-shadow': [isTshirtSize],\n      ease: ['in', 'out', 'in-out'],\n      font: [isAnyNonArbitrary],\n      'font-weight': ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black'],\n      'inset-shadow': [isTshirtSize],\n      leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\n      perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\n      radius: [isTshirtSize],\n      shadow: [isTshirtSize],\n      spacing: ['px', isNumber],\n      text: [isTshirtSize],\n      'text-shadow': [isTshirtSize],\n      tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest']\n    },\n    classGroups: {\n      // --------------\n      // --- Layout ---\n      // --------------\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', isFraction, isArbitraryValue, isArbitraryVariable, themeAspect]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       * @deprecated since Tailwind CSS v4.0.0\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': scaleBreak()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': scaleBreak()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Screen Reader Only\n       * @see https://tailwindcss.com/docs/display#screen-reader-only\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: scalePositionWithArbitrary()\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: scaleOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': scaleOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': scaleOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: scaleOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': scaleOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': scaleOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: scaleInset()\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': scaleInset()\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': scaleInset()\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: scaleInset()\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: scaleInset()\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: scaleInset()\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: scaleInset()\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: scaleInset()\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: scaleInset()\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------------\n      // --- Flexbox and Grid ---\n      // ------------------------\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: [isFraction, 'full', 'auto', themeContainer, ...scaleUnambiguousSpacing()]\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['nowrap', 'wrap', 'wrap-reverse']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: [isInteger, 'first', 'last', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': scaleGridTemplateColsRows()\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: scaleGridColRowStartAndEnd()\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': scaleGridTemplateColsRows()\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: scaleGridColRowStartAndEnd()\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': scaleGridAutoColsRows()\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': scaleGridAutoColsRows()\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: [...scaleAlignPrimaryAxis(), 'normal']\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': [...scaleAlignSecondaryAxis(), 'normal']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...scaleAlignPrimaryAxis()]\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: [...scaleAlignSecondaryAxis(), {\n          baseline: ['', 'last']\n        }]\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', ...scaleAlignSecondaryAxis(), {\n          baseline: ['', 'last']\n        }]\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': scaleAlignPrimaryAxis()\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': [...scaleAlignSecondaryAxis(), 'baseline']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: scaleMargin()\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: scaleMargin()\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: scaleMargin()\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: scaleMargin()\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: scaleMargin()\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: scaleMargin()\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: scaleMargin()\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: scaleMargin()\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: scaleMargin()\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-x': [{\n        'space-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-y': [{\n        'space-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // --------------\n      // --- Sizing ---\n      // --------------\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n       */\n      size: [{\n        size: scaleSizing()\n      }],\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: [themeContainer, 'screen', ...scaleSizing()]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [themeContainer, 'screen', /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'none', ...scaleSizing()]\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [themeContainer, 'screen', 'none', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'prose', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        {\n          screen: [themeBreakpoint]\n        }, ...scaleSizing()]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: ['screen', 'lh', ...scaleSizing()]\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': ['screen', 'lh', 'none', ...scaleSizing()]\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': ['screen', 'lh', ...scaleSizing()]\n      }],\n      // ------------------\n      // --- Typography ---\n      // ------------------\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\n       * Font Stretch\n       * @see https://tailwindcss.com/docs/font-stretch\n       */\n      'font-stretch': [{\n        'font-stretch': ['ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded', isPercent, isArbitraryValue]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: [themeTracking, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: [/** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        themeLeading, ...scaleUnambiguousSpacing()]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://v3.tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: scaleColor()\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: scaleColor()\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...scaleLineStyle(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: [isNumber, 'from-font', 'auto', isArbitraryVariable, isArbitraryLength]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: scaleColor()\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Overflow Wrap\n       * @see https://tailwindcss.com/docs/overflow-wrap\n       */\n      wrap: [{\n        wrap: ['break-word', 'anywhere', 'normal']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -------------------\n      // --- Backgrounds ---\n      // -------------------\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: scaleBgPosition()\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: scaleBgRepeat()\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: scaleBgSize()\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          linear: [{\n            to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n          }, isInteger, isArbitraryVariable, isArbitraryValue],\n          radial: ['', isArbitraryVariable, isArbitraryValue],\n          conic: [isInteger, isArbitraryVariable, isArbitraryValue]\n        }, isArbitraryVariableImage, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: scaleColor()\n      }],\n      // ---------------\n      // --- Borders ---\n      // ---------------\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: scaleRadius()\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': scaleRadius()\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': scaleRadius()\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': scaleRadius()\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': scaleRadius()\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': scaleRadius()\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': scaleRadius()\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': scaleRadius()\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': scaleRadius()\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': scaleRadius()\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': scaleRadius()\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': scaleRadius()\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: scaleBorderWidth()\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': scaleBorderWidth()\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-x': [{\n        'divide-x': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-y': [{\n        'divide-y': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n       */\n      'divide-style': [{\n        divide: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: scaleColor()\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': scaleColor()\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': scaleColor()\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': scaleColor()\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': scaleColor()\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': scaleColor()\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': scaleColor()\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': scaleColor()\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': scaleColor()\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: scaleColor()\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: [...scaleLineStyle(), 'none', 'hidden']\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: scaleColor()\n      }],\n      // ---------------\n      // --- Effects ---\n      // ---------------\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n       */\n      'shadow-color': [{\n        shadow: scaleColor()\n      }],\n      /**\n       * Inset Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n       */\n      'inset-shadow': [{\n        'inset-shadow': ['none', themeInsetShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Inset Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n       */\n      'inset-shadow-color': [{\n        'inset-shadow': scaleColor()\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n       */\n      'ring-w': [{\n        ring: scaleBorderWidth()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n       */\n      'ring-color': [{\n        ring: scaleColor()\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://v3.tailwindcss.com/docs/ring-offset-width\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isNumber, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://v3.tailwindcss.com/docs/ring-offset-color\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-offset-color': [{\n        'ring-offset': scaleColor()\n      }],\n      /**\n       * Inset Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n       */\n      'inset-ring-w': [{\n        'inset-ring': scaleBorderWidth()\n      }],\n      /**\n       * Inset Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n       */\n      'inset-ring-color': [{\n        'inset-ring': scaleColor()\n      }],\n      /**\n       * Text Shadow\n       * @see https://tailwindcss.com/docs/text-shadow\n       */\n      'text-shadow': [{\n        'text-shadow': ['none', themeTextShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Text Shadow Color\n       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n       */\n      'text-shadow-color': [{\n        'text-shadow': scaleColor()\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': scaleBlendMode()\n      }],\n      /**\n       * Mask Clip\n       * @see https://tailwindcss.com/docs/mask-clip\n       */\n      'mask-clip': [{\n        'mask-clip': ['border', 'padding', 'content', 'fill', 'stroke', 'view']\n      }, 'mask-no-clip'],\n      /**\n       * Mask Composite\n       * @see https://tailwindcss.com/docs/mask-composite\n       */\n      'mask-composite': [{\n        mask: ['add', 'subtract', 'intersect', 'exclude']\n      }],\n      /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */\n      'mask-image-linear-pos': [{\n        'mask-linear': [isNumber]\n      }],\n      'mask-image-linear-from-pos': [{\n        'mask-linear-from': scaleMaskImagePosition()\n      }],\n      'mask-image-linear-to-pos': [{\n        'mask-linear-to': scaleMaskImagePosition()\n      }],\n      'mask-image-linear-from-color': [{\n        'mask-linear-from': scaleColor()\n      }],\n      'mask-image-linear-to-color': [{\n        'mask-linear-to': scaleColor()\n      }],\n      'mask-image-t-from-pos': [{\n        'mask-t-from': scaleMaskImagePosition()\n      }],\n      'mask-image-t-to-pos': [{\n        'mask-t-to': scaleMaskImagePosition()\n      }],\n      'mask-image-t-from-color': [{\n        'mask-t-from': scaleColor()\n      }],\n      'mask-image-t-to-color': [{\n        'mask-t-to': scaleColor()\n      }],\n      'mask-image-r-from-pos': [{\n        'mask-r-from': scaleMaskImagePosition()\n      }],\n      'mask-image-r-to-pos': [{\n        'mask-r-to': scaleMaskImagePosition()\n      }],\n      'mask-image-r-from-color': [{\n        'mask-r-from': scaleColor()\n      }],\n      'mask-image-r-to-color': [{\n        'mask-r-to': scaleColor()\n      }],\n      'mask-image-b-from-pos': [{\n        'mask-b-from': scaleMaskImagePosition()\n      }],\n      'mask-image-b-to-pos': [{\n        'mask-b-to': scaleMaskImagePosition()\n      }],\n      'mask-image-b-from-color': [{\n        'mask-b-from': scaleColor()\n      }],\n      'mask-image-b-to-color': [{\n        'mask-b-to': scaleColor()\n      }],\n      'mask-image-l-from-pos': [{\n        'mask-l-from': scaleMaskImagePosition()\n      }],\n      'mask-image-l-to-pos': [{\n        'mask-l-to': scaleMaskImagePosition()\n      }],\n      'mask-image-l-from-color': [{\n        'mask-l-from': scaleColor()\n      }],\n      'mask-image-l-to-color': [{\n        'mask-l-to': scaleColor()\n      }],\n      'mask-image-x-from-pos': [{\n        'mask-x-from': scaleMaskImagePosition()\n      }],\n      'mask-image-x-to-pos': [{\n        'mask-x-to': scaleMaskImagePosition()\n      }],\n      'mask-image-x-from-color': [{\n        'mask-x-from': scaleColor()\n      }],\n      'mask-image-x-to-color': [{\n        'mask-x-to': scaleColor()\n      }],\n      'mask-image-y-from-pos': [{\n        'mask-y-from': scaleMaskImagePosition()\n      }],\n      'mask-image-y-to-pos': [{\n        'mask-y-to': scaleMaskImagePosition()\n      }],\n      'mask-image-y-from-color': [{\n        'mask-y-from': scaleColor()\n      }],\n      'mask-image-y-to-color': [{\n        'mask-y-to': scaleColor()\n      }],\n      'mask-image-radial': [{\n        'mask-radial': [isArbitraryVariable, isArbitraryValue]\n      }],\n      'mask-image-radial-from-pos': [{\n        'mask-radial-from': scaleMaskImagePosition()\n      }],\n      'mask-image-radial-to-pos': [{\n        'mask-radial-to': scaleMaskImagePosition()\n      }],\n      'mask-image-radial-from-color': [{\n        'mask-radial-from': scaleColor()\n      }],\n      'mask-image-radial-to-color': [{\n        'mask-radial-to': scaleColor()\n      }],\n      'mask-image-radial-shape': [{\n        'mask-radial': ['circle', 'ellipse']\n      }],\n      'mask-image-radial-size': [{\n        'mask-radial': [{\n          closest: ['side', 'corner'],\n          farthest: ['side', 'corner']\n        }]\n      }],\n      'mask-image-radial-pos': [{\n        'mask-radial-at': scalePosition()\n      }],\n      'mask-image-conic-pos': [{\n        'mask-conic': [isNumber]\n      }],\n      'mask-image-conic-from-pos': [{\n        'mask-conic-from': scaleMaskImagePosition()\n      }],\n      'mask-image-conic-to-pos': [{\n        'mask-conic-to': scaleMaskImagePosition()\n      }],\n      'mask-image-conic-from-color': [{\n        'mask-conic-from': scaleColor()\n      }],\n      'mask-image-conic-to-color': [{\n        'mask-conic-to': scaleColor()\n      }],\n      /**\n       * Mask Mode\n       * @see https://tailwindcss.com/docs/mask-mode\n       */\n      'mask-mode': [{\n        mask: ['alpha', 'luminance', 'match']\n      }],\n      /**\n       * Mask Origin\n       * @see https://tailwindcss.com/docs/mask-origin\n       */\n      'mask-origin': [{\n        'mask-origin': ['border', 'padding', 'content', 'fill', 'stroke', 'view']\n      }],\n      /**\n       * Mask Position\n       * @see https://tailwindcss.com/docs/mask-position\n       */\n      'mask-position': [{\n        mask: scaleBgPosition()\n      }],\n      /**\n       * Mask Repeat\n       * @see https://tailwindcss.com/docs/mask-repeat\n       */\n      'mask-repeat': [{\n        mask: scaleBgRepeat()\n      }],\n      /**\n       * Mask Size\n       * @see https://tailwindcss.com/docs/mask-size\n       */\n      'mask-size': [{\n        mask: scaleBgSize()\n      }],\n      /**\n       * Mask Type\n       * @see https://tailwindcss.com/docs/mask-type\n       */\n      'mask-type': [{\n        'mask-type': ['alpha', 'luminance']\n      }],\n      /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */\n      'mask-image': [{\n        mask: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ---------------\n      // --- Filters ---\n      // ---------------\n      /**\n       * Filter\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: scaleBlur()\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeDropShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Drop Shadow Color\n       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n       */\n      'drop-shadow-color': [{\n        'drop-shadow': scaleColor()\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Filter\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': scaleBlur()\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      // --------------\n      // --- Tables ---\n      // --------------\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // ---------------------------------\n      // --- Transitions and Animation ---\n      // ---------------------------------\n      /**\n       * Transition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['', 'all', 'colors', 'opacity', 'shadow', 'transform', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Behavior\n       * @see https://tailwindcss.com/docs/transition-behavior\n       */\n      'transition-behavior': [{\n        transition: ['normal', 'discrete']\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------\n      // --- Transforms ---\n      // ------------------\n      /**\n       * Backface Visibility\n       * @see https://tailwindcss.com/docs/backface-visibility\n       */\n      backface: [{\n        backface: ['hidden', 'visible']\n      }],\n      /**\n       * Perspective\n       * @see https://tailwindcss.com/docs/perspective\n       */\n      perspective: [{\n        perspective: [themePerspective, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Perspective Origin\n       * @see https://tailwindcss.com/docs/perspective-origin\n       */\n      'perspective-origin': [{\n        'perspective-origin': scalePositionWithArbitrary()\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: scaleRotate()\n      }],\n      /**\n       * Rotate X\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-x': [{\n        'rotate-x': scaleRotate()\n      }],\n      /**\n       * Rotate Y\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-y': [{\n        'rotate-y': scaleRotate()\n      }],\n      /**\n       * Rotate Z\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-z': [{\n        'rotate-z': scaleRotate()\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: scaleScale()\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': scaleScale()\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': scaleScale()\n      }],\n      /**\n       * Scale Z\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-z': [{\n        'scale-z': scaleScale()\n      }],\n      /**\n       * Scale 3D\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-3d': ['scale-3d'],\n      /**\n       * Skew\n       * @see https://tailwindcss.com/docs/skew\n       */\n      skew: [{\n        skew: scaleSkew()\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': scaleSkew()\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': scaleSkew()\n      }],\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu']\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: scalePositionWithArbitrary()\n      }],\n      /**\n       * Transform Style\n       * @see https://tailwindcss.com/docs/transform-style\n       */\n      'transform-style': [{\n        transform: ['3d', 'flat']\n      }],\n      /**\n       * Translate\n       * @see https://tailwindcss.com/docs/translate\n       */\n      translate: [{\n        translate: scaleTranslate()\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': scaleTranslate()\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': scaleTranslate()\n      }],\n      /**\n       * Translate Z\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-z': [{\n        'translate-z': scaleTranslate()\n      }],\n      /**\n       * Translate None\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-none': ['translate-none'],\n      // ---------------------\n      // --- Interactivity ---\n      // ---------------------\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: scaleColor()\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: scaleColor()\n      }],\n      /**\n       * Color Scheme\n       * @see https://tailwindcss.com/docs/color-scheme\n       */\n      'color-scheme': [{\n        scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Field Sizing\n       * @see https://tailwindcss.com/docs/field-sizing\n       */\n      'field-sizing': [{\n        'field-sizing': ['fixed', 'content']\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['auto', 'none']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', '', 'y', 'x']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -----------\n      // --- SVG ---\n      // -----------\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: ['none', ...scaleColor()]\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isNumber, isArbitraryVariableLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: ['none', ...scaleColor()]\n      }],\n      // ---------------------\n      // --- Accessibility ---\n      // ---------------------\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-x', 'border-w-y', 'border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-x', 'border-color-y', 'border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      translate: ['translate-x', 'translate-y', 'translate-none'],\n      'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    },\n    orderSensitiveModifiers: ['*', '**', 'after', 'backdrop', 'before', 'details-content', 'file', 'first-letter', 'first-line', 'marker', 'placeholder', 'selection']\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  overrideConfigProperties(baseConfig.theme, override.theme);\n  overrideConfigProperties(baseConfig.classGroups, override.classGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);\n  overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);\n  mergeConfigProperties(baseConfig.theme, extend.theme);\n  mergeConfigProperties(baseConfig.classGroups, extend.classGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);\n  mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      mergeArrayProperties(baseObject, mergeObject, key);\n    }\n  }\n};\nconst mergeArrayProperties = (baseObject, mergeObject, key) => {\n  const mergeValue = mergeObject[key];\n  if (mergeValue !== undefined) {\n    baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };\n//# sourceMappingURL=bundle-mjs.mjs.map\n","import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n","import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n","import React from 'react'\r\nimport { Button } from '../../ui/button'\r\nimport type { Components } from 'react-markdown'\r\nimport { OnSendContentParams } from '../../types'\r\n\r\n// 定义自定义按钮节点的类型\r\ninterface CustomButtonNode {\r\n  type: 'element'\r\n  tagName: 'custom-button'\r\n  properties?: {\r\n    buttonText?: string\r\n  }\r\n}\r\n\r\ntype CustomButtonProps = {\r\n  node: CustomButtonNode\r\n  readonly?: boolean\r\n  defaultButtonText?: string\r\n  onSend?: (content: OnSendContentParams) => void\r\n}\r\n\r\ninterface ComponentsWithCustomButton extends Components {\r\n  'custom-button': React.ComponentType<CustomButtonProps>\r\n}\r\n\r\n// 定义自定义按钮组件\r\nconst CustomButton = ({\r\n  node,\r\n  readonly,\r\n  defaultButtonText,\r\n  onSend\r\n}: CustomButtonProps) => {\r\n  const { buttonText, ...restProps } = node.properties || {}\r\n\r\n  const handleButtonClick = () => {\r\n    onSend?.({ buttonText: buttonText || '' })\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      variant='outline'\r\n      disabled={readonly}\r\n      size='sm'\r\n      onClick={handleButtonClick}\r\n      className={`cursor-pointer h-6 text-sm hover:bg-gray-200 ${\r\n        defaultButtonText === buttonText ? 'bg-black text-white' : ''\r\n      }`}\r\n      {...restProps}\r\n    >\r\n      {buttonText}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default CustomButton\r\nexport type { CustomButtonProps, CustomButtonNode, ComponentsWithCustomButton }\r\n","import { visit } from 'unist-util-visit'\r\nimport type { Node, Parent, Literal } from 'unist'\r\n\r\ninterface CustomVariableNode extends Node {\r\n  data: {\r\n    hName: string\r\n    hProperties: {\r\n      variableName?: string\r\n      buttonTexts?: string[]\r\n      placeholder?: string\r\n    }\r\n  }\r\n}\r\n\r\n// 定义格式类型枚举\r\nenum FormatType {\r\n  BUTTONS_WITH_PLACEHOLDER = 0,  // 按钮+占位符\r\n  BUTTONS_ONLY = 1,              // 只有按钮\r\n  SINGLE_BUTTON = 2,             // 单个按钮\r\n  PLACEHOLDER_ONLY = 3           // 只有占位符\r\n}\r\n\r\n// 定义匹配规则接口\r\ninterface MatchRule {\r\n  regex: RegExp\r\n  type: FormatType\r\n}\r\n\r\n// 定义分隔符（支持英文|和中文｜）\r\nconst SEPARATOR = '[|｜]'  // 匹配英文|或中文｜\r\nconst SEPARATOR_GLOBAL = new RegExp(SEPARATOR, 'g')\r\n\r\n// 配置化的匹配规则（调整顺序和逻辑，使用统一的分隔符）\r\nconst MATCH_RULES: MatchRule[] = [\r\n  {\r\n    // 格式1: ?[%{{variable}} button1 | button2 | ... placeholder] (按钮+占位符，优先级最高)\r\n    regex: new RegExp(`\\\\?\\\\[\\\\%\\\\{\\\\{\\\\s*(\\\\w+)\\\\s*\\\\}\\\\}\\\\s*([^\\\\]\\\\|｜]+(?:\\\\s*${SEPARATOR}\\\\s*[^\\\\]\\\\|｜]+)*)\\\\s*${SEPARATOR}\\\\s*\\\\.\\\\.\\\\.\\\\s*([^\\\\]]+)\\\\]`),\r\n    type: FormatType.BUTTONS_WITH_PLACEHOLDER\r\n  },\r\n  {\r\n    // 格式4: ?[%{{variable}} ... placeholder] (只有占位符，提高优先级)\r\n    regex: /\\?\\[\\%\\{\\{\\s*(\\w+)\\s*\\}\\}\\s*\\.\\.\\.\\s*([^\\]]+)\\]/,\r\n    type: FormatType.PLACEHOLDER_ONLY\r\n  },\r\n  {\r\n    // 格式2: ?[%{{variable}} button1 | button2]\r\n    regex: new RegExp(`\\\\?\\\\[\\\\%\\\\{\\\\{\\\\s*(\\\\w+)\\\\s*\\\\}\\\\}\\\\s*([^\\\\]\\\\|｜]+(?:\\\\s*${SEPARATOR}\\\\s*[^\\\\]\\\\|｜]+)+)\\\\s*\\\\]`),\r\n    type: FormatType.BUTTONS_ONLY\r\n  },\r\n  {\r\n    // 格式3: ?[%{{variable}} button]\r\n    regex: /\\?\\[\\%\\{\\{\\s*(\\w+)\\s*\\}\\}\\s*([^\\|\\]｜]+)\\s*\\]/,\r\n    type: FormatType.SINGLE_BUTTON\r\n  }\r\n]\r\n\r\n// 解析结果接口\r\ninterface ParsedResult {\r\n  variableName: string\r\n  buttonTexts: string[]\r\n  placeholder?: string\r\n}\r\n\r\n/**\r\n * 解析不同格式的内容\r\n */\r\nfunction parseContentByType(match: RegExpExecArray, formatType: FormatType): ParsedResult {\r\n  const variableName = match[1].trim()\r\n  \r\n  switch (formatType) {\r\n    case FormatType.BUTTONS_WITH_PLACEHOLDER:\r\n      // ?[%{{variable}} button1 | button2 | ... placeholder]\r\n      return {\r\n        variableName,\r\n        buttonTexts: match[2].split(SEPARATOR_GLOBAL).map(text => text.trim()).filter(text => text.length > 0),\r\n        placeholder: match[3].trim()\r\n      }\r\n\r\n    case FormatType.BUTTONS_ONLY:\r\n      // ?[%{{variable}} button1 | button2]\r\n      return {\r\n        variableName,\r\n        buttonTexts: match[2].split(SEPARATOR_GLOBAL).map(text => text.trim()).filter(text => text.length > 0),\r\n        placeholder: undefined\r\n      }\r\n\r\n    case FormatType.SINGLE_BUTTON:\r\n      // ?[%{{variable}} button]\r\n      const buttonText = match[2].trim()\r\n      return {\r\n        variableName,\r\n        buttonTexts: buttonText ? [buttonText] : [],\r\n        placeholder: undefined\r\n      }\r\n\r\n    case FormatType.PLACEHOLDER_ONLY:\r\n      // ?[%{{variable}} ... placeholder]\r\n      return {\r\n        variableName,\r\n        buttonTexts: [],\r\n        placeholder: match[2].trim()\r\n      }\r\n\r\n    default:\r\n      throw new Error(`Unsupported format type: ${formatType}`)\r\n  }\r\n}\r\n\r\n/**\r\n * 查找第一个匹配的规则\r\n */\r\nfunction findFirstMatch(value: string): { match: RegExpExecArray; rule: MatchRule } | null {\r\n  for (const rule of MATCH_RULES) {\r\n    rule.regex.lastIndex = 0\r\n    const match = rule.regex.exec(value)\r\n    if (match) {\r\n      return { match, rule }\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\n/**\r\n * 创建AST节点片段\r\n */\r\nfunction createSegments(\r\n  value: string, \r\n  startIndex: number, \r\n  endIndex: number, \r\n  parsedResult: ParsedResult\r\n): Array<Literal | CustomVariableNode> {\r\n  return [\r\n    {\r\n      type: 'text',\r\n      value: value.substring(0, startIndex)\r\n    } as Literal,\r\n    {\r\n      type: 'element',\r\n      data: {\r\n        hName: 'custom-variable',\r\n        hProperties: parsedResult\r\n      }\r\n    } as CustomVariableNode,\r\n    {\r\n      type: 'text',\r\n      value: value.substring(endIndex)\r\n    } as Literal\r\n  ]\r\n}\r\n\r\nexport default function remarkCustomButtonInputVariable() {\r\n  return (tree: Node) => {\r\n    visit(\r\n      tree,\r\n      'text',\r\n      (node: Literal, index: number | null, parent: Parent | null) => {\r\n        // 输入验证\r\n        if (index === null || parent === null) return\r\n        \r\n        const value = node.value as string\r\n        const matchResult = findFirstMatch(value)\r\n        \r\n        if (!matchResult) return\r\n\r\n        const { match, rule } = matchResult\r\n        const startIndex = match.index\r\n        const endIndex = startIndex + match[0].length\r\n\r\n        try {\r\n          // 解析匹配结果\r\n          const parsedResult = parseContentByType(match, rule.type)\r\n          \r\n          // 创建新的节点片段\r\n          const segments = createSegments(value, startIndex, endIndex, parsedResult)\r\n          \r\n          // 替换原节点\r\n          parent.children.splice(index, 1, ...segments)\r\n          \r\n        } catch (error) {\r\n          console.warn('Failed to parse custom variable syntax:', error)\r\n          // 如果解析失败，保持原样不处理\r\n          return\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","import * as React from \"react\"\r\n\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => createElement(\n    \"svg\",\n    {\n      ref,\n      ...defaultAttributes,\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n      className: mergeClasses(\"lucide\", className),\n      ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n      ...rest\n    },\n    [\n      ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n      ...Array.isArray(children) ? children : [children]\n    ]\n  )\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"m6 9 6 6 6-6\", key: \"qrunsl\" }]];\nconst ChevronDown = createLucideIcon(\"chevron-down\", __iconNode);\n\nexport { __iconNode, ChevronDown as default };\n//# sourceMappingURL=chevron-down.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\",\n      key: \"1ffxy3\"\n    }\n  ],\n  [\"path\", { d: \"m21.854 2.147-10.94 10.939\", key: \"12cjpa\" }]\n];\nconst Send = createLucideIcon(\"send\", __iconNode);\n\nexport { __iconNode, Send as default };\n//# sourceMappingURL=send.js.map\n","import React from 'react'\r\nimport { Button } from '../../ui/button'\r\nimport { Input } from '../../ui/input'\r\nimport type { Components } from 'react-markdown'\r\nimport { OnSendContentParams } from '../../types'\r\nimport { SendIcon } from 'lucide-react'\r\n\r\n// 定义自定义变量节点的类型\r\ninterface CustomVariableNode {\r\n  tagName: 'custom-variable'\r\n  properties?: {\r\n    variableName?: string\r\n    buttonTexts?: string[]\r\n    placeholder?: string\r\n  }\r\n}\r\n\r\n// 定义自定义变量组件的 Props 类型\r\ninterface CustomVariableProps {\r\n  node: CustomVariableNode\r\n  defaultButtonText?: string\r\n  defaultInputText?: string\r\n  readonly?: boolean\r\n  onSend?: (content: OnSendContentParams) => void\r\n}\r\n\r\ninterface ComponentsWithCustomVariable extends Components {\r\n  'custom-variable': React.ComponentType<CustomVariableProps>\r\n}\r\n\r\n// 定义自定义变量组件\r\nconst CustomButtonInputVariable = ({\r\n  node,\r\n  readonly,\r\n  defaultButtonText,\r\n  defaultInputText,\r\n  onSend\r\n}: CustomVariableProps) => {\r\n  const [inputValue, setInputValue] = React.useState(defaultInputText || '')\r\n\r\n  const handleButtonClick = (value: string) => {\r\n    onSend?.({\r\n      variableName: node.properties?.variableName || '',\r\n      buttonText: value\r\n    })\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendClick()\r\n    }\r\n  }\r\n  const handleSendClick = () => {\r\n    onSend?.({\r\n      variableName: node.properties?.variableName || '',\r\n      inputText: inputValue\r\n    })\r\n  }\r\n\r\n  return (\r\n    <span className='custom-variable-container inline-flex items-center gap-2 flex-wrap'>\r\n      {node.properties?.buttonTexts?.map((text, index) => (\r\n        <Button\r\n          key={index}\r\n          disabled={readonly}\r\n          variant='outline'\r\n          type='button'\r\n          size='sm'\r\n          onClick={() => handleButtonClick(text)}\r\n          className={`cursor-pointer h-6 text-sm hover:bg-gray-200 ${\r\n            defaultButtonText === text ? 'bg-black text-white' : ''\r\n          }`}\r\n        >\r\n          {text}\r\n        </Button>\r\n      ))}\r\n      {node.properties?.placeholder && (\r\n        <span className='text-sm flex rounded-md border'>\r\n          <Input\r\n            type='text'\r\n            disabled={readonly}\r\n            placeholder={node.properties?.placeholder}\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onKeyPress={handleKeyPress}\r\n            className='custom-variable-input w-40 h-6 text-sm border-0 shadow-none outline-none ring-0'\r\n            style={{\r\n              border: 'none',\r\n              outline: 'none',\r\n              boxShadow: 'none'\r\n            }}\r\n          />\r\n          <Button\r\n            type='button'\r\n            variant='ghost'\r\n            size='icon'\r\n            onClick={handleSendClick}\r\n            disabled={readonly}\r\n            className='h-6 w-6 mr-1 hover:bg-gray-200'\r\n          >\r\n            <SendIcon className='h-4 w-4' />\r\n          </Button>\r\n        </span>\r\n      )}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default CustomButtonInputVariable\r\nexport type {\r\n  CustomVariableProps,\r\n  CustomVariableNode,\r\n  ComponentsWithCustomVariable\r\n}\r\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {(\n *   Kind extends {children: Array<infer Child>}\n *   ? Child\n *   : never\n * )} Child\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Kind\n *   All node types.\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Find the first node in `parent` after another `node` or after an index,\n * that passes `test`.\n *\n * @param parent\n *   Parent node.\n * @param index\n *   Child node or index.\n * @param [test=undefined]\n *   Test for child to look for (optional).\n * @returns\n *   A child (matching `test`, if given) or `undefined`.\n */\nexport const findAfter =\n  // Note: overloads like this are needed to support optional generics.\n  /**\n   * @type {(\n   *   (<Kind extends UnistParent, Check extends Test>(parent: Kind, index: Child<Kind> | number, test: Check) => Matches<Child<Kind>, Check> | undefined) &\n   *   (<Kind extends UnistParent>(parent: Kind, index: Child<Kind> | number, test?: null | undefined) => Child<Kind> | undefined)\n   * )}\n   */\n  (\n    /**\n     * @param {UnistParent} parent\n     * @param {UnistNode | number} index\n     * @param {Test} [test]\n     * @returns {UnistNode | undefined}\n     */\n    function (parent, index, test) {\n      const is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return undefined\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast-util-is-element').TestFunction} TestFunction\n */\n\n/**\n * @typedef {'normal' | 'nowrap' | 'pre' | 'pre-wrap'} Whitespace\n *   Valid and useful whitespace values (from CSS).\n *\n * @typedef {0 | 1 | 2} BreakNumber\n *   Specific break:\n *\n *   *   `0` — space\n *   *   `1` — line ending\n *   *   `2` — blank line\n *\n * @typedef {'\\n'} BreakForce\n *   Forced break.\n *\n * @typedef {boolean} BreakValue\n *   Whether there was a break.\n *\n * @typedef {BreakNumber | BreakValue | undefined} BreakBefore\n *   Any value for a break before.\n *\n * @typedef {BreakForce | BreakNumber | BreakValue | undefined} BreakAfter\n *   Any value for a break after.\n *\n * @typedef CollectionInfo\n *   Info on current collection.\n * @property {BreakAfter} breakAfter\n *   Whether there was a break after.\n * @property {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @property {Whitespace} whitespace\n *   Current whitespace setting.\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace | null | undefined} [whitespace='normal']\n *   Initial CSS whitespace setting to use (default: `'normal'`).\n */\n\nimport {findAfter} from 'unist-util-find-after'\nimport {convertElement} from 'hast-util-is-element'\n\nconst searchLineFeeds = /\\n/g\nconst searchTabOrSpaces = /[\\t ]+/g\n\nconst br = convertElement('br')\nconst cell = convertElement(isCell)\nconst p = convertElement('p')\nconst row = convertElement('tr')\n\n// Note that we don’t need to include void elements here as they don’t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n  // List from: <https://html.spec.whatwg.org/multipage/rendering.html#hidden-elements>\n  'datalist',\n  'head',\n  'noembed',\n  'noframes',\n  'noscript', // Act as if we support scripting.\n  'rp',\n  'script',\n  'style',\n  'template',\n  'title',\n  // Hidden attribute.\n  hidden,\n  // From: <https://html.spec.whatwg.org/multipage/rendering.html#flow-content-3>\n  closedDialog\n])\n\n// See: <https://html.spec.whatwg.org/multipage/rendering.html#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n  'address', // Flow content\n  'article', // Sections and headings\n  'aside', // Sections and headings\n  'blockquote', // Flow content\n  'body', // Page\n  'caption', // `table-caption`\n  'center', // Flow content (legacy)\n  'dd', // Lists\n  'dialog', // Flow content\n  'dir', // Lists (legacy)\n  'dl', // Lists\n  'dt', // Lists\n  'div', // Flow content\n  'figure', // Flow content\n  'figcaption', // Flow content\n  'footer', // Flow content\n  'form,', // Flow content\n  'h1', // Sections and headings\n  'h2', // Sections and headings\n  'h3', // Sections and headings\n  'h4', // Sections and headings\n  'h5', // Sections and headings\n  'h6', // Sections and headings\n  'header', // Flow content\n  'hgroup', // Sections and headings\n  'hr', // Flow content\n  'html', // Page\n  'legend', // Flow content\n  'li', // Lists (as `display: list-item`)\n  'listing', // Flow content (legacy)\n  'main', // Flow content\n  'menu', // Lists\n  'nav', // Sections and headings\n  'ol', // Lists\n  'p', // Flow content\n  'plaintext', // Flow content (legacy)\n  'pre', // Flow content\n  'section', // Sections and headings\n  'ul', // Lists\n  'xmp' // Flow content (legacy)\n])\n\n/**\n * Get the plain-text value of a node.\n *\n * ###### Algorithm\n *\n * *   if `tree` is a comment, returns its `value`\n * *   if `tree` is a text, applies normal whitespace collapsing to its\n *     `value`, as defined by the CSS Text spec\n * *   if `tree` is a root or element, applies an algorithm similar to the\n *     `innerText` getter as defined by HTML\n *\n * ###### Notes\n *\n * > 👉 **Note**: the algorithm acts as if `tree` is being rendered, and as if\n * > we’re a CSS-supporting user agent, with scripting enabled.\n *\n * *   if `tree` is an element that is not displayed (such as a `head`), we’ll\n *     still use the `innerText` algorithm instead of switching to `textContent`\n * *   if descendants of `tree` are elements that are not displayed, they are\n *     ignored\n * *   CSS is not considered, except for the default user agent style sheet\n * *   a line feed is collapsed instead of ignored in cases where Fullwidth, Wide,\n *     or Halfwidth East Asian Width characters are used, the same goes for a case\n *     with Chinese, Japanese, or Yi writing systems\n * *   replaced elements (such as `audio`) are treated like non-replaced elements\n *\n * @param {Nodes} tree\n *   Tree to turn into text.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `tree`.\n */\nexport function toText(tree, options) {\n  const options_ = options || {}\n  const children = 'children' in tree ? tree.children : []\n  const block = blockOrCaption(tree)\n  const whitespace = inferWhitespace(tree, {\n    whitespace: options_.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  })\n\n  /** @type {Array<BreakNumber | string>} */\n  const results = []\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node’s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (tree.type === 'text' || tree.type === 'comment') {\n    results.push(\n      ...collectText(tree, {\n        whitespace,\n        breakBefore: true,\n        breakAfter: true\n      })\n    )\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we’re not supporting stylesheets so we’re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we’ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  let index = -1\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results.push(\n      ...renderedTextCollection(\n        children[index],\n        // @ts-expect-error: `tree` is a parent if we’re here.\n        tree,\n        {\n          whitespace,\n          breakBefore: index ? undefined : block,\n          breakAfter:\n            index < children.length - 1 ? br(children[index + 1]) : block\n        }\n      )\n    )\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {number | undefined} */\n  let count\n\n  index = -1\n\n  while (++index < results.length) {\n    const value = results[index]\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value\n    } else if (value) {\n      if (count !== undefined && count > -1) {\n        result.push('\\n'.repeat(count) || ' ')\n      }\n\n      count = -1\n      result.push(value)\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('')\n}\n\n/**\n * <https://html.spec.whatwg.org/multipage/dom.html#rendered-text-collection-steps>\n *\n * @param {Nodes} node\n * @param {Parents} parent\n * @param {CollectionInfo} info\n * @returns {Array<BreakNumber | string>}\n */\nfunction renderedTextCollection(node, parent, info) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, info)\n  }\n\n  if (node.type === 'text') {\n    return info.whitespace === 'normal'\n      ? collectText(node, info)\n      : collectPreText(node)\n  }\n\n  return []\n}\n\n/**\n * Collect an element.\n *\n * @param {Element} node\n *   Element node.\n * @param {Parents} parent\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<BreakNumber | string>}\n */\nfunction collectElement(node, parent, info) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, info)\n  const children = node.children || []\n  let index = -1\n  /** @type {Array<BreakNumber | string>} */\n  let items = []\n\n  // We’re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items\n  }\n\n  /** @type {BreakNumber | undefined} */\n  let prefix\n  /** @type {BreakForce | BreakNumber | undefined} */\n  let suffix\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node’s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n'\n  }\n\n  // 7.  If node’s computed value of `display` is `table-row`, and node’s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/multipage/rendering.html#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (\n    row(node) &&\n    // @ts-expect-error: something up with types of parents.\n    findAfter(parent, node, row)\n  ) {\n    suffix = '\\n'\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2\n    suffix = 2\n  }\n\n  // 9.  If node’s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1\n    suffix = 1\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      renderedTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    )\n  }\n\n  // 6.  If node’s computed value of `display` is `table-cell`, and node’s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/multipage/rendering.html#tables-2>\n  if (\n    cell(node) &&\n    // @ts-expect-error: something up with types of parents.\n    findAfter(parent, node, cell)\n  ) {\n    items.push('\\t')\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix)\n  if (suffix) items.push(suffix)\n\n  return items\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don’t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {Comment | Text} node\n *   Text node.\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<BreakNumber | string>}\n *   Result.\n */\nfunction collectText(node, info) {\n  const value = String(node.value)\n  /** @type {Array<string>} */\n  const lines = []\n  /** @type {Array<BreakNumber | string>} */\n  const result = []\n  let start = 0\n\n  while (start <= value.length) {\n    searchLineFeeds.lastIndex = start\n\n    const match = searchLineFeeds.exec(value)\n    const end = match && 'index' in match ? match.index : value.length\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // […] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value\n          .slice(start, end)\n          .replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        start === 0 ? info.breakBefore : true,\n        end === value.length ? info.breakAfter : true\n      )\n    )\n\n    start = end + 1\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  let index = -1\n  /** @type {BreakNumber | undefined} */\n  let join\n\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n      lines[index].charCodeAt(lines[index].length - 1) === 0x20_0b /* ZWSP */ ||\n      (index < lines.length - 1 &&\n        lines[index + 1].charCodeAt(0) === 0x20_0b) /* ZWSP */\n    ) {\n      result.push(lines[index])\n      join = undefined\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (typeof join === 'number') result.push(join)\n      result.push(lines[index])\n      join = 0\n    } else if (index === 0 || index === lines.length - 1) {\n      // If this line is empty, and it’s the first or last, add a space.\n      // Note that this function is only called in normal whitespace, so we\n      // don’t worry about `pre`.\n      result.push(0)\n    }\n  }\n\n  return result\n}\n\n/**\n * Collect a text node as “pre” whitespace.\n *\n * @param {Text} node\n *   Text node.\n * @returns {Array<BreakNumber | string>}\n *   Result.\n */\nfunction collectPreText(node) {\n  return [String(node.value)]\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space—even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context—is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n *   Value to collapse.\n * @param {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @param {BreakAfter} breakAfter\n *   Whether there was a break after.\n * @returns {string}\n *   Result.\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  /** @type {number | undefined} */\n  let end\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start\n    const match = searchTabOrSpaces.exec(value)\n    end = match ? match.index : value.length\n\n    // If we’re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('')\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end))\n    }\n\n    start = match ? end + match[0].length : end\n  }\n\n  // If we reached the end, there was trailing white space, and there’s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  if (start !== end && !breakAfter) {\n    result.push('')\n  }\n\n  return result.join(' ')\n}\n\n/**\n * Figure out the whitespace of a node.\n *\n * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {Nodes} node\n *   Node (typically `Element`).\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Whitespace}\n *   Applied whitespace.\n */\nfunction inferWhitespace(node, info) {\n  if (node.type === 'element') {\n    const properties = node.properties || {}\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp': {\n        return 'pre'\n      }\n\n      case 'nobr': {\n        return 'nowrap'\n      }\n\n      case 'pre': {\n        return properties.wrap ? 'pre-wrap' : 'pre'\n      }\n\n      case 'td':\n      case 'th': {\n        return properties.noWrap ? 'nowrap' : info.whitespace\n      }\n\n      case 'textarea': {\n        return 'pre-wrap'\n      }\n\n      default:\n    }\n  }\n\n  return info.whitespace\n}\n\n/**\n * @type {TestFunction}\n * @param {Element} node\n * @returns {node is {properties: {hidden: true}}}\n */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden)\n}\n\n/**\n * @type {TestFunction}\n * @param {Element} node\n * @returns {node is {tagName: 'td' | 'th'}}\n */\nfunction isCell(node) {\n  return node.tagName === 'td' || node.tagName === 'th'\n}\n\n/**\n * @type {TestFunction}\n */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open\n}\n","/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      // Floating-point literal.\n      { begin:\n        \"[+-]?(?:\" // Leading sign.\n          // Decimal.\n          + \"(?:\"\n            +\"[0-9](?:'?[0-9])*\\\\.(?:[0-9](?:'?[0-9])*)?\"\n            + \"|\\\\.[0-9](?:'?[0-9])*\"\n          + \")(?:[Ee][+-]?[0-9](?:'?[0-9])*)?\"\n          + \"|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*\"\n          // Hexadecimal.\n          + \"|0[Xx](?:\"\n            +\"[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?\"\n            + \"|\\\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*\"\n          + \")[Pp][+-]?[0-9](?:'?[0-9])*\"\n        + \")(?:\" // Literal suffixes.\n          + \"[Ff](?:16|32|64|128)?\"\n          + \"|(BF|bf)16\"\n          + \"|[Ll]\"\n          + \"|\" // Literal suffix is optional.\n        + \")\"\n      },\n      // Integer literal.\n      { begin:\n        \"[+-]?\\\\b(?:\" // Leading sign.\n          + \"0[Bb][01](?:'?[01])*\" // Binary.\n          + \"|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*\" // Hexadecimal.\n          + \"|0(?:'?[0-7])*\" // Octal or just a lone zero.\n          + \"|[1-9](?:'?[0-9])*\" // Decimal.\n        + \")(?:\" // Literal suffixes.\n          + \"[Uu](?:LL?|ll?)\"\n          + \"|[Uu][Zz]?\"\n          + \"|(?:LL?|ll?)[Uu]?\"\n          + \"|[Zz][Uu]\"\n          + \"|\" // Literal suffix is optional.\n        + \")\"\n        // Note: there are user-defined literal suffixes too, but perhaps having the custom suffix not part of the\n        // literal highlight actually makes it stand out more.\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'flat_map',\n    'flat_set',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function|flat_map|flat_set)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\n/*\nLanguage: Arduino\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\nWebsite: https://www.arduino.cc\nCategory: system\n*/\n\n\n/** @type LanguageFn */\nfunction arduino(hljs) {\n  const ARDUINO_KW = {\n    type: [\n      \"boolean\",\n      \"byte\",\n      \"word\",\n      \"String\"\n    ],\n    built_in: [\n      \"KeyboardController\",\n      \"MouseController\",\n      \"SoftwareSerial\",\n      \"EthernetServer\",\n      \"EthernetClient\",\n      \"LiquidCrystal\",\n      \"RobotControl\",\n      \"GSMVoiceCall\",\n      \"EthernetUDP\",\n      \"EsploraTFT\",\n      \"HttpClient\",\n      \"RobotMotor\",\n      \"WiFiClient\",\n      \"GSMScanner\",\n      \"FileSystem\",\n      \"Scheduler\",\n      \"GSMServer\",\n      \"YunClient\",\n      \"YunServer\",\n      \"IPAddress\",\n      \"GSMClient\",\n      \"GSMModem\",\n      \"Keyboard\",\n      \"Ethernet\",\n      \"Console\",\n      \"GSMBand\",\n      \"Esplora\",\n      \"Stepper\",\n      \"Process\",\n      \"WiFiUDP\",\n      \"GSM_SMS\",\n      \"Mailbox\",\n      \"USBHost\",\n      \"Firmata\",\n      \"PImage\",\n      \"Client\",\n      \"Server\",\n      \"GSMPIN\",\n      \"FileIO\",\n      \"Bridge\",\n      \"Serial\",\n      \"EEPROM\",\n      \"Stream\",\n      \"Mouse\",\n      \"Audio\",\n      \"Servo\",\n      \"File\",\n      \"Task\",\n      \"GPRS\",\n      \"WiFi\",\n      \"Wire\",\n      \"TFT\",\n      \"GSM\",\n      \"SPI\",\n      \"SD\"\n    ],\n    _hints: [\n      \"setup\",\n      \"loop\",\n      \"runShellCommandAsynchronously\",\n      \"analogWriteResolution\",\n      \"retrieveCallingNumber\",\n      \"printFirmwareVersion\",\n      \"analogReadResolution\",\n      \"sendDigitalPortPair\",\n      \"noListenOnLocalhost\",\n      \"readJoystickButton\",\n      \"setFirmwareVersion\",\n      \"readJoystickSwitch\",\n      \"scrollDisplayRight\",\n      \"getVoiceCallStatus\",\n      \"scrollDisplayLeft\",\n      \"writeMicroseconds\",\n      \"delayMicroseconds\",\n      \"beginTransmission\",\n      \"getSignalStrength\",\n      \"runAsynchronously\",\n      \"getAsynchronously\",\n      \"listenOnLocalhost\",\n      \"getCurrentCarrier\",\n      \"readAccelerometer\",\n      \"messageAvailable\",\n      \"sendDigitalPorts\",\n      \"lineFollowConfig\",\n      \"countryNameWrite\",\n      \"runShellCommand\",\n      \"readStringUntil\",\n      \"rewindDirectory\",\n      \"readTemperature\",\n      \"setClockDivider\",\n      \"readLightSensor\",\n      \"endTransmission\",\n      \"analogReference\",\n      \"detachInterrupt\",\n      \"countryNameRead\",\n      \"attachInterrupt\",\n      \"encryptionType\",\n      \"readBytesUntil\",\n      \"robotNameWrite\",\n      \"readMicrophone\",\n      \"robotNameRead\",\n      \"cityNameWrite\",\n      \"userNameWrite\",\n      \"readJoystickY\",\n      \"readJoystickX\",\n      \"mouseReleased\",\n      \"openNextFile\",\n      \"scanNetworks\",\n      \"noInterrupts\",\n      \"digitalWrite\",\n      \"beginSpeaker\",\n      \"mousePressed\",\n      \"isActionDone\",\n      \"mouseDragged\",\n      \"displayLogos\",\n      \"noAutoscroll\",\n      \"addParameter\",\n      \"remoteNumber\",\n      \"getModifiers\",\n      \"keyboardRead\",\n      \"userNameRead\",\n      \"waitContinue\",\n      \"processInput\",\n      \"parseCommand\",\n      \"printVersion\",\n      \"readNetworks\",\n      \"writeMessage\",\n      \"blinkVersion\",\n      \"cityNameRead\",\n      \"readMessage\",\n      \"setDataMode\",\n      \"parsePacket\",\n      \"isListening\",\n      \"setBitOrder\",\n      \"beginPacket\",\n      \"isDirectory\",\n      \"motorsWrite\",\n      \"drawCompass\",\n      \"digitalRead\",\n      \"clearScreen\",\n      \"serialEvent\",\n      \"rightToLeft\",\n      \"setTextSize\",\n      \"leftToRight\",\n      \"requestFrom\",\n      \"keyReleased\",\n      \"compassRead\",\n      \"analogWrite\",\n      \"interrupts\",\n      \"WiFiServer\",\n      \"disconnect\",\n      \"playMelody\",\n      \"parseFloat\",\n      \"autoscroll\",\n      \"getPINUsed\",\n      \"setPINUsed\",\n      \"setTimeout\",\n      \"sendAnalog\",\n      \"readSlider\",\n      \"analogRead\",\n      \"beginWrite\",\n      \"createChar\",\n      \"motorsStop\",\n      \"keyPressed\",\n      \"tempoWrite\",\n      \"readButton\",\n      \"subnetMask\",\n      \"debugPrint\",\n      \"macAddress\",\n      \"writeGreen\",\n      \"randomSeed\",\n      \"attachGPRS\",\n      \"readString\",\n      \"sendString\",\n      \"remotePort\",\n      \"releaseAll\",\n      \"mouseMoved\",\n      \"background\",\n      \"getXChange\",\n      \"getYChange\",\n      \"answerCall\",\n      \"getResult\",\n      \"voiceCall\",\n      \"endPacket\",\n      \"constrain\",\n      \"getSocket\",\n      \"writeJSON\",\n      \"getButton\",\n      \"available\",\n      \"connected\",\n      \"findUntil\",\n      \"readBytes\",\n      \"exitValue\",\n      \"readGreen\",\n      \"writeBlue\",\n      \"startLoop\",\n      \"IPAddress\",\n      \"isPressed\",\n      \"sendSysex\",\n      \"pauseMode\",\n      \"gatewayIP\",\n      \"setCursor\",\n      \"getOemKey\",\n      \"tuneWrite\",\n      \"noDisplay\",\n      \"loadImage\",\n      \"switchPIN\",\n      \"onRequest\",\n      \"onReceive\",\n      \"changePIN\",\n      \"playFile\",\n      \"noBuffer\",\n      \"parseInt\",\n      \"overflow\",\n      \"checkPIN\",\n      \"knobRead\",\n      \"beginTFT\",\n      \"bitClear\",\n      \"updateIR\",\n      \"bitWrite\",\n      \"position\",\n      \"writeRGB\",\n      \"highByte\",\n      \"writeRed\",\n      \"setSpeed\",\n      \"readBlue\",\n      \"noStroke\",\n      \"remoteIP\",\n      \"transfer\",\n      \"shutdown\",\n      \"hangCall\",\n      \"beginSMS\",\n      \"endWrite\",\n      \"attached\",\n      \"maintain\",\n      \"noCursor\",\n      \"checkReg\",\n      \"checkPUK\",\n      \"shiftOut\",\n      \"isValid\",\n      \"shiftIn\",\n      \"pulseIn\",\n      \"connect\",\n      \"println\",\n      \"localIP\",\n      \"pinMode\",\n      \"getIMEI\",\n      \"display\",\n      \"noBlink\",\n      \"process\",\n      \"getBand\",\n      \"running\",\n      \"beginSD\",\n      \"drawBMP\",\n      \"lowByte\",\n      \"setBand\",\n      \"release\",\n      \"bitRead\",\n      \"prepare\",\n      \"pointTo\",\n      \"readRed\",\n      \"setMode\",\n      \"noFill\",\n      \"remove\",\n      \"listen\",\n      \"stroke\",\n      \"detach\",\n      \"attach\",\n      \"noTone\",\n      \"exists\",\n      \"buffer\",\n      \"height\",\n      \"bitSet\",\n      \"circle\",\n      \"config\",\n      \"cursor\",\n      \"random\",\n      \"IRread\",\n      \"setDNS\",\n      \"endSMS\",\n      \"getKey\",\n      \"micros\",\n      \"millis\",\n      \"begin\",\n      \"print\",\n      \"write\",\n      \"ready\",\n      \"flush\",\n      \"width\",\n      \"isPIN\",\n      \"blink\",\n      \"clear\",\n      \"press\",\n      \"mkdir\",\n      \"rmdir\",\n      \"close\",\n      \"point\",\n      \"yield\",\n      \"image\",\n      \"BSSID\",\n      \"click\",\n      \"delay\",\n      \"read\",\n      \"text\",\n      \"move\",\n      \"peek\",\n      \"beep\",\n      \"rect\",\n      \"line\",\n      \"open\",\n      \"seek\",\n      \"fill\",\n      \"size\",\n      \"turn\",\n      \"stop\",\n      \"home\",\n      \"find\",\n      \"step\",\n      \"tone\",\n      \"sqrt\",\n      \"RSSI\",\n      \"SSID\",\n      \"end\",\n      \"bit\",\n      \"tan\",\n      \"cos\",\n      \"sin\",\n      \"pow\",\n      \"map\",\n      \"abs\",\n      \"max\",\n      \"min\",\n      \"get\",\n      \"run\",\n      \"put\"\n    ],\n    literal: [\n      \"DIGITAL_MESSAGE\",\n      \"FIRMATA_STRING\",\n      \"ANALOG_MESSAGE\",\n      \"REPORT_DIGITAL\",\n      \"REPORT_ANALOG\",\n      \"INPUT_PULLUP\",\n      \"SET_PIN_MODE\",\n      \"INTERNAL2V56\",\n      \"SYSTEM_RESET\",\n      \"LED_BUILTIN\",\n      \"INTERNAL1V1\",\n      \"SYSEX_START\",\n      \"INTERNAL\",\n      \"EXTERNAL\",\n      \"DEFAULT\",\n      \"OUTPUT\",\n      \"INPUT\",\n      \"HIGH\",\n      \"LOW\"\n    ]\n  };\n\n  const ARDUINO = cPlusPlus(hljs);\n\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\n\n  kws.type = [\n    ...kws.type,\n    ...ARDUINO_KW.type\n  ];\n  kws.literal = [\n    ...kws.literal,\n    ...ARDUINO_KW.literal\n  ];\n  kws.built_in = [\n    ...kws.built_in,\n    ...ARDUINO_KW.built_in\n  ];\n  kws._hints = ARDUINO_KW._hints;\n\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = [ 'ino' ];\n  ARDUINO.supersetOf = \"cpp\";\n\n  return ARDUINO;\n}\n\nexport { arduino as default };\n","/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common, scripting\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const regex = hljs.regex;\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR, {\n    className: 'variable',\n    variants: [\n      { begin: regex.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/,\n    end: /\\)/,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const COMMENT = hljs.inherit(\n    hljs.COMMENT(),\n    {\n      match: [\n        /(^|\\s)/,\n        /#.*$/\n      ],\n      scope: {\n        2: 'comment'\n      }\n    }\n  );\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: { contains: [\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(\\w+)/,\n        end: /(\\w+)/,\n        className: 'string'\n      })\n    ] }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    match: /\\\\\"/\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/\n  };\n  const ESCAPED_APOS = {\n    match: /\\\\'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$?\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      {\n        begin: /\\d+#[0-9a-f]+/,\n        className: \"number\"\n      },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [ hljs.inherit(hljs.TITLE_MODE, { begin: /\\w[\\w\\d_]*/ }) ],\n    relevance: 0\n  };\n\n  const KEYWORDS = [\n    \"if\",\n    \"then\",\n    \"else\",\n    \"elif\",\n    \"fi\",\n    \"time\",\n    \"for\",\n    \"while\",\n    \"until\",\n    \"in\",\n    \"do\",\n    \"done\",\n    \"case\",\n    \"esac\",\n    \"coproc\",\n    \"function\",\n    \"select\"\n  ];\n\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n\n  // to consume paths to prevent keyword matches inside them\n  const PATH_MODE = { match: /(\\/[a-z._-]+)+/ };\n\n  // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n  const SHELL_BUILT_INS = [\n    \"break\",\n    \"cd\",\n    \"continue\",\n    \"eval\",\n    \"exec\",\n    \"exit\",\n    \"export\",\n    \"getopts\",\n    \"hash\",\n    \"pwd\",\n    \"readonly\",\n    \"return\",\n    \"shift\",\n    \"test\",\n    \"times\",\n    \"trap\",\n    \"umask\",\n    \"unset\"\n  ];\n\n  const BASH_BUILT_INS = [\n    \"alias\",\n    \"bind\",\n    \"builtin\",\n    \"caller\",\n    \"command\",\n    \"declare\",\n    \"echo\",\n    \"enable\",\n    \"help\",\n    \"let\",\n    \"local\",\n    \"logout\",\n    \"mapfile\",\n    \"printf\",\n    \"read\",\n    \"readarray\",\n    \"source\",\n    \"sudo\",\n    \"type\",\n    \"typeset\",\n    \"ulimit\",\n    \"unalias\"\n  ];\n\n  const ZSH_BUILT_INS = [\n    \"autoload\",\n    \"bg\",\n    \"bindkey\",\n    \"bye\",\n    \"cap\",\n    \"chdir\",\n    \"clone\",\n    \"comparguments\",\n    \"compcall\",\n    \"compctl\",\n    \"compdescribe\",\n    \"compfiles\",\n    \"compgroups\",\n    \"compquote\",\n    \"comptags\",\n    \"comptry\",\n    \"compvalues\",\n    \"dirs\",\n    \"disable\",\n    \"disown\",\n    \"echotc\",\n    \"echoti\",\n    \"emulate\",\n    \"fc\",\n    \"fg\",\n    \"float\",\n    \"functions\",\n    \"getcap\",\n    \"getln\",\n    \"history\",\n    \"integer\",\n    \"jobs\",\n    \"kill\",\n    \"limit\",\n    \"log\",\n    \"noglob\",\n    \"popd\",\n    \"print\",\n    \"pushd\",\n    \"pushln\",\n    \"rehash\",\n    \"sched\",\n    \"setcap\",\n    \"setopt\",\n    \"stat\",\n    \"suspend\",\n    \"ttyctl\",\n    \"unfunction\",\n    \"unhash\",\n    \"unlimit\",\n    \"unsetopt\",\n    \"vared\",\n    \"wait\",\n    \"whence\",\n    \"where\",\n    \"which\",\n    \"zcompile\",\n    \"zformat\",\n    \"zftp\",\n    \"zle\",\n    \"zmodload\",\n    \"zparseopts\",\n    \"zprof\",\n    \"zpty\",\n    \"zregexparse\",\n    \"zsocket\",\n    \"zstyle\",\n    \"ztcp\"\n  ];\n\n  const GNU_CORE_UTILS = [\n    \"chcon\",\n    \"chgrp\",\n    \"chown\",\n    \"chmod\",\n    \"cp\",\n    \"dd\",\n    \"df\",\n    \"dir\",\n    \"dircolors\",\n    \"ln\",\n    \"ls\",\n    \"mkdir\",\n    \"mkfifo\",\n    \"mknod\",\n    \"mktemp\",\n    \"mv\",\n    \"realpath\",\n    \"rm\",\n    \"rmdir\",\n    \"shred\",\n    \"sync\",\n    \"touch\",\n    \"truncate\",\n    \"vdir\",\n    \"b2sum\",\n    \"base32\",\n    \"base64\",\n    \"cat\",\n    \"cksum\",\n    \"comm\",\n    \"csplit\",\n    \"cut\",\n    \"expand\",\n    \"fmt\",\n    \"fold\",\n    \"head\",\n    \"join\",\n    \"md5sum\",\n    \"nl\",\n    \"numfmt\",\n    \"od\",\n    \"paste\",\n    \"ptx\",\n    \"pr\",\n    \"sha1sum\",\n    \"sha224sum\",\n    \"sha256sum\",\n    \"sha384sum\",\n    \"sha512sum\",\n    \"shuf\",\n    \"sort\",\n    \"split\",\n    \"sum\",\n    \"tac\",\n    \"tail\",\n    \"tr\",\n    \"tsort\",\n    \"unexpand\",\n    \"uniq\",\n    \"wc\",\n    \"arch\",\n    \"basename\",\n    \"chroot\",\n    \"date\",\n    \"dirname\",\n    \"du\",\n    \"echo\",\n    \"env\",\n    \"expr\",\n    \"factor\",\n    // \"false\", // keyword literal already\n    \"groups\",\n    \"hostid\",\n    \"id\",\n    \"link\",\n    \"logname\",\n    \"nice\",\n    \"nohup\",\n    \"nproc\",\n    \"pathchk\",\n    \"pinky\",\n    \"printenv\",\n    \"printf\",\n    \"pwd\",\n    \"readlink\",\n    \"runcon\",\n    \"seq\",\n    \"sleep\",\n    \"stat\",\n    \"stdbuf\",\n    \"stty\",\n    \"tee\",\n    \"test\",\n    \"timeout\",\n    // \"true\", // keyword literal already\n    \"tty\",\n    \"uname\",\n    \"unlink\",\n    \"uptime\",\n    \"users\",\n    \"who\",\n    \"whoami\",\n    \"yes\"\n  ];\n\n  return {\n    name: 'Bash',\n    aliases: [\n      'sh',\n      'zsh'\n    ],\n    keywords: {\n      $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: [\n        ...SHELL_BUILT_INS,\n        ...BASH_BUILT_INS,\n        // Shell modifiers\n        \"set\",\n        \"shopt\",\n        ...ZSH_BUILT_INS,\n        ...GNU_CORE_UTILS\n      ]\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      COMMENT,\n      HERE_DOC,\n      PATH_MODE,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      ESCAPED_APOS,\n      VAR\n    ]\n  };\n}\n\nexport { bash as default };\n","/*\nLanguage: C\nCategory: common, system\nWebsite: https://en.wikipedia.org/wiki/C_(programming_language)\n*/\n\n/** @type LanguageFn */\nfunction c(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n\n  const TYPES = {\n    className: 'type',\n    variants: [\n      { begin: '\\\\b[a-z\\\\d_]*_t\\\\b' },\n      { match: /\\batomic_[a-z]{3,6}\\b/ }\n    ]\n\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { match: /\\b(0b[01']+)/ },  \n      { match: /(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)/ },  \n      { match: /(-?)\\b(0[xX][a-fA-F0-9]+(?:'[a-fA-F0-9]+)*(?:\\.[a-fA-F0-9]*(?:'[a-fA-F0-9]*)*)?(?:[pP][-+]?[0-9]+)?(l|L)?(u|U)?)/ },  \n      { match: /(-?)\\b\\d+(?:'\\d+)*(?:\\.\\d*(?:'\\d*)*)?(?:[eE][-+]?\\d+)?/ }  \n  ],\n    relevance: 0\n  };  \n  \n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef elifdef elifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  const C_KEYWORDS = [\n    \"asm\",\n    \"auto\",\n    \"break\",\n    \"case\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"for\",\n    \"fortran\",\n    \"goto\",\n    \"if\",\n    \"inline\",\n    \"register\",\n    \"restrict\",\n    \"return\",\n    \"sizeof\",\n    \"typeof\",\n    \"typeof_unqual\",\n    \"struct\",\n    \"switch\",\n    \"typedef\",\n    \"union\",\n    \"volatile\",\n    \"while\",\n    \"_Alignas\",\n    \"_Alignof\",\n    \"_Atomic\",\n    \"_Generic\",\n    \"_Noreturn\",\n    \"_Static_assert\",\n    \"_Thread_local\",\n    // aliases\n    \"alignas\",\n    \"alignof\",\n    \"noreturn\",\n    \"static_assert\",\n    \"thread_local\",\n    // not a C keyword but is, for all intents and purposes, treated exactly like one.\n    \"_Pragma\"\n  ];\n\n  const C_TYPES = [\n    \"float\",\n    \"double\",\n    \"signed\",\n    \"unsigned\",\n    \"int\",\n    \"short\",\n    \"long\",\n    \"char\",\n    \"void\",\n    \"_Bool\",\n    \"_BitInt\",\n    \"_Complex\",\n    \"_Imaginary\",\n    \"_Decimal32\",\n    \"_Decimal64\",\n    \"_Decimal96\",\n    \"_Decimal128\",\n    \"_Decimal64x\",\n    \"_Decimal128x\",\n    \"_Float16\",\n    \"_Float32\",\n    \"_Float64\",\n    \"_Float128\",\n    \"_Float32x\",\n    \"_Float64x\",\n    \"_Float128x\",\n    // modifiers\n    \"const\",\n    \"static\",\n    \"constexpr\",\n    // aliases\n    \"complex\",\n    \"bool\",\n    \"imaginary\"\n  ];\n\n  const KEYWORDS = {\n    keyword: C_KEYWORDS,\n    type: C_TYPES,\n    literal: 'true false NULL',\n    // TODO: apply hinting work similar to what was done in cpp.js\n    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream '\n      + 'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set '\n      + 'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos '\n      + 'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp '\n      + 'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper '\n      + 'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow '\n      + 'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp '\n      + 'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan '\n      + 'vfprintf vprintf vsprintf endl initializer_list unique_ptr',\n  };\n\n  const EXPRESSION_CONTAINS = [\n    PREPROCESSOR,\n    TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ hljs.inherit(TITLE_MODE, { className: \"title.function\" }) ],\n        relevance: 0\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              TYPES\n            ]\n          }\n        ]\n      },\n      TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: \"C\",\n    aliases: [ 'h' ],\n    keywords: KEYWORDS,\n    // Until differentiations are added between `c` and `cpp`, `c` will\n    // not be auto-detected to avoid auto-detect conflicts between C and C++\n    disableAutodetect: true,\n    illegal: '</',\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: KEYWORDS\n        },\n        {\n          className: 'class',\n          beginKeywords: 'enum class struct union',\n          end: /[{;:<>=]/,\n          contains: [\n            { beginKeywords: \"final class struct\" },\n            hljs.TITLE_MODE\n          ]\n        }\n      ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: KEYWORDS\n    }\n  };\n}\n\nexport { c as default };\n","/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cpp(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      // Floating-point literal.\n      { begin:\n        \"[+-]?(?:\" // Leading sign.\n          // Decimal.\n          + \"(?:\"\n            +\"[0-9](?:'?[0-9])*\\\\.(?:[0-9](?:'?[0-9])*)?\"\n            + \"|\\\\.[0-9](?:'?[0-9])*\"\n          + \")(?:[Ee][+-]?[0-9](?:'?[0-9])*)?\"\n          + \"|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*\"\n          // Hexadecimal.\n          + \"|0[Xx](?:\"\n            +\"[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?\"\n            + \"|\\\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*\"\n          + \")[Pp][+-]?[0-9](?:'?[0-9])*\"\n        + \")(?:\" // Literal suffixes.\n          + \"[Ff](?:16|32|64|128)?\"\n          + \"|(BF|bf)16\"\n          + \"|[Ll]\"\n          + \"|\" // Literal suffix is optional.\n        + \")\"\n      },\n      // Integer literal.\n      { begin:\n        \"[+-]?\\\\b(?:\" // Leading sign.\n          + \"0[Bb][01](?:'?[01])*\" // Binary.\n          + \"|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*\" // Hexadecimal.\n          + \"|0(?:'?[0-7])*\" // Octal or just a lone zero.\n          + \"|[1-9](?:'?[0-9])*\" // Decimal.\n        + \")(?:\" // Literal suffixes.\n          + \"[Uu](?:LL?|ll?)\"\n          + \"|[Uu][Zz]?\"\n          + \"|(?:LL?|ll?)[Uu]?\"\n          + \"|[Zz][Uu]\"\n          + \"|\" // Literal suffix is optional.\n        + \")\"\n        // Note: there are user-defined literal suffixes too, but perhaps having the custom suffix not part of the\n        // literal highlight actually makes it stand out more.\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'flat_map',\n    'flat_set',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function|flat_map|flat_set)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\nexport { cpp as default };\n","/*\nLanguage: C#\nAuthor: Jason Diamond <jason@diamond.name>\nContributor: Nicolas LLOBERA <nllobera@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>, David Pine <david.pine@microsoft.com>\nWebsite: https://docs.microsoft.com/dotnet/csharp/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction csharp(hljs) {\n  const BUILT_IN_KEYWORDS = [\n    'bool',\n    'byte',\n    'char',\n    'decimal',\n    'delegate',\n    'double',\n    'dynamic',\n    'enum',\n    'float',\n    'int',\n    'long',\n    'nint',\n    'nuint',\n    'object',\n    'sbyte',\n    'short',\n    'string',\n    'ulong',\n    'uint',\n    'ushort'\n  ];\n  const FUNCTION_MODIFIERS = [\n    'public',\n    'private',\n    'protected',\n    'static',\n    'internal',\n    'protected',\n    'abstract',\n    'async',\n    'extern',\n    'override',\n    'unsafe',\n    'virtual',\n    'new',\n    'sealed',\n    'partial'\n  ];\n  const LITERAL_KEYWORDS = [\n    'default',\n    'false',\n    'null',\n    'true'\n  ];\n  const NORMAL_KEYWORDS = [\n    'abstract',\n    'as',\n    'base',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'const',\n    'continue',\n    'do',\n    'else',\n    'event',\n    'explicit',\n    'extern',\n    'finally',\n    'fixed',\n    'for',\n    'foreach',\n    'goto',\n    'if',\n    'implicit',\n    'in',\n    'interface',\n    'internal',\n    'is',\n    'lock',\n    'namespace',\n    'new',\n    'operator',\n    'out',\n    'override',\n    'params',\n    'private',\n    'protected',\n    'public',\n    'readonly',\n    'record',\n    'ref',\n    'return',\n    'scoped',\n    'sealed',\n    'sizeof',\n    'stackalloc',\n    'static',\n    'struct',\n    'switch',\n    'this',\n    'throw',\n    'try',\n    'typeof',\n    'unchecked',\n    'unsafe',\n    'using',\n    'virtual',\n    'void',\n    'volatile',\n    'while'\n  ];\n  const CONTEXTUAL_KEYWORDS = [\n    'add',\n    'alias',\n    'and',\n    'ascending',\n    'args',\n    'async',\n    'await',\n    'by',\n    'descending',\n    'dynamic',\n    'equals',\n    'file',\n    'from',\n    'get',\n    'global',\n    'group',\n    'init',\n    'into',\n    'join',\n    'let',\n    'nameof',\n    'not',\n    'notnull',\n    'on',\n    'or',\n    'orderby',\n    'partial',\n    'record',\n    'remove',\n    'required',\n    'scoped',\n    'select',\n    'set',\n    'unmanaged',\n    'value|0',\n    'var',\n    'when',\n    'where',\n    'with',\n    'yield'\n  ];\n\n  const KEYWORDS = {\n    keyword: NORMAL_KEYWORDS.concat(CONTEXTUAL_KEYWORDS),\n    built_in: BUILT_IN_KEYWORDS,\n    literal: LITERAL_KEYWORDS\n  };\n  const TITLE_MODE = hljs.inherit(hljs.TITLE_MODE, { begin: '[a-zA-Z](\\\\.?\\\\w)*' });\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n  const RAW_STRING = {\n    className: 'string',\n    begin: /\"\"\"(\"*)(?!\")(.|\\n)*?\"\"\"\\1/,\n    relevance: 1\n  };\n  const VERBATIM_STRING = {\n    className: 'string',\n    begin: '@\"',\n    end: '\"',\n    contains: [ { begin: '\"\"' } ]\n  };\n  const VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, { illegal: /\\n/ });\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS\n  };\n  const SUBST_NO_LF = hljs.inherit(SUBST, { illegal: /\\n/ });\n  const INTERPOLATED_STRING = {\n    className: 'string',\n    begin: /\\$\"/,\n    end: '\"',\n    illegal: /\\n/,\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      hljs.BACKSLASH_ESCAPE,\n      SUBST_NO_LF\n    ]\n  };\n  const INTERPOLATED_VERBATIM_STRING = {\n    className: 'string',\n    begin: /\\$@\"/,\n    end: '\"',\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      { begin: '\"\"' },\n      SUBST\n    ]\n  };\n  const INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {\n    illegal: /\\n/,\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      { begin: '\"\"' },\n      SUBST_NO_LF\n    ]\n  });\n  SUBST.contains = [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  SUBST_NO_LF.contains = [\n    INTERPOLATED_VERBATIM_STRING_NO_LF,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING_NO_LF,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, { illegal: /\\n/ })\n  ];\n  const STRING = { variants: [\n    RAW_STRING,\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ] };\n\n  const GENERIC_MODIFIER = {\n    begin: \"<\",\n    end: \">\",\n    contains: [\n      { beginKeywords: \"in out\" },\n      TITLE_MODE\n    ]\n  };\n  const TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\\\s*,\\\\s*' + hljs.IDENT_RE + ')*>)?(\\\\[\\\\])?';\n  const AT_IDENTIFIER = {\n    // prevents expressions like `@class` from incorrect flagging\n    // `class` as a keyword\n    begin: \"@\" + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  return {\n    name: 'C#',\n    aliases: [\n      'cs',\n      'c#'\n    ],\n    keywords: KEYWORDS,\n    illegal: /::/,\n    contains: [\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'doctag',\n              variants: [\n                {\n                  begin: '///',\n                  relevance: 0\n                },\n                { begin: '<!--|-->' },\n                {\n                  begin: '</?',\n                  end: '>'\n                }\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: '#',\n        end: '$',\n        keywords: { keyword: 'if else elif endif define undef warning error line region endregion pragma checksum' }\n      },\n      STRING,\n      NUMBERS,\n      {\n        beginKeywords: 'class interface',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:,]/,\n        contains: [\n          { beginKeywords: \"where class\" },\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'record',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // [Attributes(\"\")]\n        className: 'meta',\n        begin: '^\\\\s*\\\\[(?=[\\\\w])',\n        excludeBegin: true,\n        end: '\\\\]',\n        excludeEnd: true,\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new return throw await else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + TYPE_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*(<[^=]+>\\\\s*)?\\\\(',\n        returnBegin: true,\n        end: /\\s*[{;=]/,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          // prevents these from being highlighted `title`\n          {\n            beginKeywords: FUNCTION_MODIFIERS.join(\" \"),\n            relevance: 0\n          },\n          {\n            begin: hljs.IDENT_RE + '\\\\s*(<[^=]+>\\\\s*)?\\\\(',\n            returnBegin: true,\n            contains: [\n              hljs.TITLE_MODE,\n              GENERIC_MODIFIER\n            ],\n            relevance: 0\n          },\n          { match: /\\(\\)/ },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              NUMBERS,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      AT_IDENTIFIER\n    ]\n  };\n}\n\nexport { csharp as default };\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z_][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst HTML_TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'picture',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'select',\n  'source',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst SVG_TAGS = [\n  'defs',\n  'g',\n  'marker',\n  'mask',\n  'pattern',\n  'svg',\n  'switch',\n  'symbol',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feFlood',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMorphology',\n  'feOffset',\n  'feSpecularLighting',\n  'feTile',\n  'feTurbulence',\n  'linearGradient',\n  'radialGradient',\n  'stop',\n  'circle',\n  'ellipse',\n  'image',\n  'line',\n  'path',\n  'polygon',\n  'polyline',\n  'rect',\n  'text',\n  'use',\n  'textPath',\n  'tspan',\n  'foreignObject',\n  'clipPath'\n];\n\nconst TAGS = [\n  ...HTML_TAGS,\n  ...SVG_TAGS,\n];\n\n// Sorting, then reversing makes sure longer attributes/elements like\n// `font-weight` are matched fully instead of getting false positives on say `font`\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n].sort().reverse();\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n].sort().reverse();\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n].sort().reverse();\n\nconst ATTRIBUTES = [\n  'accent-color',\n  'align-content',\n  'align-items',\n  'align-self',\n  'alignment-baseline',\n  'all',\n  'anchor-name',\n  'animation',\n  'animation-composition',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-range',\n  'animation-range-end',\n  'animation-range-start',\n  'animation-timeline',\n  'animation-timing-function',\n  'appearance',\n  'aspect-ratio',\n  'backdrop-filter',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-position-x',\n  'background-position-y',\n  'background-repeat',\n  'background-size',\n  'baseline-shift',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-end-end-radius',\n  'border-end-start-radius',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-start-end-radius',\n  'border-start-start-radius',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-align',\n  'box-decoration-break',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'color-scheme',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'contain-intrinsic-block-size',\n  'contain-intrinsic-height',\n  'contain-intrinsic-inline-size',\n  'contain-intrinsic-size',\n  'contain-intrinsic-width',\n  'container',\n  'container-name',\n  'container-type',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'counter-set',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'cx',\n  'cy',\n  'direction',\n  'display',\n  'dominant-baseline',\n  'empty-cells',\n  'enable-background',\n  'field-sizing',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flood-color',\n  'flood-opacity',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-optical-sizing',\n  'font-palette',\n  'font-size',\n  'font-size-adjust',\n  'font-smooth',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-synthesis-position',\n  'font-synthesis-small-caps',\n  'font-synthesis-style',\n  'font-synthesis-weight',\n  'font-variant',\n  'font-variant-alternates',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-emoji',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'forced-color-adjust',\n  'gap',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphenate-character',\n  'hyphenate-limit-chars',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'initial-letter',\n  'initial-letter-align',\n  'inline-size',\n  'inset',\n  'inset-area',\n  'inset-block',\n  'inset-block-end',\n  'inset-block-start',\n  'inset-inline',\n  'inset-inline-end',\n  'inset-inline-start',\n  'isolation',\n  'justify-content',\n  'justify-items',\n  'justify-self',\n  'kerning',\n  'left',\n  'letter-spacing',\n  'lighting-color',\n  'line-break',\n  'line-height',\n  'line-height-step',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'margin-trim',\n  'marker',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'masonry-auto-flow',\n  'math-depth',\n  'math-shift',\n  'math-style',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'offset',\n  'offset-anchor',\n  'offset-distance',\n  'offset-path',\n  'offset-position',\n  'offset-rotate',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-anchor',\n  'overflow-block',\n  'overflow-clip-margin',\n  'overflow-inline',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'overlay',\n  'overscroll-behavior',\n  'overscroll-behavior-block',\n  'overscroll-behavior-inline',\n  'overscroll-behavior-x',\n  'overscroll-behavior-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'paint-order',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'place-content',\n  'place-items',\n  'place-self',\n  'pointer-events',\n  'position',\n  'position-anchor',\n  'position-visibility',\n  'print-color-adjust',\n  'quotes',\n  'r',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'rotate',\n  'row-gap',\n  'ruby-align',\n  'ruby-position',\n  'scale',\n  'scroll-behavior',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scroll-timeline',\n  'scroll-timeline-axis',\n  'scroll-timeline-name',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'shape-rendering',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'stop-color',\n  'stop-opacity',\n  'stroke',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-anchor',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-skip',\n  'text-decoration-skip-ink',\n  'text-decoration-style',\n  'text-decoration-thickness',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-size-adjust',\n  'text-transform',\n  'text-underline-offset',\n  'text-underline-position',\n  'text-wrap',\n  'text-wrap-mode',\n  'text-wrap-style',\n  'timeline-scope',\n  'top',\n  'touch-action',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-behavior',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'translate',\n  'unicode-bidi',\n  'user-modify',\n  'user-select',\n  'vector-effect',\n  'vertical-align',\n  'view-timeline',\n  'view-timeline-axis',\n  'view-timeline-inset',\n  'view-timeline-name',\n  'view-transition-name',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'white-space-collapse',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'x',\n  'y',\n  'z-index',\n  'zoom'\n].sort().reverse();\n\n/*\nLanguage: CSS\nCategory: common, css, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  const regex = hljs.regex;\n  const modes = MODES(hljs);\n  const VENDOR_PREFIX = { begin: /-(webkit|moz|ms|o)-(?=[a-z])/ };\n  const AT_MODIFIERS = \"and or not only\";\n  const AT_PROPERTY_RE = /@-?\\w[\\w]*(-\\w+)*/; // @-webkit-keyframes\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  const STRINGS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ];\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=|'\\$]/,\n    keywords: { keyframePosition: \"from to\" },\n    classNameAliases: {\n      // for visual continuity with `tag {}` and because we\n      // don't have a great class for this?\n      keyframePosition: \"selector-tag\" },\n    contains: [\n      modes.BLOCK_COMMENT,\n      VENDOR_PREFIX,\n      // to recognize keyframe 40% etc which are outside the scope of our\n      // attribute value mode\n      modes.CSS_NUMBER_MODE,\n      {\n        className: 'selector-id',\n        begin: /#[A-Za-z0-9_-]+/,\n        relevance: 0\n      },\n      {\n        className: 'selector-class',\n        begin: '\\\\.' + IDENT_RE,\n        relevance: 0\n      },\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-pseudo',\n        variants: [\n          { begin: ':(' + PSEUDO_CLASSES.join('|') + ')' },\n          { begin: ':(:)?(' + PSEUDO_ELEMENTS.join('|') + ')' }\n        ]\n      },\n      // we may actually need this (12/2020)\n      // { // pseudo-selector params\n      //   begin: /\\(/,\n      //   end: /\\)/,\n      //   contains: [ hljs.CSS_NUMBER_MODE ]\n      // },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\n      },\n      // attribute values\n      {\n        begin: /:/,\n        end: /[;}{]/,\n        contains: [\n          modes.BLOCK_COMMENT,\n          modes.HEXCOLOR,\n          modes.IMPORTANT,\n          modes.CSS_NUMBER_MODE,\n          ...STRINGS,\n          // needed to highlight these as strings and to avoid issues with\n          // illegal characters that might be inside urls that would tigger the\n          // languages illegal stack\n          {\n            begin: /(url|data-uri)\\(/,\n            end: /\\)/,\n            relevance: 0, // from keywords\n            keywords: { built_in: \"url data-uri\" },\n            contains: [\n              ...STRINGS,\n              {\n                className: \"string\",\n                // any character other than `)` as in `url()` will be the start\n                // of a string, which ends with `)` (from the parent mode)\n                begin: /[^)]/,\n                endsWithParent: true,\n                excludeEnd: true\n              }\n            ]\n          },\n          modes.FUNCTION_DISPATCH\n        ]\n      },\n      {\n        begin: regex.lookahead(/@/),\n        end: '[{;]',\n        relevance: 0,\n        illegal: /:/, // break on Less variables @var: ...\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/,\n            endsWithParent: true,\n            excludeEnd: true,\n            relevance: 0,\n            keywords: {\n              $pattern: /[a-z-]+/,\n              keyword: AT_MODIFIERS,\n              attribute: MEDIA_FEATURES.join(\" \")\n            },\n            contains: [\n              {\n                begin: /[a-z-]+(?=:)/,\n                className: \"attribute\"\n              },\n              ...STRINGS,\n              modes.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag',\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b'\n      }\n    ]\n  };\n}\n\nexport { css as default };\n","/*\nLanguage: Diff\nDescription: Unified and context diff\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nWebsite: https://www.gnu.org/software/diffutils/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction diff(hljs) {\n  const regex = hljs.regex;\n  return {\n    name: 'Diff',\n    aliases: [ 'patch' ],\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        match: regex.either(\n          /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\n          /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\n          /^--- +\\d+,\\d+ +----$/\n        )\n      },\n      {\n        className: 'comment',\n        variants: [\n          {\n            begin: regex.either(\n              /Index: /,\n              /^index/,\n              /={3,}/,\n              /^-{3}/,\n              /^\\*{3} /,\n              /^\\+{3}/,\n              /^diff --git/\n            ),\n            end: /$/\n          },\n          { match: /^\\*{15}$/ }\n        ]\n      },\n      {\n        className: 'addition',\n        begin: /^\\+/,\n        end: /$/\n      },\n      {\n        className: 'deletion',\n        begin: /^-/,\n        end: /$/\n      },\n      {\n        className: 'addition',\n        begin: /^!/,\n        end: /$/\n      }\n    ]\n  };\n}\n\nexport { diff as default };\n","/*\nLanguage: Go\nAuthor: Stephan Kountso aka StepLg <steplg@gmail.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>\nDescription: Google go language (golang). For info about language\nWebsite: http://golang.org/\nCategory: common, system\n*/\n\nfunction go(hljs) {\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"iota\",\n    \"nil\"\n  ];\n  const BUILT_INS = [\n    \"append\",\n    \"cap\",\n    \"close\",\n    \"complex\",\n    \"copy\",\n    \"imag\",\n    \"len\",\n    \"make\",\n    \"new\",\n    \"panic\",\n    \"print\",\n    \"println\",\n    \"real\",\n    \"recover\",\n    \"delete\"\n  ];\n  const TYPES = [\n    \"bool\",\n    \"byte\",\n    \"complex64\",\n    \"complex128\",\n    \"error\",\n    \"float32\",\n    \"float64\",\n    \"int8\",\n    \"int16\",\n    \"int32\",\n    \"int64\",\n    \"string\",\n    \"uint8\",\n    \"uint16\",\n    \"uint32\",\n    \"uint64\",\n    \"int\",\n    \"uint\",\n    \"uintptr\",\n    \"rune\"\n  ];\n  const KWS = [\n    \"break\",\n    \"case\",\n    \"chan\",\n    \"const\",\n    \"continue\",\n    \"default\",\n    \"defer\",\n    \"else\",\n    \"fallthrough\",\n    \"for\",\n    \"func\",\n    \"go\",\n    \"goto\",\n    \"if\",\n    \"import\",\n    \"interface\",\n    \"map\",\n    \"package\",\n    \"range\",\n    \"return\",\n    \"select\",\n    \"struct\",\n    \"switch\",\n    \"type\",\n    \"var\",\n  ];\n  const KEYWORDS = {\n    keyword: KWS,\n    type: TYPES,\n    literal: LITERALS,\n    built_in: BUILT_INS\n  };\n  return {\n    name: 'Go',\n    aliases: [ 'golang' ],\n    keywords: KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        variants: [\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          {\n            begin: '`',\n            end: '`'\n          }\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            match: /-?\\b0[xX]\\.[a-fA-F0-9](_?[a-fA-F0-9])*[pP][+-]?\\d(_?\\d)*i?/, // hex without a present digit before . (making a digit afterwards required)\n            relevance: 0\n          },\n          {\n            match: /-?\\b0[xX](_?[a-fA-F0-9])+((\\.([a-fA-F0-9](_?[a-fA-F0-9])*)?)?[pP][+-]?\\d(_?\\d)*)?i?/, // hex with a present digit before . (making a digit afterwards optional)\n            relevance: 0\n          },\n          {\n            match: /-?\\b0[oO](_?[0-7])*i?/, // leading 0o octal\n            relevance: 0\n          },\n          {\n            match: /-?\\.\\d(_?\\d)*([eE][+-]?\\d(_?\\d)*)?i?/, // decimal without a present digit before . (making a digit afterwards required)\n            relevance: 0\n          },\n          {\n            match: /-?\\b\\d(_?\\d)*(\\.(\\d(_?\\d)*)?)?([eE][+-]?\\d(_?\\d)*)?i?/, // decimal with a present digit before . (making a digit afterwards optional)\n            relevance: 0\n          }\n        ]\n      },\n      { begin: /:=/ // relevance booster\n      },\n      {\n        className: 'function',\n        beginKeywords: 'func',\n        end: '\\\\s*(\\\\{|$)',\n        excludeEnd: true,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            illegal: /[\"']/\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport { go as default };\n","/*\n Language: GraphQL\n Author: John Foster (GH jf990), and others\n Description: GraphQL is a query language for APIs\n Category: web, common\n*/\n\n/** @type LanguageFn */\nfunction graphql(hljs) {\n  const regex = hljs.regex;\n  const GQL_NAME = /[_A-Za-z][_0-9A-Za-z]*/;\n  return {\n    name: \"GraphQL\",\n    aliases: [ \"gql\" ],\n    case_insensitive: true,\n    disableAutodetect: false,\n    keywords: {\n      keyword: [\n        \"query\",\n        \"mutation\",\n        \"subscription\",\n        \"type\",\n        \"input\",\n        \"schema\",\n        \"directive\",\n        \"interface\",\n        \"union\",\n        \"scalar\",\n        \"fragment\",\n        \"enum\",\n        \"on\"\n      ],\n      literal: [\n        \"true\",\n        \"false\",\n        \"null\"\n      ]\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      {\n        scope: \"punctuation\",\n        match: /[.]{3}/,\n        relevance: 0\n      },\n      {\n        scope: \"punctuation\",\n        begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\n        relevance: 0\n      },\n      {\n        scope: \"variable\",\n        begin: /\\$/,\n        end: /\\W/,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        scope: \"meta\",\n        match: /@\\w+/,\n        excludeEnd: true\n      },\n      {\n        scope: \"symbol\",\n        begin: regex.concat(GQL_NAME, regex.lookahead(/\\s*:/)),\n        relevance: 0\n      }\n    ],\n    illegal: [\n      /[;<']/,\n      /BEGIN/\n    ]\n  };\n}\n\nexport { graphql as default };\n","/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      { begin: /([+-]+)?[\\d]+_[\\d_]+/ },\n      { begin: hljs.NUMBER_RE }\n    ]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {\n      begin: /;/,\n      end: /$/\n    },\n    {\n      begin: /#/,\n      end: /$/\n    }\n  ];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\n      { begin: /\\$\\{(.*?)\\}/ }\n    ]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: \"'''\",\n        end: \"'''\",\n        relevance: 10\n      },\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      },\n      {\n        begin: \"'\",\n        end: \"'\"\n      }\n    ]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance: 0\n  };\n\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  const DOTTED_KEY = regex.concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    regex.lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: [ 'toml' ],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/,\n        end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nexport { ini as default };\n","// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n\n/** @type LanguageFn */\nfunction java(hljs) {\n  const regex = hljs.regex;\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE\n    + recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = [\n    'synchronized',\n    'abstract',\n    'private',\n    'var',\n    'static',\n    'if',\n    'const ',\n    'for',\n    'while',\n    'strictfp',\n    'finally',\n    'protected',\n    'import',\n    'native',\n    'final',\n    'void',\n    'enum',\n    'else',\n    'break',\n    'transient',\n    'catch',\n    'instanceof',\n    'volatile',\n    'case',\n    'assert',\n    'package',\n    'default',\n    'public',\n    'try',\n    'switch',\n    'continue',\n    'throws',\n    'protected',\n    'public',\n    'private',\n    'module',\n    'requires',\n    'exports',\n    'do',\n    'sealed',\n    'yield',\n    'permits',\n    'goto',\n    'when'\n  ];\n\n  const BUILT_INS = [\n    'super',\n    'this'\n  ];\n\n  const LITERALS = [\n    'false',\n    'true',\n    'null'\n  ];\n\n  const TYPES = [\n    'char',\n    'boolean',\n    'long',\n    'float',\n    'int',\n    'byte',\n    'short',\n    'double'\n  ];\n\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ \"self\" ] // allow nested () inside our annotation\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [ hljs.C_BLOCK_COMMENT_MODE ],\n    endsParent: true\n  };\n\n  return {\n    name: 'Java',\n    aliases: [ 'jsp' ],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/,\n              relevance: 0\n            },\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      // relevance boost\n      {\n        begin: /import java\\.[a-z]+\\./,\n        keywords: \"import\",\n        relevance: 2\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        begin: /\"\"\"/,\n        end: /\"\"\"/,\n        className: \"string\",\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        match: [\n          /\\b(?:class|interface|enum|extends|implements|new)/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        // Exceptions for hyphenated keywords\n        match: /non-sealed/,\n        scope: \"keyword\"\n      },\n      {\n        begin: [\n          regex.concat(/(?!else)/, JAVA_IDENT_RE),\n          /\\s+/,\n          JAVA_IDENT_RE,\n          /\\s+/,\n          /=(?!=)/\n        ],\n        className: {\n          1: \"type\",\n          3: \"variable\",\n          5: \"operator\"\n        }\n      },\n      {\n        begin: [\n          /record/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        },\n        contains: [\n          PARAMS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        begin: [\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s*(?=\\()/\n        ],\n        className: { 2: \"title.function\" },\n        keywords: KEYWORDS,\n        contains: [\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              ANNOTATION,\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              NUMERIC,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      NUMERIC,\n      ANNOTATION\n    ]\n  };\n}\n\nexport { java as default };\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\",\n  // It's reached stage 3, which is \"recommended for implementation\":\n  \"using\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n  // Fundamental objects\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Symbol\",\n  // numbers and dates\n  \"Math\",\n  \"Date\",\n  \"Number\",\n  \"BigInt\",\n  // text\n  \"String\",\n  \"RegExp\",\n  // Indexed collections\n  \"Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int8Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  // Keyed collections\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  // Structured data\n  \"ArrayBuffer\",\n  \"SharedArrayBuffer\",\n  \"Atomics\",\n  \"DataView\",\n  \"JSON\",\n  // Control abstraction objects\n  \"Promise\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"AsyncFunction\",\n  // Reflection\n  \"Reflect\",\n  \"Proxy\",\n  // Internationalization\n  \"Intl\",\n  // WebAssembly\n  \"WebAssembly\"\n];\n\nconst ERROR_TYPES = [\n  \"Error\",\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"sessionStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n        // HTML should not include another raw `<` inside a tag\n        // nested type?\n        // `<Array<Array<number>>`, etc.\n        nextChar === \"<\" ||\n        // the , gives away that this is not HTML\n        // `<T, A extends keyof T, V>`\n        nextChar === \",\"\n        ) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if ((m = afterMatch.match(/^\\s*=/))) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: '\\.?html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: '\\.?css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const GRAPHQL_TEMPLATE = {\n    begin: '\\.?gql`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'graphql'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    GRAPHQL_TEMPLATE,\n    TEMPLATE_STRING,\n    // Skip numbers when they are part of a variable name\n    { match: /\\$\\d+/ },\n    NUMBER,\n    // This is intentional:\n    // See https://github.com/highlightjs/highlight.js/issues/3288\n    // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /(\\s*)\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    // convert this to negative lookbehind in v12\n    begin: /(\\s*)\\(/, // to match the parms with\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      // class Car extends vehicle\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          5: \"keyword\",\n          7: \"title.class.inherited\"\n        }\n      },\n      // class Car\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match:\n    regex.either(\n      // Hard coded exceptions\n      /\\bJSON/,\n      // Float32Array, OutT\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n      // CSSFactory, CSSFactoryT\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n      // FPs, FPsT\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n      // P\n      // single letters are not highlighted\n      // BLAH\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\",\n        \"import\"\n      ].map(x => `${x}\\\\s*\\\\(`)),\n      IDENT_RE$1, regex.lookahead(/\\s*\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      /(async\\s*)?/, // async is optional\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      GRAPHQL_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        scope: 'attr',\n        match: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /(\\s*)\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\nexport { javascript as default };\n","/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  // NOTE: normally we would rely on `keywords` for this but using a mode here allows us\n  // - to use the very tight `illegal: \\S` rule later to flag any other character\n  // - as illegal indicating that despite looking like JSON we do not truly have\n  // - JSON and thus improve false-positively greatly since JSON will try and claim\n  // - all sorts of JSON looking stuff\n  const LITERALS_MODE = {\n    scope: \"literal\",\n    beginKeywords: LITERALS.join(\" \"),\n  };\n\n  return {\n    name: 'JSON',\n    aliases: ['jsonc'],\n    keywords:{\n      literal: LITERALS,\n    },\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nexport { json as default };\n","// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\n\n\nfunction kotlin(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline '\n      + 'crossinline dynamic final enum if else do while for when throw try catch finally '\n      + 'import package is in fun override companion reified inline lateinit init '\n      + 'interface annotation data sealed internal infix operator out by constructor super '\n      + 'tailrec where const inner suspend typealias external expect actual',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  const KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: { contains: [\n      {\n        className: 'symbol',\n        begin: /@\\w+/\n      }\n    ] }\n  };\n  const LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [ hljs.C_NUMBER_MODE ]\n  };\n  const VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"(?=[^\"])',\n        contains: [\n          VARIABLE,\n          SUBST\n        ]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'',\n        end: '\\'',\n        illegal: /\\n/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: /\\n/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VARIABLE,\n          SUBST\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, { className: 'string' }),\n          \"self\"\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  const KOTLIN_NUMBER_MODE = NUMERIC;\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n    '/\\\\*', '\\\\*/',\n    { contains: [ hljs.C_BLOCK_COMMENT_MODE ] }\n  );\n  const KOTLIN_PAREN_TYPE = { variants: [\n    {\n      className: 'type',\n      begin: hljs.UNDERSCORE_IDENT_RE\n    },\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [] // defined later\n    }\n  ] };\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\n\n  return {\n    name: 'Kotlin',\n    aliases: [\n      'kt',\n      'kts'\n    ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      KOTLIN_NESTED_COMMENT,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun',\n        end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin: true,\n            relevance: 0,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          },\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/,\n                end: /[=,\\/]/,\n                endsWithParent: true,\n                contains: [\n                  KOTLIN_PAREN_TYPE,\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              KOTLIN_NESTED_COMMENT,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          KOTLIN_NESTED_COMMENT\n        ]\n      },\n      {\n        begin: [\n          /class|interface|trait/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        beginScope: {\n          3: \"title.class\"\n        },\n        keywords: 'class interface trait',\n        end: /[:\\{(]|$/,\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          { beginKeywords: 'public protected internal private constructor' },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/,\n            end: /[<\\(,){\\s]|$/,\n            excludeBegin: true,\n            returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\",\n        end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n}\n\nexport { kotlin as default };\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z_][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst HTML_TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'picture',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'select',\n  'source',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst SVG_TAGS = [\n  'defs',\n  'g',\n  'marker',\n  'mask',\n  'pattern',\n  'svg',\n  'switch',\n  'symbol',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feFlood',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMorphology',\n  'feOffset',\n  'feSpecularLighting',\n  'feTile',\n  'feTurbulence',\n  'linearGradient',\n  'radialGradient',\n  'stop',\n  'circle',\n  'ellipse',\n  'image',\n  'line',\n  'path',\n  'polygon',\n  'polyline',\n  'rect',\n  'text',\n  'use',\n  'textPath',\n  'tspan',\n  'foreignObject',\n  'clipPath'\n];\n\nconst TAGS = [\n  ...HTML_TAGS,\n  ...SVG_TAGS,\n];\n\n// Sorting, then reversing makes sure longer attributes/elements like\n// `font-weight` are matched fully instead of getting false positives on say `font`\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n].sort().reverse();\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n].sort().reverse();\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n].sort().reverse();\n\nconst ATTRIBUTES = [\n  'accent-color',\n  'align-content',\n  'align-items',\n  'align-self',\n  'alignment-baseline',\n  'all',\n  'anchor-name',\n  'animation',\n  'animation-composition',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-range',\n  'animation-range-end',\n  'animation-range-start',\n  'animation-timeline',\n  'animation-timing-function',\n  'appearance',\n  'aspect-ratio',\n  'backdrop-filter',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-position-x',\n  'background-position-y',\n  'background-repeat',\n  'background-size',\n  'baseline-shift',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-end-end-radius',\n  'border-end-start-radius',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-start-end-radius',\n  'border-start-start-radius',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-align',\n  'box-decoration-break',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'color-scheme',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'contain-intrinsic-block-size',\n  'contain-intrinsic-height',\n  'contain-intrinsic-inline-size',\n  'contain-intrinsic-size',\n  'contain-intrinsic-width',\n  'container',\n  'container-name',\n  'container-type',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'counter-set',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'cx',\n  'cy',\n  'direction',\n  'display',\n  'dominant-baseline',\n  'empty-cells',\n  'enable-background',\n  'field-sizing',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flood-color',\n  'flood-opacity',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-optical-sizing',\n  'font-palette',\n  'font-size',\n  'font-size-adjust',\n  'font-smooth',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-synthesis-position',\n  'font-synthesis-small-caps',\n  'font-synthesis-style',\n  'font-synthesis-weight',\n  'font-variant',\n  'font-variant-alternates',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-emoji',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'forced-color-adjust',\n  'gap',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphenate-character',\n  'hyphenate-limit-chars',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'initial-letter',\n  'initial-letter-align',\n  'inline-size',\n  'inset',\n  'inset-area',\n  'inset-block',\n  'inset-block-end',\n  'inset-block-start',\n  'inset-inline',\n  'inset-inline-end',\n  'inset-inline-start',\n  'isolation',\n  'justify-content',\n  'justify-items',\n  'justify-self',\n  'kerning',\n  'left',\n  'letter-spacing',\n  'lighting-color',\n  'line-break',\n  'line-height',\n  'line-height-step',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'margin-trim',\n  'marker',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'masonry-auto-flow',\n  'math-depth',\n  'math-shift',\n  'math-style',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'offset',\n  'offset-anchor',\n  'offset-distance',\n  'offset-path',\n  'offset-position',\n  'offset-rotate',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-anchor',\n  'overflow-block',\n  'overflow-clip-margin',\n  'overflow-inline',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'overlay',\n  'overscroll-behavior',\n  'overscroll-behavior-block',\n  'overscroll-behavior-inline',\n  'overscroll-behavior-x',\n  'overscroll-behavior-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'paint-order',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'place-content',\n  'place-items',\n  'place-self',\n  'pointer-events',\n  'position',\n  'position-anchor',\n  'position-visibility',\n  'print-color-adjust',\n  'quotes',\n  'r',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'rotate',\n  'row-gap',\n  'ruby-align',\n  'ruby-position',\n  'scale',\n  'scroll-behavior',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scroll-timeline',\n  'scroll-timeline-axis',\n  'scroll-timeline-name',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'shape-rendering',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'stop-color',\n  'stop-opacity',\n  'stroke',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-anchor',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-skip',\n  'text-decoration-skip-ink',\n  'text-decoration-style',\n  'text-decoration-thickness',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-size-adjust',\n  'text-transform',\n  'text-underline-offset',\n  'text-underline-position',\n  'text-wrap',\n  'text-wrap-mode',\n  'text-wrap-style',\n  'timeline-scope',\n  'top',\n  'touch-action',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-behavior',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'translate',\n  'unicode-bidi',\n  'user-modify',\n  'user-select',\n  'vector-effect',\n  'vertical-align',\n  'view-timeline',\n  'view-timeline-axis',\n  'view-timeline-inset',\n  'view-timeline-name',\n  'view-transition-name',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'white-space-collapse',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'x',\n  'y',\n  'z-index',\n  'zoom'\n].sort().reverse();\n\n// some grammars use them all as a single group\nconst PSEUDO_SELECTORS = PSEUDO_CLASSES.concat(PSEUDO_ELEMENTS).sort().reverse();\n\n/*\nLanguage: Less\nDescription: It's CSS, with just a little more.\nAuthor:   Max Mikhailov <seven.phases.max@gmail.com>\nWebsite: http://lesscss.org\nCategory: common, css, web\n*/\n\n\n/** @type LanguageFn */\nfunction less(hljs) {\n  const modes = MODES(hljs);\n  const PSEUDO_SELECTORS$1 = PSEUDO_SELECTORS;\n\n  const AT_MODIFIERS = \"and or not only\";\n  const IDENT_RE = '[\\\\w-]+'; // yes, Less identifiers may begin with a digit\n  const INTERP_IDENT_RE = '(' + IDENT_RE + '|@\\\\{' + IDENT_RE + '\\\\})';\n\n  /* Generic Modes */\n\n  const RULES = []; const VALUE_MODES = []; // forward def. for recursive modes\n\n  const STRING_MODE = function(c) {\n    return {\n    // Less strings are not multiline (also include '~' for more consistent coloring of \"escaped\" strings)\n      className: 'string',\n      begin: '~?' + c + '.*?' + c\n    };\n  };\n\n  const IDENT_MODE = function(name, begin, relevance) {\n    return {\n      className: name,\n      begin: begin,\n      relevance: relevance\n    };\n  };\n\n  const AT_KEYWORDS = {\n    $pattern: /[a-z-]+/,\n    keyword: AT_MODIFIERS,\n    attribute: MEDIA_FEATURES.join(\" \")\n  };\n\n  const PARENS_MODE = {\n    // used only to properly balance nested parens inside mixin call, def. arg list\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: VALUE_MODES,\n    keywords: AT_KEYWORDS,\n    relevance: 0\n  };\n\n  // generic Less highlighter (used almost everywhere except selectors):\n  VALUE_MODES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING_MODE(\"'\"),\n    STRING_MODE('\"'),\n    modes.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(\n    {\n      begin: '(url|data-uri)\\\\(',\n      starts: {\n        className: 'string',\n        end: '[\\\\)\\\\n]',\n        excludeEnd: true\n      }\n    },\n    modes.HEXCOLOR,\n    PARENS_MODE,\n    IDENT_MODE('variable', '@@?' + IDENT_RE, 10),\n    IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'),\n    IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string\n    { // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):\n      className: 'attribute',\n      begin: IDENT_RE + '\\\\s*:',\n      end: ':',\n      returnBegin: true,\n      excludeEnd: true\n    },\n    modes.IMPORTANT,\n    { beginKeywords: 'and not' },\n    modes.FUNCTION_DISPATCH\n  );\n\n  const VALUE_WITH_RULESETS = VALUE_MODES.concat({\n    begin: /\\{/,\n    end: /\\}/,\n    contains: RULES\n  });\n\n  const MIXIN_GUARD_MODE = {\n    beginKeywords: 'when',\n    endsWithParent: true,\n    contains: [ { beginKeywords: 'and not' } ].concat(VALUE_MODES) // using this form to override VALUE’s 'function' match\n  };\n\n  /* Rule-Level Modes */\n\n  const RULE_MODE = {\n    begin: INTERP_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    end: /[;}]/,\n    relevance: 0,\n    contains: [\n      { begin: /-(webkit|moz|ms|o)-/ },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b',\n        end: /(?=:)/,\n        starts: {\n          endsWithParent: true,\n          illegal: '[<=$]',\n          relevance: 0,\n          contains: VALUE_MODES\n        }\n      }\n    ]\n  };\n\n  const AT_RULE_MODE = {\n    className: 'keyword',\n    begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b',\n    starts: {\n      end: '[;{}]',\n      keywords: AT_KEYWORDS,\n      returnEnd: true,\n      contains: VALUE_MODES,\n      relevance: 0\n    }\n  };\n\n  // variable definitions and calls\n  const VAR_RULE_MODE = {\n    className: 'variable',\n    variants: [\n      // using more strict pattern for higher relevance to increase chances of Less detection.\n      // this is *the only* Less specific statement used in most of the sources, so...\n      // (we’ll still often loose to the css-parser unless there's '//' comment,\n      // simply because 1 variable just can't beat 99 properties :)\n      {\n        begin: '@' + IDENT_RE + '\\\\s*:',\n        relevance: 15\n      },\n      { begin: '@' + IDENT_RE }\n    ],\n    starts: {\n      end: '[;}]',\n      returnEnd: true,\n      contains: VALUE_WITH_RULESETS\n    }\n  };\n\n  const SELECTOR_MODE = {\n    // first parse unambiguous selectors (i.e. those not starting with tag)\n    // then fall into the scary lookahead-discriminator variant.\n    // this mode also handles mixin definitions and calls\n    variants: [\n      {\n        begin: '[\\\\.#:&\\\\[>]',\n        end: '[;{}]' // mixin calls end with ';'\n      },\n      {\n        begin: INTERP_IDENT_RE,\n        end: /\\{/\n      }\n    ],\n    returnBegin: true,\n    returnEnd: true,\n    illegal: '[<=\\'$\"]',\n    relevance: 0,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      MIXIN_GUARD_MODE,\n      IDENT_MODE('keyword', 'all\\\\b'),\n      IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'), // otherwise it’s identified as tag\n      \n      {\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\n        className: 'selector-tag'\n      },\n      modes.CSS_NUMBER_MODE,\n      IDENT_MODE('selector-tag', INTERP_IDENT_RE, 0),\n      IDENT_MODE('selector-id', '#' + INTERP_IDENT_RE),\n      IDENT_MODE('selector-class', '\\\\.' + INTERP_IDENT_RE, 0),\n      IDENT_MODE('selector-tag', '&', 0),\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-pseudo',\n        begin: ':(' + PSEUDO_CLASSES.join('|') + ')'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(:)?(' + PSEUDO_ELEMENTS.join('|') + ')'\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        relevance: 0,\n        contains: VALUE_WITH_RULESETS\n      }, // argument list of parametric mixins\n      { begin: '!important' }, // eat !important after mixin call or it will be colored as tag\n      modes.FUNCTION_DISPATCH\n    ]\n  };\n\n  const PSEUDO_SELECTOR_MODE = {\n    begin: IDENT_RE + ':(:)?' + `(${PSEUDO_SELECTORS$1.join('|')})`,\n    returnBegin: true,\n    contains: [ SELECTOR_MODE ]\n  };\n\n  RULES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    AT_RULE_MODE,\n    VAR_RULE_MODE,\n    PSEUDO_SELECTOR_MODE,\n    RULE_MODE,\n    SELECTOR_MODE,\n    MIXIN_GUARD_MODE,\n    modes.FUNCTION_DISPATCH\n  );\n\n  return {\n    name: 'Less',\n    case_insensitive: true,\n    illegal: '[=>\\'/<($\"]',\n    contains: RULES\n  };\n}\n\nexport { less as default };\n","/*\nLanguage: Lua\nDescription: Lua is a powerful, efficient, lightweight, embeddable scripting language.\nAuthor: Andrew Fedorov <dmmdrs@mail.ru>\nCategory: common, gaming, scripting\nWebsite: https://www.lua.org\n*/\n\nfunction lua(hljs) {\n  const OPENING_LONG_BRACKET = '\\\\[=*\\\\[';\n  const CLOSING_LONG_BRACKET = '\\\\]=*\\\\]';\n  const LONG_BRACKETS = {\n    begin: OPENING_LONG_BRACKET,\n    end: CLOSING_LONG_BRACKET,\n    contains: [ 'self' ]\n  };\n  const COMMENTS = [\n    hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),\n    hljs.COMMENT(\n      '--' + OPENING_LONG_BRACKET,\n      CLOSING_LONG_BRACKET,\n      {\n        contains: [ LONG_BRACKETS ],\n        relevance: 10\n      }\n    )\n  ];\n  return {\n    name: 'Lua',\n    aliases: ['pluto'],\n    keywords: {\n      $pattern: hljs.UNDERSCORE_IDENT_RE,\n      literal: \"true false nil\",\n      keyword: \"and break do else elseif end for goto if in local not or repeat return then until while\",\n      built_in:\n        // Metatags and globals:\n        '_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len '\n        + '__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert '\n        // Standard methods and properties:\n        + 'collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring '\n        + 'module next pairs pcall print rawequal rawget rawset require select setfenv '\n        + 'setmetatable tonumber tostring type unpack xpcall arg self '\n        // Library methods and properties (one line per library):\n        + 'coroutine resume yield status wrap create running debug getupvalue '\n        + 'debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv '\n        + 'io lines write close flush open output type read stderr stdin input stdout popen tmpfile '\n        + 'math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan '\n        + 'os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall '\n        + 'string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower '\n        + 'table setn insert getn foreachi maxn foreach concat sort remove'\n    },\n    contains: COMMENTS.concat([\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: '\\\\)',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, { begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*' }),\n          {\n            className: 'params',\n            begin: '\\\\(',\n            endsWithParent: true,\n            contains: COMMENTS\n          }\n        ].concat(COMMENTS)\n      },\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: OPENING_LONG_BRACKET,\n        end: CLOSING_LONG_BRACKET,\n        contains: [ LONG_BRACKETS ],\n        relevance: 5\n      }\n    ])\n  };\n}\n\nexport { lua as default };\n","/*\nLanguage: Makefile\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nContributors: Joël Porquet <joel@porquet.org>\nWebsite: https://www.gnu.org/software/make/manual/html_node/Introduction.html\nCategory: common, build-system\n*/\n\nfunction makefile(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  const VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      { begin: /\\$[@%<?\\^\\+\\*]/ }\n    ]\n  };\n  /* Quoted string with variables inside */\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VARIABLE\n    ]\n  };\n  /* Function: $(func arg,...) */\n  const FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/,\n    end: /\\)/,\n    keywords: { built_in:\n        'subst patsubst strip findstring filter filter-out sort '\n        + 'word wordlist firstword lastword dir notdir suffix basename '\n        + 'addsuffix addprefix join wildcard realpath abspath error warning '\n        + 'shell origin flavor foreach if or and call eval file value' },\n    contains: [ \n      VARIABLE,\n      QUOTE_STRING // Added QUOTE_STRING as they can be a part of functions\n    ]\n  };\n  /* Variable assignment */\n  const ASSIGNMENT = { begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*(?=[:+?]?=)' };\n  /* Meta targets (.PHONY) */\n  const META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/,\n    end: /$/,\n    keywords: {\n      $pattern: /[\\.\\w]+/,\n      keyword: '.PHONY'\n    }\n  };\n  /* Targets */\n  const TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/,\n    end: /$/,\n    contains: [ VARIABLE ]\n  };\n  return {\n    name: 'Makefile',\n    aliases: [\n      'mk',\n      'mak',\n      'make',\n    ],\n    keywords: {\n      $pattern: /[\\w-]+/,\n      keyword: 'define endef undefine ifdef ifndef ifeq ifneq else endif '\n      + 'include -include sinclude override export unexport private vpath'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      VARIABLE,\n      QUOTE_STRING,\n      FUNC,\n      ASSIGNMENT,\n      META,\n      TARGET\n    ]\n  };\n}\n\nexport { makefile as default };\n","/*\nLanguage: Markdown\nRequires: xml.js\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\nWebsite: https://daringfireball.net/projects/markdown/\nCategory: common, markup\n*/\n\nfunction markdown(hljs) {\n  const regex = hljs.regex;\n  const INLINE_HTML = {\n    begin: /<\\/?[A-Za-z_]/,\n    end: '>',\n    subLanguage: 'xml',\n    relevance: 0\n  };\n  const HORIZONTAL_RULE = {\n    begin: '^[-\\\\*]{3,}',\n    end: '$'\n  };\n  const CODE = {\n    className: 'code',\n    variants: [\n      // TODO: fix to allow these to work with sublanguage also\n      { begin: '(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*' },\n      { begin: '(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*' },\n      // needed to allow markdown as a sublanguage to work\n      {\n        begin: '```',\n        end: '```+[ ]*$'\n      },\n      {\n        begin: '~~~',\n        end: '~~~+[ ]*$'\n      },\n      { begin: '`.+?`' },\n      {\n        begin: '(?=^( {4}|\\\\t))',\n        // use contains to gobble up multiple lines to allow the block to be whatever size\n        // but only have a single open/close tag vs one per line\n        contains: [\n          {\n            begin: '^( {4}|\\\\t)',\n            end: '(\\\\n)$'\n          }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n  const LIST = {\n    className: 'bullet',\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n    end: '\\\\s+',\n    excludeEnd: true\n  };\n  const LINK_REFERENCE = {\n    begin: /^\\[[^\\n]+\\]:/,\n    returnBegin: true,\n    contains: [\n      {\n        className: 'symbol',\n        begin: /\\[/,\n        end: /\\]/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'link',\n        begin: /:\\s*/,\n        end: /$/,\n        excludeBegin: true\n      }\n    ]\n  };\n  const URL_SCHEME = /[A-Za-z][A-Za-z0-9+.-]*/;\n  const LINK = {\n    variants: [\n      // too much like nested array access in so many languages\n      // to have any real relevance\n      {\n        begin: /\\[.+?\\]\\[.*?\\]/,\n        relevance: 0\n      },\n      // popular internet URLs\n      {\n        begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n        relevance: 2\n      },\n      {\n        begin: regex.concat(/\\[.+?\\]\\(/, URL_SCHEME, /:\\/\\/.*?\\)/),\n        relevance: 2\n      },\n      // relative urls\n      {\n        begin: /\\[.+?\\]\\([./?&#].*?\\)/,\n        relevance: 1\n      },\n      // whatever else, lower relevance (might not be a link at all)\n      {\n        begin: /\\[.*?\\]\\(.*?\\)/,\n        relevance: 0\n      }\n    ],\n    returnBegin: true,\n    contains: [\n      {\n        // empty strings for alt or link text\n        match: /\\[(?=\\])/ },\n      {\n        className: 'string',\n        relevance: 0,\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        returnEnd: true\n      },\n      {\n        className: 'link',\n        relevance: 0,\n        begin: '\\\\]\\\\(',\n        end: '\\\\)',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'symbol',\n        relevance: 0,\n        begin: '\\\\]\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n  const BOLD = {\n    className: 'strong',\n    contains: [], // defined later\n    variants: [\n      {\n        begin: /_{2}(?!\\s)/,\n        end: /_{2}/\n      },\n      {\n        begin: /\\*{2}(?!\\s)/,\n        end: /\\*{2}/\n      }\n    ]\n  };\n  const ITALIC = {\n    className: 'emphasis',\n    contains: [], // defined later\n    variants: [\n      {\n        begin: /\\*(?![*\\s])/,\n        end: /\\*/\n      },\n      {\n        begin: /_(?![_\\s])/,\n        end: /_/,\n        relevance: 0\n      }\n    ]\n  };\n\n  // 3 level deep nesting is not allowed because it would create confusion\n  // in cases like `***testing***` because where we don't know if the last\n  // `***` is starting a new bold/italic or finishing the last one\n  const BOLD_WITHOUT_ITALIC = hljs.inherit(BOLD, { contains: [] });\n  const ITALIC_WITHOUT_BOLD = hljs.inherit(ITALIC, { contains: [] });\n  BOLD.contains.push(ITALIC_WITHOUT_BOLD);\n  ITALIC.contains.push(BOLD_WITHOUT_ITALIC);\n\n  let CONTAINABLE = [\n    INLINE_HTML,\n    LINK\n  ];\n\n  [\n    BOLD,\n    ITALIC,\n    BOLD_WITHOUT_ITALIC,\n    ITALIC_WITHOUT_BOLD\n  ].forEach(m => {\n    m.contains = m.contains.concat(CONTAINABLE);\n  });\n\n  CONTAINABLE = CONTAINABLE.concat(BOLD, ITALIC);\n\n  const HEADER = {\n    className: 'section',\n    variants: [\n      {\n        begin: '^#{1,6}',\n        end: '$',\n        contains: CONTAINABLE\n      },\n      {\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\n        contains: [\n          { begin: '^[=-]*$' },\n          {\n            begin: '^',\n            end: \"\\\\n\",\n            contains: CONTAINABLE\n          }\n        ]\n      }\n    ]\n  };\n\n  const BLOCKQUOTE = {\n    className: 'quote',\n    begin: '^>\\\\s+',\n    contains: CONTAINABLE,\n    end: '$'\n  };\n\n  const ENTITY = {\n    //https://spec.commonmark.org/0.31.2/#entity-references\n    scope: 'literal',\n    match: /&([a-zA-Z0-9]+|#[0-9]{1,7}|#[Xx][0-9a-fA-F]{1,6});/\n  };\n\n  return {\n    name: 'Markdown',\n    aliases: [\n      'md',\n      'mkdown',\n      'mkd'\n    ],\n    contains: [\n      HEADER,\n      INLINE_HTML,\n      LIST,\n      BOLD,\n      ITALIC,\n      BLOCKQUOTE,\n      CODE,\n      HORIZONTAL_RULE,\n      LINK,\n      LINK_REFERENCE,\n      ENTITY\n    ]\n  };\n}\n\nexport { markdown as default };\n","/*\nLanguage: Objective-C\nAuthor: Valerii Hiora <valerii.hiora@gmail.com>\nContributors: Angel G. Olloqui <angelgarcia.mail@gmail.com>, Matt Diephouse <matt@diephouse.com>, Andrew Farmer <ahfarmer@gmail.com>, Minh Nguyễn <mxn@1ec5.org>\nWebsite: https://developer.apple.com/documentation/objectivec\nCategory: common\n*/\n\nfunction objectivec(hljs) {\n  const API_CLASS = {\n    className: 'built_in',\n    begin: '\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+'\n  };\n  const IDENTIFIER_RE = /[a-zA-Z@][a-zA-Z0-9_]*/;\n  const TYPES = [\n    \"int\",\n    \"float\",\n    \"char\",\n    \"unsigned\",\n    \"signed\",\n    \"short\",\n    \"long\",\n    \"double\",\n    \"wchar_t\",\n    \"unichar\",\n    \"void\",\n    \"bool\",\n    \"BOOL\",\n    \"id|0\",\n    \"_Bool\"\n  ];\n  const KWS = [\n    \"while\",\n    \"export\",\n    \"sizeof\",\n    \"typedef\",\n    \"const\",\n    \"struct\",\n    \"for\",\n    \"union\",\n    \"volatile\",\n    \"static\",\n    \"mutable\",\n    \"if\",\n    \"do\",\n    \"return\",\n    \"goto\",\n    \"enum\",\n    \"else\",\n    \"break\",\n    \"extern\",\n    \"asm\",\n    \"case\",\n    \"default\",\n    \"register\",\n    \"explicit\",\n    \"typename\",\n    \"switch\",\n    \"continue\",\n    \"inline\",\n    \"readonly\",\n    \"assign\",\n    \"readwrite\",\n    \"self\",\n    \"@synchronized\",\n    \"id\",\n    \"typeof\",\n    \"nonatomic\",\n    \"IBOutlet\",\n    \"IBAction\",\n    \"strong\",\n    \"weak\",\n    \"copy\",\n    \"in\",\n    \"out\",\n    \"inout\",\n    \"bycopy\",\n    \"byref\",\n    \"oneway\",\n    \"__strong\",\n    \"__weak\",\n    \"__block\",\n    \"__autoreleasing\",\n    \"@private\",\n    \"@protected\",\n    \"@public\",\n    \"@try\",\n    \"@property\",\n    \"@end\",\n    \"@throw\",\n    \"@catch\",\n    \"@finally\",\n    \"@autoreleasepool\",\n    \"@synthesize\",\n    \"@dynamic\",\n    \"@selector\",\n    \"@optional\",\n    \"@required\",\n    \"@encode\",\n    \"@package\",\n    \"@import\",\n    \"@defs\",\n    \"@compatibility_alias\",\n    \"__bridge\",\n    \"__bridge_transfer\",\n    \"__bridge_retained\",\n    \"__bridge_retain\",\n    \"__covariant\",\n    \"__contravariant\",\n    \"__kindof\",\n    \"_Nonnull\",\n    \"_Nullable\",\n    \"_Null_unspecified\",\n    \"__FUNCTION__\",\n    \"__PRETTY_FUNCTION__\",\n    \"__attribute__\",\n    \"getter\",\n    \"setter\",\n    \"retain\",\n    \"unsafe_unretained\",\n    \"nonnull\",\n    \"nullable\",\n    \"null_unspecified\",\n    \"null_resettable\",\n    \"class\",\n    \"instancetype\",\n    \"NS_DESIGNATED_INITIALIZER\",\n    \"NS_UNAVAILABLE\",\n    \"NS_REQUIRES_SUPER\",\n    \"NS_RETURNS_INNER_POINTER\",\n    \"NS_INLINE\",\n    \"NS_AVAILABLE\",\n    \"NS_DEPRECATED\",\n    \"NS_ENUM\",\n    \"NS_OPTIONS\",\n    \"NS_SWIFT_UNAVAILABLE\",\n    \"NS_ASSUME_NONNULL_BEGIN\",\n    \"NS_ASSUME_NONNULL_END\",\n    \"NS_REFINED_FOR_SWIFT\",\n    \"NS_SWIFT_NAME\",\n    \"NS_SWIFT_NOTHROW\",\n    \"NS_DURING\",\n    \"NS_HANDLER\",\n    \"NS_ENDHANDLER\",\n    \"NS_VALUERETURN\",\n    \"NS_VOIDRETURN\"\n  ];\n  const LITERALS = [\n    \"false\",\n    \"true\",\n    \"FALSE\",\n    \"TRUE\",\n    \"nil\",\n    \"YES\",\n    \"NO\",\n    \"NULL\"\n  ];\n  const BUILT_INS = [\n    \"dispatch_once_t\",\n    \"dispatch_queue_t\",\n    \"dispatch_sync\",\n    \"dispatch_async\",\n    \"dispatch_once\"\n  ];\n  const KEYWORDS = {\n    \"variable.language\": [\n      \"this\",\n      \"super\"\n    ],\n    $pattern: IDENTIFIER_RE,\n    keyword: KWS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    type: TYPES\n  };\n  const CLASS_KEYWORDS = {\n    $pattern: IDENTIFIER_RE,\n    keyword: [\n      \"@interface\",\n      \"@class\",\n      \"@protocol\",\n      \"@implementation\"\n    ]\n  };\n  return {\n    name: 'Objective-C',\n    aliases: [\n      'mm',\n      'objc',\n      'obj-c',\n      'obj-c++',\n      'objective-c++'\n    ],\n    keywords: KEYWORDS,\n    illegal: '</',\n    contains: [\n      API_CLASS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: '@\"',\n            end: '\"',\n            illegal: '\\\\n',\n            contains: [ hljs.BACKSLASH_ESCAPE ]\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /#\\s*[a-z]+\\b/,\n        end: /$/,\n        keywords: { keyword:\n            'if else elif endif define undef warning error line '\n            + 'pragma ifdef ifndef include' },\n        contains: [\n          {\n            begin: /\\\\\\n/,\n            relevance: 0\n          },\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' }),\n          {\n            className: 'string',\n            begin: /<.*?>/,\n            end: /$/,\n            illegal: '\\\\n'\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        className: 'class',\n        begin: '(' + CLASS_KEYWORDS.keyword.join('|') + ')\\\\b',\n        end: /(\\{|$)/,\n        excludeEnd: true,\n        keywords: CLASS_KEYWORDS,\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n      },\n      {\n        begin: '\\\\.' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nexport { objectivec as default };\n","/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = [\n    'abs',\n    'accept',\n    'alarm',\n    'and',\n    'atan2',\n    'bind',\n    'binmode',\n    'bless',\n    'break',\n    'caller',\n    'chdir',\n    'chmod',\n    'chomp',\n    'chop',\n    'chown',\n    'chr',\n    'chroot',\n    'class',\n    'close',\n    'closedir',\n    'connect',\n    'continue',\n    'cos',\n    'crypt',\n    'dbmclose',\n    'dbmopen',\n    'defined',\n    'delete',\n    'die',\n    'do',\n    'dump',\n    'each',\n    'else',\n    'elsif',\n    'endgrent',\n    'endhostent',\n    'endnetent',\n    'endprotoent',\n    'endpwent',\n    'endservent',\n    'eof',\n    'eval',\n    'exec',\n    'exists',\n    'exit',\n    'exp',\n    'fcntl',\n    'field',\n    'fileno',\n    'flock',\n    'for',\n    'foreach',\n    'fork',\n    'format',\n    'formline',\n    'getc',\n    'getgrent',\n    'getgrgid',\n    'getgrnam',\n    'gethostbyaddr',\n    'gethostbyname',\n    'gethostent',\n    'getlogin',\n    'getnetbyaddr',\n    'getnetbyname',\n    'getnetent',\n    'getpeername',\n    'getpgrp',\n    'getpriority',\n    'getprotobyname',\n    'getprotobynumber',\n    'getprotoent',\n    'getpwent',\n    'getpwnam',\n    'getpwuid',\n    'getservbyname',\n    'getservbyport',\n    'getservent',\n    'getsockname',\n    'getsockopt',\n    'given',\n    'glob',\n    'gmtime',\n    'goto',\n    'grep',\n    'gt',\n    'hex',\n    'if',\n    'index',\n    'int',\n    'ioctl',\n    'join',\n    'keys',\n    'kill',\n    'last',\n    'lc',\n    'lcfirst',\n    'length',\n    'link',\n    'listen',\n    'local',\n    'localtime',\n    'log',\n    'lstat',\n    'lt',\n    'ma',\n    'map',\n    'method',\n    'mkdir',\n    'msgctl',\n    'msgget',\n    'msgrcv',\n    'msgsnd',\n    'my',\n    'ne',\n    'next',\n    'no',\n    'not',\n    'oct',\n    'open',\n    'opendir',\n    'or',\n    'ord',\n    'our',\n    'pack',\n    'package',\n    'pipe',\n    'pop',\n    'pos',\n    'print',\n    'printf',\n    'prototype',\n    'push',\n    'q|0',\n    'qq',\n    'quotemeta',\n    'qw',\n    'qx',\n    'rand',\n    'read',\n    'readdir',\n    'readline',\n    'readlink',\n    'readpipe',\n    'recv',\n    'redo',\n    'ref',\n    'rename',\n    'require',\n    'reset',\n    'return',\n    'reverse',\n    'rewinddir',\n    'rindex',\n    'rmdir',\n    'say',\n    'scalar',\n    'seek',\n    'seekdir',\n    'select',\n    'semctl',\n    'semget',\n    'semop',\n    'send',\n    'setgrent',\n    'sethostent',\n    'setnetent',\n    'setpgrp',\n    'setpriority',\n    'setprotoent',\n    'setpwent',\n    'setservent',\n    'setsockopt',\n    'shift',\n    'shmctl',\n    'shmget',\n    'shmread',\n    'shmwrite',\n    'shutdown',\n    'sin',\n    'sleep',\n    'socket',\n    'socketpair',\n    'sort',\n    'splice',\n    'split',\n    'sprintf',\n    'sqrt',\n    'srand',\n    'stat',\n    'state',\n    'study',\n    'sub',\n    'substr',\n    'symlink',\n    'syscall',\n    'sysopen',\n    'sysread',\n    'sysseek',\n    'system',\n    'syswrite',\n    'tell',\n    'telldir',\n    'tie',\n    'tied',\n    'time',\n    'times',\n    'tr',\n    'truncate',\n    'uc',\n    'ucfirst',\n    'umask',\n    'undef',\n    'unless',\n    'unlink',\n    'unpack',\n    'unshift',\n    'untie',\n    'until',\n    'use',\n    'utime',\n    'values',\n    'vec',\n    'wait',\n    'waitpid',\n    'wantarray',\n    'warn',\n    'when',\n    'while',\n    'write',\n    'x|0',\n    'xor',\n    'y|0'\n  ];\n\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const ATTR = {\n    scope: 'attr',\n    match: /\\s+:\\s*\\w+(\\s*\\(.*?\\))?/,\n  };\n  const VAR = {\n    scope: 'variable',\n    variants: [\n      { begin: /\\$\\d/ },\n      { begin: regex.concat(\n        /[$%@](?!\")(\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![A-Za-z])(?![@$%])`\n        )\n      },\n      {\n        // Only $= is a special Perl variable and one can't declare @= or %=.\n        begin: /[$%@](?!\")[^\\s\\w{=]|\\$=/,\n        relevance: 0\n      }\n    ],\n    contains: [ ATTR ],\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // decimal numbers:\n      // include the case where a number starts with a dot (eg. .9), and\n      // the leading 0? avoids mixing the first and second match on 0.x cases\n      { match: /0?\\.[0-9][0-9_]+\\b/ },\n      // include the special versioned number (eg. v5.38)\n      { match: /\\bv?(0|[1-9][0-9_]*(\\.[0-9_]+)?|[1-9][0-9_]*)\\b/ },\n      // non-decimal numbers:\n      { match: /\\b0[0-7][0-7_]*\\b/ },\n      { match: /\\b0x[0-9a-fA-F][0-9a-fA-F_]*\\b/ },\n      { match: /\\b0b[0-1][0-1_]*\\b/ },\n    ],\n    relevance: 0\n  };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const REGEX_DELIMS = [\n    /!/,\n    /\\//,\n    /\\|/,\n    /\\?/,\n    /'/,\n    /\"/, // valid but infrequent and weird\n    /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\n    const middle = (close === '\\\\1')\n      ? close\n      : regex.concat(close, open);\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      middle,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_RE = (prefix, open, close) => {\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      { endsWithParent: true }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          relevance: 0\n        }\n      ]\n    },\n    NUMBER,\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          variants: [\n            // allow matching common delimiters\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, { capture: true })) },\n            // and then paired delmis\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\n          ],\n          relevance: 2\n        },\n        {\n          className: 'regexp',\n          variants: [\n            {\n              // could be a comment in many languages so do not count\n              // as relevant\n              begin: /(m|qr)\\/\\//,\n              relevance: 0\n            },\n            // prefix is optional with /regex/\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//) },\n            // allow matching common delimiters\n            { begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, { capture: true }), /\\1/) },\n            // allow common paired delmins\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/) },\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/) },\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/) }\n          ]\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub method',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE, ATTR ]\n    },\n    {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE, ATTR, NUMBER ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nexport { perl as default };\n","/*\nLanguage: PHP\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://www.php.net\nCategory: common\n*/\n\n/**\n * @param {HLJSApi} hljs\n * @returns {LanguageDetail}\n * */\nfunction php(hljs) {\n  const regex = hljs.regex;\n  // negative look-ahead tries to avoid matching patterns that are not\n  // Perl at all like $ident$, @ident@, etc.\n  const NOT_PERL_ETC = /(?![A-Za-z0-9])(?![$])/;\n  const IDENT_RE = regex.concat(\n    /[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/,\n    NOT_PERL_ETC);\n  // Will not detect camelCase classes\n  const PASCAL_CASE_CLASS_NAME_RE = regex.concat(\n    /(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/,\n    NOT_PERL_ETC);\n  const UPCASE_NAME_RE = regex.concat(\n    /[A-Z]+/,\n    NOT_PERL_ETC);\n  const VARIABLE = {\n    scope: 'variable',\n    match: '\\\\$+' + IDENT_RE,\n  };\n  const PREPROCESSOR = {\n    scope: \"meta\",\n    variants: [\n      { begin: /<\\?php/, relevance: 10 }, // boost for obvious PHP\n      { begin: /<\\?=/ },\n      // less relevant per PSR-1 which says not to use short-tags\n      { begin: /<\\?/, relevance: 0.1 },\n      { begin: /\\?>/ } // end php tag\n    ]\n  };\n  const SUBST = {\n    scope: 'subst',\n    variants: [\n      { begin: /\\$\\w+/ },\n      {\n        begin: /\\{\\$/,\n        end: /\\}/\n      }\n    ]\n  };\n  const SINGLE_QUOTED = hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null, });\n  const DOUBLE_QUOTED = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n  });\n\n  const HEREDOC = {\n    begin: /<<<[ \\t]*(?:(\\w+)|\"(\\w+)\")\\n/,\n    end: /[ \\t]*(\\w+)\\b/,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n    'on:begin': (m, resp) => { resp.data._beginMatch = m[1] || m[2]; },\n    'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); },\n  };\n\n  const NOWDOC = hljs.END_SAME_AS_BEGIN({\n    begin: /<<<[ \\t]*'(\\w+)'\\n/,\n    end: /[ \\t]*(\\w+)\\b/,\n  });\n  // list of valid whitespaces because non-breaking space might be part of a IDENT_RE\n  const WHITESPACE = '[ \\t\\n]';\n  const STRING = {\n    scope: 'string',\n    variants: [\n      DOUBLE_QUOTED,\n      SINGLE_QUOTED,\n      HEREDOC,\n      NOWDOC\n    ]\n  };\n  const NUMBER = {\n    scope: 'number',\n    variants: [\n      { begin: `\\\\b0[bB][01]+(?:_[01]+)*\\\\b` }, // Binary w/ underscore support\n      { begin: `\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b` }, // Octals w/ underscore support\n      { begin: `\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b` }, // Hex w/ underscore support\n      // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.\n      { begin: `(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?` }\n    ],\n    relevance: 0\n  };\n  const LITERALS = [\n    \"false\",\n    \"null\",\n    \"true\"\n  ];\n  const KWS = [\n    // Magic constants:\n    // <https://www.php.net/manual/en/language.constants.predefined.php>\n    \"__CLASS__\",\n    \"__DIR__\",\n    \"__FILE__\",\n    \"__FUNCTION__\",\n    \"__COMPILER_HALT_OFFSET__\",\n    \"__LINE__\",\n    \"__METHOD__\",\n    \"__NAMESPACE__\",\n    \"__TRAIT__\",\n    // Function that look like language construct or language construct that look like function:\n    // List of keywords that may not require parenthesis\n    \"die\",\n    \"echo\",\n    \"exit\",\n    \"include\",\n    \"include_once\",\n    \"print\",\n    \"require\",\n    \"require_once\",\n    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\n    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\n    // Other keywords:\n    // <https://www.php.net/manual/en/reserved.php>\n    // <https://www.php.net/manual/en/language.types.type-juggling.php>\n    \"array\",\n    \"abstract\",\n    \"and\",\n    \"as\",\n    \"binary\",\n    \"bool\",\n    \"boolean\",\n    \"break\",\n    \"callable\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"clone\",\n    \"const\",\n    \"continue\",\n    \"declare\",\n    \"default\",\n    \"do\",\n    \"double\",\n    \"else\",\n    \"elseif\",\n    \"empty\",\n    \"enddeclare\",\n    \"endfor\",\n    \"endforeach\",\n    \"endif\",\n    \"endswitch\",\n    \"endwhile\",\n    \"enum\",\n    \"eval\",\n    \"extends\",\n    \"final\",\n    \"finally\",\n    \"float\",\n    \"for\",\n    \"foreach\",\n    \"from\",\n    \"global\",\n    \"goto\",\n    \"if\",\n    \"implements\",\n    \"instanceof\",\n    \"insteadof\",\n    \"int\",\n    \"integer\",\n    \"interface\",\n    \"isset\",\n    \"iterable\",\n    \"list\",\n    \"match|0\",\n    \"mixed\",\n    \"new\",\n    \"never\",\n    \"object\",\n    \"or\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"readonly\",\n    \"real\",\n    \"return\",\n    \"string\",\n    \"switch\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"unset\",\n    \"use\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"xor\",\n    \"yield\"\n  ];\n\n  const BUILT_INS = [\n    // Standard PHP library:\n    // <https://www.php.net/manual/en/book.spl.php>\n    \"Error|0\",\n    \"AppendIterator\",\n    \"ArgumentCountError\",\n    \"ArithmeticError\",\n    \"ArrayIterator\",\n    \"ArrayObject\",\n    \"AssertionError\",\n    \"BadFunctionCallException\",\n    \"BadMethodCallException\",\n    \"CachingIterator\",\n    \"CallbackFilterIterator\",\n    \"CompileError\",\n    \"Countable\",\n    \"DirectoryIterator\",\n    \"DivisionByZeroError\",\n    \"DomainException\",\n    \"EmptyIterator\",\n    \"ErrorException\",\n    \"Exception\",\n    \"FilesystemIterator\",\n    \"FilterIterator\",\n    \"GlobIterator\",\n    \"InfiniteIterator\",\n    \"InvalidArgumentException\",\n    \"IteratorIterator\",\n    \"LengthException\",\n    \"LimitIterator\",\n    \"LogicException\",\n    \"MultipleIterator\",\n    \"NoRewindIterator\",\n    \"OutOfBoundsException\",\n    \"OutOfRangeException\",\n    \"OuterIterator\",\n    \"OverflowException\",\n    \"ParentIterator\",\n    \"ParseError\",\n    \"RangeException\",\n    \"RecursiveArrayIterator\",\n    \"RecursiveCachingIterator\",\n    \"RecursiveCallbackFilterIterator\",\n    \"RecursiveDirectoryIterator\",\n    \"RecursiveFilterIterator\",\n    \"RecursiveIterator\",\n    \"RecursiveIteratorIterator\",\n    \"RecursiveRegexIterator\",\n    \"RecursiveTreeIterator\",\n    \"RegexIterator\",\n    \"RuntimeException\",\n    \"SeekableIterator\",\n    \"SplDoublyLinkedList\",\n    \"SplFileInfo\",\n    \"SplFileObject\",\n    \"SplFixedArray\",\n    \"SplHeap\",\n    \"SplMaxHeap\",\n    \"SplMinHeap\",\n    \"SplObjectStorage\",\n    \"SplObserver\",\n    \"SplPriorityQueue\",\n    \"SplQueue\",\n    \"SplStack\",\n    \"SplSubject\",\n    \"SplTempFileObject\",\n    \"TypeError\",\n    \"UnderflowException\",\n    \"UnexpectedValueException\",\n    \"UnhandledMatchError\",\n    // Reserved interfaces:\n    // <https://www.php.net/manual/en/reserved.interfaces.php>\n    \"ArrayAccess\",\n    \"BackedEnum\",\n    \"Closure\",\n    \"Fiber\",\n    \"Generator\",\n    \"Iterator\",\n    \"IteratorAggregate\",\n    \"Serializable\",\n    \"Stringable\",\n    \"Throwable\",\n    \"Traversable\",\n    \"UnitEnum\",\n    \"WeakReference\",\n    \"WeakMap\",\n    // Reserved classes:\n    // <https://www.php.net/manual/en/reserved.classes.php>\n    \"Directory\",\n    \"__PHP_Incomplete_Class\",\n    \"parent\",\n    \"php_user_filter\",\n    \"self\",\n    \"static\",\n    \"stdClass\"\n  ];\n\n  /** Dual-case keywords\n   *\n   * [\"then\",\"FILE\"] =>\n   *     [\"then\", \"THEN\", \"FILE\", \"file\"]\n   *\n   * @param {string[]} items */\n  const dualCase = (items) => {\n    /** @type string[] */\n    const result = [];\n    items.forEach(item => {\n      result.push(item);\n      if (item.toLowerCase() === item) {\n        result.push(item.toUpperCase());\n      } else {\n        result.push(item.toLowerCase());\n      }\n    });\n    return result;\n  };\n\n  const KEYWORDS = {\n    keyword: KWS,\n    literal: dualCase(LITERALS),\n    built_in: BUILT_INS,\n  };\n\n  /**\n   * @param {string[]} items */\n  const normalizeKeywords = (items) => {\n    return items.map(item => {\n      return item.replace(/\\|\\d+$/, \"\");\n    });\n  };\n\n  const CONSTRUCTOR_CALL = { variants: [\n    {\n      match: [\n        /new/,\n        regex.concat(WHITESPACE, \"+\"),\n        // to prevent built ins from being confused as the class constructor call\n        regex.concat(\"(?!\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\n        PASCAL_CASE_CLASS_NAME_RE,\n      ],\n      scope: {\n        1: \"keyword\",\n        4: \"title.class\",\n      },\n    }\n  ] };\n\n  const CONSTANT_REFERENCE = regex.concat(IDENT_RE, \"\\\\b(?!\\\\()\");\n\n  const LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON = { variants: [\n    {\n      match: [\n        regex.concat(\n          /::/,\n          regex.lookahead(/(?!class\\b)/)\n        ),\n        CONSTANT_REFERENCE,\n      ],\n      scope: { 2: \"variable.constant\", },\n    },\n    {\n      match: [\n        /::/,\n        /class/,\n      ],\n      scope: { 2: \"variable.language\", },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        regex.concat(\n          /::/,\n          regex.lookahead(/(?!class\\b)/)\n        ),\n        CONSTANT_REFERENCE,\n      ],\n      scope: {\n        1: \"title.class\",\n        3: \"variable.constant\",\n      },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        regex.concat(\n          \"::\",\n          regex.lookahead(/(?!class\\b)/)\n        ),\n      ],\n      scope: { 1: \"title.class\", },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        /::/,\n        /class/,\n      ],\n      scope: {\n        1: \"title.class\",\n        3: \"variable.language\",\n      },\n    }\n  ] };\n\n  const NAMED_ARGUMENT = {\n    scope: 'attr',\n    match: regex.concat(IDENT_RE, regex.lookahead(':'), regex.lookahead(/(?!::)/)),\n  };\n  const PARAMS_MODE = {\n    relevance: 0,\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      NAMED_ARGUMENT,\n      VARIABLE,\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n      hljs.C_BLOCK_COMMENT_MODE,\n      STRING,\n      NUMBER,\n      CONSTRUCTOR_CALL,\n    ],\n  };\n  const FUNCTION_INVOKE = {\n    relevance: 0,\n    match: [\n      /\\b/,\n      // to prevent keywords from being confused as the function title\n      regex.concat(\"(?!fn\\\\b|function\\\\b|\", normalizeKeywords(KWS).join(\"\\\\b|\"), \"|\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\n      IDENT_RE,\n      regex.concat(WHITESPACE, \"*\"),\n      regex.lookahead(/(?=\\()/)\n    ],\n    scope: { 3: \"title.function.invoke\", },\n    contains: [ PARAMS_MODE ]\n  };\n  PARAMS_MODE.contains.push(FUNCTION_INVOKE);\n\n  const ATTRIBUTE_CONTAINS = [\n    NAMED_ARGUMENT,\n    LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING,\n    NUMBER,\n    CONSTRUCTOR_CALL,\n  ];\n\n  const ATTRIBUTES = {\n    begin: regex.concat(/#\\[\\s*\\\\?/,\n      regex.either(\n        PASCAL_CASE_CLASS_NAME_RE,\n        UPCASE_NAME_RE\n      )\n    ),\n    beginScope: \"meta\",\n    end: /]/,\n    endScope: \"meta\",\n    keywords: {\n      literal: LITERALS,\n      keyword: [\n        'new',\n        'array',\n      ]\n    },\n    contains: [\n      {\n        begin: /\\[/,\n        end: /]/,\n        keywords: {\n          literal: LITERALS,\n          keyword: [\n            'new',\n            'array',\n          ]\n        },\n        contains: [\n          'self',\n          ...ATTRIBUTE_CONTAINS,\n        ]\n      },\n      ...ATTRIBUTE_CONTAINS,\n      {\n        scope: 'meta',\n        variants: [\n          { match: PASCAL_CASE_CLASS_NAME_RE },\n          { match: UPCASE_NAME_RE }\n        ]\n      }\n    ]\n  };\n\n  return {\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [\n      ATTRIBUTES,\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT('//', '$'),\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        { contains: [\n          {\n            scope: 'doctag',\n            match: '@[A-Za-z]+'\n          }\n        ] }\n      ),\n      {\n        match: /__halt_compiler\\(\\);/,\n        keywords: '__halt_compiler',\n        starts: {\n          scope: \"comment\",\n          end: hljs.MATCH_NOTHING_RE,\n          contains: [\n            {\n              match: /\\?>/,\n              scope: \"meta\",\n              endsParent: true\n            }\n          ]\n        }\n      },\n      PREPROCESSOR,\n      {\n        scope: 'variable.language',\n        match: /\\$this\\b/\n      },\n      VARIABLE,\n      FUNCTION_INVOKE,\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n      {\n        match: [\n          /const/,\n          /\\s/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"variable.constant\",\n        },\n      },\n      CONSTRUCTOR_CALL,\n      {\n        scope: 'function',\n        relevance: 0,\n        beginKeywords: 'fn function',\n        end: /[;{]/,\n        excludeEnd: true,\n        illegal: '[$%\\\\[]',\n        contains: [\n          { beginKeywords: 'use', },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            begin: '=>', // No markup, just a relevance booster\n            endsParent: true\n          },\n          {\n            scope: 'params',\n            begin: '\\\\(',\n            end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              'self',\n              ATTRIBUTES,\n              VARIABLE,\n              LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          },\n        ]\n      },\n      {\n        scope: 'class',\n        variants: [\n          {\n            beginKeywords: \"enum\",\n            illegal: /[($\"]/\n          },\n          {\n            beginKeywords: \"class interface trait\",\n            illegal: /[:($\"]/\n          }\n        ],\n        relevance: 0,\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          { beginKeywords: 'extends implements' },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      // both use and namespace still use \"old style\" rules (vs multi-match)\n      // because the namespace name can include `\\` and we still want each\n      // element to be treated as its own *individual* title\n      {\n        beginKeywords: 'namespace',\n        relevance: 0,\n        end: ';',\n        illegal: /[.']/,\n        contains: [ hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { scope: \"title.class\" }) ]\n      },\n      {\n        beginKeywords: 'use',\n        relevance: 0,\n        end: ';',\n        contains: [\n          // TODO: title.function vs title.class\n          {\n            match: /\\b(as|const|function)\\b/,\n            scope: \"keyword\"\n          },\n          // TODO: could be title.class or title.function\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      STRING,\n      NUMBER,\n    ]\n  };\n}\n\nexport { php as default };\n","/*\nLanguage: PHP Template\nRequires: xml.js, php.js\nAuthor: Josh Goebel <hello@joshgoebel.com>\nWebsite: https://www.php.net\nCategory: common\n*/\n\nfunction phpTemplate(hljs) {\n  return {\n    name: \"PHP template\",\n    subLanguage: 'xml',\n    contains: [\n      {\n        begin: /<\\?(php|=)?/,\n        end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {\n            begin: '/\\\\*',\n            end: '\\\\*/',\n            skip: true\n          },\n          {\n            begin: 'b\"',\n            end: '\"',\n            skip: true\n          },\n          {\n            begin: 'b\\'',\n            end: '\\'',\n            skip: true\n          },\n          hljs.inherit(hljs.APOS_STRING_MODE, {\n            illegal: null,\n            className: null,\n            contains: null,\n            skip: true\n          }),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\n            illegal: null,\n            className: null,\n            contains: null,\n            skip: true\n          })\n        ]\n      }\n    ]\n  };\n}\n\nexport { phpTemplate as default };\n","/*\nLanguage: Plain text\nAuthor: Egor Rogov (e.rogov@postgrespro.ru)\nDescription: Plain text without any highlighting.\nCategory: common\n*/\n\nfunction plaintext(hljs) {\n  return {\n    name: 'Plain text',\n    aliases: [\n      'text',\n      'txt'\n    ],\n    disableAutodetect: true\n  };\n}\n\nexport { plaintext as default };\n","/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'case',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'match',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  // Whitespace after a number (or any lexical token) is needed only if its absence\n  // would change the tokenization\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n  // We deviate slightly, requiring a word boundary or a keyword\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: regex.lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    unicodeRegex: true,\n    keywords: KEYWORDS,\n    illegal: /(<\\/|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        scope: 'variable.language',\n        match: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      { match: /\\bor\\b/, scope: \"keyword\" },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /\\bdef/, /\\s+/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE, /\\s*/,\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nexport { python as default };\n","/*\nLanguage: Python REPL\nRequires: python.js\nAuthor: Josh Goebel <hello@joshgoebel.com>\nCategory: common\n*/\n\nfunction pythonRepl(hljs) {\n  return {\n    aliases: [ 'pycon' ],\n    contains: [\n      {\n        className: 'meta.prompt',\n        starts: {\n          // a space separates the REPL prefix from the actual code\n          // this is purely for cleaner HTML output\n          end: / |$/,\n          starts: {\n            end: '$',\n            subLanguage: 'python'\n          }\n        },\n        variants: [\n          { begin: /^>>>(?=[ ]|$)/ },\n          { begin: /^\\.\\.\\.(?=[ ]|$)/ }\n        ]\n      }\n    ]\n  };\n}\n\nexport { pythonRepl as default };\n","/*\nLanguage: R\nDescription: R is a free software environment for statistical computing and graphics.\nAuthor: Joe Cheng <joe@rstudio.org>\nContributors: Konrad Rudolph <konrad.rudolph@gmail.com>\nWebsite: https://www.r-project.org\nCategory: common,scientific\n*/\n\n/** @type LanguageFn */\nfunction r(hljs) {\n  const regex = hljs.regex;\n  // Identifiers in R cannot start with `_`, but they can start with `.` if it\n  // is not immediately followed by a digit.\n  // R also supports quoted identifiers, which are near-arbitrary sequences\n  // delimited by backticks (`…`), which may contain escape sequences. These are\n  // handled in a separate mode. See `test/markup/r/names.txt` for examples.\n  // FIXME: Support Unicode identifiers.\n  const IDENT_RE = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/;\n  const NUMBER_TYPES_RE = regex.either(\n    // Special case: only hexadecimal binary powers can contain fractions\n    /0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,\n    // Hexadecimal numbers without fraction and optional binary power\n    /0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/,\n    // Decimal numbers\n    /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/\n  );\n  const OPERATORS_RE = /[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/;\n  const PUNCTUATION_RE = regex.either(\n    /[()]/,\n    /[{}]/,\n    /\\[\\[/,\n    /[[\\]]/,\n    /\\\\/,\n    /,/\n  );\n\n  return {\n    name: 'R',\n\n    keywords: {\n      $pattern: IDENT_RE,\n      keyword:\n        'function if in break next repeat else for while',\n      literal:\n        'NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 '\n        + 'NA_character_|10 NA_complex_|10',\n      built_in:\n        // Builtin constants\n        'LETTERS letters month.abb month.name pi T F '\n        // Primitive functions\n        // These are all the functions in `base` that are implemented as a\n        // `.Primitive`, minus those functions that are also keywords.\n        + 'abs acos acosh all any anyNA Arg as.call as.character '\n        + 'as.complex as.double as.environment as.integer as.logical '\n        + 'as.null.default as.numeric as.raw asin asinh atan atanh attr '\n        + 'attributes baseenv browser c call ceiling class Conj cos cosh '\n        + 'cospi cummax cummin cumprod cumsum digamma dim dimnames '\n        + 'emptyenv exp expression floor forceAndCall gamma gc.time '\n        + 'globalenv Im interactive invisible is.array is.atomic is.call '\n        + 'is.character is.complex is.double is.environment is.expression '\n        + 'is.finite is.function is.infinite is.integer is.language '\n        + 'is.list is.logical is.matrix is.na is.name is.nan is.null '\n        + 'is.numeric is.object is.pairlist is.raw is.recursive is.single '\n        + 'is.symbol lazyLoadDBfetch length lgamma list log max min '\n        + 'missing Mod names nargs nzchar oldClass on.exit pos.to.env '\n        + 'proc.time prod quote range Re rep retracemem return round '\n        + 'seq_along seq_len seq.int sign signif sin sinh sinpi sqrt '\n        + 'standardGeneric substitute sum switch tan tanh tanpi tracemem '\n        + 'trigamma trunc unclass untracemem UseMethod xtfrm',\n    },\n\n    contains: [\n      // Roxygen comments\n      hljs.COMMENT(\n        /#'/,\n        /$/,\n        { contains: [\n          {\n            // Handle `@examples` separately to cause all subsequent code\n            // until the next `@`-tag on its own line to be kept as-is,\n            // preventing highlighting. This code is example R code, so nested\n            // doctags shouldn’t be treated as such. See\n            // `test/markup/r/roxygen.txt` for an example.\n            scope: 'doctag',\n            match: /@examples/,\n            starts: {\n              end: regex.lookahead(regex.either(\n                // end if another doc comment\n                /\\n^#'\\s*(?=@[a-zA-Z]+)/,\n                // or a line with no comment\n                /\\n^(?!#')/\n              )),\n              endsParent: true\n            }\n          },\n          {\n            // Handle `@param` to highlight the parameter name following\n            // after.\n            scope: 'doctag',\n            begin: '@param',\n            end: /$/,\n            contains: [\n              {\n                scope: 'variable',\n                variants: [\n                  { match: IDENT_RE },\n                  { match: /`(?:\\\\.|[^`\\\\])+`/ }\n                ],\n                endsParent: true\n              }\n            ]\n          },\n          {\n            scope: 'doctag',\n            match: /@[a-zA-Z]+/\n          },\n          {\n            scope: 'keyword',\n            match: /\\\\[a-zA-Z]+/\n          }\n        ] }\n      ),\n\n      hljs.HASH_COMMENT_MODE,\n\n      {\n        scope: 'string',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        variants: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\(/,\n            end: /\\)(-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\{/,\n            end: /\\}(-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\[/,\n            end: /\\](-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\(/,\n            end: /\\)(-*)'/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\{/,\n            end: /\\}(-*)'/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\[/,\n            end: /\\](-*)'/\n          }),\n          {\n            begin: '\"',\n            end: '\"',\n            relevance: 0\n          },\n          {\n            begin: \"'\",\n            end: \"'\",\n            relevance: 0\n          }\n        ],\n      },\n\n      // Matching numbers immediately following punctuation and operators is\n      // tricky since we need to look at the character ahead of a number to\n      // ensure the number is not part of an identifier, and we cannot use\n      // negative look-behind assertions. So instead we explicitly handle all\n      // possible combinations of (operator|punctuation), number.\n      // TODO: replace with negative look-behind when available\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/ },\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ },\n      // { begin: /(?<![a-zA-Z0-9._])(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/ }\n      {\n        relevance: 0,\n        variants: [\n          {\n            scope: {\n              1: 'operator',\n              2: 'number'\n            },\n            match: [\n              OPERATORS_RE,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: {\n              1: 'operator',\n              2: 'number'\n            },\n            match: [\n              /%[^%]*%/,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: {\n              1: 'punctuation',\n              2: 'number'\n            },\n            match: [\n              PUNCTUATION_RE,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: { 2: 'number' },\n            match: [\n              /[^a-zA-Z0-9._]|^/, // not part of an identifier, or start of document\n              NUMBER_TYPES_RE\n            ]\n          }\n        ]\n      },\n\n      // Operators/punctuation when they're not directly followed by numbers\n      {\n        // Relevance boost for the most common assignment form.\n        scope: { 3: 'operator' },\n        match: [\n          IDENT_RE,\n          /\\s+/,\n          /<-/,\n          /\\s+/\n        ]\n      },\n\n      {\n        scope: 'operator',\n        relevance: 0,\n        variants: [\n          { match: OPERATORS_RE },\n          { match: /%[^%]*%/ }\n        ]\n      },\n\n      {\n        scope: 'punctuation',\n        relevance: 0,\n        match: PUNCTUATION_RE\n      },\n\n      {\n        // Escaped identifier\n        begin: '`',\n        end: '`',\n        contains: [ { begin: /\\\\./ } ]\n      }\n    ]\n  };\n}\n\nexport { r as default };\n","/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common, scripting\n*/\n\nfunction ruby(hljs) {\n  const regex = hljs.regex;\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\n  const CLASS_NAME_RE = regex.either(\n    /\\b([A-Z]+[a-z0-9]+)+/,\n    // ends in caps\n    /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\n  )\n  ;\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\n  // very popular ruby built-ins that one might even assume\n  // are actual keywords (despite that not being the case)\n  const PSEUDO_KWS = [\n    \"include\",\n    \"extend\",\n    \"prepend\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"raise\",\n    \"throw\"\n  ];\n  const RUBY_KEYWORDS = {\n    \"variable.constant\": [\n      \"__FILE__\",\n      \"__LINE__\",\n      \"__ENCODING__\"\n    ],\n    \"variable.language\": [\n      \"self\",\n      \"super\",\n    ],\n    keyword: [\n      \"alias\",\n      \"and\",\n      \"begin\",\n      \"BEGIN\",\n      \"break\",\n      \"case\",\n      \"class\",\n      \"defined\",\n      \"do\",\n      \"else\",\n      \"elsif\",\n      \"end\",\n      \"END\",\n      \"ensure\",\n      \"for\",\n      \"if\",\n      \"in\",\n      \"module\",\n      \"next\",\n      \"not\",\n      \"or\",\n      \"redo\",\n      \"require\",\n      \"rescue\",\n      \"retry\",\n      \"return\",\n      \"then\",\n      \"undef\",\n      \"unless\",\n      \"until\",\n      \"when\",\n      \"while\",\n      \"yield\",\n      ...PSEUDO_KWS\n    ],\n    built_in: [\n      \"proc\",\n      \"lambda\",\n      \"attr_accessor\",\n      \"attr_reader\",\n      \"attr_writer\",\n      \"define_method\",\n      \"private_constant\",\n      \"module_function\"\n    ],\n    literal: [\n      \"true\",\n      \"false\",\n      \"nil\"\n    ]\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      { contains: [ YARDOCTAG ] }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [ YARDOCTAG ],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\n  ];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: /%[qQwWx]?\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /%[qQwWx]?\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /%[qQwWx]?\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /%[qQwWx]?</,\n        end: />/\n      },\n      {\n        begin: /%[qQwWx]?\\//,\n        end: /\\//\n      },\n      {\n        begin: /%[qQwWx]?%/,\n        end: /%/\n      },\n      {\n        begin: /%[qQwWx]?-/,\n        end: /-/\n      },\n      {\n        begin: /%[qQwWx]?\\|/,\n        end: /\\|/\n      },\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n      // where ? is the last character of a preceding identifier, as in: `func?4`\n      { begin: /\\B\\?(\\\\\\d{1,3})/ },\n      { begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/ },\n      { begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/ },\n      { begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\?\\S/ },\n      // heredocs\n      {\n        // this guard makes sure that we have an entire heredoc and not a false\n        // positive (auto-detect, etc.)\n        begin: regex.concat(\n          /<<[-~]?'?/,\n          regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\n        ),\n        contains: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/,\n            end: /(\\w+)/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ]\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" }\n    ]\n  };\n\n  const PARAMS = {\n    variants: [\n      {\n        match: /\\(\\)/,\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /(?=\\))/,\n        excludeBegin: true,\n        endsParent: true,\n        keywords: RUBY_KEYWORDS,\n      }\n    ]\n  };\n\n  const INCLUDE_EXTEND = {\n    match: [\n      /(include|extend)\\s+/,\n      CLASS_NAME_WITH_NAMESPACE_RE\n    ],\n    scope: {\n      2: \"title.class\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE,\n          /\\s+<\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      },\n      {\n        match: [\n          /\\b(class|module)\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  const METHOD_DEFINITION = {\n    match: [\n      /def/, /\\s+/,\n      RUBY_METHOD_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  const OBJECT_CREATION = {\n    relevance: 0,\n    match: [\n      CLASS_NAME_WITH_NAMESPACE_RE,\n      /\\.new[. (]/\n    ],\n    scope: {\n      1: \"title.class\"\n    }\n  };\n\n  // CamelCase\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: CLASS_NAME_RE,\n    scope: \"title.class\"\n  };\n\n  const RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    CLASS_DEFINITION,\n    INCLUDE_EXTEND,\n    OBJECT_CREATION,\n    UPPER_CASE_CONSTANT,\n    CLASS_REFERENCE,\n    METHOD_DEFINITION,\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::' },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [\n        STRING,\n        { begin: RUBY_METHOD_RE }\n      ],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attempts to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|(?!=)/,\n      end: /\\|/,\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          illegal: /\\n/,\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: /%r\\{/,\n              end: /\\}[a-z]*/\n            },\n            {\n              begin: '%r\\\\(',\n              end: '\\\\)[a-z]*'\n            },\n            {\n              begin: '%r!',\n              end: '![a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  const SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  const IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta.prompt',\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n      starts: {\n        end: '$',\n        keywords: RUBY_KEYWORDS,\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: [\n      'rb',\n      'gemspec',\n      'podspec',\n      'thor',\n      'irb'\n    ],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [ hljs.SHEBANG({ binary: \"ruby\" }) ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nexport { ruby as default };\n","/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\n\nfunction rust(hljs) {\n  const regex = hljs.regex;\n  // ============================================\n  // Added to support the r# keyword, which is a raw identifier in Rust.\n  const RAW_IDENTIFIER = /(r#)?/;\n  const UNDERSCORE_IDENT_RE = regex.concat(RAW_IDENTIFIER, hljs.UNDERSCORE_IDENT_RE);\n  const IDENT_RE = regex.concat(RAW_IDENTIFIER, hljs.IDENT_RE);\n  // ============================================\n  const FUNCTION_INVOKE = {\n    className: \"title.function.invoke\",\n    relevance: 0,\n    begin: regex.concat(\n      /\\b/,\n      /(?!let|for|while|if|else|match\\b)/,\n      IDENT_RE,\n      regex.lookahead(/\\s*\\(/))\n  };\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = [\n    \"abstract\",\n    \"as\",\n    \"async\",\n    \"await\",\n    \"become\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"do\",\n    \"dyn\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"final\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"macro\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"override\",\n    \"priv\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"Self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"try\",\n    \"type\",\n    \"typeof\",\n    \"union\",\n    \"unsafe\",\n    \"unsized\",\n    \"use\",\n    \"virtual\",\n    \"where\",\n    \"while\",\n    \"yield\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"Some\",\n    \"None\",\n    \"Ok\",\n    \"Err\"\n  ];\n  const BUILTINS = [\n    // functions\n    'drop ',\n    // traits\n    \"Copy\",\n    \"Send\",\n    \"Sized\",\n    \"Sync\",\n    \"Drop\",\n    \"Fn\",\n    \"FnMut\",\n    \"FnOnce\",\n    \"ToOwned\",\n    \"Clone\",\n    \"Debug\",\n    \"PartialEq\",\n    \"PartialOrd\",\n    \"Eq\",\n    \"Ord\",\n    \"AsRef\",\n    \"AsMut\",\n    \"Into\",\n    \"From\",\n    \"Default\",\n    \"Iterator\",\n    \"Extend\",\n    \"IntoIterator\",\n    \"DoubleEndedIterator\",\n    \"ExactSizeIterator\",\n    \"SliceConcatExt\",\n    \"ToString\",\n    // macros\n    \"assert!\",\n    \"assert_eq!\",\n    \"bitflags!\",\n    \"bytes!\",\n    \"cfg!\",\n    \"col!\",\n    \"concat!\",\n    \"concat_idents!\",\n    \"debug_assert!\",\n    \"debug_assert_eq!\",\n    \"env!\",\n    \"eprintln!\",\n    \"panic!\",\n    \"file!\",\n    \"format!\",\n    \"format_args!\",\n    \"include_bytes!\",\n    \"include_str!\",\n    \"line!\",\n    \"local_data_key!\",\n    \"module_path!\",\n    \"option_env!\",\n    \"print!\",\n    \"println!\",\n    \"select!\",\n    \"stringify!\",\n    \"try!\",\n    \"unimplemented!\",\n    \"unreachable!\",\n    \"vec!\",\n    \"write!\",\n    \"writeln!\",\n    \"macro_rules!\",\n    \"assert_ne!\",\n    \"debug_assert_ne!\"\n  ];\n  const TYPES = [\n    \"i8\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"i128\",\n    \"isize\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"u128\",\n    \"usize\",\n    \"f32\",\n    \"f64\",\n    \"str\",\n    \"char\",\n    \"bool\",\n    \"Box\",\n    \"Option\",\n    \"Result\",\n    \"String\",\n    \"Vec\"\n  ];\n  return {\n    name: 'Rust',\n    aliases: [ 'rs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      type: TYPES,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', { contains: [ 'self' ] }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: /b?\"/,\n        illegal: null\n      }),\n      {\n        className: 'symbol',\n        // negative lookahead to avoid matching `'`\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*(?!')/\n      },\n      {\n        scope: 'string',\n        variants: [\n          { begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n          {\n            begin: /b?'/,\n            end: /'/,\n            contains: [\n              {\n                scope: \"char.escape\",\n                match: /\\\\('|\\w|x\\w{2}|u\\w{4}|U\\w{8})/\n              }\n            ]\n          }\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)'\n                   + NUMBER_SUFFIX }\n        ],\n        relevance: 0\n      },\n      {\n        begin: [\n          /fn/,\n          /\\s+/,\n          UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.function\"\n        }\n      },\n      {\n        className: 'meta',\n        begin: '#!?\\\\[',\n        end: '\\\\]',\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE\n            ]\n          }\n        ]\n      },\n      {\n        begin: [\n          /let/,\n          /\\s+/,\n          /(?:mut\\s+)?/,\n          UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"keyword\",\n          4: \"variable\"\n        }\n      },\n      // must come before impl/for rule later\n      {\n        begin: [\n          /for/,\n          /\\s+/,\n          UNDERSCORE_IDENT_RE,\n          /\\s+/,\n          /in/\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"variable\",\n          5: \"keyword\"\n        }\n      },\n      {\n        begin: [\n          /type/,\n          /\\s+/,\n          UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          /(?:trait|enum|struct|union|impl|for)/,\n          /\\s+/,\n          UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {\n          keyword: \"Self\",\n          built_in: BUILTINS,\n          type: TYPES\n        }\n      },\n      {\n        className: \"punctuation\",\n        begin: '->'\n      },\n      FUNCTION_INVOKE\n    ]\n  };\n}\n\nexport { rust as default };\n","const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z_][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst HTML_TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'picture',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'select',\n  'source',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst SVG_TAGS = [\n  'defs',\n  'g',\n  'marker',\n  'mask',\n  'pattern',\n  'svg',\n  'switch',\n  'symbol',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feFlood',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMorphology',\n  'feOffset',\n  'feSpecularLighting',\n  'feTile',\n  'feTurbulence',\n  'linearGradient',\n  'radialGradient',\n  'stop',\n  'circle',\n  'ellipse',\n  'image',\n  'line',\n  'path',\n  'polygon',\n  'polyline',\n  'rect',\n  'text',\n  'use',\n  'textPath',\n  'tspan',\n  'foreignObject',\n  'clipPath'\n];\n\nconst TAGS = [\n  ...HTML_TAGS,\n  ...SVG_TAGS,\n];\n\n// Sorting, then reversing makes sure longer attributes/elements like\n// `font-weight` are matched fully instead of getting false positives on say `font`\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n].sort().reverse();\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n].sort().reverse();\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n].sort().reverse();\n\nconst ATTRIBUTES = [\n  'accent-color',\n  'align-content',\n  'align-items',\n  'align-self',\n  'alignment-baseline',\n  'all',\n  'anchor-name',\n  'animation',\n  'animation-composition',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-range',\n  'animation-range-end',\n  'animation-range-start',\n  'animation-timeline',\n  'animation-timing-function',\n  'appearance',\n  'aspect-ratio',\n  'backdrop-filter',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-position-x',\n  'background-position-y',\n  'background-repeat',\n  'background-size',\n  'baseline-shift',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-end-end-radius',\n  'border-end-start-radius',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-start-end-radius',\n  'border-start-start-radius',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-align',\n  'box-decoration-break',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'color-scheme',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'contain-intrinsic-block-size',\n  'contain-intrinsic-height',\n  'contain-intrinsic-inline-size',\n  'contain-intrinsic-size',\n  'contain-intrinsic-width',\n  'container',\n  'container-name',\n  'container-type',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'counter-set',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'cx',\n  'cy',\n  'direction',\n  'display',\n  'dominant-baseline',\n  'empty-cells',\n  'enable-background',\n  'field-sizing',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flood-color',\n  'flood-opacity',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-optical-sizing',\n  'font-palette',\n  'font-size',\n  'font-size-adjust',\n  'font-smooth',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-synthesis-position',\n  'font-synthesis-small-caps',\n  'font-synthesis-style',\n  'font-synthesis-weight',\n  'font-variant',\n  'font-variant-alternates',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-emoji',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'forced-color-adjust',\n  'gap',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphenate-character',\n  'hyphenate-limit-chars',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'initial-letter',\n  'initial-letter-align',\n  'inline-size',\n  'inset',\n  'inset-area',\n  'inset-block',\n  'inset-block-end',\n  'inset-block-start',\n  'inset-inline',\n  'inset-inline-end',\n  'inset-inline-start',\n  'isolation',\n  'justify-content',\n  'justify-items',\n  'justify-self',\n  'kerning',\n  'left',\n  'letter-spacing',\n  'lighting-color',\n  'line-break',\n  'line-height',\n  'line-height-step',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'margin-trim',\n  'marker',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'masonry-auto-flow',\n  'math-depth',\n  'math-shift',\n  'math-style',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'offset',\n  'offset-anchor',\n  'offset-distance',\n  'offset-path',\n  'offset-position',\n  'offset-rotate',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-anchor',\n  'overflow-block',\n  'overflow-clip-margin',\n  'overflow-inline',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'overlay',\n  'overscroll-behavior',\n  'overscroll-behavior-block',\n  'overscroll-behavior-inline',\n  'overscroll-behavior-x',\n  'overscroll-behavior-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'paint-order',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'place-content',\n  'place-items',\n  'place-self',\n  'pointer-events',\n  'position',\n  'position-anchor',\n  'position-visibility',\n  'print-color-adjust',\n  'quotes',\n  'r',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'rotate',\n  'row-gap',\n  'ruby-align',\n  'ruby-position',\n  'scale',\n  'scroll-behavior',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scroll-timeline',\n  'scroll-timeline-axis',\n  'scroll-timeline-name',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'shape-rendering',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'stop-color',\n  'stop-opacity',\n  'stroke',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-anchor',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-skip',\n  'text-decoration-skip-ink',\n  'text-decoration-style',\n  'text-decoration-thickness',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-size-adjust',\n  'text-transform',\n  'text-underline-offset',\n  'text-underline-position',\n  'text-wrap',\n  'text-wrap-mode',\n  'text-wrap-style',\n  'timeline-scope',\n  'top',\n  'touch-action',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-behavior',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'translate',\n  'unicode-bidi',\n  'user-modify',\n  'user-select',\n  'vector-effect',\n  'vertical-align',\n  'view-timeline',\n  'view-timeline-axis',\n  'view-timeline-inset',\n  'view-timeline-name',\n  'view-transition-name',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'white-space-collapse',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'x',\n  'y',\n  'z-index',\n  'zoom'\n].sort().reverse();\n\n/*\nLanguage: SCSS\nDescription: Scss is an extension of the syntax of CSS.\nAuthor: Kurt Emch <kurt@kurtemch.com>\nWebsite: https://sass-lang.com\nCategory: common, css, web\n*/\n\n\n/** @type LanguageFn */\nfunction scss(hljs) {\n  const modes = MODES(hljs);\n  const PSEUDO_ELEMENTS$1 = PSEUDO_ELEMENTS;\n  const PSEUDO_CLASSES$1 = PSEUDO_CLASSES;\n\n  const AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  const AT_MODIFIERS = \"and or not only\";\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  const VARIABLE = {\n    className: 'variable',\n    begin: '(\\\\$' + IDENT_RE + ')\\\\b',\n    relevance: 0\n  };\n\n  return {\n    name: 'SCSS',\n    case_insensitive: true,\n    illegal: '[=/|\\']',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      // to recognize keyframe 40% etc which are outside the scope of our\n      // attribute value mode\n      modes.CSS_NUMBER_MODE,\n      {\n        className: 'selector-id',\n        begin: '#[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      {\n        className: 'selector-class',\n        begin: '\\\\.[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-tag',\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\n        // was there, before, but why?\n        relevance: 0\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(' + PSEUDO_CLASSES$1.join('|') + ')'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(:)?(' + PSEUDO_ELEMENTS$1.join('|') + ')'\n      },\n      VARIABLE,\n      { // pseudo-selector params\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ modes.CSS_NUMBER_MODE ]\n      },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\n      },\n      { begin: '\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b' },\n      {\n        begin: /:/,\n        end: /[;}{]/,\n        relevance: 0,\n        contains: [\n          modes.BLOCK_COMMENT,\n          VARIABLE,\n          modes.HEXCOLOR,\n          modes.CSS_NUMBER_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          modes.IMPORTANT,\n          modes.FUNCTION_DISPATCH\n        ]\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        keywords: {\n          $pattern: AT_IDENTIFIER,\n          keyword: '@page @font-face'\n        }\n      },\n      {\n        begin: '@',\n        end: '[{;]',\n        returnBegin: true,\n        keywords: {\n          $pattern: /[a-z-]+/,\n          keyword: AT_MODIFIERS,\n          attribute: MEDIA_FEATURES.join(\" \")\n        },\n        contains: [\n          {\n            begin: AT_IDENTIFIER,\n            className: \"keyword\"\n          },\n          {\n            begin: /[a-z-]+(?=:)/,\n            className: \"attribute\"\n          },\n          VARIABLE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          modes.HEXCOLOR,\n          modes.CSS_NUMBER_MODE\n        ]\n      },\n      modes.FUNCTION_DISPATCH\n    ]\n  };\n}\n\nexport { scss as default };\n","/*\nLanguage: Shell Session\nRequires: bash.js\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction shell(hljs) {\n  return {\n    name: 'Shell Session',\n    aliases: [\n      'console',\n      'shellsession'\n    ],\n    contains: [\n      {\n        className: 'meta.prompt',\n        // We cannot add \\s (spaces) in the regular expression otherwise it will be too broad and produce unexpected result.\n        // For instance, in the following example, it would match \"echo /path/to/home >\" as a prompt:\n        // echo /path/to/home > t.exe\n        begin: /^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,\n        starts: {\n          end: /[^\\\\](?=\\s*$)/,\n          subLanguage: 'bash'\n        }\n      }\n    ]\n  };\n}\n\nexport { shell as default };\n","/*\n Language: SQL\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common, database\n */\n\n/*\n\nGoals:\n\nSQL is intended to highlight basic/common SQL keywords and expressions\n\n- If pretty much every single SQL server includes supports, then it's a canidate.\n- It is NOT intended to include tons of vendor specific keywords (Oracle, MySQL,\n  PostgreSQL) although the list of data types is purposely a bit more expansive.\n- For more specific SQL grammars please see:\n  - PostgreSQL and PL/pgSQL - core\n  - T-SQL - https://github.com/highlightjs/highlightjs-tsql\n  - sql_more (core)\n\n */\n\nfunction sql(hljs) {\n  const regex = hljs.regex;\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\n  const STRING = {\n    scope: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [ { match: /''/ } ]\n      }\n    ]\n  };\n  const QUOTED_IDENTIFIER = {\n    begin: /\"/,\n    end: /\"/,\n    contains: [ { match: /\"\"/ } ]\n  };\n\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n    // \"null\",\n    \"unknown\"\n  ];\n\n  const MULTI_WORD_TYPES = [\n    \"double precision\",\n    \"large object\",\n    \"with timezone\",\n    \"without timezone\"\n  ];\n\n  const TYPES = [\n    'bigint',\n    'binary',\n    'blob',\n    'boolean',\n    'char',\n    'character',\n    'clob',\n    'date',\n    'dec',\n    'decfloat',\n    'decimal',\n    'float',\n    'int',\n    'integer',\n    'interval',\n    'nchar',\n    'nclob',\n    'national',\n    'numeric',\n    'real',\n    'row',\n    'smallint',\n    'time',\n    'timestamp',\n    'varchar',\n    'varying', // modifier (character varying)\n    'varbinary'\n  ];\n\n  const NON_RESERVED_WORDS = [\n    \"add\",\n    \"asc\",\n    \"collation\",\n    \"desc\",\n    \"final\",\n    \"first\",\n    \"last\",\n    \"view\"\n  ];\n\n  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\n  const RESERVED_WORDS = [\n    \"abs\",\n    \"acos\",\n    \"all\",\n    \"allocate\",\n    \"alter\",\n    \"and\",\n    \"any\",\n    \"are\",\n    \"array\",\n    \"array_agg\",\n    \"array_max_cardinality\",\n    \"as\",\n    \"asensitive\",\n    \"asin\",\n    \"asymmetric\",\n    \"at\",\n    \"atan\",\n    \"atomic\",\n    \"authorization\",\n    \"avg\",\n    \"begin\",\n    \"begin_frame\",\n    \"begin_partition\",\n    \"between\",\n    \"bigint\",\n    \"binary\",\n    \"blob\",\n    \"boolean\",\n    \"both\",\n    \"by\",\n    \"call\",\n    \"called\",\n    \"cardinality\",\n    \"cascaded\",\n    \"case\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"char\",\n    \"char_length\",\n    \"character\",\n    \"character_length\",\n    \"check\",\n    \"classifier\",\n    \"clob\",\n    \"close\",\n    \"coalesce\",\n    \"collate\",\n    \"collect\",\n    \"column\",\n    \"commit\",\n    \"condition\",\n    \"connect\",\n    \"constraint\",\n    \"contains\",\n    \"convert\",\n    \"copy\",\n    \"corr\",\n    \"corresponding\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"create\",\n    \"cross\",\n    \"cube\",\n    \"cume_dist\",\n    \"current\",\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_row\",\n    \"current_schema\",\n    \"current_time\",\n    \"current_timestamp\",\n    \"current_path\",\n    \"current_role\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"cursor\",\n    \"cycle\",\n    \"date\",\n    \"day\",\n    \"deallocate\",\n    \"dec\",\n    \"decimal\",\n    \"decfloat\",\n    \"declare\",\n    \"default\",\n    \"define\",\n    \"delete\",\n    \"dense_rank\",\n    \"deref\",\n    \"describe\",\n    \"deterministic\",\n    \"disconnect\",\n    \"distinct\",\n    \"double\",\n    \"drop\",\n    \"dynamic\",\n    \"each\",\n    \"element\",\n    \"else\",\n    \"empty\",\n    \"end\",\n    \"end_frame\",\n    \"end_partition\",\n    \"end-exec\",\n    \"equals\",\n    \"escape\",\n    \"every\",\n    \"except\",\n    \"exec\",\n    \"execute\",\n    \"exists\",\n    \"exp\",\n    \"external\",\n    \"extract\",\n    \"false\",\n    \"fetch\",\n    \"filter\",\n    \"first_value\",\n    \"float\",\n    \"floor\",\n    \"for\",\n    \"foreign\",\n    \"frame_row\",\n    \"free\",\n    \"from\",\n    \"full\",\n    \"function\",\n    \"fusion\",\n    \"get\",\n    \"global\",\n    \"grant\",\n    \"group\",\n    \"grouping\",\n    \"groups\",\n    \"having\",\n    \"hold\",\n    \"hour\",\n    \"identity\",\n    \"in\",\n    \"indicator\",\n    \"initial\",\n    \"inner\",\n    \"inout\",\n    \"insensitive\",\n    \"insert\",\n    \"int\",\n    \"integer\",\n    \"intersect\",\n    \"intersection\",\n    \"interval\",\n    \"into\",\n    \"is\",\n    \"join\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"language\",\n    \"large\",\n    \"last_value\",\n    \"lateral\",\n    \"lead\",\n    \"leading\",\n    \"left\",\n    \"like\",\n    \"like_regex\",\n    \"listagg\",\n    \"ln\",\n    \"local\",\n    \"localtime\",\n    \"localtimestamp\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"match\",\n    \"match_number\",\n    \"match_recognize\",\n    \"matches\",\n    \"max\",\n    \"member\",\n    \"merge\",\n    \"method\",\n    \"min\",\n    \"minute\",\n    \"mod\",\n    \"modifies\",\n    \"module\",\n    \"month\",\n    \"multiset\",\n    \"national\",\n    \"natural\",\n    \"nchar\",\n    \"nclob\",\n    \"new\",\n    \"no\",\n    \"none\",\n    \"normalize\",\n    \"not\",\n    \"nth_value\",\n    \"ntile\",\n    \"null\",\n    \"nullif\",\n    \"numeric\",\n    \"octet_length\",\n    \"occurrences_regex\",\n    \"of\",\n    \"offset\",\n    \"old\",\n    \"omit\",\n    \"on\",\n    \"one\",\n    \"only\",\n    \"open\",\n    \"or\",\n    \"order\",\n    \"out\",\n    \"outer\",\n    \"over\",\n    \"overlaps\",\n    \"overlay\",\n    \"parameter\",\n    \"partition\",\n    \"pattern\",\n    \"per\",\n    \"percent\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"period\",\n    \"portion\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"precedes\",\n    \"precision\",\n    \"prepare\",\n    \"primary\",\n    \"procedure\",\n    \"ptf\",\n    \"range\",\n    \"rank\",\n    \"reads\",\n    \"real\",\n    \"recursive\",\n    \"ref\",\n    \"references\",\n    \"referencing\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"release\",\n    \"result\",\n    \"return\",\n    \"returns\",\n    \"revoke\",\n    \"right\",\n    \"rollback\",\n    \"rollup\",\n    \"row\",\n    \"row_number\",\n    \"rows\",\n    \"running\",\n    \"savepoint\",\n    \"scope\",\n    \"scroll\",\n    \"search\",\n    \"second\",\n    \"seek\",\n    \"select\",\n    \"sensitive\",\n    \"session_user\",\n    \"set\",\n    \"show\",\n    \"similar\",\n    \"sin\",\n    \"sinh\",\n    \"skip\",\n    \"smallint\",\n    \"some\",\n    \"specific\",\n    \"specifictype\",\n    \"sql\",\n    \"sqlexception\",\n    \"sqlstate\",\n    \"sqlwarning\",\n    \"sqrt\",\n    \"start\",\n    \"static\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"submultiset\",\n    \"subset\",\n    \"substring\",\n    \"substring_regex\",\n    \"succeeds\",\n    \"sum\",\n    \"symmetric\",\n    \"system\",\n    \"system_time\",\n    \"system_user\",\n    \"table\",\n    \"tablesample\",\n    \"tan\",\n    \"tanh\",\n    \"then\",\n    \"time\",\n    \"timestamp\",\n    \"timezone_hour\",\n    \"timezone_minute\",\n    \"to\",\n    \"trailing\",\n    \"translate\",\n    \"translate_regex\",\n    \"translation\",\n    \"treat\",\n    \"trigger\",\n    \"trim\",\n    \"trim_array\",\n    \"true\",\n    \"truncate\",\n    \"uescape\",\n    \"union\",\n    \"unique\",\n    \"unknown\",\n    \"unnest\",\n    \"update\",\n    \"upper\",\n    \"user\",\n    \"using\",\n    \"value\",\n    \"values\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"varbinary\",\n    \"varchar\",\n    \"varying\",\n    \"versioning\",\n    \"when\",\n    \"whenever\",\n    \"where\",\n    \"width_bucket\",\n    \"window\",\n    \"with\",\n    \"within\",\n    \"without\",\n    \"year\",\n  ];\n\n  // these are reserved words we have identified to be functions\n  // and should only be highlighted in a dispatch-like context\n  // ie, array_agg(...), etc.\n  const RESERVED_FUNCTIONS = [\n    \"abs\",\n    \"acos\",\n    \"array_agg\",\n    \"asin\",\n    \"atan\",\n    \"avg\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"coalesce\",\n    \"corr\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"cume_dist\",\n    \"dense_rank\",\n    \"deref\",\n    \"element\",\n    \"exp\",\n    \"extract\",\n    \"first_value\",\n    \"floor\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"last_value\",\n    \"lead\",\n    \"listagg\",\n    \"ln\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"max\",\n    \"min\",\n    \"mod\",\n    \"nth_value\",\n    \"ntile\",\n    \"nullif\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"rank\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"row_number\",\n    \"sin\",\n    \"sinh\",\n    \"sqrt\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"substring\",\n    \"substring_regex\",\n    \"sum\",\n    \"tan\",\n    \"tanh\",\n    \"translate\",\n    \"translate_regex\",\n    \"treat\",\n    \"trim\",\n    \"trim_array\",\n    \"unnest\",\n    \"upper\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"width_bucket\",\n  ];\n\n  // these functions can\n  const POSSIBLE_WITHOUT_PARENS = [\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_schema\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"session_user\",\n    \"system_time\",\n    \"system_user\",\n    \"current_time\",\n    \"localtime\",\n    \"current_timestamp\",\n    \"localtimestamp\"\n  ];\n\n  // those exist to boost relevance making these very\n  // \"SQL like\" keyword combos worth +1 extra relevance\n  const COMBOS = [\n    \"create table\",\n    \"insert into\",\n    \"primary key\",\n    \"foreign key\",\n    \"not null\",\n    \"alter table\",\n    \"add constraint\",\n    \"grouping sets\",\n    \"on overflow\",\n    \"character set\",\n    \"respect nulls\",\n    \"ignore nulls\",\n    \"nulls first\",\n    \"nulls last\",\n    \"depth first\",\n    \"breadth first\"\n  ];\n\n  const FUNCTIONS = RESERVED_FUNCTIONS;\n\n  const KEYWORDS = [\n    ...RESERVED_WORDS,\n    ...NON_RESERVED_WORDS\n  ].filter((keyword) => {\n    return !RESERVED_FUNCTIONS.includes(keyword);\n  });\n\n  const VARIABLE = {\n    scope: \"variable\",\n    match: /@[a-z0-9][a-z0-9_]*/,\n  };\n\n  const OPERATOR = {\n    scope: \"operator\",\n    match: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n    relevance: 0,\n  };\n\n  const FUNCTION_CALL = {\n    match: regex.concat(/\\b/, regex.either(...FUNCTIONS), /\\s*\\(/),\n    relevance: 0,\n    keywords: { built_in: FUNCTIONS }\n  };\n\n  // turns a multi-word keyword combo into a regex that doesn't\n  // care about extra whitespace etc.\n  // input: \"START QUERY\"\n  // output: /\\bSTART\\s+QUERY\\b/\n  function kws_to_regex(list) {\n    return regex.concat(\n      /\\b/,\n      regex.either(...list.map((kw) => {\n        return kw.replace(/\\s+/, \"\\\\s+\")\n      })),\n      /\\b/\n    )\n  }\n\n  const MULTI_WORD_KEYWORDS = {\n    scope: \"keyword\",\n    match: kws_to_regex(COMBOS),\n    relevance: 0,\n  };\n\n  // keywords with less than 3 letters are reduced in relevancy\n  function reduceRelevancy(list, {\n    exceptions, when\n  } = {}) {\n    const qualifyFn = when;\n    exceptions = exceptions || [];\n    return list.map((item) => {\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n        return item;\n      } else if (qualifyFn(item)) {\n        return `${item}|0`;\n      } else {\n        return item;\n      }\n    });\n  }\n\n  return {\n    name: 'SQL',\n    case_insensitive: true,\n    // does not include {} or HTML tags `</`\n    illegal: /[{}]|<\\//,\n    keywords: {\n      $pattern: /\\b[\\w\\.]+/,\n      keyword:\n        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\n      literal: LITERALS,\n      type: TYPES,\n      built_in: POSSIBLE_WITHOUT_PARENS\n    },\n    contains: [\n      {\n        scope: \"type\",\n        match: kws_to_regex(MULTI_WORD_TYPES)\n      },\n      MULTI_WORD_KEYWORDS,\n      FUNCTION_CALL,\n      VARIABLE,\n      STRING,\n      QUOTED_IDENTIFIER,\n      hljs.C_NUMBER_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE,\n      OPERATOR\n    ]\n  };\n}\n\nexport { sql as default };\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\nconst keywordWrapper = keyword => concat(\n  /\\b/,\n  keyword,\n  /\\w$/.test(keyword) ? /\\b/ : /\\B/\n);\n\n// Keywords that require a leading dot.\nconst dotKeywords = [\n  'Protocol', // contextual\n  'Type' // contextual\n].map(keywordWrapper);\n\n// Keywords that may have a leading dot.\nconst optionalDotKeywords = [\n  'init',\n  'self'\n].map(keywordWrapper);\n\n// should register as keyword, not type\nconst keywordTypes = [\n  'Any',\n  'Self'\n];\n\n// Regular keywords and literals.\nconst keywords = [\n  // strings below will be fed into the regular `keywords` engine while regex\n  // will result in additional modes being created to scan for those keywords to\n  // avoid conflicts with other rules\n  'actor',\n  'any', // contextual\n  'associatedtype',\n  'async',\n  'await',\n  /as\\?/, // operator\n  /as!/, // operator\n  'as', // operator\n  'borrowing', // contextual\n  'break',\n  'case',\n  'catch',\n  'class',\n  'consume', // contextual\n  'consuming', // contextual\n  'continue',\n  'convenience', // contextual\n  'copy', // contextual\n  'default',\n  'defer',\n  'deinit',\n  'didSet', // contextual\n  'distributed',\n  'do',\n  'dynamic', // contextual\n  'each',\n  'else',\n  'enum',\n  'extension',\n  'fallthrough',\n  /fileprivate\\(set\\)/,\n  'fileprivate',\n  'final', // contextual\n  'for',\n  'func',\n  'get', // contextual\n  'guard',\n  'if',\n  'import',\n  'indirect', // contextual\n  'infix', // contextual\n  /init\\?/,\n  /init!/,\n  'inout',\n  /internal\\(set\\)/,\n  'internal',\n  'in',\n  'is', // operator\n  'isolated', // contextual\n  'nonisolated', // contextual\n  'lazy', // contextual\n  'let',\n  'macro',\n  'mutating', // contextual\n  'nonmutating', // contextual\n  /open\\(set\\)/, // contextual\n  'open', // contextual\n  'operator',\n  'optional', // contextual\n  'override', // contextual\n  'package',\n  'postfix', // contextual\n  'precedencegroup',\n  'prefix', // contextual\n  /private\\(set\\)/,\n  'private',\n  'protocol',\n  /public\\(set\\)/,\n  'public',\n  'repeat',\n  'required', // contextual\n  'rethrows',\n  'return',\n  'set', // contextual\n  'some', // contextual\n  'static',\n  'struct',\n  'subscript',\n  'super',\n  'switch',\n  'throws',\n  'throw',\n  /try\\?/, // operator\n  /try!/, // operator\n  'try', // operator\n  'typealias',\n  /unowned\\(safe\\)/, // contextual\n  /unowned\\(unsafe\\)/, // contextual\n  'unowned', // contextual\n  'var',\n  'weak', // contextual\n  'where',\n  'while',\n  'willSet' // contextual\n];\n\n// NOTE: Contextual keywords are reserved only in specific contexts.\n// Ideally, these should be matched using modes to avoid false positives.\n\n// Literals.\nconst literals = [\n  'false',\n  'nil',\n  'true'\n];\n\n// Keywords used in precedence groups.\nconst precedencegroupKeywords = [\n  'assignment',\n  'associativity',\n  'higherThan',\n  'left',\n  'lowerThan',\n  'none',\n  'right'\n];\n\n// Keywords that start with a number sign (#).\n// #(un)available is handled separately.\nconst numberSignKeywords = [\n  '#colorLiteral',\n  '#column',\n  '#dsohandle',\n  '#else',\n  '#elseif',\n  '#endif',\n  '#error',\n  '#file',\n  '#fileID',\n  '#fileLiteral',\n  '#filePath',\n  '#function',\n  '#if',\n  '#imageLiteral',\n  '#keyPath',\n  '#line',\n  '#selector',\n  '#sourceLocation',\n  '#warning'\n];\n\n// Global functions in the Standard Library.\nconst builtIns = [\n  'abs',\n  'all',\n  'any',\n  'assert',\n  'assertionFailure',\n  'debugPrint',\n  'dump',\n  'fatalError',\n  'getVaList',\n  'isKnownUniquelyReferenced',\n  'max',\n  'min',\n  'numericCast',\n  'pointwiseMax',\n  'pointwiseMin',\n  'precondition',\n  'preconditionFailure',\n  'print',\n  'readLine',\n  'repeatElement',\n  'sequence',\n  'stride',\n  'swap',\n  'swift_unboxFromSwiftValueWithType',\n  'transcode',\n  'type',\n  'unsafeBitCast',\n  'unsafeDowncast',\n  'withExtendedLifetime',\n  'withUnsafeMutablePointer',\n  'withUnsafePointer',\n  'withVaList',\n  'withoutActuallyEscaping',\n  'zip'\n];\n\n// Valid first characters for operators.\nconst operatorHead = either(\n  /[/=\\-+!*%<>&|^~?]/,\n  /[\\u00A1-\\u00A7]/,\n  /[\\u00A9\\u00AB]/,\n  /[\\u00AC\\u00AE]/,\n  /[\\u00B0\\u00B1]/,\n  /[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/,\n  /[\\u2016-\\u2017]/,\n  /[\\u2020-\\u2027]/,\n  /[\\u2030-\\u203E]/,\n  /[\\u2041-\\u2053]/,\n  /[\\u2055-\\u205E]/,\n  /[\\u2190-\\u23FF]/,\n  /[\\u2500-\\u2775]/,\n  /[\\u2794-\\u2BFF]/,\n  /[\\u2E00-\\u2E7F]/,\n  /[\\u3001-\\u3003]/,\n  /[\\u3008-\\u3020]/,\n  /[\\u3030]/\n);\n\n// Valid characters for operators.\nconst operatorCharacter = either(\n  operatorHead,\n  /[\\u0300-\\u036F]/,\n  /[\\u1DC0-\\u1DFF]/,\n  /[\\u20D0-\\u20FF]/,\n  /[\\uFE00-\\uFE0F]/,\n  /[\\uFE20-\\uFE2F]/\n  // TODO: The following characters are also allowed, but the regex isn't supported yet.\n  // /[\\u{E0100}-\\u{E01EF}]/u\n);\n\n// Valid operator.\nconst operator = concat(operatorHead, operatorCharacter, '*');\n\n// Valid first characters for identifiers.\nconst identifierHead = either(\n  /[a-zA-Z_]/,\n  /[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/,\n  /[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/,\n  /[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/,\n  /[\\u1E00-\\u1FFF]/,\n  /[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/,\n  /[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/,\n  /[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/,\n  /[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/,\n  /[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/,\n  /[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/ // Should be /[\\uFE47-\\uFFFD]/, but we have to exclude FEFF.\n  // The following characters are also allowed, but the regexes aren't supported yet.\n  // /[\\u{10000}-\\u{1FFFD}\\u{20000-\\u{2FFFD}\\u{30000}-\\u{3FFFD}\\u{40000}-\\u{4FFFD}]/u,\n  // /[\\u{50000}-\\u{5FFFD}\\u{60000-\\u{6FFFD}\\u{70000}-\\u{7FFFD}\\u{80000}-\\u{8FFFD}]/u,\n  // /[\\u{90000}-\\u{9FFFD}\\u{A0000-\\u{AFFFD}\\u{B0000}-\\u{BFFFD}\\u{C0000}-\\u{CFFFD}]/u,\n  // /[\\u{D0000}-\\u{DFFFD}\\u{E0000-\\u{EFFFD}]/u\n);\n\n// Valid characters for identifiers.\nconst identifierCharacter = either(\n  identifierHead,\n  /\\d/,\n  /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/\n);\n\n// Valid identifier.\nconst identifier = concat(identifierHead, identifierCharacter, '*');\n\n// Valid type identifier.\nconst typeIdentifier = concat(/[A-Z]/, identifierCharacter, '*');\n\n// Built-in attributes, which are highlighted as keywords.\n// @available is handled separately.\n// https://docs.swift.org/swift-book/documentation/the-swift-programming-language/attributes\nconst keywordAttributes = [\n  'attached',\n  'autoclosure',\n  concat(/convention\\(/, either('swift', 'block', 'c'), /\\)/),\n  'discardableResult',\n  'dynamicCallable',\n  'dynamicMemberLookup',\n  'escaping',\n  'freestanding',\n  'frozen',\n  'GKInspectable',\n  'IBAction',\n  'IBDesignable',\n  'IBInspectable',\n  'IBOutlet',\n  'IBSegueAction',\n  'inlinable',\n  'main',\n  'nonobjc',\n  'NSApplicationMain',\n  'NSCopying',\n  'NSManaged',\n  concat(/objc\\(/, identifier, /\\)/),\n  'objc',\n  'objcMembers',\n  'propertyWrapper',\n  'requires_stored_property_inits',\n  'resultBuilder',\n  'Sendable',\n  'testable',\n  'UIApplicationMain',\n  'unchecked',\n  'unknown',\n  'usableFromInline',\n  'warn_unqualified_access'\n];\n\n// Contextual keywords used in @available and #(un)available.\nconst availabilityKeywords = [\n  'iOS',\n  'iOSApplicationExtension',\n  'macOS',\n  'macOSApplicationExtension',\n  'macCatalyst',\n  'macCatalystApplicationExtension',\n  'watchOS',\n  'watchOSApplicationExtension',\n  'tvOS',\n  'tvOSApplicationExtension',\n  'swift'\n];\n\n/*\nLanguage: Swift\nDescription: Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.\nAuthor: Steven Van Impe <steven.vanimpe@icloud.com>\nContributors: Chris Eidhof <chris@eidhof.nl>, Nate Cook <natecook@gmail.com>, Alexander Lichter <manniL@gmx.net>, Richard Gibson <gibson042@github>\nWebsite: https://swift.org\nCategory: common, system\n*/\n\n\n/** @type LanguageFn */\nfunction swift(hljs) {\n  const WHITESPACE = {\n    match: /\\s+/,\n    relevance: 0\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID411\n  const BLOCK_COMMENT = hljs.COMMENT(\n    '/\\\\*',\n    '\\\\*/',\n    { contains: [ 'self' ] }\n  );\n  const COMMENTS = [\n    hljs.C_LINE_COMMENT_MODE,\n    BLOCK_COMMENT\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID413\n  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html\n  const DOT_KEYWORD = {\n    match: [\n      /\\./,\n      either(...dotKeywords, ...optionalDotKeywords)\n    ],\n    className: { 2: \"keyword\" }\n  };\n  const KEYWORD_GUARD = {\n    // Consume .keyword to prevent highlighting properties and methods as keywords.\n    match: concat(/\\./, either(...keywords)),\n    relevance: 0\n  };\n  const PLAIN_KEYWORDS = keywords\n    .filter(kw => typeof kw === 'string')\n    .concat([ \"_|0\" ]); // seems common, so 0 relevance\n  const REGEX_KEYWORDS = keywords\n    .filter(kw => typeof kw !== 'string') // find regex\n    .concat(keywordTypes)\n    .map(keywordWrapper);\n  const KEYWORD = { variants: [\n    {\n      className: 'keyword',\n      match: either(...REGEX_KEYWORDS, ...optionalDotKeywords)\n    }\n  ] };\n  // find all the regular keywords\n  const KEYWORDS = {\n    $pattern: either(\n      /\\b\\w+/, // regular keywords\n      /#\\w+/ // number keywords\n    ),\n    keyword: PLAIN_KEYWORDS\n      .concat(numberSignKeywords),\n    literal: literals\n  };\n  const KEYWORD_MODES = [\n    DOT_KEYWORD,\n    KEYWORD_GUARD,\n    KEYWORD\n  ];\n\n  // https://github.com/apple/swift/tree/main/stdlib/public/core\n  const BUILT_IN_GUARD = {\n    // Consume .built_in to prevent highlighting properties and methods.\n    match: concat(/\\./, either(...builtIns)),\n    relevance: 0\n  };\n  const BUILT_IN = {\n    className: 'built_in',\n    match: concat(/\\b/, either(...builtIns), /(?=\\()/)\n  };\n  const BUILT_INS = [\n    BUILT_IN_GUARD,\n    BUILT_IN\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID418\n  const OPERATOR_GUARD = {\n    // Prevent -> from being highlighting as an operator.\n    match: /->/,\n    relevance: 0\n  };\n  const OPERATOR = {\n    className: 'operator',\n    relevance: 0,\n    variants: [\n      { match: operator },\n      {\n        // dot-operator: only operators that start with a dot are allowed to use dots as\n        // characters (..., ...<, .*, etc). So there rule here is: a dot followed by one or more\n        // characters that may also include dots.\n        match: `\\\\.(\\\\.|${operatorCharacter})+` }\n    ]\n  };\n  const OPERATORS = [\n    OPERATOR_GUARD,\n    OPERATOR\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_numeric-literal\n  // TODO: Update for leading `-` after lookbehind is supported everywhere\n  const decimalDigits = '([0-9]_*)+';\n  const hexDigits = '([0-9a-fA-F]_*)+';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal floating-point-literal (subsumes decimal-literal)\n      { match: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\b` },\n      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\n      { match: `\\\\b0x(${hexDigits})(\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\b` },\n      // octal-literal\n      { match: /\\b0o([0-7]_*)+\\b/ },\n      // binary-literal\n      { match: /\\b0b([01]_*)+\\b/ }\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_string-literal\n  const ESCAPED_CHARACTER = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    variants: [\n      { match: concat(/\\\\/, rawDelimiter, /[0\\\\tnr\"']/) },\n      { match: concat(/\\\\/, rawDelimiter, /u\\{[0-9a-fA-F]{1,8}\\}/) }\n    ]\n  });\n  const ESCAPED_NEWLINE = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    match: concat(/\\\\/, rawDelimiter, /[\\t ]*(?:[\\r\\n]|\\r\\n)/)\n  });\n  const INTERPOLATION = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    label: \"interpol\",\n    begin: concat(/\\\\/, rawDelimiter, /\\(/),\n    end: /\\)/\n  });\n  const MULTILINE_STRING = (rawDelimiter = \"\") => ({\n    begin: concat(rawDelimiter, /\"\"\"/),\n    end: concat(/\"\"\"/, rawDelimiter),\n    contains: [\n      ESCAPED_CHARACTER(rawDelimiter),\n      ESCAPED_NEWLINE(rawDelimiter),\n      INTERPOLATION(rawDelimiter)\n    ]\n  });\n  const SINGLE_LINE_STRING = (rawDelimiter = \"\") => ({\n    begin: concat(rawDelimiter, /\"/),\n    end: concat(/\"/, rawDelimiter),\n    contains: [\n      ESCAPED_CHARACTER(rawDelimiter),\n      INTERPOLATION(rawDelimiter)\n    ]\n  });\n  const STRING = {\n    className: 'string',\n    variants: [\n      MULTILINE_STRING(),\n      MULTILINE_STRING(\"#\"),\n      MULTILINE_STRING(\"##\"),\n      MULTILINE_STRING(\"###\"),\n      SINGLE_LINE_STRING(),\n      SINGLE_LINE_STRING(\"#\"),\n      SINGLE_LINE_STRING(\"##\"),\n      SINGLE_LINE_STRING(\"###\")\n    ]\n  };\n\n  const REGEXP_CONTENTS = [\n    hljs.BACKSLASH_ESCAPE,\n    {\n      begin: /\\[/,\n      end: /\\]/,\n      relevance: 0,\n      contains: [ hljs.BACKSLASH_ESCAPE ]\n    }\n  ];\n\n  const BARE_REGEXP_LITERAL = {\n    begin: /\\/[^\\s](?=[^/\\n]*\\/)/,\n    end: /\\//,\n    contains: REGEXP_CONTENTS\n  };\n\n  const EXTENDED_REGEXP_LITERAL = (rawDelimiter) => {\n    const begin = concat(rawDelimiter, /\\//);\n    const end = concat(/\\//, rawDelimiter);\n    return {\n      begin,\n      end,\n      contains: [\n        ...REGEXP_CONTENTS,\n        {\n          scope: \"comment\",\n          begin: `#(?!.*${end})`,\n          end: /$/,\n        },\n      ],\n    };\n  };\n\n  // https://docs.swift.org/swift-book/documentation/the-swift-programming-language/lexicalstructure/#Regular-Expression-Literals\n  const REGEXP = {\n    scope: \"regexp\",\n    variants: [\n      EXTENDED_REGEXP_LITERAL('###'),\n      EXTENDED_REGEXP_LITERAL('##'),\n      EXTENDED_REGEXP_LITERAL('#'),\n      BARE_REGEXP_LITERAL\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID412\n  const QUOTED_IDENTIFIER = { match: concat(/`/, identifier, /`/) };\n  const IMPLICIT_PARAMETER = {\n    className: 'variable',\n    match: /\\$\\d+/\n  };\n  const PROPERTY_WRAPPER_PROJECTION = {\n    className: 'variable',\n    match: `\\\\$${identifierCharacter}+`\n  };\n  const IDENTIFIERS = [\n    QUOTED_IDENTIFIER,\n    IMPLICIT_PARAMETER,\n    PROPERTY_WRAPPER_PROJECTION\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Attributes.html\n  const AVAILABLE_ATTRIBUTE = {\n    match: /(@|#(un)?)available/,\n    scope: 'keyword',\n    starts: { contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: availabilityKeywords,\n        contains: [\n          ...OPERATORS,\n          NUMBER,\n          STRING\n        ]\n      }\n    ] }\n  };\n\n  const KEYWORD_ATTRIBUTE = {\n    scope: 'keyword',\n    match: concat(/@/, either(...keywordAttributes), lookahead(either(/\\(/, /\\s+/))),\n  };\n\n  const USER_DEFINED_ATTRIBUTE = {\n    scope: 'meta',\n    match: concat(/@/, identifier)\n  };\n\n  const ATTRIBUTES = [\n    AVAILABLE_ATTRIBUTE,\n    KEYWORD_ATTRIBUTE,\n    USER_DEFINED_ATTRIBUTE\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Types.html\n  const TYPE = {\n    match: lookahead(/\\b[A-Z]/),\n    relevance: 0,\n    contains: [\n      { // Common Apple frameworks, for relevance boost\n        className: 'type',\n        match: concat(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, identifierCharacter, '+')\n      },\n      { // Type identifier\n        className: 'type',\n        match: typeIdentifier,\n        relevance: 0\n      },\n      { // Optional type\n        match: /[?!]+/,\n        relevance: 0\n      },\n      { // Variadic parameter\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      { // Protocol composition\n        match: concat(/\\s+&\\s+/, lookahead(typeIdentifier)),\n        relevance: 0\n      }\n    ]\n  };\n  const GENERIC_ARGUMENTS = {\n    begin: /</,\n    end: />/,\n    keywords: KEYWORDS,\n    contains: [\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...ATTRIBUTES,\n      OPERATOR_GUARD,\n      TYPE\n    ]\n  };\n  TYPE.contains.push(GENERIC_ARGUMENTS);\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID552\n  // Prevents element names from being highlighted as keywords.\n  const TUPLE_ELEMENT_NAME = {\n    match: concat(identifier, /\\s*:/),\n    keywords: \"_|0\",\n    relevance: 0\n  };\n  // Matches tuples as well as the parameter list of a function type.\n  const TUPLE = {\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0,\n    keywords: KEYWORDS,\n    contains: [\n      'self',\n      TUPLE_ELEMENT_NAME,\n      ...COMMENTS,\n      REGEXP,\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS,\n      ...ATTRIBUTES,\n      TYPE\n    ]\n  };\n\n  const GENERIC_PARAMETERS = {\n    begin: /</,\n    end: />/,\n    keywords: 'repeat each',\n    contains: [\n      ...COMMENTS,\n      TYPE\n    ]\n  };\n  const FUNCTION_PARAMETER_NAME = {\n    begin: either(\n      lookahead(concat(identifier, /\\s*:/)),\n      lookahead(concat(identifier, /\\s+/, identifier, /\\s*:/))\n    ),\n    end: /:/,\n    relevance: 0,\n    contains: [\n      {\n        className: 'keyword',\n        match: /\\b_\\b/\n      },\n      {\n        className: 'params',\n        match: identifier\n      }\n    ]\n  };\n  const FUNCTION_PARAMETERS = {\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      FUNCTION_PARAMETER_NAME,\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...ATTRIBUTES,\n      TYPE,\n      TUPLE\n    ],\n    endsParent: true,\n    illegal: /[\"']/\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID362\n  // https://docs.swift.org/swift-book/documentation/the-swift-programming-language/declarations/#Macro-Declaration\n  const FUNCTION_OR_MACRO = {\n    match: [\n      /(func|macro)/,\n      /\\s+/,\n      either(QUOTED_IDENTIFIER.match, identifier, operator)\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      GENERIC_PARAMETERS,\n      FUNCTION_PARAMETERS,\n      WHITESPACE\n    ],\n    illegal: [\n      /\\[/,\n      /%/\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID375\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID379\n  const INIT_SUBSCRIPT = {\n    match: [\n      /\\b(?:subscript|init[?!]?)/,\n      /\\s*(?=[<(])/,\n    ],\n    className: { 1: \"keyword\" },\n    contains: [\n      GENERIC_PARAMETERS,\n      FUNCTION_PARAMETERS,\n      WHITESPACE\n    ],\n    illegal: /\\[|%/\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID380\n  const OPERATOR_DECLARATION = {\n    match: [\n      /operator/,\n      /\\s+/,\n      operator\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title\"\n    }\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID550\n  const PRECEDENCEGROUP = {\n    begin: [\n      /precedencegroup/,\n      /\\s+/,\n      typeIdentifier\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title\"\n    },\n    contains: [ TYPE ],\n    keywords: [\n      ...precedencegroupKeywords,\n      ...literals\n    ],\n    end: /}/\n  };\n\n  const CLASS_FUNC_DECLARATION = {\n    match: [\n      /class\\b/,          \n      /\\s+/,\n      /func\\b/,\n      /\\s+/,\n      /\\b[A-Za-z_][A-Za-z0-9_]*\\b/ \n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"keyword\",\n      5: \"title.function\"\n    }\n  };\n\n  const CLASS_VAR_DECLARATION = {\n    match: [\n      /class\\b/,\n      /\\s+/,          \n      /var\\b/, \n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"keyword\"\n    }\n  };\n\n  const TYPE_DECLARATION = {\n    begin: [\n      /(struct|protocol|class|extension|enum|actor)/,\n      /\\s+/,\n      identifier,\n      /\\s*/,\n    ],\n    beginScope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    },\n    keywords: KEYWORDS,\n    contains: [\n      GENERIC_PARAMETERS,\n      ...KEYWORD_MODES,\n      {\n        begin: /:/,\n        end: /\\{/,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            scope: \"title.class.inherited\",\n            match: typeIdentifier,\n          },\n          ...KEYWORD_MODES,\n        ],\n        relevance: 0,\n      },\n    ]\n  };\n\n  // Add supported submodes to string interpolation.\n  for (const variant of STRING.variants) {\n    const interpolation = variant.contains.find(mode => mode.label === \"interpol\");\n    // TODO: Interpolation can contain any expression, so there's room for improvement here.\n    interpolation.keywords = KEYWORDS;\n    const submodes = [\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS\n    ];\n    interpolation.contains = [\n      ...submodes,\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          'self',\n          ...submodes\n        ]\n      }\n    ];\n  }\n\n  return {\n    name: 'Swift',\n    keywords: KEYWORDS,\n    contains: [\n      ...COMMENTS,\n      FUNCTION_OR_MACRO,\n      INIT_SUBSCRIPT,\n      CLASS_FUNC_DECLARATION,\n      CLASS_VAR_DECLARATION,\n      TYPE_DECLARATION,\n      OPERATOR_DECLARATION,\n      PRECEDENCEGROUP,\n      {\n        beginKeywords: 'import',\n        end: /$/,\n        contains: [ ...COMMENTS ],\n        relevance: 0\n      },\n      REGEXP,\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS,\n      ...ATTRIBUTES,\n      TYPE,\n      TUPLE\n    ]\n  };\n}\n\nexport { swift as default };\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\",\n  // It's reached stage 3, which is \"recommended for implementation\":\n  \"using\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n  // Fundamental objects\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Symbol\",\n  // numbers and dates\n  \"Math\",\n  \"Date\",\n  \"Number\",\n  \"BigInt\",\n  // text\n  \"String\",\n  \"RegExp\",\n  // Indexed collections\n  \"Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int8Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  // Keyed collections\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  // Structured data\n  \"ArrayBuffer\",\n  \"SharedArrayBuffer\",\n  \"Atomics\",\n  \"DataView\",\n  \"JSON\",\n  // Control abstraction objects\n  \"Promise\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"AsyncFunction\",\n  // Reflection\n  \"Reflect\",\n  \"Proxy\",\n  // Internationalization\n  \"Intl\",\n  // WebAssembly\n  \"WebAssembly\"\n];\n\nconst ERROR_TYPES = [\n  \"Error\",\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"sessionStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n        // HTML should not include another raw `<` inside a tag\n        // nested type?\n        // `<Array<Array<number>>`, etc.\n        nextChar === \"<\" ||\n        // the , gives away that this is not HTML\n        // `<T, A extends keyof T, V>`\n        nextChar === \",\"\n        ) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if ((m = afterMatch.match(/^\\s*=/))) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: '\\.?html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: '\\.?css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const GRAPHQL_TEMPLATE = {\n    begin: '\\.?gql`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'graphql'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    GRAPHQL_TEMPLATE,\n    TEMPLATE_STRING,\n    // Skip numbers when they are part of a variable name\n    { match: /\\$\\d+/ },\n    NUMBER,\n    // This is intentional:\n    // See https://github.com/highlightjs/highlight.js/issues/3288\n    // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /(\\s*)\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    // convert this to negative lookbehind in v12\n    begin: /(\\s*)\\(/, // to match the parms with\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      // class Car extends vehicle\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          5: \"keyword\",\n          7: \"title.class.inherited\"\n        }\n      },\n      // class Car\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match:\n    regex.either(\n      // Hard coded exceptions\n      /\\bJSON/,\n      // Float32Array, OutT\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n      // CSSFactory, CSSFactoryT\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n      // FPs, FPsT\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n      // P\n      // single letters are not highlighted\n      // BLAH\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\",\n        \"import\"\n      ].map(x => `${x}\\\\s*\\\\(`)),\n      IDENT_RE$1, regex.lookahead(/\\s*\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      /(async\\s*)?/, // async is optional\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      GRAPHQL_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        scope: 'attr',\n        match: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /(\\s*)\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\n/*\nLanguage: TypeScript\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\nContributors: Ike Ku <dempfi@yahoo.com>\nDescription: TypeScript is a strict superset of JavaScript\nWebsite: https://www.typescriptlang.org\nCategory: common, scripting\n*/\n\n\n/** @type LanguageFn */\nfunction typescript(hljs) {\n  const regex = hljs.regex;\n  const tsLanguage = javascript(hljs);\n\n  const IDENT_RE$1 = IDENT_RE;\n  const TYPES = [\n    \"any\",\n    \"void\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    \"never\",\n    \"symbol\",\n    \"bigint\",\n    \"unknown\"\n  ];\n  const NAMESPACE = {\n    begin: [\n      /namespace/,\n      /\\s+/,\n      hljs.IDENT_RE\n    ],\n    beginScope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    }\n  };\n  const INTERFACE = {\n    beginKeywords: 'interface',\n    end: /\\{/,\n    excludeEnd: true,\n    keywords: {\n      keyword: 'interface extends',\n      built_in: TYPES\n    },\n    contains: [ tsLanguage.exports.CLASS_REFERENCE ]\n  };\n  const USE_STRICT = {\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use strict['\"]/\n  };\n  const TS_SPECIFIC_KEYWORDS = [\n    \"type\",\n    // \"namespace\",\n    \"interface\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"implements\",\n    \"declare\",\n    \"abstract\",\n    \"readonly\",\n    \"enum\",\n    \"override\",\n    \"satisfies\"\n  ];\n  /*\n    namespace is a TS keyword but it's fine to use it as a variable name too.\n    const message = 'foo';\n    const namespace = 'bar';\n  */\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\n    literal: LITERALS,\n    built_in: BUILT_INS.concat(TYPES),\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  const DECORATOR = {\n    className: 'meta',\n    begin: '@' + IDENT_RE$1,\n  };\n\n  const swapMode = (mode, label, replacement) => {\n    const indx = mode.contains.findIndex(m => m.label === label);\n    if (indx === -1) { throw new Error(\"can not find mode to replace\"); }\n\n    mode.contains.splice(indx, 1, replacement);\n  };\n\n\n  // this should update anywhere keywords is used since\n  // it will be the same actual JS object\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\n\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\n\n  // highlight the function params\n  const ATTRIBUTE_HIGHLIGHT = tsLanguage.contains.find(c => c.scope === \"attr\");\n\n  // take default attr rule and extend it to support optionals\n  const OPTIONAL_KEY_OR_ARGUMENT = Object.assign({},\n    ATTRIBUTE_HIGHLIGHT,\n    { match: regex.concat(IDENT_RE$1, regex.lookahead(/\\s*\\?:/)) }\n  );\n  tsLanguage.exports.PARAMS_CONTAINS.push([\n    tsLanguage.exports.CLASS_REFERENCE, // class reference for highlighting the params types\n    ATTRIBUTE_HIGHLIGHT, // highlight the params key\n    OPTIONAL_KEY_OR_ARGUMENT, // Added for optional property assignment highlighting\n  ]);\n\n  // Add the optional property assignment highlighting for objects or classes\n  tsLanguage.contains = tsLanguage.contains.concat([\n    DECORATOR,\n    NAMESPACE,\n    INTERFACE,\n    OPTIONAL_KEY_OR_ARGUMENT, // Added for optional property assignment highlighting\n  ]);\n\n  // TS gets a simpler shebang rule than JS\n  swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\n  // JS use strict rule purposely excludes `asm` which makes no sense\n  swapMode(tsLanguage, \"use_strict\", USE_STRICT);\n\n  const functionDeclaration = tsLanguage.contains.find(m => m.label === \"func.def\");\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\n\n  Object.assign(tsLanguage, {\n    name: 'TypeScript',\n    aliases: [\n      'ts',\n      'tsx',\n      'mts',\n      'cts'\n    ]\n  });\n\n  return tsLanguage;\n}\n\nexport { typescript as default };\n","/*\nLanguage: Visual Basic .NET\nDescription: Visual Basic .NET (VB.NET) is a multi-paradigm, object-oriented programming language, implemented on the .NET Framework.\nAuthors: Poren Chiang <ren.chiang@gmail.com>, Jan Pilzer\nWebsite: https://docs.microsoft.com/dotnet/visual-basic/getting-started\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction vbnet(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Character Literal\n   * Either a single character (\"a\"C) or an escaped double quote (\"\"\"\"C).\n   */\n  const CHARACTER = {\n    className: 'string',\n    begin: /\"(\"\"|[^/n])\"C\\b/\n  };\n\n  const STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    illegal: /\\n/,\n    contains: [\n      {\n        // double quote escape\n        begin: /\"\"/ }\n    ]\n  };\n\n  /** Date Literals consist of a date, a time, or both separated by whitespace, surrounded by # */\n  const MM_DD_YYYY = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/;\n  const YYYY_MM_DD = /\\d{4}-\\d{1,2}-\\d{1,2}/;\n  const TIME_12H = /(\\d|1[012])(:\\d+){0,2} *(AM|PM)/;\n  const TIME_24H = /\\d{1,2}(:\\d{1,2}){1,2}/;\n  const DATE = {\n    className: 'literal',\n    variants: [\n      {\n        // #YYYY-MM-DD# (ISO-Date) or #M/D/YYYY# (US-Date)\n        begin: regex.concat(/# */, regex.either(YYYY_MM_DD, MM_DD_YYYY), / *#/) },\n      {\n        // #H:mm[:ss]# (24h Time)\n        begin: regex.concat(/# */, TIME_24H, / *#/) },\n      {\n        // #h[:mm[:ss]] A# (12h Time)\n        begin: regex.concat(/# */, TIME_12H, / *#/) },\n      {\n        // date plus time\n        begin: regex.concat(\n          /# */,\n          regex.either(YYYY_MM_DD, MM_DD_YYYY),\n          / +/,\n          regex.either(TIME_12H, TIME_24H),\n          / *#/\n        ) }\n    ]\n  };\n\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        // Float\n        begin: /\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/ },\n      {\n        // Integer (base 10)\n        begin: /\\b\\d[\\d_]*((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 16)\n        begin: /&H[\\dA-F_]+((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 8)\n        begin: /&O[0-7_]+((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 2)\n        begin: /&B[01_]+((U?[SIL])|[%&])?/ }\n    ]\n  };\n\n  const LABEL = {\n    className: 'label',\n    begin: /^\\w+:/\n  };\n\n  const DOC_COMMENT = hljs.COMMENT(/'''/, /$/, { contains: [\n    {\n      className: 'doctag',\n      begin: /<\\/?/,\n      end: />/\n    }\n  ] });\n\n  const COMMENT = hljs.COMMENT(null, /$/, { variants: [\n    { begin: /'/ },\n    {\n      // TODO: Use multi-class for leading spaces\n      begin: /([\\t ]|^)REM(?=\\s)/ }\n  ] });\n\n  const DIRECTIVES = {\n    className: 'meta',\n    // TODO: Use multi-class for indentation once available\n    begin: /[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'const disable else elseif enable end externalsource if region then' },\n    contains: [ COMMENT ]\n  };\n\n  return {\n    name: 'Visual Basic .NET',\n    aliases: [ 'vb' ],\n    case_insensitive: true,\n    classNameAliases: { label: 'symbol' },\n    keywords: {\n      keyword:\n        'addhandler alias aggregate ansi as async assembly auto binary by byref byval ' /* a-b */\n        + 'call case catch class compare const continue custom declare default delegate dim distinct do ' /* c-d */\n        + 'each equals else elseif end enum erase error event exit explicit finally for friend from function ' /* e-f */\n        + 'get global goto group handles if implements imports in inherits interface into iterator ' /* g-i */\n        + 'join key let lib loop me mid module mustinherit mustoverride mybase myclass ' /* j-m */\n        + 'namespace narrowing new next notinheritable notoverridable ' /* n */\n        + 'of off on operator option optional order overloads overridable overrides ' /* o */\n        + 'paramarray partial preserve private property protected public ' /* p */\n        + 'raiseevent readonly redim removehandler resume return ' /* r */\n        + 'select set shadows shared skip static step stop structure strict sub synclock ' /* s */\n        + 'take text then throw to try unicode until using when where while widening with withevents writeonly yield' /* t-y */,\n      built_in:\n        // Operators https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators\n        'addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor '\n        // Type Conversion Functions https://docs.microsoft.com/dotnet/visual-basic/language-reference/functions/type-conversion-functions\n        + 'cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort',\n      type:\n        // Data types https://docs.microsoft.com/dotnet/visual-basic/language-reference/data-types\n        'boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort',\n      literal: 'true false nothing'\n    },\n    illegal:\n      '//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ ' /* reserved deprecated keywords */,\n    contains: [\n      CHARACTER,\n      STRING,\n      DATE,\n      NUMBER,\n      LABEL,\n      DOC_COMMENT,\n      COMMENT,\n      DIRECTIVES\n    ]\n  };\n}\n\nexport { vbnet as default };\n","/*\nLanguage: WebAssembly\nWebsite: https://webassembly.org\nDescription:  Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.\nCategory: web, common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction wasm(hljs) {\n  hljs.regex;\n  const BLOCK_COMMENT = hljs.COMMENT(/\\(;/, /;\\)/);\n  BLOCK_COMMENT.contains.push(\"self\");\n  const LINE_COMMENT = hljs.COMMENT(/;;/, /$/);\n\n  const KWS = [\n    \"anyfunc\",\n    \"block\",\n    \"br\",\n    \"br_if\",\n    \"br_table\",\n    \"call\",\n    \"call_indirect\",\n    \"data\",\n    \"drop\",\n    \"elem\",\n    \"else\",\n    \"end\",\n    \"export\",\n    \"func\",\n    \"global.get\",\n    \"global.set\",\n    \"local.get\",\n    \"local.set\",\n    \"local.tee\",\n    \"get_global\",\n    \"get_local\",\n    \"global\",\n    \"if\",\n    \"import\",\n    \"local\",\n    \"loop\",\n    \"memory\",\n    \"memory.grow\",\n    \"memory.size\",\n    \"module\",\n    \"mut\",\n    \"nop\",\n    \"offset\",\n    \"param\",\n    \"result\",\n    \"return\",\n    \"select\",\n    \"set_global\",\n    \"set_local\",\n    \"start\",\n    \"table\",\n    \"tee_local\",\n    \"then\",\n    \"type\",\n    \"unreachable\"\n  ];\n\n  const FUNCTION_REFERENCE = {\n    begin: [\n      /(?:func|call|call_indirect)/,\n      /\\s+/,\n      /\\$[^\\s)]+/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    }\n  };\n\n  const ARGUMENT = {\n    className: \"variable\",\n    begin: /\\$[\\w_]+/\n  };\n\n  const PARENS = {\n    match: /(\\((?!;)|\\))+/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n\n  const NUMBER = {\n    className: \"number\",\n    relevance: 0,\n    // borrowed from Prism, TODO: split out into variants\n    match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n  };\n\n  const TYPE = {\n    // look-ahead prevents us from gobbling up opcodes\n    match: /(i32|i64|f32|f64)(?!\\.)/,\n    className: \"type\"\n  };\n\n  const MATH_OPERATIONS = {\n    className: \"keyword\",\n    // borrowed from Prism, TODO: split out into variants\n    match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n  };\n\n  const OFFSET_ALIGN = {\n    match: [\n      /(?:offset|align)/,\n      /\\s*/,\n      /=/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"operator\"\n    }\n  };\n\n  return {\n    name: 'WebAssembly',\n    keywords: {\n      $pattern: /[\\w.]+/,\n      keyword: KWS\n    },\n    contains: [\n      LINE_COMMENT,\n      BLOCK_COMMENT,\n      OFFSET_ALIGN,\n      ARGUMENT,\n      PARENS,\n      FUNCTION_REFERENCE,\n      hljs.QUOTE_STRING_MODE,\n      TYPE,\n      MATH_OPERATIONS,\n      NUMBER\n    ]\n  };\n}\n\nexport { wasm as default };\n","/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex;\n  // XML names can have the following additional letters: https://www.w3.org/TR/xml/#NT-NameChar\n  // OTHER_NAME_CHARS = /[:\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]/;\n  // Element names start with NAME_START_CHAR followed by optional other Unicode letters, ASCII digits, hyphens, underscores, and periods\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);;\n  // const XML_IDENT_RE = /[A-Z_a-z:\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]+/;\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);\n  // however, to cater for performance and more Unicode support rely simply on the Unicode letter class\n  const TAG_NAME_RE = regex.concat(/[\\p{L}_]/u, regex.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u);\n  const XML_IDENT_RE = /[\\p{L}0-9._:-]+/u;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: 'string' });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              { begin: /[^\\s\"'=<>`]+/ }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    unicodeRegex: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        { relevance: 10 }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      // xml processing instructions\n      {\n        className: 'meta',\n        end: /\\?>/,\n        variants: [\n          {\n            begin: /<\\?xml/,\n            relevance: 10,\n            contains: [\n              QUOTE_META_STRING_MODE\n            ]\n          },\n          {\n            begin: /<\\?[a-z][a-z0-9]+/,\n          }\n        ]\n\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending bracket.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'style' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'script' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /</,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            regex.either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /<\\//,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport { xml as default };\n","/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nfunction yaml(hljs) {\n  const LITERALS = 'true false yes no null';\n\n  // YAML spec allows non-reserved URI characters in tags.\n  const URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  const KEY = {\n    className: 'attr',\n    variants: [\n      // added brackets support and special char support\n      { begin: /[\\w*@][\\w*@ :()\\./-]*:(?=[ \\t]|$)/ },\n      { // double quoted keys - with brackets and special char support\n        begin: /\"[\\w*@][\\w*@ :()\\./-]*\":(?=[ \\t]|$)/ },\n      { // single quoted keys - with brackets and special char support\n        begin: /'[\\w*@][\\w*@ :()\\./-]*':(?=[ \\t]|$)/ },\n    ]\n  };\n  \n  const TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { // jinja templates Ansible\n        begin: /\\{\\{/,\n        end: /\\}\\}/\n      },\n      { // Ruby i18n\n        begin: /%\\{/,\n        end: /\\}/\n      }\n    ]\n  };\n\n  const SINGLE_QUOTE_STRING = {\n    className: 'string',\n    relevance: 0,\n    begin: /'/,\n    end: /'/,\n    contains: [\n      {\n        match: /''/,\n        scope: 'char.escape',\n        relevance: 0\n      }\n    ]\n  };\n\n  const STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      { begin: /\\S+/ }\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n  const CONTAINER_STRING = hljs.inherit(STRING, { variants: [\n    {\n      begin: /'/,\n      end: /'/,\n      contains: [\n        {\n          begin: /''/,\n          relevance: 0\n        }\n      ]\n    },\n    {\n      begin: /\"/,\n      end: /\"/\n    },\n    { begin: /[^\\s,{}[\\]]+/ }\n  ] });\n\n  const DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  const TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  const FRACTION_RE = '(\\\\.[0-9]*)?';\n  const ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  const TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n\n  const VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    keywords: LITERALS,\n    relevance: 0\n  };\n  const OBJECT = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  const ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n\n  const MODES = [\n    KEY,\n    {\n      className: 'meta',\n      begin: '^---\\\\s*$',\n      relevance: 10\n    },\n    { // multi line string\n      // Blocks start with a | or > followed by a newline\n      //\n      // Indentation of subsequent lines must be the same to\n      // be considered part of the block\n      className: 'string',\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n    },\n    { // Ruby/Rails erb\n      begin: '<%[%=-]?',\n      end: '[%-]?%>',\n      subLanguage: 'ruby',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    },\n    { // named tags\n      className: 'type',\n      begin: '!\\\\w+!' + URI_CHARACTERS\n    },\n    // https://yaml.org/spec/1.2/spec.html#id2784064\n    { // verbatim tags\n      className: 'type',\n      begin: '!<' + URI_CHARACTERS + \">\"\n    },\n    { // primary tags\n      className: 'type',\n      begin: '!' + URI_CHARACTERS\n    },\n    { // secondary tags\n      className: 'type',\n      begin: '!!' + URI_CHARACTERS\n    },\n    { // fragment id &ref\n      className: 'meta',\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // fragment reference *ref\n      className: 'meta',\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // array listing\n      className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '-(?=[ ]|$)',\n      relevance: 0\n    },\n    hljs.HASH_COMMENT_MODE,\n    {\n      beginKeywords: LITERALS,\n      keywords: { literal: LITERALS }\n    },\n    TIMESTAMP,\n    // numbers are any valid C-style number that\n    // sit isolated from other words\n    {\n      className: 'number',\n      begin: hljs.C_NUMBER_RE + '\\\\b',\n      relevance: 0\n    },\n    OBJECT,\n    ARRAY,\n    SINGLE_QUOTE_STRING,\n    STRING\n  ];\n\n  const VALUE_MODES = [ ...MODES ];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: [ 'yml' ],\n    contains: MODES\n  };\n}\n\nexport { yaml as default };\n","/**\n * @import {LanguageFn} from 'highlight.js'\n */\n\nimport arduino from 'highlight.js/lib/languages/arduino'\nimport bash from 'highlight.js/lib/languages/bash'\nimport c from 'highlight.js/lib/languages/c'\nimport cpp from 'highlight.js/lib/languages/cpp'\nimport csharp from 'highlight.js/lib/languages/csharp'\nimport css from 'highlight.js/lib/languages/css'\nimport diff from 'highlight.js/lib/languages/diff'\nimport go from 'highlight.js/lib/languages/go'\nimport graphql from 'highlight.js/lib/languages/graphql'\nimport ini from 'highlight.js/lib/languages/ini'\nimport java from 'highlight.js/lib/languages/java'\nimport javascript from 'highlight.js/lib/languages/javascript'\nimport json from 'highlight.js/lib/languages/json'\nimport kotlin from 'highlight.js/lib/languages/kotlin'\nimport less from 'highlight.js/lib/languages/less'\nimport lua from 'highlight.js/lib/languages/lua'\nimport makefile from 'highlight.js/lib/languages/makefile'\nimport markdown from 'highlight.js/lib/languages/markdown'\nimport objectivec from 'highlight.js/lib/languages/objectivec'\nimport perl from 'highlight.js/lib/languages/perl'\nimport php from 'highlight.js/lib/languages/php'\nimport phpTemplate from 'highlight.js/lib/languages/php-template'\nimport plaintext from 'highlight.js/lib/languages/plaintext'\nimport python from 'highlight.js/lib/languages/python'\nimport pythonRepl from 'highlight.js/lib/languages/python-repl'\nimport r from 'highlight.js/lib/languages/r'\nimport ruby from 'highlight.js/lib/languages/ruby'\nimport rust from 'highlight.js/lib/languages/rust'\nimport scss from 'highlight.js/lib/languages/scss'\nimport shell from 'highlight.js/lib/languages/shell'\nimport sql from 'highlight.js/lib/languages/sql'\nimport swift from 'highlight.js/lib/languages/swift'\nimport typescript from 'highlight.js/lib/languages/typescript'\nimport vbnet from 'highlight.js/lib/languages/vbnet'\nimport wasm from 'highlight.js/lib/languages/wasm'\nimport xml from 'highlight.js/lib/languages/xml'\nimport yaml from 'highlight.js/lib/languages/yaml'\n\n/**\n * Map of grammars.\n *\n * @type {Record<string, LanguageFn>}\n */\nexport const grammars = {\n  arduino,\n  bash,\n  c,\n  cpp,\n  csharp,\n  css,\n  diff,\n  go,\n  graphql,\n  ini,\n  java,\n  javascript,\n  json,\n  kotlin,\n  less,\n  lua,\n  makefile,\n  markdown,\n  objectivec,\n  perl,\n  php,\n  'php-template': phpTemplate,\n  plaintext,\n  python,\n  'python-repl': pythonRepl,\n  r,\n  ruby,\n  rust,\n  scss,\n  shell,\n  sql,\n  swift,\n  typescript,\n  vbnet,\n  wasm,\n  xml,\n  yaml\n}\n","/* eslint-disable no-multi-assign */\n\nfunction deepFreeze(obj) {\n  if (obj instanceof Map) {\n    obj.clear =\n      obj.delete =\n      obj.set =\n        function () {\n          throw new Error('map is read-only');\n        };\n  } else if (obj instanceof Set) {\n    obj.add =\n      obj.clear =\n      obj.delete =\n        function () {\n          throw new Error('set is read-only');\n        };\n  }\n\n  // Freeze self\n  Object.freeze(obj);\n\n  Object.getOwnPropertyNames(obj).forEach((name) => {\n    const prop = obj[name];\n    const type = typeof prop;\n\n    // Freeze prop if it is an object or function and also not already frozen\n    if ((type === 'object' || type === 'function') && !Object.isFrozen(prop)) {\n      deepFreeze(prop);\n    }\n  });\n\n  return obj;\n}\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  // rarely we can have a sublanguage where language is undefined\n  // TODO: track down why\n  return !!node.scope;\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst scopeToCSSClass = (name, { prefix }) => {\n  // sub-language\n  if (name.startsWith(\"language:\")) {\n    return name.replace(\"language:\", \"language-\");\n  }\n  // tiered scope: comment.line\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  // simple scope\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    const className = scopeToCSSClass(node.scope,\n      { prefix: this.classPrefix });\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{scope?: string, language?: string, children: Node[]} | string} Node */\n/** @typedef {{scope?: string, language?: string, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\n/** @returns {DataNode} */\nconst newNode = (opts = {}) => {\n  /** @type DataNode */\n  const result = { children: [] };\n  Object.assign(result, opts);\n  return result;\n};\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = newNode();\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} scope */\n  openNode(scope) {\n    /** @type Node */\n    const node = newNode({ scope });\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addText(text)\n  - __addSublanguage(emitter, subLanguageName)\n  - startScope(scope)\n  - endScope()\n  - finalize()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /** @param {string} scope */\n  startScope(scope) {\n    this.openNode(scope);\n  }\n\n  endScope() {\n    this.closeNode();\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  __addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    if (name) node.scope = `language:${name}`;\n\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    this.closeAllNodes();\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp | string} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  scope: \"regexp\",\n  begin: /\\/(?=[^/\\n]*\\/)/,\n  end: /\\/[gimuy]*/,\n  contains: [\n    BACKSLASH_ESCAPE,\n    {\n      begin: /\\[/,\n      end: /\\]/,\n      relevance: 0,\n      contains: [BACKSLASH_ESCAPE]\n    }\n  ]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  APOS_STRING_MODE: APOS_STRING_MODE,\n  BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n  BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n  BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n  COMMENT: COMMENT,\n  C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n  C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n  C_NUMBER_MODE: C_NUMBER_MODE,\n  C_NUMBER_RE: C_NUMBER_RE,\n  END_SAME_AS_BEGIN: END_SAME_AS_BEGIN,\n  HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n  IDENT_RE: IDENT_RE,\n  MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n  METHOD_GUARD: METHOD_GUARD,\n  NUMBER_MODE: NUMBER_MODE,\n  NUMBER_RE: NUMBER_RE,\n  PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n  QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n  REGEXP_MODE: REGEXP_MODE,\n  RE_STARTERS_RE: RE_STARTERS_RE,\n  SHEBANG: SHEBANG,\n  TITLE_MODE: TITLE_MODE,\n  UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n  UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type {import(\"highlight.js/private\").KeywordDict} */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp | string>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, { key: \"endScope\" });\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm'\n      + (language.case_insensitive ? 'i' : '')\n      + (language.unicodeRegex ? 'u' : '')\n      + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(cmode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(cmode.end);\n      cmode.terminatorEnd = source(cmode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.11.1\";\n\nclass HTMLInjectionError extends Error {\n  constructor(reason, html) {\n    super(reason);\n    this.name = \"HTMLInjectionError\";\n    this.html = html;\n  }\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').CompiledScope} CompiledScope\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    throwUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substring(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.__addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {string} text\n     * @param {string} scope\n     */\n    function emitKeyword(keyword, scope) {\n      if (keyword === \"\") return;\n\n      emitter.startScope(scope);\n      emitter.addText(keyword);\n      emitter.endScope();\n    }\n\n    /**\n     * @param {CompiledScope} scope\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      const max = match.length - 1;\n      while (i <= max) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substring(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        modeBuffer += \"\\n\";\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      if (!language.__emitTokens) {\n        top.matcher.considerAll();\n\n        for (;;) {\n          iterations++;\n          if (resumeScanAtSamePosition) {\n            // only regexes not matched previously will now be\n            // considered for a potential match\n            resumeScanAtSamePosition = false;\n          } else {\n            top.matcher.considerAll();\n          }\n          top.matcher.lastIndex = index;\n\n          const match = top.matcher.exec(codeToHighlight);\n          // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n          if (!match) break;\n\n          const beforeMatch = codeToHighlight.substring(index, match.index);\n          const processedCount = processLexeme(beforeMatch, match);\n          index = match.index + processedCount;\n        }\n        processLexeme(codeToHighlight.substring(index));\n      } else {\n        language.__emitTokens(codeToHighlight, emitter);\n      }\n\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language });\n\n    if (element.dataset.highlighted) {\n      console.log(\"Element previously highlighted. To highlight again, first unset `dataset.highlighted`.\", element);\n      return;\n    }\n\n    // we should be all text, no child nodes (unescaped HTML) - this is possibly\n    // an HTML injection attack - it's likely too late if this is already in\n    // production (the code has likely already done its damage by the time\n    // we're seeing it)... but we yell loudly about this so that hopefully it's\n    // more likely to be caught in development before making it to production\n    if (element.children.length > 0) {\n      if (!options.ignoreUnescapedHTML) {\n        console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n        console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n        console.warn(\"The element with unescaped HTML:\");\n        console.warn(element);\n      }\n      if (options.throwUnescapedHTML) {\n        const err = new HTMLInjectionError(\n          \"One of your code blocks includes unescaped HTML.\",\n          element.innerHTML\n        );\n        throw err;\n      }\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    element.dataset.highlighted = \"yes\";\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    function boot() {\n      // if a highlight was requested before DOM was loaded, do now\n      highlightAll();\n    }\n\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      // make sure the event listener is only added once\n      if (!wantsHighlight) {\n        window.addEventListener('DOMContentLoaded', boot, false);\n      }\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function removePlugin(plugin) {\n    const index = plugins.indexOf(plugin);\n    if (index !== -1) {\n      plugins.splice(index, 1);\n    }\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin,\n    removePlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  hljs.regex = {\n    concat: concat,\n    lookahead: lookahead,\n    either: either,\n    optional: optional,\n    anyNumberOfTimes: anyNumberOfTimes\n  };\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// Other names for the variable may break build script\nconst highlight = HLJS({});\n\n// returns a new instance of the highlighter to be used for extensions\n// check https://github.com/wooorm/lowlight/issues/47\nhighlight.newInstance = () => HLJS({});\n\nmodule.exports = highlight;\nhighlight.HighlightJS = highlight;\nhighlight.default = highlight;\n","/**\n * @import {ElementContent, Element, RootData, Root} from 'hast'\n * @import {Emitter, HLJSOptions as HljsOptions, HighlightResult, LanguageFn} from 'highlight.js'\n */\n\n/**\n * @typedef {Object} ExtraOptions\n *   Extra fields.\n * @property {ReadonlyArray<string> | null | undefined} [subset]\n *   List of allowed languages (default: all registered languages).\n *\n * @typedef Options\n *   Configuration for `highlight`.\n * @property {string | null | undefined} [prefix='hljs-']\n *   Class prefix (default: `'hljs-'`).\n *\n * @typedef {Options & ExtraOptions} AutoOptions\n *   Configuration for `highlightAuto`.\n */\n\nimport {ok as assert} from 'devlop'\nimport HighlightJs from 'highlight.js/lib/core'\n\n/** @type {AutoOptions} */\nconst emptyOptions = {}\n\nconst defaultPrefix = 'hljs-'\n\n/**\n * Create a `lowlight` instance.\n *\n * @param {Readonly<Record<string, LanguageFn>> | null | undefined} [grammars]\n *   Grammars to add (optional).\n * @returns\n *   Lowlight.\n */\nexport function createLowlight(grammars) {\n  const high = HighlightJs.newInstance()\n\n  if (grammars) {\n    register(grammars)\n  }\n\n  return {\n    highlight,\n    highlightAuto,\n    listLanguages,\n    register,\n    registerAlias,\n    registered\n  }\n\n  /**\n   * Highlight `value` (code) as `language` (name).\n   *\n   * @example\n   *   ```js\n   *   import {common, createLowlight} from 'lowlight'\n   *\n   *   const lowlight = createLowlight(common)\n   *\n   *   console.log(lowlight.highlight('css', 'em { color: red }'))\n   *   ```\n   *\n   *   Yields:\n   *\n   *   ```js\n   *   {type: 'root', children: [Array], data: {language: 'css', relevance: 3}}\n   *   ```\n   *\n   * @param {string} language\n   *   Programming language name.\n   * @param {string} value\n   *   Code to highlight.\n   * @param {Readonly<Options> | null | undefined} [options={}]\n   *   Configuration (optional).\n   * @returns {Root}\n   *   Tree; with the following `data` fields: `language` (`string`), detected\n   *   programming language name; `relevance` (`number`), how sure lowlight is\n   *   that the given code is in the language.\n   */\n  function highlight(language, value, options) {\n    assert(typeof language === 'string', 'expected `string` as `name`')\n    assert(typeof value === 'string', 'expected `string` as `value`')\n    const settings = options || emptyOptions\n    const prefix =\n      typeof settings.prefix === 'string' ? settings.prefix : defaultPrefix\n\n    if (!high.getLanguage(language)) {\n      throw new Error('Unknown language: `' + language + '` is not registered')\n    }\n\n    // See: <https://github.com/highlightjs/highlight.js/issues/3621#issuecomment-1528841888>\n    high.configure({__emitter: HastEmitter, classPrefix: prefix})\n\n    const result = /** @type {HighlightResult & {_emitter: HastEmitter}} */ (\n      high.highlight(value, {ignoreIllegals: true, language})\n    )\n\n    // `highlight.js` seems to use this (currently) for broken grammars, so let’s\n    // keep it in there just to be sure.\n    /* c8 ignore next 5 */\n    if (result.errorRaised) {\n      throw new Error('Could not highlight with `Highlight.js`', {\n        cause: result.errorRaised\n      })\n    }\n\n    const root = result._emitter.root\n\n    // Cast because it is always defined.\n    const data = /** @type {RootData} */ (root.data)\n\n    data.language = result.language\n    data.relevance = result.relevance\n\n    return root\n  }\n\n  /**\n   * Highlight `value` (code) and guess its programming language.\n   *\n   * @example\n   *   ```js\n   *   import {common, createLowlight} from 'lowlight'\n   *\n   *   const lowlight = createLowlight(common)\n   *\n   *   console.log(lowlight.highlightAuto('\"hello, \" + name + \"!\"'))\n   *   ```\n   *\n   *   Yields:\n   *\n   *   ```js\n   *   {type: 'root', children: [Array], data: {language: 'arduino', relevance: 2}}\n   *   ```\n   *\n   * @param {string} value\n   *   Code to highlight.\n   * @param {Readonly<AutoOptions> | null | undefined} [options={}]\n   *   Configuration (optional).\n   * @returns {Root}\n   *   Tree; with the following `data` fields: `language` (`string`), detected\n   *   programming language name; `relevance` (`number`), how sure lowlight is\n   *   that the given code is in the language.\n   */\n  function highlightAuto(value, options) {\n    assert(typeof value === 'string', 'expected `string` as `value`')\n    const settings = options || emptyOptions\n    const subset = settings.subset || listLanguages()\n\n    let index = -1\n    let relevance = 0\n    /** @type {Root | undefined} */\n    let result\n\n    while (++index < subset.length) {\n      const name = subset[index]\n\n      if (!high.getLanguage(name)) continue\n\n      const current = highlight(name, value, options)\n\n      if (\n        current.data &&\n        current.data.relevance !== undefined &&\n        current.data.relevance > relevance\n      ) {\n        relevance = current.data.relevance\n        result = current\n      }\n    }\n\n    return (\n      result || {\n        type: 'root',\n        children: [],\n        data: {language: undefined, relevance}\n      }\n    )\n  }\n\n  /**\n   * List registered languages.\n   *\n   * @example\n   *   ```js\n   *   import {createLowlight} from 'lowlight'\n   *   import markdown from 'highlight.js/lib/languages/markdown'\n   *\n   *   const lowlight = createLowlight()\n   *\n   *   console.log(lowlight.listLanguages()) // => []\n   *\n   *   lowlight.register({markdown})\n   *\n   *   console.log(lowlight.listLanguages()) // => ['markdown']\n   *   ```\n   *\n   * @returns {Array<string>}\n   *   Names of registered language.\n   */\n  function listLanguages() {\n    return high.listLanguages()\n  }\n\n  /**\n   * Register languages.\n   *\n   * @example\n   *   ```js\n   *   import {createLowlight} from 'lowlight'\n   *   import xml from 'highlight.js/lib/languages/xml'\n   *\n   *   const lowlight = createLowlight()\n   *\n   *   lowlight.register({xml})\n   *\n   *   // Note: `html` is an alias for `xml`.\n   *   console.log(lowlight.highlight('html', '<em>Emphasis</em>'))\n   *   ```\n   *\n   *   Yields:\n   *\n   *   ```js\n   *   {type: 'root', children: [Array], data: {language: 'html', relevance: 2}}\n   *   ```\n   *\n   * @overload\n   * @param {Readonly<Record<string, LanguageFn>>} grammars\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {string} name\n   * @param {LanguageFn} grammar\n   * @returns {undefined}\n   *\n   * @param {Readonly<Record<string, LanguageFn>> | string} grammarsOrName\n   *   Grammars or programming language name.\n   * @param {LanguageFn | undefined} [grammar]\n   *   Grammar, if with name.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function register(grammarsOrName, grammar) {\n    if (typeof grammarsOrName === 'string') {\n      assert(grammar !== undefined, 'expected `grammar`')\n      high.registerLanguage(grammarsOrName, grammar)\n    } else {\n      /** @type {string} */\n      let name\n\n      for (name in grammarsOrName) {\n        if (Object.hasOwn(grammarsOrName, name)) {\n          high.registerLanguage(name, grammarsOrName[name])\n        }\n      }\n    }\n  }\n\n  /**\n   * Register aliases.\n   *\n   * @example\n   *   ```js\n   *   import {createLowlight} from 'lowlight'\n   *   import markdown from 'highlight.js/lib/languages/markdown'\n   *\n   *   const lowlight = createLowlight()\n   *\n   *   lowlight.register({markdown})\n   *\n   *   // lowlight.highlight('mdown', '<em>Emphasis</em>')\n   *   // ^ would throw: Error: Unknown language: `mdown` is not registered\n   *\n   *   lowlight.registerAlias({markdown: ['mdown', 'mkdn', 'mdwn', 'ron']})\n   *   lowlight.highlight('mdown', '<em>Emphasis</em>')\n   *   // ^ Works!\n   *   ```\n   *\n   * @overload\n   * @param {Readonly<Record<string, ReadonlyArray<string> | string>>} aliases\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {string} language\n   * @param {ReadonlyArray<string> | string} alias\n   * @returns {undefined}\n   *\n   * @param {Readonly<Record<string, ReadonlyArray<string> | string>> | string} aliasesOrName\n   *   Map of programming language names to one or more aliases, or programming\n   *   language name.\n   * @param {ReadonlyArray<string> | string | undefined} [alias]\n   *   One or more aliases for the programming language, if with `name`.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function registerAlias(aliasesOrName, alias) {\n    if (typeof aliasesOrName === 'string') {\n      assert(alias !== undefined)\n      high.registerAliases(\n        // Note: copy needed because hljs doesn’t accept readonly arrays yet.\n        typeof alias === 'string' ? alias : [...alias],\n        {languageName: aliasesOrName}\n      )\n    } else {\n      /** @type {string} */\n      let key\n\n      for (key in aliasesOrName) {\n        if (Object.hasOwn(aliasesOrName, key)) {\n          const aliases = aliasesOrName[key]\n          high.registerAliases(\n            // Note: copy needed because hljs doesn’t accept readonly arrays yet.\n            typeof aliases === 'string' ? aliases : [...aliases],\n            {languageName: key}\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * Check whether an alias or name is registered.\n   *\n   * @example\n   *   ```js\n   *   import {createLowlight} from 'lowlight'\n   *   import javascript from 'highlight.js/lib/languages/javascript'\n   *\n   *   const lowlight = createLowlight({javascript})\n   *\n   *   console.log(lowlight.registered('funkyscript')) // => `false`\n   *\n   *   lowlight.registerAlias({javascript: 'funkyscript'})\n   *   console.log(lowlight.registered('funkyscript')) // => `true`\n   *   ```\n   *\n   * @param {string} aliasOrName\n   *   Name of a language or alias for one.\n   * @returns {boolean}\n   *   Whether `aliasOrName` is registered.\n   */\n  function registered(aliasOrName) {\n    return Boolean(high.getLanguage(aliasOrName))\n  }\n}\n\n/** @type {Emitter} */\nclass HastEmitter {\n  /**\n   * @param {Readonly<HljsOptions>} options\n   *   Configuration.\n   * @returns\n   *   Instance.\n   */\n  constructor(options) {\n    /** @type {HljsOptions} */\n    this.options = options\n    /** @type {Root} */\n    this.root = {\n      type: 'root',\n      children: [],\n      data: {language: undefined, relevance: 0}\n    }\n    /** @type {[Root, ...Array<Element>]} */\n    this.stack = [this.root]\n  }\n\n  /**\n   * @param {string} value\n   *   Text to add.\n   * @returns {undefined}\n   *   Nothing.\n   *\n   */\n  addText(value) {\n    if (value === '') return\n\n    const current = this.stack[this.stack.length - 1]\n    const tail = current.children[current.children.length - 1]\n\n    if (tail && tail.type === 'text') {\n      tail.value += value\n    } else {\n      current.children.push({type: 'text', value})\n    }\n  }\n\n  /**\n   *\n   * @param {unknown} rawName\n   *   Name to add.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  startScope(rawName) {\n    this.openNode(String(rawName))\n  }\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  endScope() {\n    this.closeNode()\n  }\n\n  /**\n   * @param {HastEmitter} other\n   *   Other emitter.\n   * @param {string} name\n   *   Name of the sublanguage.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  __addSublanguage(other, name) {\n    const current = this.stack[this.stack.length - 1]\n    // Assume only element content.\n    const results = /** @type {Array<ElementContent>} */ (other.root.children)\n\n    if (name) {\n      current.children.push({\n        type: 'element',\n        tagName: 'span',\n        properties: {className: [name]},\n        children: results\n      })\n    } else {\n      current.children.push(...results)\n    }\n  }\n\n  /**\n   * @param {string} name\n   *   Name to add.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  openNode(name) {\n    const self = this\n    // First “class” gets the prefix. Rest gets a repeated underscore suffix.\n    // See: <https://github.com/highlightjs/highlight.js/commit/51806aa>\n    // See: <https://github.com/wooorm/lowlight/issues/43>\n    const className = name.split('.').map(function (d, i) {\n      return i ? d + '_'.repeat(i) : self.options.classPrefix + d\n    })\n    const current = this.stack[this.stack.length - 1]\n    /** @type {Element} */\n    const child = {\n      type: 'element',\n      tagName: 'span',\n      properties: {className},\n      children: []\n    }\n\n    current.children.push(child)\n    this.stack.push(child)\n  }\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  closeNode() {\n    this.stack.pop()\n  }\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  finalize() {}\n\n  /**\n   * @returns {string}\n   *   Nothing.\n   */\n  toHTML() {\n    return ''\n  }\n}\n","/**\n * @import {ElementContent, Element, Root} from 'hast'\n * @import {LanguageFn} from 'lowlight'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Readonly<Record<string, ReadonlyArray<string> | string>> | null | undefined} [aliases={}]\n *   Register more aliases (optional);\n *   passed to `lowlight.registerAlias`.\n * @property {boolean | null | undefined} [detect=false]\n *   Highlight code without language classes by guessing its programming\n *   language (default: `false`).\n * @property {Readonly<Record<string, LanguageFn>> | null | undefined} [languages]\n *   Register languages (default: `common`);\n *   passed to `lowlight.register`.\n * @property {ReadonlyArray<string> | null | undefined} [plainText=[]]\n *   List of language names to not highlight (optional);\n *   note you can also add `no-highlight` classes.\n * @property {string | null | undefined} [prefix='hljs-']\n *   Class prefix (default: `'hljs-'`).\n * @property {ReadonlyArray<string> | null | undefined} [subset]\n *   Names of languages to check when detecting (default: all registered\n *   languages).\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {common, createLowlight} from 'lowlight'\nimport {visit} from 'unist-util-visit'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Apply syntax highlighting.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeHighlight(options) {\n  const settings = options || emptyOptions\n  const aliases = settings.aliases\n  const detect = settings.detect || false\n  const languages = settings.languages || common\n  const plainText = settings.plainText\n  const prefix = settings.prefix\n  const subset = settings.subset\n  let name = 'hljs'\n\n  const lowlight = createLowlight(languages)\n\n  if (aliases) {\n    lowlight.registerAlias(aliases)\n  }\n\n  if (prefix) {\n    const pos = prefix.indexOf('-')\n    name = pos === -1 ? prefix : prefix.slice(0, pos)\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree, file) {\n    visit(tree, 'element', function (node, _, parent) {\n      if (\n        node.tagName !== 'code' ||\n        !parent ||\n        parent.type !== 'element' ||\n        parent.tagName !== 'pre'\n      ) {\n        return\n      }\n\n      const lang = language(node)\n\n      if (\n        lang === false ||\n        (!lang && !detect) ||\n        (lang && plainText && plainText.includes(lang))\n      ) {\n        return\n      }\n\n      if (!Array.isArray(node.properties.className)) {\n        node.properties.className = []\n      }\n\n      if (!node.properties.className.includes(name)) {\n        node.properties.className.unshift(name)\n      }\n\n      const text = toText(node, {whitespace: 'pre'})\n      /** @type {Root} */\n      let result\n\n      try {\n        result = lang\n          ? lowlight.highlight(lang, text, {prefix})\n          : lowlight.highlightAuto(text, {prefix, subset})\n      } catch (error) {\n        const cause = /** @type {Error} */ (error)\n\n        if (lang && /Unknown language/.test(cause.message)) {\n          file.message(\n            'Cannot highlight as `' + lang + '`, it’s not registered',\n            {\n              ancestors: [parent, node],\n              cause,\n              place: node.position,\n              ruleId: 'missing-language',\n              source: 'rehype-highlight'\n            }\n          )\n\n          /* c8 ignore next 5 -- throw arbitrary hljs errors */\n          return\n        }\n\n        throw cause\n      }\n\n      if (!lang && result.data && result.data.language) {\n        node.properties.className.push('language-' + result.data.language)\n      }\n\n      if (result.children.length > 0) {\n        node.children = /** @type {Array<ElementContent>} */ (result.children)\n      }\n    })\n  }\n}\n\n/**\n * Get the programming language of `node`.\n *\n * @param {Element} node\n *   Node.\n * @returns {false | string | undefined}\n *   Language or `undefined`, or `false` when an explikcit `no-highlight` class\n *   is used.\n */\nfunction language(node) {\n  const list = node.properties.className\n  let index = -1\n\n  if (!Array.isArray(list)) {\n    return\n  }\n\n  /** @type {string | undefined} */\n  let name\n\n  while (++index < list.length) {\n    const value = String(list[index])\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false\n    }\n\n    if (!name && value.slice(0, 5) === 'lang-') {\n      name = value.slice(5)\n    }\n\n    if (!name && value.slice(0, 9) === 'language-') {\n      name = value.slice(9)\n    }\n  }\n\n  return name\n}\n","import javascript from 'highlight.js/lib/languages/javascript'\r\nimport typescript from 'highlight.js/lib/languages/typescript'\r\nimport python from 'highlight.js/lib/languages/python'\r\nimport java from 'highlight.js/lib/languages/java'\r\nimport html from 'highlight.js/lib/languages/xml'\r\nimport css from 'highlight.js/lib/languages/css'\r\nimport json from 'highlight.js/lib/languages/json'\r\nimport bash from 'highlight.js/lib/languages/bash'\r\nimport sql from 'highlight.js/lib/languages/sql'\r\nimport markdown from 'highlight.js/lib/languages/markdown'\r\n\r\nconst highlightLanguages = {\r\n  javascript,\r\n  js: javascript,\r\n  typescript,\r\n  ts: typescript,\r\n  python,\r\n  py: python,\r\n  java,\r\n  html,\r\n  css,\r\n  json,\r\n  bash,\r\n  sh: bash,\r\n  sql,\r\n  markdown,\r\n  md: markdown\r\n}\r\n\r\nconst subsetLanguages = [\r\n  'javascript',\r\n  'typescript',\r\n  'python',\r\n  'java',\r\n  'html',\r\n  'css',\r\n  'json',\r\n  'bash',\r\n  'sql',\r\n  'markdown'\r\n]\r\n\r\nexport { highlightLanguages, subsetLanguages }\r\n","import { useState, useEffect, useRef, useCallback } from 'react'\r\n\r\ninterface UseTypewriterProps {\r\n  content?: string\r\n  typingSpeed?: number\r\n  disabled?: boolean\r\n}\r\n\r\ninterface Segment {\r\n  content: string\r\n  isMarkdown: boolean\r\n  type?: string\r\n}\r\n\r\nconst useTypewriter = ({\r\n  content = '',\r\n  typingSpeed = 80,\r\n  disabled = false\r\n}: UseTypewriterProps = {}) => {\r\n  const [displayContent, setDisplayContent] = useState('')\r\n  const [isTyping, setIsTyping] = useState(false)\r\n  const [isComplete, setIsComplete] = useState(false) // 新增：表示打印是否完成\r\n\r\n  const parsedSegmentsRef = useRef<Segment[]>([])\r\n  const displayIndexRef = useRef(0)\r\n  const timerRef = useRef<ReturnType<typeof setTimeout> | null>(null)\r\n  const isMountedRef = useRef(true)\r\n  const lastContentRef = useRef('')\r\n\r\n  // Cleanup function\r\n  const clearTimer = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = null\r\n    }\r\n  }, [])\r\n\r\n  // Markdown patterns\r\n  const markdownPatterns = useRef([\r\n    { pattern: /\\?\\[[^\\]]*\\]/, type: 'custom-tag' },\r\n    { pattern: /```[\\s\\S]*?```/, type: 'code-block' },\r\n    { pattern: /^#{1,6}\\s[^\\n]*$/m, type: 'header' },\r\n    { pattern: /\\*\\*\\*[^*]+\\*\\*\\*/, type: 'bold-italic' },\r\n    { pattern: /\\*\\*[^*]+\\*\\*/, type: 'bold' },\r\n    { pattern: /(?<!\\*)\\*[^*]+\\*(?!\\*)/, type: 'italic' },\r\n    { pattern: /~~[^~]+~~/, type: 'strikethrough' },\r\n    { pattern: /`[^`]+`/, type: 'inline-code' },\r\n    { pattern: /!\\[[^\\]]*\\]\\([^\\)]*\\)/, type: 'image' },\r\n    { pattern: /(?<!\\!)\\[[^\\]]*\\]\\([^\\)]*\\)/, type: 'link' },\r\n    { pattern: /^(>\\s*)+[^\\n]*$/m, type: 'blockquote' },\r\n    { pattern: /^[-*]{3,}$/m, type: 'hr' },\r\n    { pattern: /^[*-]\\s+[^\\n]*$/m, type: 'list-item' },\r\n    { pattern: /^\\d+\\.\\s+[^\\n]*$/m, type: 'ordered-list-item' },\r\n  ]).current\r\n\r\n  // Parse content into segments\r\n  const parseContent = useCallback((text: string): Segment[] => {\r\n    const segments: Segment[] = []\r\n    let remainingText = text || ''\r\n    \r\n    while (remainingText.length > 0) {\r\n      let matched = false\r\n      let earliestMatch: { match: RegExpExecArray; pattern: typeof markdownPatterns[0] } | null = null\r\n      let earliestIndex = Infinity\r\n      \r\n      for (const pattern of markdownPatterns) {\r\n        const match = pattern.pattern.exec(remainingText)\r\n        if (match && match.index < earliestIndex) {\r\n          earliestIndex = match.index\r\n          earliestMatch = { match, pattern }\r\n        }\r\n      }\r\n      \r\n      if (earliestMatch && earliestIndex >= 0) {\r\n        if (earliestIndex > 0) {\r\n          const plainText = remainingText.substring(0, earliestIndex)\r\n          segments.push(...Array.from(plainText).map(char => ({\r\n            content: char,\r\n            isMarkdown: false\r\n          })))\r\n          remainingText = remainingText.substring(earliestIndex)\r\n        }\r\n        \r\n        segments.push({\r\n          content: earliestMatch.match[0],\r\n          isMarkdown: true,\r\n          type: earliestMatch.pattern.type\r\n        })\r\n        remainingText = remainingText.substring(earliestMatch.match[0].length)\r\n        matched = true\r\n      }\r\n      \r\n      if (!matched) {\r\n        segments.push({\r\n          content: remainingText[0],\r\n          isMarkdown: false\r\n        })\r\n        remainingText = remainingText.substring(1)\r\n      }\r\n    }\r\n    \r\n    return segments\r\n  }, [markdownPatterns])\r\n\r\n  // Typing function\r\n  const type = useCallback(() => {\r\n    if (!isMountedRef.current) return\r\n\r\n    if (displayIndexRef.current < parsedSegmentsRef.current.length) {\r\n      const segment = parsedSegmentsRef.current[displayIndexRef.current]\r\n      setDisplayContent(prev => prev + (segment?.content || ''))\r\n      displayIndexRef.current++\r\n      \r\n      if (isMountedRef.current) {\r\n        timerRef.current = setTimeout(type, typingSpeed)\r\n      }\r\n    } else {\r\n      setIsTyping(false)\r\n      setIsComplete(true) // 打印完成\r\n    }\r\n  }, [typingSpeed])\r\n\r\n  // Main effect\r\n  useEffect(() => {\r\n    const newContent = content || ''\r\n    const oldContent = lastContentRef.current\r\n\r\n    // 如果内容相同，不处理\r\n    if (newContent === oldContent) {\r\n      return\r\n    }\r\n\r\n    // 禁用模式：立即显示全部\r\n    if (disabled) {\r\n      clearTimer()\r\n      const segments = parseContent(newContent)\r\n      setDisplayContent(segments.map(s => s.content).join(''))\r\n      setIsTyping(false)\r\n      setIsComplete(true) // 禁用模式下直接完成\r\n      lastContentRef.current = newContent\r\n      return\r\n    }\r\n\r\n    // 检查是否是内容增长\r\n    const isContentGrowth = newContent.length >= oldContent.length && newContent.startsWith(oldContent)\r\n\r\n    if (isContentGrowth && oldContent) {\r\n      // 内容增长：更新segments但保持当前打字状态\r\n      const segments = parseContent(newContent)\r\n      const oldSegmentCount = parsedSegmentsRef.current.length\r\n      parsedSegmentsRef.current = segments\r\n\r\n      // 更新完成状态\r\n      const isNowComplete = displayIndexRef.current >= segments.length\r\n      setIsComplete(isNowComplete)\r\n      \r\n      // 如果还有内容要打，开始打字\r\n      if (!isNowComplete && (!isTyping || displayIndexRef.current >= oldSegmentCount)) {\r\n        setIsTyping(true)\r\n        type()\r\n      }\r\n    } else {\r\n      // 全新内容：重新开始\r\n      clearTimer()\r\n      setDisplayContent('')\r\n      const segments = parseContent(newContent)\r\n      parsedSegmentsRef.current = segments\r\n      displayIndexRef.current = 0\r\n      \r\n      const isNowComplete = segments.length === 0\r\n      setIsComplete(isNowComplete)\r\n      \r\n      if (!isNowComplete && newContent && isMountedRef.current) {\r\n        setIsTyping(true)\r\n        type()\r\n      }\r\n    }\r\n\r\n    lastContentRef.current = newContent\r\n  }, [content, disabled, clearTimer, parseContent, type, isTyping])\r\n\r\n  // Cleanup\r\n  useEffect(() => {\r\n    isMountedRef.current = true\r\n    return () => {\r\n      isMountedRef.current = false\r\n      clearTimer()\r\n    }\r\n  }, [clearTimer])\r\n\r\n  const reset = useCallback(() => {\r\n    clearTimer()\r\n    setDisplayContent('')\r\n    parsedSegmentsRef.current = []\r\n    displayIndexRef.current = 0\r\n    setIsTyping(false)\r\n    setIsComplete(false) // 重置完成状态\r\n    lastContentRef.current = ''\r\n  }, [clearTimer])\r\n\r\n  const start = useCallback(() => {\r\n    clearTimer()\r\n    displayIndexRef.current = 0\r\n    setDisplayContent('')\r\n    setIsTyping(true)\r\n    setIsComplete(false) // 开始时重置完成状态\r\n    type()\r\n  }, [clearTimer, type])\r\n\r\n  return {\r\n    displayContent,\r\n    isTyping,\r\n    isComplete, // 新增：返回完成状态\r\n    reset,\r\n    start,\r\n    getSegments: () => parsedSegmentsRef.current\r\n  }\r\n}\r\n\r\nexport default useTypewriter","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/**\n * Turn normal line endings into hard breaks.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @returns {undefined}\n *   Nothing.\n */\nexport function newlineToBreak(tree) {\n  findAndReplace(tree, [/\\r?\\n|\\r/g, replace])\n}\n\n/**\n * Replace line endings.\n *\n * @type {ReplaceFunction}\n */\nfunction replace() {\n  return {type: 'break'}\n}\n","/**\n * @typedef {import('mdast').Root} Root\n */\n\nimport {newlineToBreak} from 'mdast-util-newline-to-break'\n\n/**\n * Support hard breaks without needing spaces or escapes (turns enters into\n * `<br>`s).\n *\n * @returns\n *   Transform.\n */\nexport default function remarkBreaks() {\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    newlineToBreak(tree)\n  }\n}\n","const unescapeMarkdown = (markdownText: string): string => {\r\n  // 转义字符映射表\r\n  const escapeMap: Record<string, string> = {\r\n    '\\\\\\\\': '\\\\', // 反斜杠\r\n    '\\\\n': '\\n', // 换行符\r\n    '\\\\r': '\\r', // 回车符\r\n    '\\\\t': '\\t', // 制表符\r\n    '\\\\\"': '\"', // 双引号\r\n    \"\\\\'\": \"'\", // 单引号\r\n    '\\\\b': '\\b', // 退格符\r\n    '\\\\f': '\\f' // 换页符\r\n  }\r\n\r\n  // 处理转义序列的正则表达式\r\n  const escapeRegex = /\\\\[\\\\nrt\"'bf]|\\\\u([0-9a-fA-F]{4})/g\r\n\r\n  return markdownText.replace(\r\n    escapeRegex,\r\n    (match: string, hex?: string): string => {\r\n      // 处理 Unicode 转义序列 (\\uXXXX)\r\n      if (hex) {\r\n        return String.fromCharCode(parseInt(hex, 16))\r\n      }\r\n\r\n      // 处理其他转义序列\r\n      return escapeMap[match] || match\r\n    }\r\n  )\r\n}\r\n\r\nconst processMarkdownText = (text: string): string => {\r\n  // 1. 处理转义字符\r\n  let processed = unescapeMarkdown(text)\r\n\r\n  // 2. 修复常见的双重转义问题\r\n  processed = processed.replace(/\\\\\\\\n/g, '\\n').replace(/\\\\\\\\t/g, '\\t')\r\n\r\n  // 3. 规范化换行符 (Windows -> Unix)\r\n  processed = processed.replace(/\\r\\n/g, '\\n')\r\n\r\n  // 4. 确保段落之间有双换行\r\n  processed = processed.replace(/\\n{3,}/g, '\\n\\n')\r\n\r\n  // 5. 处理特殊空格\r\n  processed = processed.replace(/&nbsp;|\\u00A0/g, ' ')\r\n\r\n  return processed || ''\r\n}\r\n\r\nexport { unescapeMarkdown, processMarkdownText }\r\n","import React, { useEffect, useRef } from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport remarkCustomButton from './plugins/remark-custom-button'\r\nimport CustomButton, {\r\n  ComponentsWithCustomButton\r\n} from './plugins/CustomButton'\r\nimport remarkCustomButtonInputVariable from './plugins/remark-custom-variable'\r\nimport CustomButtonInputVariable, {\r\n  ComponentsWithCustomVariable\r\n} from './plugins/CustomVariable'\r\nimport remarkGfm from 'remark-gfm'\r\nimport rehypeHighlight from 'rehype-highlight'\r\nimport 'highlight.js/styles/github.css'\r\nimport {\r\n  highlightLanguages,\r\n  subsetLanguages\r\n} from './utils/highlight-languages'\r\nimport useTypewriter from './useTypewriter'\r\nimport './contentRender.css'\r\nimport { OnSendContentParams, CustomRenderBarProps } from '../types'\r\nimport '../../styles/globals.css'\r\nimport remarkBreaks from 'remark-breaks'\r\nimport { processMarkdownText } from './utils/process-markdown'\r\n\r\n// 定义组件 Props 类型\r\nexport interface ContentRenderProps {\r\n  content: string\r\n  customRenderBar?: CustomRenderBarProps\r\n  onSend?: (content: OnSendContentParams) => void\r\n  typingSpeed?: number\r\n  disableTyping?: boolean\r\n  defaultButtonText?: string\r\n  defaultInputText?: string // 用户输入的文本\r\n  readonly?: boolean\r\n  onTypeFinished?: () => void\r\n}\r\n\r\n// 扩展组件接口\r\ntype CustomComponents = ComponentsWithCustomVariable &\r\n  ComponentsWithCustomButton\r\n\r\nconst ContentRender: React.FC<ContentRenderProps> = ({\r\n  content,\r\n  customRenderBar,\r\n  onSend,\r\n  typingSpeed = 30,\r\n  disableTyping = true,\r\n  defaultButtonText,\r\n  defaultInputText,\r\n  readonly = false,\r\n  onTypeFinished\r\n}) => {\r\n  // 使用自定义Hook处理打字机效果\r\n  const { displayContent, isTyping, isComplete } = useTypewriter({\r\n    content: processMarkdownText(content),\r\n    typingSpeed,\r\n    disabled: disableTyping\r\n  })\r\n\r\n  const components: CustomComponents = {\r\n    'custom-variable': props => (\r\n      <CustomButtonInputVariable\r\n        {...props}\r\n        readonly={readonly}\r\n        defaultButtonText={defaultButtonText}\r\n        defaultInputText={defaultInputText}\r\n        onSend={onSend}\r\n      />\r\n    ),\r\n    'custom-button': props => (\r\n      <CustomButton\r\n        {...props}\r\n        readonly={readonly}\r\n        defaultButtonText={defaultButtonText}\r\n        onSend={onSend}\r\n      />\r\n    ),\r\n    code: props => {\r\n      const { inline, className, children, ...rest } = props as any\r\n      const match = /language-(\\w+)/.exec(className || '')\r\n      return !inline && match ? (\r\n        <code className={className} {...rest}>\r\n          {children}\r\n        </code>\r\n      ) : (\r\n        <code className={className} {...rest}>\r\n          {children}\r\n        </code>\r\n      )\r\n    },\r\n    table: ({ node, ...props }) => (\r\n      <div className='content-render-table-container'>\r\n        <table className='content-render-table' {...props} />\r\n      </div>\r\n    ),\r\n    th: ({ node, ...props }) => <th className='content-render-th' {...props} />,\r\n    td: ({ node, ...props }) => <td className='content-render-td' {...props} />,\r\n    tr: ({ node, ...props }) => <tr className='content-render-tr' {...props} />,\r\n    li: ({ node, ...props }) => {\r\n      const className = node?.properties?.className\r\n      const hasTaskListItem =\r\n        (typeof className === 'string' &&\r\n          className.includes('task-list-item')) ||\r\n        (Array.isArray(className) && className.includes('task-list-item'))\r\n      if (hasTaskListItem) {\r\n        return <li className='content-render-task-list-item' {...props} />\r\n      }\r\n      return <li {...props} />\r\n    },\r\n    input: ({ node, ...props }) => {\r\n      if (props.type === 'checkbox') {\r\n        return (\r\n          <input\r\n            type='checkbox'\r\n            className='content-render-checkbox'\r\n            disabled\r\n            {...props}\r\n          />\r\n        )\r\n      }\r\n      return <input {...props} />\r\n    }\r\n  }\r\n\r\n  const hasCompleted = useRef(false)\r\n\r\n  useEffect(() => {\r\n    if (isComplete && !hasCompleted.current) {\r\n      console.log('[ContentRender] Typing is complete, calling onTypeFinished')\r\n      hasCompleted.current = true // 标记已完成\r\n      onTypeFinished?.() // 调用传入的回调\r\n    }\r\n  }, [isComplete, onTypeFinished])\r\n  useEffect(() => {\r\n    hasCompleted.current = false // 内容改变时重置完成状态\r\n  }, [content])\r\n\r\n  return (\r\n    <div className='content-render'>\r\n      <ReactMarkdown\r\n        remarkPlugins={[\r\n          remarkGfm,\r\n          remarkCustomButtonInputVariable,\r\n          remarkCustomButton,\r\n          remarkBreaks\r\n        ]}\r\n        rehypePlugins={[\r\n          [\r\n            rehypeHighlight,\r\n            {\r\n              languages: highlightLanguages,\r\n              subset: subsetLanguages\r\n            }\r\n          ]\r\n        ]}\r\n        components={components}\r\n      >\r\n        {displayContent}\r\n      </ReactMarkdown>\r\n      {customRenderBar &&\r\n        React.createElement(customRenderBar, {\r\n          content,\r\n          displayContent,\r\n          onSend\r\n        })}\r\n      {isTyping && <span className='typing-cursor ml-1 animate-pulse'>|</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContentRender\r\n","import React from 'react'\r\nimport ContentRender from '../ContentRender'\r\nimport './markdownFlow.css'\r\nimport { OnSendContentParams, CustomRenderBarProps } from '../types'\r\n\r\nexport interface MarkdownFlowProps {\r\n  initialContentList?: {\r\n    content: string\r\n    isFinished?: boolean\r\n    defaultInputText?: string\r\n    defaultButtonText?: string\r\n    readonly?: boolean\r\n  }[]\r\n  customRenderBar?: CustomRenderBarProps\r\n  onSend?: (content: OnSendContentParams) => void\r\n  typingSpeed?: number\r\n  disableTyping?: boolean\r\n  onBlockComplete?: (blockIndex: number) => void\r\n}\r\n\r\nconst MarkdownFlow: React.FC<MarkdownFlowProps> = ({\r\n  initialContentList = [],\r\n  customRenderBar,\r\n  onSend: onSendProp,\r\n  typingSpeed: typingSpeedProp,\r\n  disableTyping: disableTypingProp,\r\n  onBlockComplete\r\n}) => {\r\n  return (\r\n    <div className='markdown-flow'>\r\n      {initialContentList.map((contentInfo, index) => {\r\n        const isFinished = contentInfo.isFinished ?? false\r\n        const disableTyping = isFinished || disableTypingProp\r\n        const onSend = isFinished ? undefined : onSendProp\r\n        const typingSpeed = isFinished ? undefined : typingSpeedProp\r\n\r\n        return (\r\n          <ContentRender\r\n            key={index}\r\n            content={contentInfo.content}\r\n            defaultInputText={contentInfo.defaultInputText}\r\n            defaultButtonText={contentInfo.defaultButtonText}\r\n            readonly={contentInfo.readonly}\r\n            disableTyping={disableTyping}\r\n            customRenderBar={customRenderBar}\r\n            onSend={onSend}\r\n            typingSpeed={typingSpeed}\r\n            onTypeFinished={() => {\r\n              console.log(`Block ${index} typing finished`);\r\n              onBlockComplete?.(index)\r\n            }}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarkdownFlow\r\n","import { useRef, useEffect, useCallback, RefObject, useState } from 'react'\r\n\r\ninterface UseScrollToBottomOptions {\r\n  behavior?: 'smooth' | 'auto'\r\n  autoScrollOnInit?: boolean\r\n  scrollDelay?: number\r\n  scrollThreshold?: number\r\n}\r\n\r\ninterface UseScrollToBottomReturn {\r\n  showScrollToBottom: boolean\r\n  scrollToBottom: () => void\r\n  handleUserScrollToBottom: () => void\r\n  isAtBottom: boolean\r\n  followNewContent: boolean\r\n}\r\n\r\nconst useScrollToBottom = (\r\n  containerRef: RefObject<HTMLDivElement | null>,\r\n  dependencies: any[] = [],\r\n  options: UseScrollToBottomOptions = {}\r\n): UseScrollToBottomReturn => {\r\n  const {\r\n    behavior = 'smooth',\r\n    autoScrollOnInit = true,\r\n    scrollDelay = 100,\r\n    scrollThreshold = 10\r\n  } = options\r\n\r\n  const [showScrollToBottom, setShowScrollToBottom] = useState(false)\r\n  const [isAtBottom, setIsAtBottom] = useState(true)\r\n  const followNewContent = useRef(true)\r\n  const isFirstLoad = useRef(true)\r\n  const timers = useRef({\r\n    scroll: null as NodeJS.Timeout | null,\r\n    init: null as NodeJS.Timeout | null,\r\n    content: null as NodeJS.Timeout | null\r\n  })\r\n\r\n  // 清理所有定时器\r\n  const clearAllTimers = useCallback(() => {\r\n    Object.values(timers.current).forEach(timer => {\r\n      if (timer) clearTimeout(timer)\r\n    })\r\n  }, [])\r\n\r\n  // 检查是否滚动到底部\r\n  const checkIfAtBottom = useCallback((): boolean => {\r\n    const container = containerRef.current\r\n    if (!container) return true\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = container\r\n    return scrollTop + clientHeight >= scrollHeight - scrollThreshold\r\n  }, [containerRef, scrollThreshold])\r\n\r\n  // 滚动到底部\r\n  const scrollToBottom = useCallback(() => {\r\n    const container = containerRef.current\r\n    if (container) {\r\n      container.scrollTo({\r\n        top: container.scrollHeight,\r\n        behavior\r\n      })\r\n    }\r\n  }, [containerRef, behavior])\r\n\r\n  // 更新滚动状态\r\n  const updateScrollState = useCallback(() => {\r\n    const atBottom = checkIfAtBottom()\r\n    setIsAtBottom(atBottom)\r\n    setShowScrollToBottom(!atBottom)\r\n    return atBottom\r\n  }, [checkIfAtBottom])\r\n\r\n  // 处理用户主动滚动到底部\r\n  const handleUserScrollToBottom = useCallback(() => {\r\n    scrollToBottom()\r\n    followNewContent.current = true\r\n    setShowScrollToBottom(false)\r\n    setIsAtBottom(true)\r\n  }, [scrollToBottom])\r\n\r\n  // 滚动事件监听器\r\n  useEffect(() => {\r\n    const container = containerRef.current\r\n    if (!container) return\r\n\r\n    const handleScroll = () => {\r\n      // 防抖处理\r\n      if (timers.current.scroll) {\r\n        clearTimeout(timers.current.scroll)\r\n      }\r\n\r\n      timers.current.scroll = setTimeout(() => {\r\n        const atBottom = updateScrollState()\r\n\r\n        // 关键逻辑：用户手动滚动时，禁用自动跟随\r\n        if (!atBottom) {\r\n          followNewContent.current = false\r\n        } else {\r\n          followNewContent.current = true\r\n        }\r\n      }, 150)\r\n    }\r\n\r\n    container.addEventListener('scroll', handleScroll)\r\n    // 初始化状态\r\n    updateScrollState()\r\n\r\n    return () => {\r\n      container.removeEventListener('scroll', handleScroll)\r\n      if (timers.current.scroll) {\r\n        clearTimeout(timers.current.scroll)\r\n      }\r\n    }\r\n  }, [containerRef, updateScrollState])\r\n\r\n  // 首次加载自动滚动\r\n  useEffect(() => {\r\n    if (autoScrollOnInit && isFirstLoad.current) {\r\n      timers.current.init = setTimeout(() => {\r\n        scrollToBottom()\r\n        setIsAtBottom(true)\r\n        setShowScrollToBottom(false)\r\n        followNewContent.current = true\r\n        isFirstLoad.current = false\r\n      }, scrollDelay)\r\n    }\r\n\r\n    return () => {\r\n      if (timers.current.init) {\r\n        clearTimeout(timers.current.init)\r\n      }\r\n    }\r\n  }, [autoScrollOnInit, scrollToBottom, scrollDelay])\r\n\r\n  // 内容变化时的处理\r\n  useEffect(() => {\r\n    if (isFirstLoad.current) return\r\n\r\n    timers.current.content = setTimeout(() => {\r\n      if (followNewContent.current) {\r\n        // 用户没有手动滚动时，自动滚动\r\n        scrollToBottom()\r\n        setIsAtBottom(true)\r\n        setShowScrollToBottom(false)\r\n      } else {\r\n        // 用户手动滚动后，只更新按钮状态\r\n        updateScrollState()\r\n      }\r\n    }, 50)\r\n\r\n    return () => {\r\n      if (timers.current.content) {\r\n        clearTimeout(timers.current.content)\r\n      }\r\n    }\r\n  }, [...dependencies, scrollToBottom, updateScrollState])\r\n\r\n  // 组件卸载时清理\r\n  useEffect(() => {\r\n    return () => {\r\n      clearAllTimers()\r\n    }\r\n  }, [clearAllTimers])\r\n\r\n  return {\r\n    showScrollToBottom,\r\n    scrollToBottom: handleUserScrollToBottom,\r\n    handleUserScrollToBottom,\r\n    isAtBottom,\r\n    followNewContent: followNewContent.current\r\n  }\r\n}\r\n\r\nexport default useScrollToBottom\r\n","import React, { useRef } from 'react'\r\nimport MarkdownFlow from './MarkdownFlow'\r\nimport useScrollToBottom from './useScrollToBottom'\r\nimport { OnSendContentParams, CustomRenderBarProps } from '../types'\r\nimport { ChevronDown } from 'lucide-react'\r\nimport { Button } from '../ui/button'\r\nimport type { MarkdownFlowProps } from './MarkdownFlow'\r\n\r\nimport './markdownFlow.css'\r\n\r\ninterface ScrollableMarkdownFlowProps extends MarkdownFlowProps {\r\n  height?: string | number\r\n  className?: string\r\n}\r\n\r\nconst ScrollableMarkdownFlow: React.FC<ScrollableMarkdownFlowProps> = ({\r\n  initialContentList = [],\r\n  customRenderBar,\r\n  onSend,\r\n  onBlockComplete,\r\n  typingSpeed,\r\n  disableTyping,\r\n  height = '100%',\r\n  className = '',\r\n  ...restProps\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n\r\n  const { showScrollToBottom, handleUserScrollToBottom } = useScrollToBottom(\r\n    containerRef,\r\n    [\r\n      initialContentList?.length >= 1\r\n        ? JSON.stringify(initialContentList[initialContentList?.length - 1])\r\n        : null\r\n    ],\r\n    {\r\n      // 监听内容数量变化\r\n      behavior: 'smooth',\r\n      autoScrollOnInit: true,\r\n      scrollDelay: 100\r\n    }\r\n  )\r\n\r\n  return (\r\n    <div\r\n      className={`scrollable-markdown-container ${className}`}\r\n      style={{ height, position: 'relative' }}\r\n      {...restProps}\r\n    >\r\n      <div ref={containerRef} style={{ height: '100%', overflow: 'auto' }}>\r\n        <MarkdownFlow\r\n          initialContentList={initialContentList}\r\n          customRenderBar={customRenderBar}\r\n          onSend={onSend}\r\n          typingSpeed={typingSpeed}\r\n          disableTyping={true}\r\n          onBlockComplete={onBlockComplete}\r\n        />\r\n      </div>\r\n      {showScrollToBottom && (\r\n        <Button\r\n          className='h-6 w-6 border hover:bg-gray-200 scroll-to-bottom-btn'\r\n          type='button'\r\n          variant='ghost'\r\n          size='icon'\r\n          onClick={handleUserScrollToBottom}\r\n          aria-label='滚动到底部'\r\n        >\r\n          <ChevronDown />\r\n        </Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScrollableMarkdownFlow\r\n","import React, { useState, useEffect } from 'react'\r\nimport useSSE from '../sse/useSSE'\r\nimport useMarkdownInfo from './useMarkdownInfo'\r\nimport MarkdownFlow from '../MarkdownFlow/ScrollableMarkdownFlow'\r\nimport { ContentRenderProps } from '../ContentRender/ContentRender'\r\nimport { OnSendContentParams } from '../types'\r\n\r\ntype PlaygroundComponentProps = {\r\n  defaultContent: string\r\n  defaultVariables?: {\r\n    [key: string]: any\r\n  }\r\n  defaultDocumentPrompt?: string\r\n  styles?: React.CSSProperties\r\n  sseUrl?: string\r\n  sessionId?: string\r\n}\r\n\r\ntype SSEParams = {\r\n  content: string\r\n  block_index: number\r\n  context: Array<{\r\n    role: string\r\n    content: string\r\n  }>\r\n  variables?: {\r\n    [key: string]: any\r\n  }\r\n  user_input: string | null\r\n  document_prompt: string | null\r\n  interaction_prompt: string | null\r\n  interaction_error_prompt: string | null\r\n  model: string | null\r\n}\r\n\r\nconst PlaygroundComponent: React.FC<PlaygroundComponentProps> = ({\r\n  defaultContent,\r\n  defaultVariables = {},\r\n  defaultDocumentPrompt = '',\r\n  styles = {},\r\n  sseUrl = 'https://play.dev.pillowai.cn/api/v1/playground/generate',\r\n  sessionId,\r\n}) => {\r\n  const { data: markdownInfo, loading: isMarkdownLoading } =\r\n    useMarkdownInfo(defaultContent)\r\n  const { block_count = 0, interaction_blocks = [] } = markdownInfo || {}\r\n\r\n  const [currentBlockIndex, setCurrentBlockIndex] = useState<number>(0)\r\n  const [contentList, setContentList] = useState<ContentRenderProps[]>([])\r\n\r\n  const [sseParams, setSseParams] = useState<SSEParams>({\r\n    content: defaultContent,\r\n    block_index: 0,\r\n    context: [{ role: 'assistant', content: '' }],\r\n    variables: defaultVariables,\r\n    user_input: null,\r\n    document_prompt: defaultDocumentPrompt,\r\n    interaction_prompt: null,\r\n    interaction_error_prompt: null,\r\n    model: null\r\n  })\r\n\r\n  const getSSEBody = (): string => {\r\n    return JSON.stringify(sseParams)\r\n  }\r\n  // 判断是否应该继续到下一个块：用户操作和最后一个块停下来\r\n  const shouldContinueToNextBlock = (data: string): boolean => {\r\n    const nextIndex = currentBlockIndex + 1\r\n    return !(\r\n      (data && interaction_blocks.includes(currentBlockIndex)) ||\r\n      nextIndex >= block_count\r\n    )\r\n  }\r\n  // 返回sse params中的context字段\r\n  const updateContextParamsForNextBlock = (\r\n    currentData: string\r\n  ): Array<{ role: string; content: string }> => {\r\n    const newContext = [...sseParams.context]\r\n\r\n    // 确保数组长度足够\r\n    while (newContext.length <= currentBlockIndex) {\r\n      newContext.push({ role: 'assistant', content: '' })\r\n    }\r\n\r\n    // 更新当前块内容\r\n    newContext[currentBlockIndex] = {\r\n      ...newContext[currentBlockIndex],\r\n      content: currentData\r\n    }\r\n\r\n    // 添加下一个块的占位符\r\n    if (newContext.length <= currentBlockIndex + 1) {\r\n      newContext.push({ role: 'assistant', content: '' })\r\n    }\r\n\r\n    return newContext\r\n  }\r\n  // 返回sse data更新后的contentList\r\n  const updateContentListWithSseData = (\r\n    newData: string\r\n  ): ContentRenderProps[] => {\r\n    const newList = [...contentList]\r\n\r\n    // 确保数组长度足够\r\n    while (newList.length <= currentBlockIndex) {\r\n      newList.push({ content: '' })\r\n    }\r\n\r\n    // 更新当前块内容\r\n    newList[currentBlockIndex] = {\r\n      ...newList[currentBlockIndex],\r\n      content: newData\r\n    }\r\n\r\n    return newList\r\n  }\r\n\r\n  // 返回用户操作后的contentList\r\n  const updateContentListWithUserOperate = (\r\n    params: OnSendContentParams\r\n  ): ContentRenderProps[] => {\r\n    const newList = [...contentList]\r\n    const lastIndex = newList.length - 1\r\n\r\n    if (lastIndex >= 0) {\r\n      newList[lastIndex] = {\r\n        ...newList[lastIndex],\r\n        readonly: true,\r\n        defaultButtonText: params.buttonText,\r\n        defaultInputText: params.inputText\r\n      }\r\n    }\r\n\r\n    return newList\r\n  }\r\n\r\n  const handleOnFinish = (data: string) => {\r\n    if (!shouldContinueToNextBlock(data)) {\r\n      return\r\n    }\r\n\r\n    const newContext = updateContextParamsForNextBlock(data)\r\n    const nextIndex = currentBlockIndex + 1\r\n\r\n    setSseParams(prev => ({\r\n      ...prev,\r\n      user_input: null,\r\n      block_index: nextIndex,\r\n      context: newContext\r\n    }))\r\n\r\n    setCurrentBlockIndex(nextIndex)\r\n  }\r\n\r\n  const { data, connect } = useSSE<any>(sseUrl, {\r\n    method: 'POST',\r\n    body: getSSEBody(),\r\n    headers: sessionId ? { 'session-id': sessionId } : {},\r\n    autoConnect: !!markdownInfo && !isMarkdownLoading,\r\n    onFinish: handleOnFinish\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (markdownInfo && !isMarkdownLoading) {\r\n      connect()\r\n    }\r\n  }, [markdownInfo, isMarkdownLoading, connect])\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      try {\r\n        const updatedList = updateContentListWithSseData(data)\r\n        setContentList(updatedList)\r\n      } catch (error) {\r\n        console.error('Error processing SSE message:', error)\r\n      }\r\n    }\r\n  }, [data])\r\n\r\n  const handleSend = (params: OnSendContentParams) => {\r\n    const userInput = params.inputText || params.buttonText || ''\r\n\r\n    // 更新上下文\r\n    const newContext = [...sseParams.context]\r\n    if (newContext[currentBlockIndex]) {\r\n      newContext[currentBlockIndex] = {\r\n        ...newContext[currentBlockIndex],\r\n        content: userInput,\r\n        role: 'user'\r\n      }\r\n    }\r\n\r\n    // 更新 SSE 参数\r\n    setSseParams(prev => ({\r\n      ...prev,\r\n      context: newContext,\r\n      user_input: userInput ?? null,\r\n      variables: {\r\n        ...prev.variables,\r\n        [params.variableName || '']: userInput\r\n      }\r\n    }))\r\n\r\n    // 更新内容列表\r\n    const updatedList = updateContentListWithUserOperate(params)\r\n    setContentList(updatedList)\r\n  }\r\n\r\n  return (\r\n    <div style={styles}>\r\n      <MarkdownFlow initialContentList={contentList} onSend={handleSend} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaygroundComponent\r\n"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","getComponentNameFromType","REACT_CLIENT_REFERENCE","REACT_PROFILER_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_ACTIVITY_TYPE","REACT_PORTAL_TYPE","REACT_CONTEXT_TYPE","REACT_CONSUMER_TYPE","REACT_FORWARD_REF_TYPE","innerType","REACT_MEMO_TYPE","REACT_LAZY_TYPE","testStringCoercion","value","checkKeyStringCoercion","JSCompiler_inline_result","JSCompiler_temp_const","JSCompiler_inline_result$jscomp$0","getTaskName","name","getOwner","dispatcher","ReactSharedInternals","UnknownOwner","hasValidKey","hasOwnProperty","getter","defineKeyPropWarningGetter","props","displayName","warnAboutAccessingKey","specialPropKeyWarningShown","elementRefGetterWithDeprecationWarning","componentName","didWarnAboutElementRef","ReactElement","self","source","owner","debugStack","debugTask","jsxDEVImpl","isStaticChildren","children","isArrayImpl","validateChildKeys","keys","k","didWarnAboutKeySpread","node","React","require$$0","createTask","callStackForError","unknownOwnerDebugStack","unknownOwnerDebugTask","reactJsxRuntime_development","trackActualOwner","jsxRuntimeModule","require$$1","getBytes","stream","onChunk","reader","result","getLines","onLine","buffer","position","fieldLength","discardTrailingNewline","arr","concat","bufLength","lineStart","lineEnd","getMessages","onId","onRetry","onMessage","message","newMessage","decoder","line","field","valueOffset","retry","a","b","res","__rest","s","e","t","p","EventStreamContentType","DefaultRetryInterval","LastEventId","fetchEventSource","input","_a","inputSignal","inputHeaders","inputOnOpen","onmessage","onclose","onerror","openWhenHidden","inputFetch","rest","resolve","reject","headers","curRequestController","onVisibilityChange","create","retryInterval","retryTimer","dispose","fetch","onopen","defaultOnOpen","response","id","err","interval","innerErr","contentType","FINISHED_MESSAGE","useSSE","url","options","data","setData","useState","isLoading","setIsLoading","error","setError","sseIndex","setSseIndex","abortControllerRef","useRef","hasConnectedRef","mountedRef","isManuallyClosedRef","currentIndexRef","finalDataRef","autoConnect","connect","useCallback","newIndex","abortController","acc","event","close","parsedData","useEffect","timeoutId","useMarkdownInfo","content","loading","setLoading","stringify","values","settings","nameRe","nameReJsx","emptyOptions","re","whitespace","thing","empty","Schema","property","normal","space","merge","definitions","definition","normalize","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","checks","types","DefinedInfo","mask","index","mark","check","properties","normals","info","aria","_","caseSensitiveTransform","attributes","caseInsensitiveTransform","html","svg","xlink","xmlns","xml","hastToReact","cap","dash","valid","find","schema","Type","camelcase","dashes","kebab","$0","htmlBase","svgBase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","style","lineno","column","updatePosition","str","lines","i","start","Position","msg","match","m","comments","rules","c","comment","pos","declaration","prop","val","ret","trim","declarations","decls","decl","__importDefault","this","mod","cjs","StyleToObject","inline_style_parser_1","iterator","styleObject","hasIterator","utilities","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","skipCamelCase","capitalize","character","trimHyphen","prefix","camelCase","style_to_object_1","utilities_1","StyleToJS","output","pointEnd","point","pointStart","end","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","reason","legacyCause","parent","own","emptyMap","tableElements","tableCellElement","docs","toJsxRuntime","tree","filePath","developmentCreate","productionCreate","state","one","element","mdxExpression","mdxJsxElement","mdxEsm","root","text","parentSchema","findComponentFromName","createElementProps","createChildren","child","addNode","addChildren","expression","assert","crashEstree","createJsxElementProps","jsx","jsxs","fn","jsxDEV","alignValue","createProperty","objectExpression","countsByName","count","commas","spaces","parseStyle","transformStylesToCssCasing","styleToJs","cause","allowExpression","identifiers","isIdentifierName","place","domCasing","cssCasing","from","transformStyleToCssCasing","to","toDash","urlAttributes","toString","includeImageAlt","includeHtml","all","decodeNamedCharacterReference","characterReference","splice","list","remove","items","chunkStart","parameters","push","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","code","constructs","existing","before","decodeNumericCharacterReference","base","normalizeIdentifier","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","normalizeUri","skip","replace","next","factorySpace","effects","ok","max","limit","size","initializeContent","contentStart","afterContentStartConstruct","paragraphInitial","previous","token","document","initializeDocument","containerConstruct","tokenizeContainer","stack","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","flowStart","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","endOfFile","seen","entry","nok","classifyCharacter","resolveAll","events","context","called","attention","resolveAllAttention","tokenizeAttention","open","group","openingSequence","closingSequence","use","nextEvents","offset","movePoint","attentionMarkers","marker","inside","after","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","tokenizeBlankLine","blockQuote","tokenizeBlockQuoteContinuation","exit","tokenizeBlockQuoteStart","contStart","contBefore","characterEscape","tokenizeCharacterEscape","tokenizeCharacterReference","test","numeric","nonLazyContinuation","tokenizeNonLazyContinuation","codeFenced","tokenizeCodeFenced","closeStart","tokenizeCloseStart","initialPrefix","sizeOpen","beforeSequenceOpen","tail","sequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","codeIndented","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","codeText","resolveCodeText","tokenizeCodeText","tailExitIndex","headEnterIndex","enter","between","SpliceBuffer","initial","stop","deleteCount","removed","chunkedPush","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","slice","resolveContent","tokenizeContent","continuationConstruct","tokenizeContinuation","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","tokenizeDefinition","titleBefore","tokenizeTitleBefore","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","tokenizeHardBreakEscape","headingAtx","resolveHeadingAtx","tokenizeHeadingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","resolveToHtmlFlow","tokenizeHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","continuation","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlText","tokenizeHtmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","resolveAllLabelEnd","resolveToLabelEnd","tokenizeLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","newEvents","media","label","labelStart","defined","labelEndNok","labelEndOk","referenceNotFull","resourceStart","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFull","referenceFullAfter","referenceFullMissing","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","lineEnding","tokenizeLineEnding","thematicBreak","tokenizeThematicBreak","sequence","tokenizeListContinuation","tokenizeListEnd","tokenizeListStart","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","atMarker","onBlank","endOfPrefix","otherPrefix","notBlank","notInCurrentItem","setextUnderline","resolveToSetextUnderline","tokenizeSetextUnderline","heading","paragraph","flow","initializeFlow","atBlankEnding","afterConstruct","resolver","createResolver","string","initializeFactory","resolveAllLineSuffixes","initializeText","notText","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","contentInitial","flowInitial","insideSpan","resolveText","disable","createTokenizer","parser","initialize","columnStart","resolveAllConstructs","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","consume","defineSkip","now","sliceSerialize","sliceStream","write","main","addResult","expandTabs","serializeChunks","sliceChunks","_bufferIndex","_index","accountForPotentialSkip","chunkIndex","go","fields","construct","onreturn","bogusState","listOfConstructs","constructIndex","currentConstruct","handleListOfConstructs","handleMapOfConstructs","map","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","restore","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","atTab","parse","defaultConstructs","creator","postprocess","search","preprocess","atCarriageReturn","preprocessor","encoding","endPosition","characterEscapeOrReference","decodeString","decode","$1","$2","hex","fromMarkdown","compiler","opener","link","onenterdata","codeFlow","emphasis","hardBreak","image","listItem","onenterlistitemvalue","onenterlistordered","onenterreference","strong","closer","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","onexitdata","onexitcharacterreferencemarker","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","onexitsetextheadinglinesequence","onexitsetextheadingtext","configure","compile","resume","listStack","prepareList","handler","defaultOnError","length","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","and","errorHandler","onExitError","ancestor","depth","siblings","referenceType","fragment","d","combined","remarkParse","doc","blockquote","strikethrough","footnoteReference","clobberPrefix","safeId","counter","reuseCounter","sup","revert","subtype","suffix","contents","imageReference","inlineCode","linkReference","results","loose","listLoose","listItemLoose","spread","table","rows","firstRow","tableContent","body","tableRow","align","cellIndex","cells","cell","tableCell","tab","trimLines","last","trimLine","handlers","ignore","VOID","PRIMITIVE","ARRAY","OBJECT","DATE","REGEXP","MAP","SET","ERROR","BIGINT","env","deserializer","$","as","out","unpair","object","flags","set","deserialize","serialized","EMPTY","typeOf","asString","shouldSkip","TYPE","serializer","strict","json","pair","entries","serialize","lossy","structuredClone$1","any","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","footer","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","tailTail","structuredClone","convert","castFactory","anyFactory","propsFactory","typeFactory","tests","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","overload","createState","definitionById","footnoteById","footnoteCounts","defaultHandlers","applyData","patch","wrap","handle","shallow","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","hName","hChildren","hProperties","toHast","foot","remarkRehype","destination","file","hastTree","bail","hasOwn","toStr","defineProperty","gOPD","isArray","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","getProperty","extend","src","copy","copyIsArray","clone","deep","prototype","trough","fns","pipeline","run","middlewareIndex","callback","middelware","middleware","wrapped","fnExpectsCallback","done","exception","then","minpath","basename","dirname","extname","join","path","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","minproc","cwd","isUrl","fileUrlOrPath","urlToPath","getPathFromURLPosix","pathname","third","order","VFile","isUint8Array","assertNonEmpty","assertPart","stem","part","CallableInstance","proto","apply","Processor","attacher","assertUnfrozen","transformer","realFile","vfile","assertParser","assertCompiler","executor","parseTree","realDone","compileTree","compileResult","looksLikeAValue","complete","assertDone","assertNode","transformers","outputTree","resultingTree","attachers","namespace","addPlugin","addList","addPreset","add","plugin","plugins","entryIndex","primary","currentPrimary","isPlainObj","unified","frozen","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","processor","createProcessor","createFile","post","rehypePlugins","remarkPlugins","remarkRehypeOptions","allowedElements","allowElement","components","disallowedElements","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","deprecation","transform","Fragment","colon","questionMark","numberSign","BUTTON_REGEX","remarkCustomButton","setRef","ref","composeRefs","refs","hasCleanup","cleanups","cleanup","createSlot","ownerName","SlotClone","createSlotClone","Slot2","forwardedRef","slotProps","childrenArray","slottable","isSlottable","newElement","newChildren","Slot","childrenRef","getElementRef","props2","mergeProps","SLOTTABLE_IDENTIFIER","childProps","overrideProps","slotPropValue","childPropValue","args","mayWarn","r","f","o","clsx","falsyToString","cx","cva","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","param","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","CLASS_PART_SEPARATOR","createClassGroupUtils","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","className","classParts","getGroupRecursive","getGroupIdForArbitraryProperty","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","classGroupFromNextClassPart","classRest","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","theme","classGroups","processClassesRecursively","classGroup","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","currentClassPartObject","pathPart","func","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","MODIFIER_SEPARATOR","MODIFIER_SEPARATOR_LENGTH","createParseClassName","experimentalParseClassName","parseClassName","modifiers","bracketDepth","parenDepth","modifierStart","postfixModifierPosition","currentCharacter","baseClassNameWithImportantModifier","baseClassName","stripImportantModifier","hasImportantModifier","maybePostfixModifierPosition","fullPrefix","parseClassNameOriginal","createSortModifiers","orderSensitiveModifiers","modifier","sortedModifiers","unsortedModifiers","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","getClassGroupId","getConflictingClassGroupIds","sortModifiers","classGroupsInConflict","classNames","originalClassName","isExternal","variantModifier","modifierId","classId","conflictGroups","twJoin","argument","resolvedValue","toValue","mix","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","fromTheme","themeGetter","arbitraryValueRegex","arbitraryVariableRegex","fractionRegex","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isFraction","isNumber","isInteger","isPercent","isTshirtSize","isAny","isLengthOnly","isNever","isShadow","isImage","isAnyNonArbitrary","isArbitraryValue","isArbitraryVariable","isArbitrarySize","getIsArbitraryValue","isLabelSize","isArbitraryLength","isLabelLength","isArbitraryNumber","isLabelNumber","isArbitraryPosition","isLabelPosition","isArbitraryImage","isLabelImage","isArbitraryShadow","isLabelShadow","isArbitraryVariableLength","getIsArbitraryVariable","isArbitraryVariableFamilyName","isLabelFamilyName","isArbitraryVariablePosition","isArbitraryVariableSize","isArbitraryVariableImage","isArbitraryVariableShadow","testLabel","testValue","shouldMatchNoLabel","getDefaultConfig","themeColor","themeFont","themeText","themeFontWeight","themeTracking","themeLeading","themeBreakpoint","themeContainer","themeSpacing","themeRadius","themeShadow","themeInsetShadow","themeTextShadow","themeDropShadow","themeBlur","themePerspective","themeAspect","themeEase","themeAnimate","scaleBreak","scalePosition","scalePositionWithArbitrary","scaleOverflow","scaleOverscroll","scaleUnambiguousSpacing","scaleInset","scaleGridTemplateColsRows","scaleGridColRowStartAndEnd","scaleGridColRowStartOrEnd","scaleGridAutoColsRows","scaleAlignPrimaryAxis","scaleAlignSecondaryAxis","scaleMargin","scaleSizing","scaleColor","scaleBgPosition","scaleBgRepeat","scaleBgSize","scaleGradientStopPosition","scaleRadius","scaleBorderWidth","scaleLineStyle","scaleBlendMode","scaleMaskImagePosition","scaleBlur","scaleRotate","scaleScale","scaleSkew","scaleTranslate","twMerge","cn","inputs","buttonVariants","Button","asChild","Comp","CustomButton","readonly","defaultButtonText","onSend","buttonText","restProps","handleButtonClick","SEPARATOR","SEPARATOR_GLOBAL","MATCH_RULES","parseContentByType","formatType","variableName","findFirstMatch","rule","createSegments","parsedResult","remarkCustomButtonInputVariable","matchResult","Input","toKebabCase","toCamelCase","p1","p2","toPascalCase","mergeClasses","classes","array","hasA11yProp","defaultAttributes","Icon","forwardRef","color","strokeWidth","absoluteStrokeWidth","iconNode","createElement","tag","attrs","createLucideIcon","iconName","Component","__iconNode","ChevronDown","Send","CustomButtonInputVariable","defaultInputText","inputValue","setInputValue","handleInputChange","handleKeyPress","handleSendClick","SendIcon","ccount","escapeStringRegexp","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","change","matchObject","tupleOrList","tuple","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","findUrl","findEmail","protocol","domain","isCorrectDomain","parts","splitUrl","atext","trailExec","trail","closingParenIndex","openingParens","closingParens","email","footnoteReferencePeek","enterFootnoteCallString","enterFootnoteCall","enterFootnoteDefinitionLabelString","enterFootnoteDefinition","exitFootnoteCallString","exitFootnoteCall","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","tracker","subexit","gfmFootnoteFromMarkdown","gfmFootnoteToMarkdown","firstLineBlank","footnoteDefinition","mapAll","mapExceptFirst","blank","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","defaultStringLength","markdownTable","stringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","toAlignment","patternInScope","pattern","listInScope","none","_1","longestStreak","substring","expected","formatCodeAsIndented","checkFence","checkQuote","quote","checkEmphasis","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","emphasisPeek","betweenHead","betweenTail","formatHeadingAsSetext","literalWithBreak","rank","htmlPeek","imagePeek","imageReferencePeek","alt","reference","inlineCodePeek","formatLinkAsAutolink","linkPeek","linkReferencePeek","checkBullet","checkBulletOther","bullet","bulletOther","checkBulletOrdered","checkRule","bulletCurrent","useDifferentMarker","firstListItem","checkListItemIndent","listItemIndent","phrasing","checkStrong","strongPeek","checkRuleRepetition","repetition","gfmTableFromMarkdown","enterTable","enterCell","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","padding","alignDelimiters","around","inlineCodeWithTable","handleTable","handleTableCell","handleTableRow","serializeData","handleTableAsData","handleTableRowAsData","matrix","gfmTaskListItemFromMarkdown","exitCheck","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","wwwPrefix","tokenizeWwwPrefix","tokenizeDomain","tokenizePath","tokenizeTrail","emailDomainDotTrail","tokenizeEmailDomainDotTrail","wwwAutolink","tokenizeWwwAutolink","previousWww","protocolAutolink","tokenizeProtocolAutolink","previousProtocol","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","dot","gfmAtext","previousUnbalanced","emailDomain","emailDomainAfter","emailDomainDot","wwwStart","wwwAfter","protocolStart","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","call","replacement","callStart","callData","callEscape","labelAtMarker","whitespaceAfter","gfmStrikethrough","single","tokenizeStrikethrough","resolveAllStrikethrough","EditMap","addImplementation","vecs","editMap","at","gfmTableAlign","inDelimiterRow","alignIndex","gfmTable","tokenizeTable","resolveTable","sizeB","bodyRowStart","headRowBefore","headRowStart","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","currentTable","currentBody","currentCell","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","valueName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","findAfter","convertElement","tagNameFactory","looksLikeAnElement","searchLineFeeds","searchTabOrSpaces","br","isCell","notRendered","hidden","closedDialog","blockOrCaption","toText","options_","block","inferWhitespace","collectText","renderedTextCollection","collectElement","collectPreText","trimAndCollapseSpacesAndTabs","breakBefore","breakAfter","cPlusPlus","hljs","C_LINE_COMMENT_MODE","DECLTYPE_AUTO_RE","NAMESPACE_RE","FUNCTION_TYPE_RE","CPP_PRIMITIVE_TYPES","STRINGS","NUMBERS","PREPROCESSOR","TITLE_MODE","FUNCTION_TITLE","RESERVED_KEYWORDS","RESERVED_TYPES","TYPE_HINTS","FUNCTION_HINTS","CPP_KEYWORDS","FUNCTION_DISPATCH","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","FUNCTION_DECLARATION","arduino","ARDUINO_KW","ARDUINO","kws","bash","VAR","BRACED_VAR","SUBST","COMMENT","HERE_DOC","QUOTE_STRING","ESCAPED_QUOTE","APOS_STRING","ESCAPED_APOS","ARITHMETIC","SH_LIKE_SHELLS","KNOWN_SHEBANG","FUNCTION","KEYWORDS","LITERALS","PATH_MODE","SHELL_BUILT_INS","BASH_BUILT_INS","ZSH_BUILT_INS","GNU_CORE_UTILS","TYPES","cpp","csharp","BUILT_IN_KEYWORDS","FUNCTION_MODIFIERS","LITERAL_KEYWORDS","NORMAL_KEYWORDS","CONTEXTUAL_KEYWORDS","RAW_STRING","VERBATIM_STRING","VERBATIM_STRING_NO_LF","SUBST_NO_LF","INTERPOLATED_STRING","INTERPOLATED_VERBATIM_STRING","INTERPOLATED_VERBATIM_STRING_NO_LF","STRING","GENERIC_MODIFIER","TYPE_IDENT_RE","AT_IDENTIFIER","MODES","HTML_TAGS","SVG_TAGS","TAGS","MEDIA_FEATURES","PSEUDO_CLASSES","PSEUDO_ELEMENTS","ATTRIBUTES","css","modes","VENDOR_PREFIX","AT_MODIFIERS","AT_PROPERTY_RE","IDENT_RE","diff","graphql","GQL_NAME","ini","COMMENTS","VARIABLES","BARE_KEY","QUOTED_KEY_DOUBLE_QUOTE","QUOTED_KEY_SINGLE_QUOTE","ANY_KEY","DOTTED_KEY","decimalDigits","frac","hexDigits","NUMERIC","recurRegex","substitution","java","JAVA_IDENT_RE","GENERIC_IDENT_RE","ANNOTATION","PARAMS","ERROR_TYPES","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","BUILT_INS","javascript","hasClosingTag","IDENT_RE$1","FRAGMENT","XML_SELF_CLOSING","XML_TAG","afterMatchIndex","nextChar","afterMatch","KEYWORDS$1","decimalInteger","NUMBER","HTML_TEMPLATE","CSS_TEMPLATE","GRAPHQL_TEMPLATE","TEMPLATE_STRING","SUBST_INTERNALS","SUBST_AND_COMMENTS","PARAMS_CONTAINS","CLASS_OR_EXTENDS","CLASS_REFERENCE","USE_STRICT","FUNCTION_DEFINITION","UPPER_CASE_CONSTANT","noneOf","FUNCTION_CALL","x","PROPERTY_ACCESS","GETTER_OR_SETTER","FUNC_LEAD_IN_RE","FUNCTION_VARIABLE","ATTRIBUTE","PUNCTUATION","LITERALS_MODE","kotlin","KEYWORDS_WITH_LABEL","LABEL","VARIABLE","ANNOTATION_USE_SITE","KOTLIN_NUMBER_MODE","KOTLIN_NESTED_COMMENT","KOTLIN_PAREN_TYPE","KOTLIN_PAREN_TYPE2","PSEUDO_SELECTORS","less","PSEUDO_SELECTORS$1","INTERP_IDENT_RE","RULES","VALUE_MODES","STRING_MODE","IDENT_MODE","relevance","AT_KEYWORDS","PARENS_MODE","VALUE_WITH_RULESETS","MIXIN_GUARD_MODE","RULE_MODE","AT_RULE_MODE","VAR_RULE_MODE","SELECTOR_MODE","PSEUDO_SELECTOR_MODE","lua","OPENING_LONG_BRACKET","CLOSING_LONG_BRACKET","LONG_BRACKETS","makefile","FUNC","ASSIGNMENT","META","TARGET","markdown","INLINE_HTML","HORIZONTAL_RULE","CODE","LIST","LINK_REFERENCE","URL_SCHEME","LINK","BOLD","ITALIC","BOLD_WITHOUT_ITALIC","ITALIC_WITHOUT_BOLD","CONTAINABLE","objectivec","API_CLASS","IDENTIFIER_RE","CLASS_KEYWORDS","perl","REGEX_MODIFIERS","PERL_KEYWORDS","METHOD","ATTR","STRING_CONTAINS","REGEX_DELIMS","PAIRED_DOUBLE_RE","middle","PAIRED_RE","PERL_DEFAULT_CONTAINS","php","NOT_PERL_ETC","PASCAL_CASE_CLASS_NAME_RE","UPCASE_NAME_RE","SINGLE_QUOTED","DOUBLE_QUOTED","HEREDOC","resp","NOWDOC","WHITESPACE","KWS","normalizeKeywords","CONSTRUCTOR_CALL","CONSTANT_REFERENCE","LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON","NAMED_ARGUMENT","PARAMS_MODE","FUNCTION_INVOKE","ATTRIBUTE_CONTAINS","phpTemplate","plaintext","python","RESERVED_WORDS","PROMPT","LITERAL_BRACKET","digitpart","pointfloat","lookahead","COMMENT_TYPE","pythonRepl","NUMBER_TYPES_RE","OPERATORS_RE","PUNCTUATION_RE","ruby","RUBY_METHOD_RE","CLASS_NAME_RE","CLASS_NAME_WITH_NAMESPACE_RE","RUBY_KEYWORDS","YARDOCTAG","IRB_OBJECT","COMMENT_MODES","decimal","digits","RUBY_DEFAULT_CONTAINS","IRB_DEFAULT","rust","RAW_IDENTIFIER","UNDERSCORE_IDENT_RE","NUMBER_SUFFIX","BUILTINS","scss","PSEUDO_ELEMENTS$1","PSEUDO_CLASSES$1","shell","sql","COMMENT_MODE","QUOTED_IDENTIFIER","MULTI_WORD_TYPES","NON_RESERVED_WORDS","RESERVED_FUNCTIONS","POSSIBLE_WITHOUT_PARENS","COMBOS","FUNCTIONS","keyword","OPERATOR","kws_to_regex","kw","MULTI_WORD_KEYWORDS","reduceRelevancy","exceptions","when","qualifyFn","stripOptionsFromArgs","opts","either","keywordWrapper","dotKeywords","optionalDotKeywords","keywordTypes","keywords","literals","precedencegroupKeywords","numberSignKeywords","builtIns","operatorHead","operatorCharacter","operator","identifierHead","identifierCharacter","typeIdentifier","keywordAttributes","availabilityKeywords","swift","BLOCK_COMMENT","DOT_KEYWORD","KEYWORD_GUARD","PLAIN_KEYWORDS","REGEX_KEYWORDS","KEYWORD","KEYWORD_MODES","BUILT_IN_GUARD","BUILT_IN","OPERATOR_GUARD","OPERATORS","ESCAPED_CHARACTER","rawDelimiter","ESCAPED_NEWLINE","INTERPOLATION","MULTILINE_STRING","SINGLE_LINE_STRING","REGEXP_CONTENTS","BARE_REGEXP_LITERAL","EXTENDED_REGEXP_LITERAL","IMPLICIT_PARAMETER","PROPERTY_WRAPPER_PROJECTION","IDENTIFIERS","AVAILABLE_ATTRIBUTE","KEYWORD_ATTRIBUTE","USER_DEFINED_ATTRIBUTE","GENERIC_ARGUMENTS","TUPLE_ELEMENT_NAME","TUPLE","GENERIC_PARAMETERS","FUNCTION_PARAMETER_NAME","FUNCTION_PARAMETERS","FUNCTION_OR_MACRO","INIT_SUBSCRIPT","OPERATOR_DECLARATION","PRECEDENCEGROUP","CLASS_FUNC_DECLARATION","CLASS_VAR_DECLARATION","interpolation","mode","submodes","typescript","tsLanguage","NAMESPACE","INTERFACE","TS_SPECIFIC_KEYWORDS","DECORATOR","swapMode","indx","ATTRIBUTE_HIGHLIGHT","OPTIONAL_KEY_OR_ARGUMENT","functionDeclaration","vbnet","CHARACTER","MM_DD_YYYY","YYYY_MM_DD","TIME_12H","TIME_24H","DOC_COMMENT","wasm","LINE_COMMENT","FUNCTION_REFERENCE","ARGUMENT","PARENS","MATH_OPERATIONS","TAG_NAME_RE","XML_IDENT_RE","XML_ENTITIES","XML_META_KEYWORDS","XML_META_PAR_KEYWORDS","APOS_META_STRING_MODE","QUOTE_META_STRING_MODE","TAG_INTERNALS","yaml","URI_CHARACTERS","KEY","TEMPLATE_VARIABLES","SINGLE_QUOTE_STRING","CONTAINER_STRING","TIMESTAMP","VALUE_CONTAINER","grammars","deepFreeze","Response","escapeHTML","inherit$1","original","objects","SPAN_CLOSE","emitsWrappingTags","scopeToCSSClass","pieces","HTMLRenderer","newNode","TokenTree","scope","builder","el","TokenTreeEmitter","emitter","anyNumberOfTimes","optional","countMatchGroups","startsWith","lexeme","BACKREF_RE","_rewriteBackreferences","regexps","joinWith","numCaptures","MATCH_NOTHING_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","SHEBANG","beginShebang","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","modeOptions","ENGLISH_WORD","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","REGEXP_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","skipIfHasPrecedingDot","scopeClassName","_parent","beginKeywords","compileIllegal","compileMatch","compileRelevance","beforeMatchExt","originalMode","COMMON_KEYWORDS","DEFAULT_KEYWORD_SCOPE","compileKeywords","rawKeywords","caseInsensitive","scopeName","compiledKeywords","compileList","keywordList","scoreForKeyword","providedScore","commonKeyword","seenDeprecations","warn","deprecated","version","MultiClassError","remapScopeNames","regexes","scopeNames","emit","positions","beginMultiClass","endMultiClass","scopeSugar","MultiClass","compileLanguage","language","langRe","global","MultiRegex","terminators","matchData","ResumableMultiRegex","matcher","m2","buildModeRegex","mm","term","compileMode","cmode","ext","keywordPattern","expandOrCloneMode","dependencyOnParent","HTMLInjectionError","inherit","NO_MATCH","MAX_KEYWORD_HITS","HLJS","languages","aliases","SAFE_MODE","LANGUAGE_NOT_FOUND","PLAINTEXT_LANGUAGE","shouldNotHighlight","languageName","blockLanguage","getLanguage","_class","highlight","codeOrLanguageName","optionsOrCode","ignoreIllegals","fire","_highlight","codeToHighlight","keywordHits","keywordData","matchText","processKeywords","top","modeBuffer","lastIndex","buf","word","keywordRelevance","cssClass","emitKeyword","processSubLanguage","continuations","highlightAuto","processBuffer","emitMultiClass","klass","startNewMode","endOfMode","matchPlusRemainder","matched","doIgnore","resumeScanAtSamePosition","doBeginMatch","newMode","beforeCallbacks","cb","doEndMatch","endMode","processContinuations","lastMatch","processLexeme","textBeforeMatch","processed","iterations","md","beforeMatch","processedCount","justTextHighlightResult","languageSubset","autoDetection","sorted","best","secondBest","updateClassName","currentLang","resultLang","highlightElement","userOptions","initHighlighting","highlightAll","initHighlightingOnLoad","wantsHighlight","boot","registerLanguage","languageDefinition","lang","error$1","registerAliases","unregisterLanguage","alias","listLanguages","aliasList","upgradePluginAPI","removePlugin","deprecateHighlightBlock","core","defaultPrefix","createLowlight","high","HighlightJs","register","registerAlias","registered","HastEmitter","subset","grammarsOrName","grammar","aliasesOrName","aliasOrName","rawName","other","rehypeHighlight","detect","common","plainText","lowlight","highlightLanguages","subsetLanguages","useTypewriter","typingSpeed","disabled","displayContent","setDisplayContent","isTyping","setIsTyping","isComplete","setIsComplete","parsedSegmentsRef","displayIndexRef","timerRef","isMountedRef","lastContentRef","clearTimer","markdownPatterns","parseContent","remainingText","earliestMatch","earliestIndex","char","segment","prev","newContent","oldContent","oldSegmentCount","isNowComplete","reset","newlineToBreak","remarkBreaks","unescapeMarkdown","markdownText","escapeMap","escapeRegex","processMarkdownText","ContentRender","customRenderBar","disableTyping","onTypeFinished","inline","hasCompleted","ReactMarkdown","MarkdownFlow","initialContentList","onSendProp","typingSpeedProp","disableTypingProp","onBlockComplete","contentInfo","isFinished","useScrollToBottom","containerRef","dependencies","behavior","autoScrollOnInit","scrollDelay","scrollThreshold","showScrollToBottom","setShowScrollToBottom","isAtBottom","setIsAtBottom","followNewContent","isFirstLoad","timers","clearAllTimers","timer","checkIfAtBottom","container","scrollTop","scrollHeight","clientHeight","scrollToBottom","updateScrollState","atBottom","handleUserScrollToBottom","handleScroll","ScrollableMarkdownFlow","height","PlaygroundComponent","defaultContent","defaultVariables","defaultDocumentPrompt","styles","sseUrl","sessionId","markdownInfo","isMarkdownLoading","block_count","interaction_blocks","currentBlockIndex","setCurrentBlockIndex","contentList","setContentList","sseParams","setSseParams","getSSEBody","shouldContinueToNextBlock","nextIndex","updateContextParamsForNextBlock","currentData","newContext","updateContentListWithSseData","newData","newList","updateContentListWithUserOperate","params","handleOnFinish","updatedList","handleSend","userInput"],"mappings":";;;;;;;;;;;;;;;;;;;AAWA,MAAIA,IAAqB,OAAO,IAAI,4BAA4B,GAC9DC,IAAsB,OAAO,IAAI,gBAAgB;AACnD,WAASC,EAAQC,GAAMC,GAAQC,GAAU;AACvC,QAAIC,IAAM;AAGV,QAFWD,MAAX,WAAwBC,IAAM,KAAKD,IACxBD,EAAO,QAAlB,WAA0BE,IAAM,KAAKF,EAAO,MACxC,SAASA,GAAQ;AACnB,MAAAC,IAAW,CAAA;AACX,eAASE,KAAYH;AACnB,QAAUG,MAAV,UAAuBF,EAASE,CAAQ,IAAIH,EAAOG,CAAQ;AAAA,IACjE,MAAS,CAAAF,IAAWD;AAClB,WAAAA,IAASC,EAAS,KACX;AAAA,MACL,UAAUL;AAAA,MACV,MAAMG;AAAA,MACN,KAAKG;AAAA,MACL,KAAgBF,MAAX,SAAoBA,IAAS;AAAA,MAClC,OAAOC;AAAA;EAEX;AACA,SAAAG,GAAA,WAAmBP,GACnBO,GAAA,MAAcN,GACdM,GAAA,OAAeN;;;;;;;;;;;;;;wBCtBE,QAAQ,IAAI,aAA7B,gBACG,WAAY;AACX,aAASO,EAAyBN,GAAM;AACtC,UAAYA,KAAR,KAAc,QAAO;AACzB,UAAmB,OAAOA,KAAtB;AACF,eAAOA,EAAK,aAAaO,IACrB,OACAP,EAAK,eAAeA,EAAK,QAAQ;AACvC,UAAiB,OAAOA,KAApB,SAA0B,QAAOA;AACrC,cAAQA,GAAI;AAAA,QACV,KAAKF;AACH,iBAAO;AAAA,QACT,KAAKU;AACH,iBAAO;AAAA,QACT,KAAKC;AACH,iBAAO;AAAA,QACT,KAAKC;AACH,iBAAO;AAAA,QACT,KAAKC;AACH,iBAAO;AAAA,QACT,KAAKC;AACH,iBAAO;AAAA,MACjB;AACM,UAAiB,OAAOZ,KAApB;AACF,gBACgB,OAAOA,EAAK,OAAzB,YACC,QAAQ;AAAA,UACN;AAAA,WAEJA,EAAK,UACf;AAAA,UACU,KAAKa;AACH,mBAAO;AAAA,UACT,KAAKC;AACH,oBAAQd,EAAK,eAAe,aAAa;AAAA,UAC3C,KAAKe;AACH,oBAAQf,EAAK,SAAS,eAAe,aAAa;AAAA,UACpD,KAAKgB;AACH,gBAAIC,IAAYjB,EAAK;AACrB,mBAAAA,IAAOA,EAAK,aACZA,MACIA,IAAOiB,EAAU,eAAeA,EAAU,QAAQ,IACnDjB,IAAcA,MAAP,KAAc,gBAAgBA,IAAO,MAAM,eAC9CA;AAAA,UACT,KAAKkB;AACH,mBACGD,IAAYjB,EAAK,eAAe,MACxBiB,MAAT,OACIA,IACAX,EAAyBN,EAAK,IAAI,KAAK;AAAA,UAE/C,KAAKmB;AACH,YAAAF,IAAYjB,EAAK,UACjBA,IAAOA,EAAK;AACZ,gBAAI;AACF,qBAAOM,EAAyBN,EAAKiB,CAAS,CAAC;AAAA,YAC7D,QAAwB;AAAA,YAAA;AAAA,QACxB;AACM,aAAO;AAAA,IACb;AACI,aAASG,EAAmBC,GAAO;AACjC,aAAO,KAAKA;AAAA,IAClB;AACI,aAASC,EAAuBD,GAAO;AACrC,UAAI;AACF,QAAAD,EAAmBC,CAAK;AACxB,YAAIE,IAA2B;AAAA,MACvC,QAAkB;AACV,QAAAA,IAA2B;AAAA,MACnC;AACM,UAAIA,GAA0B;AAC5B,QAAAA,IAA2B;AAC3B,YAAIC,IAAwBD,EAAyB,OACjDE,IACc,OAAO,UAAtB,cACC,OAAO,eACPJ,EAAM,OAAO,WAAW,KAC1BA,EAAM,YAAY,QAClB;AACF,eAAAG,EAAsB;AAAA,UACpBD;AAAA,UACA;AAAA,UACAE;AAAA,WAEKL,EAAmBC,CAAK;AAAA,MACvC;AAAA,IACA;AACI,aAASK,EAAY1B,GAAM;AACzB,UAAIA,MAASF,EAAqB,QAAO;AACzC,UACe,OAAOE,KAApB,YACSA,MAAT,QACAA,EAAK,aAAamB;AAElB,eAAO;AACT,UAAI;AACF,YAAIQ,IAAOrB,EAAyBN,CAAI;AACxC,eAAO2B,IAAO,MAAMA,IAAO,MAAM;AAAA,MACzC,QAAkB;AACV,eAAO;AAAA,MACf;AAAA,IACA;AACI,aAASC,IAAW;AAClB,UAAIC,IAAaC,EAAqB;AACtC,aAAgBD,MAAT,OAAsB,OAAOA,EAAW,SAAQ;AAAA,IAC7D;AACI,aAASE,IAAe;AACtB,aAAO,MAAM,uBAAuB;AAAA,IAC1C;AACI,aAASC,EAAY/B,GAAQ;AAC3B,UAAIgC,EAAe,KAAKhC,GAAQ,KAAK,GAAG;AACtC,YAAIiC,IAAS,OAAO,yBAAyBjC,GAAQ,KAAK,EAAE;AAC5D,YAAIiC,KAAUA,EAAO,eAAgB,QAAO;AAAA,MACpD;AACM,aAAkBjC,EAAO,QAAlB;AAAA,IACb;AACI,aAASkC,EAA2BC,GAAOC,GAAa;AACtD,eAASC,IAAwB;AAC/B,QAAAC,MACIA,IAA6B,IAC/B,QAAQ;AAAA,UACN;AAAA,UACAF;AAAA,QACZ;AAAA,MACA;AACM,MAAAC,EAAsB,iBAAiB,IACvC,OAAO,eAAeF,GAAO,OAAO;AAAA,QAClC,KAAKE;AAAA,QACL,cAAc;AAAA,MACtB,CAAO;AAAA,IACP;AACI,aAASE,IAAyC;AAChD,UAAIC,IAAgBnC,EAAyB,KAAK,IAAI;AACtD,aAAAoC,EAAuBD,CAAa,MAChCC,EAAuBD,CAAa,IAAI,IAC1C,QAAQ;AAAA,QACN;AAAA,MACV,IACMA,IAAgB,KAAK,MAAM,KACTA,MAAX,SAA2BA,IAAgB;AAAA,IACxD;AACI,aAASE,EACP3C,GACAG,GACAyC,GACAC,GACAC,IACAV,IACAW,IACAC,IACA;AACA,aAAAJ,IAAOR,GAAM,KACbpC,IAAO;AAAA,QACL,UAAUH;AAAA,QACV,MAAMG;AAAA,QACN,KAAKG;AAAA,QACL,OAAOiC;AAAA,QACP,QAAQU;AAAA,UAEWF,MAAX,SAAkBA,IAAO,UAAnC,OACI,OAAO,eAAe5C,GAAM,OAAO;AAAA,QACjC,YAAY;AAAA,QACZ,KAAKwC;AAAA,OACN,IACD,OAAO,eAAexC,GAAM,OAAO,EAAE,YAAY,IAAI,OAAO,MAAM,GACtEA,EAAK,SAAS,CAAA,GACd,OAAO,eAAeA,EAAK,QAAQ,aAAa;AAAA,QAC9C,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,OAAO;AAAA,MACf,CAAO,GACD,OAAO,eAAeA,GAAM,cAAc;AAAA,QACxC,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,OAAO;AAAA,MACf,CAAO,GACD,OAAO,eAAeA,GAAM,eAAe;AAAA,QACzC,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,OAAO+C;AAAA,MACf,CAAO,GACD,OAAO,eAAe/C,GAAM,cAAc;AAAA,QACxC,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,OAAOgD;AAAA,MACf,CAAO,GACD,OAAO,WAAW,OAAO,OAAOhD,EAAK,KAAK,GAAG,OAAO,OAAOA,CAAI,IACxDA;AAAA,IACb;AACI,aAASiD,EACPjD,GACAC,GACAC,GACAgD,GACAL,IACAD,IACAG,IACAC,IACA;AACA,UAAIG,KAAWlD,EAAO;AACtB,UAAekD,OAAX;AACF,YAAID;AACF,cAAIE,EAAYD,EAAQ,GAAG;AACzB,iBACED,IAAmB,GACnBA,IAAmBC,GAAS,QAC5BD;AAEA,cAAAG,EAAkBF,GAASD,CAAgB,CAAC;AAC9C,mBAAO,UAAU,OAAO,OAAOC,EAAQ;AAAA,UACnD;AACY,oBAAQ;AAAA,cACN;AAAA;YAED,CAAAE,EAAkBF,EAAQ;AACjC,UAAIlB,EAAe,KAAKhC,GAAQ,KAAK,GAAG;AACtC,QAAAkD,KAAW7C,EAAyBN,CAAI;AACxC,YAAIsD,KAAO,OAAO,KAAKrD,CAAM,EAAE,OAAO,SAAUsD,IAAG;AACjD,iBAAiBA,OAAV;AAAA,QACjB,CAAS;AACD,QAAAL,IACE,IAAII,GAAK,SACL,oBAAoBA,GAAK,KAAK,SAAS,IAAI,WAC3C,kBACNE,GAAsBL,KAAWD,CAAgB,MAC7CI,KACA,IAAIA,GAAK,SAAS,MAAMA,GAAK,KAAK,SAAS,IAAI,WAAW,MAC5D,QAAQ;AAAA,UACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACAJ;AAAA,UACAC;AAAA,UACAG;AAAA,UACAH;AAAA,WAEDK,GAAsBL,KAAWD,CAAgB,IAAI;AAAA,MAChE;AAMM,UALAC,KAAW,MACAjD,MAAX,WACGoB,EAAuBpB,CAAQ,GAAIiD,KAAW,KAAKjD,IACtD8B,EAAY/B,CAAM,MACfqB,EAAuBrB,EAAO,GAAG,GAAIkD,KAAW,KAAKlD,EAAO,MAC3D,SAASA,GAAQ;AACnB,QAAAC,IAAW,CAAA;AACX,iBAASE,MAAYH;AACnB,UAAUG,OAAV,UAAuBF,EAASE,EAAQ,IAAIH,EAAOG,EAAQ;AAAA,MACrE,MAAa,CAAAF,IAAWD;AAClB,aAAAkD,MACEhB;AAAA,QACEjC;AAAA,QACe,OAAOF,KAAtB,aACIA,EAAK,eAAeA,EAAK,QAAQ,YACjCA;AAAA,SAED2C;AAAA,QACL3C;AAAA,QACAmD;AAAA,QACAP;AAAA,QACAC;AAAA,QACAjB,EAAQ;AAAA,QACR1B;AAAA,QACA6C;AAAA,QACAC;AAAA;IAER;AACI,aAASK,EAAkBI,GAAM;AAC/B,MAAa,OAAOA,KAApB,YACWA,MAAT,QACAA,EAAK,aAAa5D,KAClB4D,EAAK,WACJA,EAAK,OAAO,YAAY;AAAA,IACjC;AACI,QAAIC,IAAQC,IACV9D,IAAqB,OAAO,IAAI,4BAA4B,GAC5DgB,IAAoB,OAAO,IAAI,cAAc,GAC7Cf,IAAsB,OAAO,IAAI,gBAAgB,GACjDW,IAAyB,OAAO,IAAI,mBAAmB,GACvDD,IAAsB,OAAO,IAAI,gBAAgB,GAE/CO,IAAsB,OAAO,IAAI,gBAAgB,GACnDD,IAAqB,OAAO,IAAI,eAAe,GAC/CE,IAAyB,OAAO,IAAI,mBAAmB,GACvDN,IAAsB,OAAO,IAAI,gBAAgB,GACjDC,IAA2B,OAAO,IAAI,qBAAqB,GAC3DO,IAAkB,OAAO,IAAI,YAAY,GACzCC,IAAkB,OAAO,IAAI,YAAY,GACzCP,IAAsB,OAAO,IAAI,gBAAgB,GACjDL,IAAyB,OAAO,IAAI,wBAAwB,GAC5DuB,IACE4B,EAAM,iEACRzB,IAAiB,OAAO,UAAU,gBAClCmB,IAAc,MAAM,SACpBQ,IAAa,QAAQ,aACjB,QAAQ,aACR,WAAY;AACV,aAAO;AAAA,IACnB;AACI,IAAAF,IAAQ;AAAA,MACN,0BAA0B,SAAUG,GAAmB;AACrD,eAAOA,EAAiB;AAAA,MAChC;AAAA;AAEI,QAAItB,GACAG,IAAyB,CAAA,GACzBoB,KAAyBJ,EAAM,yBAAyB;AAAA,MAC1DA;AAAA,MACA3B;AAAA,IACN,EAAK,GACGgC,IAAwBH,EAAWlC,EAAYK,CAAY,CAAC,GAC5DyB,KAAwB,CAAA;AAC5B,IAAAQ,GAAA,WAAmBlE,GACnBkE,GAAA,MAAc,SAAUhE,GAAMC,GAAQC,GAAU2C,GAAQD,IAAM;AAC5D,UAAIqB,KACF,MAAMnC,EAAqB;AAC7B,aAAOmB;AAAA,QACLjD;AAAA,QACAC;AAAA,QACAC;AAAA,QACA;AAAA,QACA2C;AAAA,QACAD;AAAA,QACAqB,KACI,MAAM,uBAAuB,IAC7BH;AAAA,QACJG,KAAmBL,EAAWlC,EAAY1B,CAAI,CAAC,IAAI+D;AAAA;IAE3D,GACIC,GAAA,OAAe,SAAUhE,GAAMC,GAAQC,GAAU2C,GAAQD,IAAM;AAC7D,UAAIqB,KACF,MAAMnC,EAAqB;AAC7B,aAAOmB;AAAA,QACLjD;AAAA,QACAC;AAAA,QACAC;AAAA,QACA;AAAA,QACA2C;AAAA,QACAD;AAAA,QACAqB,KACI,MAAM,uBAAuB,IAC7BH;AAAA,QACJG,KAAmBL,EAAWlC,EAAY1B,CAAI,CAAC,IAAI+D;AAAA;IAE3D;AAAA,EACA,EAAG;;;;wBCnWC,QAAQ,IAAI,aAAa,eAC3BG,GAAA,UAAiBP,GAAA,IAEjBO,GAAA,UAAiBC,GAAA;;;ACLZ,eAAeC,GAASC,GAAQC,GAAS;AAC5C,QAAMC,IAASF,EAAO;AACtB,MAAIG;AACJ,SAAO,EAAEA,IAAS,MAAMD,EAAO,KAAI,GAAI;AACnC,IAAAD,EAAQE,EAAO,KAAK;AAE5B;AACO,SAASC,GAASC,GAAQ;AAC7B,MAAIC,GACAC,GACAC,GACAC,IAAyB;AAC7B,SAAO,SAAiBC,GAAK;AACzB,IAAIJ,MAAW,UACXA,IAASI,GACTH,IAAW,GACXC,IAAc,MAGdF,IAASK,GAAOL,GAAQI,CAAG;AAE/B,UAAME,IAAYN,EAAO;AACzB,QAAIO,IAAY;AAChB,WAAON,IAAWK,KAAW;AACzB,MAAIH,MACIH,EAAOC,CAAQ,MAAM,OACrBM,IAAY,EAAEN,IAElBE,IAAyB;AAE7B,UAAIK,IAAU;AACd,aAAOP,IAAWK,KAAaE,MAAY,IAAI,EAAEP;AAC7C,gBAAQD,EAAOC,CAAQ,GAAC;AAAA,UACpB,KAAK;AACD,YAAIC,MAAgB,OAChBA,IAAcD,IAAWM;AAE7B;AAAA,UACJ,KAAK;AACD,YAAAJ,IAAyB;AAAA,UAC7B,KAAK;AACD,YAAAK,IAAUP;AACV;AAAA,QACxB;AAEY,UAAIO,MAAY;AACZ;AAEJ,MAAAT,EAAOC,EAAO,SAASO,GAAWC,CAAO,GAAGN,CAAW,GACvDK,IAAYN,GACZC,IAAc;AAAA,IAClB;AACA,IAAIK,MAAcD,IACdN,IAAS,SAEJO,MAAc,MACnBP,IAASA,EAAO,SAASO,CAAS,GAClCN,KAAYM;AAAA,EAEpB;AACJ;AACO,SAASE,GAAYC,GAAMC,GAASC,GAAW;AAClD,MAAIC,IAAUC;AACd,QAAMC,IAAU,IAAI;AACpB,SAAO,SAAgBC,GAAMd,GAAa;AACtC,QAAIc,EAAK,WAAW;AAChB,MAAsDJ,IAAUC,CAAO,GACvEA,IAAUC,GAAU;AAAA,aAEfZ,IAAc,GAAG;AACtB,YAAMe,IAAQF,EAAQ,OAAOC,EAAK,SAAS,GAAGd,CAAW,CAAC,GACpDgB,IAAchB,KAAec,EAAKd,IAAc,CAAC,MAAM,KAAK,IAAI,IAChExD,IAAQqE,EAAQ,OAAOC,EAAK,SAASE,CAAW,CAAC;AACvD,cAAQD,GAAK;AAAA,QACT,KAAK;AACD,UAAAJ,EAAQ,OAAOA,EAAQ,OACjBA,EAAQ,OAAO;AAAA,IAAOnE,IACtBA;AACN;AAAA,QACJ,KAAK;AACD,UAAAmE,EAAQ,QAAQnE;AAChB;AAAA,QACJ,KAAK;AACD,UAAAgE,EAAKG,EAAQ,KAAKnE,CAAK;AACvB;AAAA,QACJ,KAAK;AACD,gBAAMyE,IAAQ,SAASzE,GAAO,EAAE;AAChC,UAAK,MAAMyE,CAAK,KACZR,EAAQE,EAAQ,QAAQM,CAAK;AAEjC;AAAA,MACpB;AAAA,IACQ;AAAA,EACJ;AACJ;AACA,SAASd,GAAOe,GAAGC,GAAG;AAClB,QAAMC,IAAM,IAAI,WAAWF,EAAE,SAASC,EAAE,MAAM;AAC9C,SAAAC,EAAI,IAAIF,CAAC,GACTE,EAAI,IAAID,GAAGD,EAAE,MAAM,GACZE;AACX;AACA,SAASR,KAAa;AAClB,SAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAO;AAAA,IACP,IAAI;AAAA,IACJ,OAAO;AAAA,EACf;AACA;AC5GA,IAAIS,KAAkC,SAAUC,GAAGC,GAAG;AAClD,MAAIC,IAAI,CAAA;AACR,WAASC,KAAKH,EAAG,CAAI,OAAO,UAAU,eAAe,KAAKA,GAAGG,CAAC,KAAKF,EAAE,QAAQE,CAAC,IAAI,MAC9ED,EAAEC,CAAC,IAAIH,EAAEG,CAAC;AACd,MAAIH,KAAK,QAAQ,OAAO,OAAO,yBAA0B;AACrD,aAAS,IAAI,GAAGG,IAAI,OAAO,sBAAsBH,CAAC,GAAG,IAAIG,EAAE,QAAQ;AAC/D,MAAIF,EAAE,QAAQE,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,UAAU,qBAAqB,KAAKH,GAAGG,EAAE,CAAC,CAAC,MACzED,EAAEC,EAAE,CAAC,CAAC,IAAIH,EAAEG,EAAE,CAAC,CAAC;AAE5B,SAAOD;AACX;AAEO,MAAME,KAAyB,qBAChCC,KAAuB,KACvBC,KAAc;AACb,SAASC,GAAiBC,GAAOC,GAAI;AACxC,MAAI,EAAE,QAAQC,GAAa,SAASC,GAAc,QAAQC,GAAa,WAAAC,GAAW,SAAAC,GAAS,SAAAC,GAAS,gBAAAC,GAAgB,OAAOC,EAAU,IAAKR,GAAIS,IAAOnB,GAAOU,GAAI,CAAC,UAAU,WAAW,UAAU,aAAa,WAAW,WAAW,kBAAkB,OAAO,CAAC;AAC7P,SAAO,IAAI,QAAQ,CAACU,GAASC,MAAW;AACpC,UAAMC,IAAU,OAAO,OAAO,CAAA,GAAIV,CAAY;AAC9C,IAAKU,EAAQ,WACTA,EAAQ,SAASjB;AAErB,QAAIkB;AACJ,aAASC,IAAqB;AAC1B,MAAAD,EAAqB,MAAK,GACrB,SAAS,UACVE;IAER;AACA,IAAKR,KACD,SAAS,iBAAiB,oBAAoBO,CAAkB;AAEpE,QAAIE,IAAgBpB,IAChBqB,IAAa;AACjB,aAASC,IAAU;AACf,eAAS,oBAAoB,oBAAoBJ,CAAkB,GACnE,OAAO,aAAaG,CAAU,GAC9BJ,EAAqB,MAAK;AAAA,IAC9B;AACA,IAA0DZ,GAAY,iBAAiB,SAAS,MAAM;AAClG,MAAAiB,KACAR;IACJ,CAAC;AACD,UAAMS,IAAQX,KAA4D,OAAO,OAC3EY,IAASjB,KAA+DkB;AAC9E,mBAAeN,IAAS;AACpB,UAAIf;AACJ,MAAAa,IAAuB,IAAI;AAC3B,UAAI;AACA,cAAMS,IAAW,MAAMH,EAAMpB,GAAO,OAAO,OAAO,OAAO,OAAO,CAAA,GAAIU,CAAI,GAAG,EAAE,SAAAG,GAAS,QAAQC,EAAqB,OAAM,CAAE,CAAC;AAC5H,cAAMO,EAAOE,CAAQ,GACrB,MAAM9D,GAAS8D,EAAS,MAAMzD,GAASW,GAAY,CAAA+C,MAAM;AACrD,UAAIA,IACAX,EAAQf,EAAW,IAAI0B,IAGvB,OAAOX,EAAQf,EAAW;AAAA,QAElC,GAAG,CAAAX,MAAS;AACR,UAAA8B,IAAgB9B;AAAA,QACpB,GAAGkB,CAAS,CAAC,CAAC,GACoCC,OAClDa,KACAR;MACJ,SACOc,GAAK;AACR,YAAI,CAACX,EAAqB,OAAO;AAC7B,cAAI;AACA,kBAAMY,KAAYzB,IAAuDM,IAAQkB,CAAG,OAAO,QAAQxB,MAAO,SAASA,IAAKgB;AACxH,mBAAO,aAAaC,CAAU,GAC9BA,IAAa,OAAO,WAAWF,GAAQU,CAAQ;AAAA,UACnD,SACOC,GAAU;AACb,YAAAR,KACAP,EAAOe,CAAQ;AAAA,UACnB;AAAA,MAER;AAAA,IACJ;AACA,IAAAX;EACJ,CAAC;AACL;AACA,SAASM,GAAcC,GAAU;AAC7B,QAAMK,IAAcL,EAAS,QAAQ,IAAI,cAAc;AACvD,MAAI,CAA4DK,GAAY,WAAWhC,EAAsB;AACzG,UAAM,IAAI,MAAM,+BAA+BA,EAAsB,aAAagC,CAAW,EAAE;AAEvG;AC3EA,MAAMC,KAAmB,UAOnBC,KAAS,CACbC,GACAC,IAAyB,OACL;AACpB,QAAM,CAACC,GAAMC,CAAO,IAAIC,GAAmB,IAAI,GACzC,CAACC,GAAWC,CAAY,IAAIF,GAAkB,EAAK,GACnD,CAACG,GAAOC,CAAQ,IAAIJ,GAAuB,IAAI,GAC/C,CAACK,GAAUC,CAAW,IAAIN,GAAwB,IAAI,GAEtDO,IAAqBC,GAA+B,IAAI,GACxDC,IAAkBD,GAAO,EAAK,GAC9BE,IAAaF,GAAO,EAAI,GACxBG,IAAsBH,GAAO,EAAK,GAClCI,IAAkBJ,GAAO,EAAE,GAC3BK,IAAeL,GAAe,EAAE,GAEhC,EAAE,aAAAM,IAAc,GAAA,IAASjB,GAEzBkB,IAAUC,GAAY,YAAY;AACtC,QACE,EAAAP,EAAgB,WAChB,CAACC,EAAW,WACZC,EAAoB;AAKtB,UAAI;AACF,QAAAT,EAAa,EAAI,GACjBE,EAAS,IAAI,GACbO,EAAoB,UAAU,IAC9BF,EAAgB,UAAU;AAE1B,cAAMQ,IAAW,EAAEL,EAAgB;AACnC,QAAAN,EAAYW,CAAQ,GACpBJ,EAAa,UAAU;AAEvB,cAAMK,IAAkB,IAAI,gBAAA;AAC5B,QAAAX,EAAmB,UAAUW,GAE7B,MAAMtD,GAAiBgC,GAAK;AAAA,UAC1B,GAAGC;AAAA,UACH,QAAQ;AAAA,UACR,SAAS;AAAA,YACP,QAAQ;AAAA,YACR,gBAAgB;AAAA,YAChB,iBAAiB;AAAA,YACjB,GAAG,OAAO,QAAQA,EAAQ,WAAW,CAAA,CAAE,EAAE;AAAA,cACvC,CAACsB,GAAK,CAAC9J,GAAKkB,CAAK,OACf4I,EAAI9J,CAAG,IAAI,OAAOkB,CAAK,GAChB4I;AAAA,cAET,CAAA;AAAA,YAAC;AAAA,UACH;AAAA,UAEF,QAAQD,EAAgB;AAAA,UACxB,gBAAgB;AAAA,UAChB,QAAQ,OAAM9B,MAAY;AACxB,YAAIsB,EAAW,WAAW,CAACC,EAAoB,YAC7CT,EAAa,EAAK,GAClBE,EAAS,IAAI;AAAA,UAEjB;AAAA,UACA,WAAW,CAAAgB,MAAS;AAClB,gBAAIV,EAAW,WAAW,CAACC,EAAoB,SAAS;AACtD,kBAAIS,EAAM,KAAK,YAAA,MAAkB1B,IAAkB;AACjD,gBAAAG,EAAQ,WAAWgB,EAAa,SAASI,CAAQ,GACjDI,EAAA;AACA;AAAA,cACF;AAEA,kBAAI;AACF,oBAAIC,IAAkBF,EAAM;AAK5B,gBAAAP,EAAa,WAAWS,GACxBvB,EAAQc,EAAa,OAAc;AAAA,cACrC,QAAc;AAAA,cACd;AAAA,YACF;AAAA,UACF;AAAA,UACA,SAAS,MAAM;AACb,YAAIH,EAAW,WAAW,CAACC,EAAoB,WAC7CT,EAAa,EAAK;AAAA,UAEtB;AAAA,UACA,SAAS,CAAAZ,MAAO;AACd,YAAIoB,EAAW,WAAW,CAACC,EAAoB,YAC7CP,EAASd,CAAG,GACZY,EAAa,EAAK;AAAA,UAGtB;AAAA,QAAA,CACD;AAAA,MACH,SAASZ,GAAK;AACZ,QAAIoB,EAAW,WAAW,CAACC,EAAoB,YAC7CP,EAASd,CAAY,GACrBY,EAAa,EAAK;AAAA,MAEtB;AAAA,EACF,GAAG,CAACN,GAAK,KAAK,UAAUC,CAAO,CAAC,CAAC,GAE3BwB,IAAQL,GAAY,MAAM;AAC9B,IAAAL,EAAoB,UAAU,IAC1BJ,EAAmB,YACrBA,EAAmB,QAAQ,MAAA,GAC3BA,EAAmB,UAAU,OAE/BE,EAAgB,UAAU,IACtBC,EAAW,WACbR,EAAa,EAAK;AAAA,EAEtB,GAAG,CAAA,CAAE;AAEL,SAAAqB,GAAU,MAAM;AAKd,QAJAb,EAAW,UAAU,IACrBC,EAAoB,UAAU,IAC9BF,EAAgB,UAAU,IAEtBK,GAAa;AACf,YAAMU,IAAY,WAAW,MAAM;AACjC,QAAKf,EAAgB,WACnBM,EAAA;AAAA,MAEJ,GAAG,GAAG;AAEN,aAAO,MAAM;AACX,QAAAL,EAAW,UAAU,IACrBC,EAAoB,UAAU,IAC9B,aAAaa,CAAS,GACtBH,EAAA;AAAA,MACF;AAAA,IACF;AACE,aAAO,MAAM;AACX,QAAAX,EAAW,UAAU,IACrBC,EAAoB,UAAU,IAC9BU,EAAA;AAAA,MACF;AAAA,EAEJ,GAAG,CAACN,GAASM,GAAOP,CAAW,CAAC,GAGhCS,GAAU,MAAM;AAEd,QAAId,EAAgB,SAAS;AAC3B,MAAAY,EAAA,GACAZ,EAAgB,UAAU,IAC1BE,EAAoB,UAAU,IAC9BZ,EAAQ,IAAI,GACZK,EAAS,IAAI,GACbF,EAAa,EAAI,GACjBW,EAAa,UAAU;AAEvB,YAAMW,IAAY,WAAW,MAAM;AACjC,QAAKf,EAAgB,WACnBM,EAAA;AAAA,MAEJ,GAAG,GAAG;AAEN,aAAO,MAAM;AACX,qBAAaS,CAAS;AAAA,MACxB;AAAA,IACF;AAAA,EACF,GAAG,CAAC5B,GAAK,KAAK,UAAUC,CAAO,GAAGkB,GAASM,CAAK,CAAC,GAE1C;AAAA,IACL,MAAAvB;AAAA,IACA,WAAAG;AAAA,IACA,OAAAE;AAAA,IACA,UAAAE;AAAA,IACA,SAAAU;AAAA,IACA,OAAAM;AAAA,EAAA;AAEJ,GClLMI,KAAkB,CAACC,MAAoB;AAC3C,QAAM,CAAC5B,GAAMC,CAAO,IAAIC,GAAkC,IAAI,GACxD,CAAC2B,GAASC,CAAU,IAAI5B,GAAkB,EAAI,GAC9C,CAACG,GAAOC,CAAQ,IAAIJ,GAAwB,IAAI;AAEtD,SAAAuB,GAAU,MAAM;AAmCd,IAAIG,MAlCsB,YAAY;AACpC,UAAI;AACF,QAAAE,EAAW,EAAI;AAGf,cAAMxC,IAAW,MAAM,MAAM,oEAAoE;AAAA,UAC/F,QAAQ;AAAA,UACR,SAAS;AAAA,YACP,gBAAgB;AAAA,UAAA;AAAA,UAElB,MAAM,KAAK,UAAU,EAAE,SAAAsC,GAAS;AAAA;AAAA,UAEhC,OAAO;AAAA;AAAA,QAAA,CAER;AAED,YAAI,CAACtC,EAAS;AACZ,gBAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE;AAG1D,cAAM1D,IAA+B,MAAM0D,EAAS,KAAA;AAEpD,QAAI1D,EAAO,SAAS,MAClBqE,EAAQrE,EAAO,IAAI,IAEnB0E,EAAS1E,EAAO,WAAW,MAAM;AAAA,MAErC,SAAS4D,GAAU;AACjB,QAAAc,EAASd,EAAI,WAAW,MAAM;AAAA,MAChC,UAAA;AACE,QAAAsC,EAAW,EAAK;AAAA,MAClB;AAAA,IACF,GAGE;AAAA,EAEJ,GAAG,CAACF,CAAO,CAAC,GAEL,EAAE,MAAA5B,GAAM,SAAA6B,GAAS,OAAAxB,EAAA;AAC1B;ACFO,SAAS0B,GAAUC,GAAQjC,GAAS;AACzC,QAAMkC,IAAsB,CAAA;AAK5B,UAFcD,EAAOA,EAAO,SAAS,CAAC,MAAM,KAAK,CAAC,GAAGA,GAAQ,EAAE,IAAIA,GAGhE;AAAA,KACEC,EAAS,WAAW,MAAM,MACzB,OACCA,EAAS,YAAY,KAAQ,KAAK;AAAA,EAC3C,EACK,KAAI;AACT;AC/DA,MAAMC,KAAS,2DACTC,KAAY,4DAGZC,KAAe,CAAA;AA0Cd,SAASrJ,GAAKA,GAAMgH,GAAS;AAGlC,UAF4BqC,GACR,MAAMD,KAAYD,IAC5B,KAAKnJ,CAAI;AACrB;ACtDA,MAAMsJ,KAAK;AAaJ,SAASC,GAAWC,GAAO;AAChC,SAAO,OAAOA,KAAU,WACpBA,EAAM,SAAS,SACbC,GAAMD,EAAM,KAAK,IACjB,KACFC,GAAMD,CAAK;AACjB;AAMA,SAASC,GAAM/J,GAAO;AACpB,SAAOA,EAAM,QAAQ4J,IAAI,EAAE,MAAM;AACnC;AC5BO,MAAMI,GAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWlB,YAAYC,GAAUC,GAAQC,GAAO;AACnC,SAAK,SAASD,GACd,KAAK,WAAWD,GAEZE,MACF,KAAK,QAAQA;AAAA,EAEjB;AACF;AAEAH,GAAO,UAAU,SAAS,CAAA;AAC1BA,GAAO,UAAU,WAAW,CAAA;AAC5BA,GAAO,UAAU,QAAQ;ACdlB,SAASI,GAAMC,GAAaF,GAAO;AAExC,QAAMF,IAAW,CAAA,GAEXC,IAAS,CAAA;AAEf,aAAWI,KAAcD;AACvB,WAAO,OAAOJ,GAAUK,EAAW,QAAQ,GAC3C,OAAO,OAAOJ,GAAQI,EAAW,MAAM;AAGzC,SAAO,IAAIN,GAAOC,GAAUC,GAAQC,CAAK;AAC3C;ACjBO,SAASI,GAAUvK,GAAO;AAC/B,SAAOA,EAAM,YAAW;AAC1B;ACNO,MAAMwK,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAShB,YAAYP,GAAUQ,GAAW;AAC/B,SAAK,YAAYA,GACjB,KAAK,WAAWR;AAAA,EAClB;AACF;AAEAO,GAAK,UAAU,YAAY;AAC3BA,GAAK,UAAU,aAAa;AAC5BA,GAAK,UAAU,UAAU;AACzBA,GAAK,UAAU,wBAAwB;AACvCA,GAAK,UAAU,iBAAiB;AAChCA,GAAK,UAAU,UAAU;AACzBA,GAAK,UAAU,kBAAkB;AACjCA,GAAK,UAAU,SAAS;AACxBA,GAAK,UAAU,oBAAoB;AACnCA,GAAK,UAAU,WAAW;AAC1BA,GAAK,UAAU,iBAAiB;AAChCA,GAAK,UAAU,QAAQ;AC/BvB,IAAIE,KAAS;AAEN,MAAMC,KAAUC,GAAS,GACnBC,KAAaD,GAAS,GACtBE,KAAoBF,GAAS,GAC7BG,IAASH,GAAS,GAClBI,KAAiBJ,GAAS,GAC1BK,KAAiBL,GAAS,GAC1BM,KAAwBN,GAAS;AAE9C,SAASA,KAAY;AACnB,SAAO,KAAK,EAAEF;AAChB;;;;;;;;;;8CCLMS;AAAA;AAAA,EACJ,OAAO,KAAKC,EAAK;AAAA;AAGZ,MAAMC,WAAoBb,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcpC,YAAYP,GAAUQ,GAAWa,GAAMnB,GAAO;AAC5C,QAAIoB,IAAQ;AAMZ,QAJA,MAAMtB,GAAUQ,CAAS,GAEzBe,GAAK,MAAM,SAASrB,CAAK,GAErB,OAAOmB,KAAS;AAClB,aAAO,EAAEC,IAAQJ,GAAO,UAAQ;AAC9B,cAAMM,IAAQN,GAAOI,CAAK;AAC1B,QAAAC,GAAK,MAAML,GAAOI,CAAK,IAAID,IAAOF,GAAMK,CAAK,OAAOL,GAAMK,CAAK,CAAC;AAAA,MAClE;AAAA,EAEJ;AACF;AAEAJ,GAAY,UAAU,UAAU;AAchC,SAASG,GAAKjC,GAAQzK,GAAKkB,GAAO;AAChC,EAAIA,MACFuJ,EAAOzK,CAAG,IAAIkB;AAElB;ACnBO,SAASsG,GAAOgE,GAAY;AAEjC,QAAMoB,IAAa,CAAA,GAEbC,IAAU,CAAA;AAEhB,aAAW,CAAC1B,GAAUjK,CAAK,KAAK,OAAO,QAAQsK,EAAW,UAAU,GAAG;AACrE,UAAMsB,IAAO,IAAIP;AAAA,MACfpB;AAAA,MACAK,EAAW,UAAUA,EAAW,cAAc,CAAA,GAAIL,CAAQ;AAAA,MAC1DjK;AAAA,MACAsK,EAAW;AAAA,IACjB;AAEI,IACEA,EAAW,mBACXA,EAAW,gBAAgB,SAASL,CAAQ,MAE5C2B,EAAK,kBAAkB,KAGzBF,EAAWzB,CAAQ,IAAI2B,GAEvBD,EAAQpB,GAAUN,CAAQ,CAAC,IAAIA,GAC/B0B,EAAQpB,GAAUqB,EAAK,SAAS,CAAC,IAAI3B;AAAA,EACvC;AAEA,SAAO,IAAID,GAAO0B,GAAYC,GAASrB,EAAW,KAAK;AACzD;ACjEO,MAAMuB,KAAOvF,GAAO;AAAA,EACzB,YAAY;AAAA,IACV,sBAAsB;AAAA,IACtB,YAAYuE;AAAA,IACZ,kBAAkB;AAAA,IAClB,UAAUA;AAAA,IACV,aAAaA;AAAA,IACb,cAAcE;AAAA,IACd,cAAcA;AAAA,IACd,aAAaA;AAAA,IACb,cAAcC;AAAA,IACd,aAAa;AAAA,IACb,iBAAiBA;AAAA,IACjB,aAAa;AAAA,IACb,cAAcH;AAAA,IACd,gBAAgBG;AAAA,IAChB,kBAAkB;AAAA,IAClB,cAAcH;AAAA,IACd,YAAYG;AAAA,IACZ,aAAaH;AAAA,IACb,cAAc;AAAA,IACd,YAAYA;AAAA,IACZ,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,gBAAgBG;AAAA,IAChB,WAAWD;AAAA,IACX,UAAU;AAAA,IACV,WAAWF;AAAA,IACX,eAAeA;AAAA,IACf,qBAAqBA;AAAA,IACrB,iBAAiB;AAAA,IACjB,UAAUG;AAAA,IACV,iBAAiB;AAAA,IACjB,cAAcD;AAAA,IACd,aAAaF;AAAA,IACb,cAAcA;AAAA,IACd,cAAc;AAAA,IACd,cAAcA;AAAA,IACd,qBAAqBG;AAAA,IACrB,cAAcD;AAAA,IACd,cAAcA;AAAA,IACd,aAAaA;AAAA,IACb,cAAcF;AAAA,IACd,aAAaE;AAAA,IACb,UAAU;AAAA,IACV,cAAcA;AAAA,IACd,cAAcA;AAAA,IACd,cAAcA;AAAA,IACd,eAAe;AAAA,IACf,MAAM;AAAA,EACV;AAAA,EACE,UAAUe,GAAG7B,GAAU;AACrB,WAAOA,MAAa,SAChBA,IACA,UAAUA,EAAS,MAAM,CAAC,EAAE,YAAW;AAAA,EAC7C;AACF,CAAC;ACpDM,SAAS8B,GAAuBC,GAAYvB,GAAW;AAC5D,SAAOA,KAAauB,IAAaA,EAAWvB,CAAS,IAAIA;AAC3D;ACAO,SAASwB,GAAyBD,GAAY/B,GAAU;AAC7D,SAAO8B,GAAuBC,GAAY/B,EAAS,YAAW,CAAE;AAClE;ACDO,MAAMiC,KAAO5F,GAAO;AAAA,EACzB,YAAY;AAAA,IACV,eAAe;AAAA,IACf,WAAW;AAAA,IACX,SAAS;AAAA,IACT,WAAW;AAAA,EACf;AAAA,EACE,iBAAiB,CAAC,WAAW,YAAY,SAAS,UAAU;AAAA,EAC5D,YAAY;AAAA;AAAA,IAEV,MAAM;AAAA,IACN,QAAQ2E;AAAA,IACR,eAAeD;AAAA,IACf,WAAWA;AAAA,IACX,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,iBAAiBL;AAAA,IACjB,qBAAqBA;AAAA,IACrB,gBAAgBA;AAAA,IAChB,KAAK;AAAA,IACL,IAAI;AAAA,IACJ,OAAOA;AAAA,IACP,gBAAgB;AAAA,IAChB,cAAcK;AAAA,IACd,WAAWL;AAAA,IACX,UAAUA;AAAA,IACV,UAAUK;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAASL;AAAA,IACT,MAAM;AAAA,IACN,WAAWK;AAAA,IACX,MAAMD;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,iBAAiBF;AAAA,IACjB,UAAUF;AAAA,IACV,cAAcK;AAAA,IACd,QAAQD,IAASE;AAAA,IACjB,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,IACV,SAASN;AAAA,IACT,OAAOA;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAUA;AAAA,IACV,UAAUG;AAAA,IACV,WAAWD;AAAA,IACX,SAAS;AAAA,IACT,cAAc;AAAA,IACd,eAAe;AAAA,IACf,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,gBAAgBF;AAAA,IAChB,YAAY;AAAA,IACZ,SAASK;AAAA,IACT,QAAQD;AAAA,IACR,QAAQD;AAAA,IACR,MAAMC;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAASC;AAAA,IACT,WAAWA;AAAA,IACX,IAAI;AAAA,IACJ,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,OAAOL;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,OAAOA;AAAA,IACP,QAAQ;AAAA,IACR,UAAUK;AAAA,IACV,SAASA;AAAA,IACT,WAAWL;AAAA,IACX,UAAUK;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAML;AAAA,IACN,KAAKI;AAAA,IACL,UAAU;AAAA,IACV,KAAK;AAAA,IACL,WAAWA;AAAA,IACX,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,WAAWA;AAAA,IACX,UAAUJ;AAAA,IACV,OAAOA;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAUA;AAAA,IACV,YAAYA;AAAA,IACZ,SAAS;AAAA,IACT,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,eAAe;AAAA,IACf,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,oBAAoB;AAAA,IACpB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,aAAa;AAAA,IACb,2BAA2B;AAAA,IAC3B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,cAAc;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,sBAAsB;AAAA,IACtB,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,MAAMA;AAAA,IACN,SAASI;AAAA,IACT,SAAS;AAAA,IACT,MAAMC;AAAA,IACN,aAAa;AAAA,IACb,aAAaL;AAAA,IACb,SAAS;AAAA,IACT,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAUA;AAAA,IACV,gBAAgB;AAAA,IAChB,KAAKK;AAAA,IACL,UAAUL;AAAA,IACV,UAAUA;AAAA,IACV,MAAMI;AAAA,IACN,SAASA;AAAA,IACT,SAASC;AAAA,IACT,OAAO;AAAA,IACP,QAAQL;AAAA,IACR,UAAUA;AAAA,IACV,UAAUA;AAAA,IACV,oBAAoBA;AAAA,IACpB,0BAA0BA;AAAA,IAC1B,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,MAAMI;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMA;AAAA,IACN,YAAYF;AAAA,IACZ,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAOE;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAUA;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,WAAW;AAAA,IACX,MAAM;AAAA,IACN,eAAeJ;AAAA,IACf,QAAQ;AAAA,IACR,OAAOE;AAAA,IACP,OAAOE;AAAA,IACP,MAAM;AAAA,IACN,oBAAoB;AAAA;AAAA;AAAA,IAIpB,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,SAASC;AAAA;AAAA,IACT,MAAM;AAAA;AAAA,IACN,YAAY;AAAA;AAAA,IACZ,SAAS;AAAA;AAAA,IACT,QAAQD;AAAA;AAAA,IACR,aAAa;AAAA;AAAA,IACb,cAAcA;AAAA;AAAA,IACd,aAAa;AAAA;AAAA,IACb,aAAa;AAAA;AAAA,IACb,MAAM;AAAA;AAAA,IACN,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,IACV,UAAU;AAAA;AAAA,IACV,OAAO;AAAA;AAAA,IACP,SAASJ;AAAA;AAAA,IACT,SAASA;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,OAAO;AAAA;AAAA,IACP,aAAa;AAAA;AAAA,IACb,QAAQI;AAAA;AAAA,IACR,YAAYA;AAAA;AAAA,IACZ,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,IACV,QAAQ;AAAA;AAAA,IACR,cAAcA;AAAA;AAAA,IACd,aAAaA;AAAA;AAAA,IACb,UAAUJ;AAAA;AAAA,IACV,QAAQA;AAAA;AAAA,IACR,SAASA;AAAA;AAAA,IACT,QAAQA;AAAA;AAAA,IACR,QAAQ;AAAA;AAAA,IACR,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,KAAK;AAAA;AAAA,IACL,aAAaI;AAAA;AAAA,IACb,OAAO;AAAA;AAAA,IACP,QAAQ;AAAA;AAAA,IACR,WAAWF;AAAA;AAAA,IACX,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,MAAM;AAAA;AAAA,IACN,WAAWE;AAAA;AAAA,IACX,WAAW;AAAA;AAAA,IACX,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,OAAO;AAAA;AAAA,IACP,QAAQA;AAAA;AAAA;AAAA,IAGR,mBAAmB;AAAA,IACnB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,yBAAyBJ;AAAA,IACzB,uBAAuBA;AAAA,IACvB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAASI;AAAA,IACT,UAAU;AAAA,IACV,cAAc;AAAA,EAClB;AAAA,EACE,OAAO;AAAA,EACP,WAAWkB;AACb,CAAC,GCvTYE,KAAM7F,GAAO;AAAA,EACxB,YAAY;AAAA,IACV,cAAc;AAAA,IACd,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,uBAAuB;AAAA,IACvB,wBAAwB;AAAA,IACxB,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,aAAa;AAAA,IACb,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,mBAAmB;AAAA,IACnB,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,UAAU;AAAA,IACV,cAAc;AAAA,IACd,eAAe;AAAA,IACf,cAAc;AAAA,IACd,UAAU;AAAA,IACV,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA;AAAA,IAET,eAAe;AAAA,IACf,eAAe;AAAA,EACnB;AAAA,EACE,YAAY;AAAA,IACV,OAAO4E;AAAA,IACP,cAAcH;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,YAAYA;AAAA,IACZ,WAAWA;AAAA,IACX,YAAY;AAAA,IACZ,QAAQA;AAAA,IACR,eAAe;AAAA,IACf,eAAe;AAAA,IACf,SAASA;AAAA,IACT,WAAW;AAAA,IACX,eAAe;AAAA,IACf,eAAe;AAAA,IACf,aAAa;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAMA;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,WAAWA;AAAA,IACX,WAAWC;AAAA,IACX,MAAM;AAAA,IACN,UAAU;AAAA,IACV,eAAe;AAAA,IACf,UAAU;AAAA,IACV,OAAO;AAAA,IACP,oBAAoB;AAAA,IACpB,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,UAAU;AAAA,IACV,eAAe;AAAA,IACf,SAASD;AAAA,IACT,iBAAiBA;AAAA,IACjB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,KAAK;AAAA,IACL,SAASA;AAAA,IACT,kBAAkB;AAAA,IAClB,UAAUJ;AAAA,IACV,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAWI;AAAA,IACX,kBAAkB;AAAA,IAClB,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAUA;AAAA,IACV,2BAA2B;AAAA,IAC3B,MAAM;AAAA,IACN,aAAaA;AAAA,IACb,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAIE;AAAA,IACJ,IAAIA;AAAA,IACJ,WAAWA;AAAA,IACX,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,eAAe;AAAA,IACf,SAAS;AAAA,IACT,SAASF;AAAA,IACT,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,UAAU;AAAA,IACV,WAAWA;AAAA,IACX,cAAcA;AAAA,IACd,cAAcA;AAAA,IACd,IAAI;AAAA,IACJ,aAAaA;AAAA,IACb,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,WAAWA;AAAA,IACX,GAAGA;AAAA,IACH,IAAIA;AAAA,IACJ,IAAIA;AAAA,IACJ,IAAIA;AAAA,IACJ,IAAIA;AAAA,IACJ,cAAcG;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW;AAAA;AAAA,IACX,YAAY;AAAA;AAAA,IACZ,UAAU;AAAA;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,IACN,cAAc;AAAA,IACd,eAAe;AAAA,IACf,eAAe;AAAA,IACf,mBAAmBH;AAAA,IACnB,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,aAAa;AAAA,IACb,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,cAAc;AAAA,IACd,KAAK;AAAA,IACL,OAAO;AAAA,IACP,wBAAwB;AAAA,IACxB,uBAAuB;AAAA,IACvB,WAAWA;AAAA,IACX,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAAS;AAAA,IACT,kBAAkBA;AAAA,IAClB,mBAAmBA;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,MAAM;AAAA,IACN,YAAYA;AAAA,IACZ,qBAAqB;AAAA,IACrB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,OAAO;AAAA,IACP,MAAMC;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,eAAe;AAAA,IACf,QAAQ;AAAA,IACR,WAAWD;AAAA,IACX,WAAWA;AAAA,IACX,WAAWA;AAAA,IACX,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,UAAUG;AAAA,IACV,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAKA;AAAA,IACL,KAAKA;AAAA,IACL,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,oBAAoBA;AAAA,IACpB,kBAAkBA;AAAA,IAClB,eAAeA;AAAA,IACf,iBAAiBA;AAAA,IACjB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,cAAc;AAAA,IACd,kBAAkBH;AAAA,IAClB,kBAAkBA;AAAA,IAClB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,OAAO;AAAA,IACP,OAAO;AAAA,IACP,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,uBAAuBA;AAAA,IACvB,wBAAwBA;AAAA,IACxB,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,iBAAiBG;AAAA,IACjB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkBH;AAAA,IAClB,eAAeA;AAAA,IACf,aAAa;AAAA,IACb,OAAO;AAAA,IACP,cAAcA;AAAA,IACd,cAAc;AAAA,IACd,qBAAqB;AAAA,IACrB,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,sBAAsB;AAAA,IACtB,gBAAgBG;AAAA,IAChB,UAAUH;AAAA,IACV,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,SAASA;AAAA,IACT,SAASA;AAAA,IACT,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,OAAO;AAAA,IACP,mBAAmB;AAAA,IACnB,MAAM;AAAA,IACN,QAAQG;AAAA,IACR,IAAI;AAAA,IACJ,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,mBAAmBH;AAAA,IACnB,oBAAoBA;AAAA,IACpB,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAYA;AAAA,IACZ,QAAQ;AAAA,IACR,aAAaA;AAAA,IACb,eAAeA;AAAA,IACf,cAAc;AAAA,IACd,UAAUA;AAAA,IACV,cAAcA;AAAA,IACd,SAAS;AAAA,IACT,UAAUA;AAAA,IACV,aAAaA;AAAA,IACb,aAAaA;AAAA,IACb,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,aAAa;AAAA,IACb,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,kBAAkB;AAAA,IAClB,SAASA;AAAA,IACT,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,kBAAkB;AAAA,IAClB,GAAG;AAAA,IACH,YAAY;AAAA,EAChB;AAAA,EACE,OAAO;AAAA,EACP,WAAWgB;AACb,CAAC,GCpjBYK,KAAQ9F,GAAO;AAAA,EAC1B,YAAY;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACf;AAAA,EACE,OAAO;AAAA,EACP,UAAUwF,GAAG7B,GAAU;AACrB,WAAO,WAAWA,EAAS,MAAM,CAAC,EAAE,YAAW;AAAA,EACjD;AACF,CAAC,GCbYoC,KAAQ/F,GAAO;AAAA,EAC1B,YAAY,EAAC,YAAY,cAAa;AAAA,EACtC,YAAY,EAAC,YAAY,MAAM,OAAO,KAAI;AAAA,EAC1C,OAAO;AAAA,EACP,WAAW2F;AACb,CAAC,GCNYK,KAAMhG,GAAO;AAAA,EACxB,YAAY,EAAC,SAAS,MAAM,SAAS,MAAM,UAAU,KAAI;AAAA,EACzD,OAAO;AAAA,EACP,UAAUwF,GAAG7B,GAAU;AACrB,WAAO,SAASA,EAAS,MAAM,CAAC,EAAE,YAAW;AAAA,EAC/C;AACF,CAAC,GCGYsC,KAAc;AAAA,EACzB,SAAS;AAAA,EACT,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,QAAQ;AAAA,EACR,cAAc;AAAA,EACd,cAAc;AAAA,EACd,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AACd,GCrBMC,KAAM,UACNC,KAAO,WACPC,KAAQ;AAgCP,SAASC,GAAKC,GAAQ5M,GAAO;AAClC,QAAMkK,IAASK,GAAUvK,CAAK;AAC9B,MAAIiK,IAAWjK,GACX6M,IAAOrC;AAEX,MAAIN,KAAU0C,EAAO;AACnB,WAAOA,EAAO,SAASA,EAAO,OAAO1C,CAAM,CAAC;AAG9C,MAAIA,EAAO,SAAS,KAAKA,EAAO,MAAM,GAAG,CAAC,MAAM,UAAUwC,GAAM,KAAK1M,CAAK,GAAG;AAE3E,QAAIA,EAAM,OAAO,CAAC,MAAM,KAAK;AAE3B,YAAMgG,IAAOhG,EAAM,MAAM,CAAC,EAAE,QAAQyM,IAAMK,EAAS;AACnD,MAAA7C,IAAW,SAASjE,EAAK,OAAO,CAAC,EAAE,YAAW,IAAKA,EAAK,MAAM,CAAC;AAAA,IACjE,OAAO;AAEL,YAAMA,IAAOhG,EAAM,MAAM,CAAC;AAE1B,UAAI,CAACyM,GAAK,KAAKzG,CAAI,GAAG;AACpB,YAAI+G,IAAS/G,EAAK,QAAQwG,IAAKQ,EAAK;AAEpC,QAAID,EAAO,OAAO,CAAC,MAAM,QACvBA,IAAS,MAAMA,IAGjB/M,IAAQ,SAAS+M;AAAA,MACnB;AAAA,IACF;AAEA,IAAAF,IAAOxB;AAAA,EACT;AAEA,SAAO,IAAIwB,EAAK5C,GAAUjK,CAAK;AACjC;AAQA,SAASgN,GAAMC,GAAI;AACjB,SAAO,MAAMA,EAAG,YAAW;AAC7B;AAQA,SAASH,GAAUG,GAAI;AACrB,SAAOA,EAAG,OAAO,CAAC,EAAE,YAAW;AACjC;ACrFO,MAAMf,KAAO9B,GAAM,CAACyB,IAAMqB,IAAUd,IAAOC,IAAOC,EAAG,GAAG,MAAM,GAKxDH,KAAM/B,GAAM,CAACyB,IAAMsB,IAASf,IAAOC,IAAOC,EAAG,GAAG,KAAK;ACK3D,SAAShD,GAAUC,GAAQ;AAChC,SAAOA,EAAO,KAAK,GAAG,EAAE,KAAI;AAC9B;;;;;ACrBA,MAAI6D,IAAgB,mCAEhBC,IAAgB,OAChBC,IAAmB,QAGnBC,IAAiB,0CACjBC,IAAc,SACdC,IAAc,wDACdC,IAAkB,WAGlBC,IAAa,cAGbC,IAAU;AAAA,GACVC,IAAgB,KAChBC,IAAW,KACXC,IAAe,IAGfC,IAAe,WACfC,IAAmB;AASvB,EAAAC,KAAiB,SAAUC,GAAO7G,GAAS;AACzC,QAAI,OAAO6G,KAAU;AACnB,YAAM,IAAI,UAAU,iCAAiC;AAGvD,QAAI,CAACA,EAAO,QAAO,CAAA;AAEnB,IAAA7G,IAAUA,KAAW,CAAA;AAKrB,QAAI8G,IAAS,GACTC,IAAS;AAOb,aAASC,EAAeC,GAAK;AAC3B,UAAIC,IAAQD,EAAI,MAAMlB,CAAa;AACnC,MAAImB,MAAOJ,KAAUI,EAAM;AAC3B,UAAIC,IAAIF,EAAI,YAAYX,CAAO;AAC/B,MAAAS,IAAS,CAACI,IAAIF,EAAI,SAASE,IAAIJ,IAASE,EAAI;AAAA,IAChD;AAOE,aAAShL,IAAW;AAClB,UAAImL,IAAQ,EAAE,MAAMN,GAAQ,QAAQC,EAAM;AAC1C,aAAO,SAAUjM,GAAM;AACrB,eAAAA,EAAK,WAAW,IAAIuM,EAASD,CAAK,GAClC7E,EAAU,GACHzH;AAAA,MACb;AAAA,IACA;AAUE,aAASuM,EAASD,GAAO;AACvB,WAAK,QAAQA,GACb,KAAK,MAAM,EAAE,MAAMN,GAAQ,QAAQC,EAAM,GACzC,KAAK,SAAS/G,EAAQ;AAAA,IAC1B;AAKE,IAAAqH,EAAS,UAAU,UAAUR;AAU7B,aAASvG,EAAMgH,GAAK;AAClB,UAAI7H,IAAM,IAAI;AAAA,QACZO,EAAQ,SAAS,MAAM8G,IAAS,MAAMC,IAAS,OAAOO;AAAA;AAQxD,UANA7H,EAAI,SAAS6H,GACb7H,EAAI,WAAWO,EAAQ,QACvBP,EAAI,OAAOqH,GACXrH,EAAI,SAASsH,GACbtH,EAAI,SAASoH,GAET,CAAA7G,EAAQ,OAGV,OAAMP;AAAA,IAEZ;AAQE,aAAS8H,EAAMjF,GAAI;AACjB,UAAIkF,IAAIlF,EAAG,KAAKuE,CAAK;AACrB,UAAKW,GACL;AAAA,YAAIP,IAAMO,EAAE,CAAC;AACb,eAAAR,EAAeC,CAAG,GAClBJ,IAAQA,EAAM,MAAMI,EAAI,MAAM,GACvBO;AAAA;AAAA,IACX;AAKE,aAASjF,IAAa;AACpB,MAAAgF,EAAMvB,CAAgB;AAAA,IAC1B;AAQE,aAASyB,EAASC,GAAO;AACvB,UAAIC;AAEJ,WADAD,IAAQA,KAAS,CAAA,GACTC,IAAIC;AACV,QAAID,MAAM,MACRD,EAAM,KAAKC,CAAC;AAGhB,aAAOD;AAAA,IACX;AAQE,aAASE,IAAU;AACjB,UAAIC,IAAM5L,EAAQ;AAClB,UAAI,EAAAsK,KAAiBM,EAAM,OAAO,CAAC,KAAKL,KAAYK,EAAM,OAAO,CAAC,IAGlE;AAAA,iBADIM,IAAI,GAENV,KAAgBI,EAAM,OAAOM,CAAC,MAC7BX,KAAYK,EAAM,OAAOM,CAAC,KAAKZ,KAAiBM,EAAM,OAAOM,IAAI,CAAC;AAEnE,YAAEA;AAIJ,YAFAA,KAAK,GAEDV,MAAiBI,EAAM,OAAOM,IAAI,CAAC;AACrC,iBAAO7G,EAAM,wBAAwB;AAGvC,YAAI2G,IAAMJ,EAAM,MAAM,GAAGM,IAAI,CAAC;AAC9B,eAAAJ,KAAU,GACVC,EAAeC,CAAG,GAClBJ,IAAQA,EAAM,MAAMM,CAAC,GACrBJ,KAAU,GAEHc,EAAI;AAAA,UACT,MAAMnB;AAAA,UACN,SAASO;AAAA,QACf,CAAK;AAAA;AAAA,IACL;AAQE,aAASa,IAAc;AACrB,UAAID,IAAM5L,EAAQ,GAGd8L,IAAOR,EAAMtB,CAAc;AAC/B,UAAK8B,GAIL;AAAA,YAHAH,EAAO,GAGH,CAACL,EAAMrB,CAAW,EAAG,QAAO5F,EAAM,sBAAsB;AAG5D,YAAI0H,IAAMT,EAAMpB,CAAW,GAEvB8B,IAAMJ,EAAI;AAAA,UACZ,MAAMlB;AAAA,UACN,UAAUuB,EAAKH,EAAK,CAAC,EAAE,QAAQjC,GAAeW,CAAY,CAAC;AAAA,UAC3D,OAAOuB,IACHE,EAAKF,EAAI,CAAC,EAAE,QAAQlC,GAAeW,CAAY,CAAC,IAChDA;AAAA,QACV,CAAK;AAGD,eAAAc,EAAMnB,CAAe,GAEd6B;AAAA;AAAA,IACX;AAOE,aAASE,IAAe;AACtB,UAAIC,IAAQ,CAAA;AAEZ,MAAAX,EAASW,CAAK;AAId,eADIC,GACIA,IAAOP;AACb,QAAIO,MAAS,OACXD,EAAM,KAAKC,CAAI,GACfZ,EAASW,CAAK;AAIlB,aAAOA;AAAA,IACX;AAEE,WAAA7F,EAAU,GACH4F,EAAY;AAAA,EACrB;AAQA,WAASD,EAAKjB,GAAK;AACjB,WAAOA,IAAMA,EAAI,QAAQZ,GAAYI,CAAY,IAAIA;AAAA,EACvD;;;;;;;ACnQA,MAAI6B,IAAmBC,MAAQA,GAAK,mBAAoB,SAAUC,GAAK;AACnE,WAAQA,KAAOA,EAAI,aAAcA,IAAM,EAAE,SAAWA,EAAG;AAAA,EAC3D;AACA,SAAO,eAAeC,IAAS,cAAc,EAAE,OAAO,IAAM,GAC5DA,GAAA,UAAkBC;AAClB,MAAIC,IAAwBL,EAAgBtN,IAA8B;AAe1E,WAAS0N,EAAc7B,GAAO+B,GAAU;AACpC,QAAIC,IAAc;AAClB,QAAI,CAAChC,KAAS,OAAOA,KAAU;AAC3B,aAAOgC;AAEX,QAAIV,QAAmBQ,EAAsB,SAAS9B,CAAK,GACvDiC,IAAc,OAAOF,KAAa;AACtC,WAAAT,EAAa,QAAQ,SAAUL,GAAa;AACxC,UAAIA,EAAY,SAAS,eAGzB;AAAA,YAAInF,IAAWmF,EAAY,UAAUpP,IAAQoP,EAAY;AACzD,QAAIgB,IACAF,EAASjG,GAAUjK,GAAOoP,CAAW,IAEhCpP,MACLmQ,IAAcA,KAAe,CAAA,GAC7BA,EAAYlG,CAAQ,IAAIjK;AAAA;AAAA,IAEpC,CAAK,GACMmQ;AAAA,EACX;;;;;;UCzCA,OAAO,eAAeE,IAAS,cAAc,EAAE,OAAO,IAAM,GAC5DA,GAAA,YAAoB;AACpB,MAAIC,IAAwB,sBACxBC,IAAe,aACfC,IAAkB,WAClBC,IAAsB,8BACtBC,IAAyB,WAIzBC,IAAgB,SAAU1G,GAAU;AACpC,WAAO,CAACA,KACJuG,EAAgB,KAAKvG,CAAQ,KAC7BqG,EAAsB,KAAKrG,CAAQ;AAAA,EAC3C,GAII2G,IAAa,SAAU/B,GAAOgC,GAAW;AACzC,WAAOA,EAAU,YAAW;AAAA,EAChC,GAIIC,IAAa,SAAUjC,GAAOkC,GAAQ;AAAE,WAAO,GAAG,OAAOA,GAAQ,GAAG;AAAA,EAAE,GAItEC,IAAY,SAAU/G,GAAU3C,GAAS;AAEzC,WADIA,MAAY,WAAUA,IAAU,CAAA,IAChCqJ,EAAc1G,CAAQ,IACfA,KAEXA,IAAWA,EAAS,YAAW,GAC3B3C,EAAQ,cAER2C,IAAWA,EAAS,QAAQyG,GAAwBI,CAAU,IAI9D7G,IAAWA,EAAS,QAAQwG,GAAqBK,CAAU,GAExD7G,EAAS,QAAQsG,GAAcK,CAAU;AAAA,EACpD;AACA,SAAAP,GAAA,YAAoBW;;;;;;AC5CpB,MAAIpB,IAAmBC,MAAQA,GAAK,mBAAoB,SAAUC,GAAK;AACnE,WAAQA,KAAOA,EAAI,aAAcA,IAAM,EAAE,SAAWA,EAAG;AAAA,EAC3D,GACImB,IAAoBrB,EAAgBtN,IAA0B,GAC9D4O,IAAcpO,GAAA;AAIlB,WAASqO,EAAUhD,GAAO7G,GAAS;AAC/B,QAAI8J,IAAS,CAAA;AACb,WAAI,CAACjD,KAAS,OAAOA,KAAU,gBAG3B8C,EAAkB,SAAS9C,GAAO,SAAUlE,GAAUjK,GAAO;AAE7D,MAAIiK,KAAYjK,MACZoR,MAAWF,EAAY,WAAWjH,GAAU3C,CAAO,CAAC,IAAItH;AAAA,IAEpE,CAAK,GACMoR;AAAA,EACX;AACA,SAAAD,EAAU,UAAUA,GACpBpB,KAAiBoB;;;mCCMJE,KAAWC,GAAM,KAAK,GAUtBC,KAAaD,GAAM,OAAO;AAUvC,SAASA,GAAM3S,GAAM;AACnB,SAAO2S;AAQP,WAASA,EAAMlP,GAAM;AACnB,UAAMkP,IAASlP,KAAQA,EAAK,YAAYA,EAAK,SAASzD,CAAI,KAAM,CAAA;AAEhE,QACE,OAAO2S,EAAM,QAAS,YACtBA,EAAM,OAAO,KACb,OAAOA,EAAM,UAAW,YACxBA,EAAM,SAAS;AAEf,aAAO;AAAA,QACL,MAAMA,EAAM;AAAA,QACZ,QAAQA,EAAM;AAAA,QACd,QACE,OAAOA,EAAM,UAAW,YAAYA,EAAM,SAAS,KAC/CA,EAAM,SACN;AAAA,MACd;AAAA,EAEE;AACF;AAUO,SAAS/N,GAASnB,GAAM;AAC7B,QAAMsM,IAAQ6C,GAAWnP,CAAI,GACvBoP,IAAMH,GAASjP,CAAI;AAEzB,MAAIsM,KAAS8C;AACX,WAAO,EAAC,OAAA9C,GAAO,KAAA8C,EAAG;AAEtB;AC1DO,SAASC,GAAkBzR,GAAO;AAEvC,SAAI,CAACA,KAAS,OAAOA,KAAU,WACtB,KAIL,cAAcA,KAAS,UAAUA,IAC5BuD,GAASvD,EAAM,QAAQ,IAI5B,WAAWA,KAAS,SAASA,IACxBuD,GAASvD,CAAK,IAInB,UAAUA,KAAS,YAAYA,IAC1BsR,GAAMtR,CAAK,IAIb;AACT;AAMA,SAASsR,GAAMA,GAAO;AACpB,SAAO/F,GAAM+F,KAASA,EAAM,IAAI,IAAI,MAAM/F,GAAM+F,KAASA,EAAM,MAAM;AACvE;AAMA,SAAS/N,GAAS4L,GAAK;AACrB,SAAOmC,GAAMnC,KAAOA,EAAI,KAAK,IAAI,MAAMmC,GAAMnC,KAAOA,EAAI,GAAG;AAC7D;AAMA,SAAS5D,GAAMvL,GAAO;AACpB,SAAOA,KAAS,OAAOA,KAAU,WAAWA,IAAQ;AACtD;ACzDO,MAAM0R,WAAqB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwDtC,YAAYC,GAAeC,GAAwBC,GAAQ;AACzD,UAAK,GAED,OAAOD,KAA2B,aACpCC,IAASD,GACTA,IAAyB;AAI3B,QAAIE,IAAS,IAETxK,IAAU,CAAA,GACVyK,IAAc;AAwClB,QAtCIH,MAGA,UAAUA,KACV,YAAYA,IAEZtK,IAAU,EAAC,OAAOsK,EAAsB,IAIxC,WAAWA,KACX,SAASA,IAETtK,IAAU,EAAC,OAAOsK,EAAsB,IAGjC,UAAUA,IACjBtK,IAAU;AAAA,MACR,WAAW,CAACsK,CAAsB;AAAA,MAClC,OAAOA,EAAuB;AAAA,IACxC,IAIQtK,IAAU,EAAC,GAAGsK,EAAsB,IAIpC,OAAOD,KAAkB,WAC3BG,IAASH,IAGF,CAACrK,EAAQ,SAASqK,MACzBI,IAAc,IACdD,IAASH,EAAc,SACvBrK,EAAQ,QAAQqK,IAGd,CAACrK,EAAQ,UAAU,CAACA,EAAQ,UAAU,OAAOuK,KAAW,UAAU;AACpE,YAAMtG,IAAQsG,EAAO,QAAQ,GAAG;AAEhC,MAAItG,MAAU,KACZjE,EAAQ,SAASuK,KAEjBvK,EAAQ,SAASuK,EAAO,MAAM,GAAGtG,CAAK,GACtCjE,EAAQ,SAASuK,EAAO,MAAMtG,IAAQ,CAAC;AAAA,IAE3C;AAEA,QAAI,CAACjE,EAAQ,SAASA,EAAQ,aAAaA,EAAQ,WAAW;AAC5D,YAAM0K,IAAS1K,EAAQ,UAAUA,EAAQ,UAAU,SAAS,CAAC;AAE7D,MAAI0K,MACF1K,EAAQ,QAAQ0K,EAAO;AAAA,IAE3B;AAEA,UAAMtD,IACJpH,EAAQ,SAAS,WAAWA,EAAQ,QAChCA,EAAQ,MAAM,QACdA,EAAQ;AAOd,SAAK,YAAYA,EAAQ,aAAa,QAOtC,KAAK,QAAQA,EAAQ,SAAS,QAO9B,KAAK,SAASoH,IAAQA,EAAM,SAAS,QAWrC,KAAK,QAAQ,QAOb,KAAK,OAAO,IAQZ,KAAK,UAAUoD,GAOf,KAAK,OAAOpD,IAAQA,EAAM,OAAO,QASjC,KAAK,OAAO+C,GAAkBnK,EAAQ,KAAK,KAAK,OAOhD,KAAK,QAAQA,EAAQ,SAAS,QAO9B,KAAK,SAAS,KAAK,SAOnB,KAAK,SAASA,EAAQ,UAAU,QAOhC,KAAK,SAASA,EAAQ,UAAU,QAWhC,KAAK,QACHyK,KAAezK,EAAQ,SAAS,OAAOA,EAAQ,MAAM,SAAU,WAC3DA,EAAQ,MAAM,QACd,IAYN,KAAK,SAAS,QAOd,KAAK,WAAW,QAOhB,KAAK,OAAO,QAUZ,KAAK,MAAM;AAAA,EACb;AACF;AAEAoK,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,UAAU;AACjCA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,YAAY;AACnCA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,SAAS;ACnShC,MAAMO,KAAM,CAAA,EAAG,gBAGTC,KAAW,oBAAI,IAAG,GAElB1F,KAAM,UAaN2F,KAAgB,oBAAI,IAAI,CAAC,SAAS,SAAS,SAAS,SAAS,IAAI,CAAC,GAElEC,KAAmB,oBAAI,IAAI,CAAC,MAAM,IAAI,CAAC,GAEvCC,KAAO;AAcN,SAASC,GAAaC,GAAMjL,GAAS;AAC1C,MAAI,CAACA,KAAWA,EAAQ,aAAa;AACnC,UAAM,IAAI,UAAU,gCAAgC;AAGtD,QAAMkL,IAAWlL,EAAQ,YAAY;AAErC,MAAIhB;AAEJ,MAAIgB,EAAQ,aAAa;AACvB,QAAI,OAAOA,EAAQ,UAAW;AAC5B,YAAM,IAAI;AAAA,QACR;AAAA,MACR;AAGI,IAAAhB,IAASmM,GAAkBD,GAAUlL,EAAQ,MAAM;AAAA,EACrD,OAAO;AACL,QAAI,OAAOA,EAAQ,OAAQ;AACzB,YAAM,IAAI,UAAU,sCAAsC;AAG5D,QAAI,OAAOA,EAAQ,QAAS;AAC1B,YAAM,IAAI,UAAU,uCAAuC;AAG7D,IAAAhB,IAASoM,GAAiBF,GAAUlL,EAAQ,KAAKA,EAAQ,IAAI;AAAA,EAC/D;AAGA,QAAMqL,IAAQ;AAAA,IACZ,UAAUrL,EAAQ;AAAA,IAClB,WAAW,CAAA;AAAA,IACX,YAAYA,EAAQ,cAAc,CAAA;AAAA,IAClC,QAAAhB;AAAA,IACA,0BAA0BgB,EAAQ,4BAA4B;AAAA,IAC9D,WAAWA,EAAQ,kBAAkBA,EAAQ,gBAAe,IAAK;AAAA,IACjE,UAAAkL;AAAA,IACA,oBAAoBlL,EAAQ,sBAAsB;AAAA,IAClD,UAAUA,EAAQ,aAAa;AAAA,IAC/B,UAAUA,EAAQ,YAAY;AAAA,IAC9B,QAAQA,EAAQ,UAAU,QAAQ6E,KAAMD;AAAAA,IACxC,uBAAuB5E,EAAQ,yBAAyB;AAAA,IACxD,uBAAuBA,EAAQ,0BAA0B;AAAA,EAC7D,GAEQnE,IAASyP,GAAID,GAAOJ,GAAM,MAAS;AAGzC,SAAIpP,KAAU,OAAOA,KAAW,WACvBA,IAIFwP,EAAM;AAAA,IACXJ;AAAA,IACAI,EAAM;AAAA,IACN,EAAC,UAAUxP,KAAU,OAAS;AAAA,IAC9B;AAAA,EACJ;AACA;AAcA,SAASyP,GAAID,GAAOvQ,GAAMtD,GAAK;AAC7B,MAAIsD,EAAK,SAAS;AAChB,WAAOyQ,GAAQF,GAAOvQ,GAAMtD,CAAG;AAGjC,MAAIsD,EAAK,SAAS,uBAAuBA,EAAK,SAAS;AACrD,WAAO0Q,GAAcH,GAAOvQ,CAAI;AAGlC,MAAIA,EAAK,SAAS,uBAAuBA,EAAK,SAAS;AACrD,WAAO2Q,GAAcJ,GAAOvQ,GAAMtD,CAAG;AAGvC,MAAIsD,EAAK,SAAS;AAChB,WAAO4Q,GAAOL,GAAOvQ,CAAI;AAG3B,MAAIA,EAAK,SAAS;AAChB,WAAO6Q,GAAKN,GAAOvQ,GAAMtD,CAAG;AAG9B,MAAIsD,EAAK,SAAS;AAChB,WAAO8Q,GAAKP,GAAOvQ,CAAI;AAE3B;AAcA,SAASyQ,GAAQF,GAAOvQ,GAAMtD,GAAK;AACjC,QAAMqU,IAAeR,EAAM;AAC3B,MAAI/F,IAASuG;AAEb,EAAI/Q,EAAK,QAAQ,YAAW,MAAO,SAAS+Q,EAAa,UAAU,WACjEvG,IAAST,IACTwG,EAAM,SAAS/F,IAGjB+F,EAAM,UAAU,KAAKvQ,CAAI;AAEzB,QAAMzD,IAAOyU,GAAsBT,GAAOvQ,EAAK,SAAS,EAAK,GACvDrB,IAAQsS,GAAmBV,GAAOvQ,CAAI;AAC5C,MAAIN,IAAWwR,GAAeX,GAAOvQ,CAAI;AAEzC,SAAI+P,GAAc,IAAI/P,EAAK,OAAO,MAChCN,IAAWA,EAAS,OAAO,SAAUyR,GAAO;AAC1C,WAAO,OAAOA,KAAU,WAAW,CAAC1J,GAAW0J,CAAK,IAAI;AAAA,EAC1D,CAAC,IAGHC,GAAQb,GAAO5R,GAAOpC,GAAMyD,CAAI,GAChCqR,GAAY1S,GAAOe,CAAQ,GAG3B6Q,EAAM,UAAU,IAAG,GACnBA,EAAM,SAASQ,GAERR,EAAM,OAAOvQ,GAAMzD,GAAMoC,GAAOjC,CAAG;AAC5C;AAYA,SAASgU,GAAcH,GAAOvQ,GAAM;AAClC,MAAIA,EAAK,QAAQA,EAAK,KAAK,UAAUuQ,EAAM,WAAW;AAEpD,UAAMe,IADUtR,EAAK,KAAK,OACC,KAAK,CAAC;AACjCuR,WAAOD,EAAW;AAAA,IAIhBf,EAAM,UAAU,mBAAmBe,EAAW,UAAU;AAAA,EAE5D;AAEA,EAAAE,GAAYjB,GAAOvQ,EAAK,QAAQ;AAClC;AAYA,SAAS4Q,GAAOL,GAAOvQ,GAAM;AAC3B,MAAIA,EAAK,QAAQA,EAAK,KAAK,UAAUuQ,EAAM;AAEzC;AAAA;AAAA,MACEA,EAAM,UAAU,gBAAgBvQ,EAAK,KAAK,MAAM;AAAA;AAIpD,EAAAwR,GAAYjB,GAAOvQ,EAAK,QAAQ;AAClC;AAcA,SAAS2Q,GAAcJ,GAAOvQ,GAAMtD,GAAK;AACvC,QAAMqU,IAAeR,EAAM;AAC3B,MAAI/F,IAASuG;AAEb,EAAI/Q,EAAK,SAAS,SAAS+Q,EAAa,UAAU,WAChDvG,IAAST,IACTwG,EAAM,SAAS/F,IAGjB+F,EAAM,UAAU,KAAKvQ,CAAI;AAEzB,QAAMzD,IACJyD,EAAK,SAAS,OACVuQ,EAAM,WACNS,GAAsBT,GAAOvQ,EAAK,MAAM,EAAI,GAC5CrB,IAAQ8S,GAAsBlB,GAAOvQ,CAAI,GACzCN,IAAWwR,GAAeX,GAAOvQ,CAAI;AAE3C,SAAAoR,GAAQb,GAAO5R,GAAOpC,GAAMyD,CAAI,GAChCqR,GAAY1S,GAAOe,CAAQ,GAG3B6Q,EAAM,UAAU,IAAG,GACnBA,EAAM,SAASQ,GAERR,EAAM,OAAOvQ,GAAMzD,GAAMoC,GAAOjC,CAAG;AAC5C;AAcA,SAASmU,GAAKN,GAAOvQ,GAAMtD,GAAK;AAE9B,QAAMiC,IAAQ,CAAA;AAEd,SAAA0S,GAAY1S,GAAOuS,GAAeX,GAAOvQ,CAAI,CAAC,GAEvCuQ,EAAM,OAAOvQ,GAAMuQ,EAAM,UAAU5R,GAAOjC,CAAG;AACtD;AAYA,SAASoU,GAAKpH,GAAG1J,GAAM;AACrB,SAAOA,EAAK;AACd;AAgBA,SAASoR,GAAQb,GAAO5R,GAAOpC,GAAMyD,GAAM;AAEzC,EAAI,OAAOzD,KAAS,YAAYA,MAASgU,EAAM,YAAYA,EAAM,aAC/D5R,EAAM,OAAOqB;AAEjB;AAYA,SAASqR,GAAY1S,GAAOe,GAAU;AACpC,MAAIA,EAAS,SAAS,GAAG;AACvB,UAAM9B,IAAQ8B,EAAS,SAAS,IAAIA,IAAWA,EAAS,CAAC;AAEzD,IAAI9B,MACFe,EAAM,WAAWf;AAAA,EAErB;AACF;AAYA,SAAS0S,GAAiB5G,GAAGgI,GAAKC,GAAM;AACtC,SAAOzN;AAEP,WAASA,EAAOwF,GAAGnN,GAAMoC,GAAOjC,GAAK;AAGnC,UAAMkV,IADmB,MAAM,QAAQjT,EAAM,QAAQ,IACvBgT,IAAOD;AACrC,WAAOhV,IAAMkV,EAAGrV,GAAMoC,GAAOjC,CAAG,IAAIkV,EAAGrV,GAAMoC,CAAK;AAAA,EACpD;AACF;AAUA,SAAS0R,GAAkBD,GAAUyB,GAAQ;AAC3C,SAAO3N;AAEP,WAASA,EAAOlE,GAAMzD,GAAMoC,GAAOjC,GAAK;AAEtC,UAAM+C,IAAmB,MAAM,QAAQd,EAAM,QAAQ,GAC/CuQ,IAAQC,GAAWnP,CAAI;AAC7B,WAAO6R;AAAA,MACLtV;AAAA,MACAoC;AAAA,MACAjC;AAAA,MACA+C;AAAA,MACA;AAAA,QACE,cAAcyP,IAAQA,EAAM,SAAS,IAAI;AAAA,QACzC,UAAUkB;AAAA,QACV,YAAYlB,IAAQA,EAAM,OAAO;AAAA,MACzC;AAAA,MACM;AAAA,IACN;AAAA,EACE;AACF;AAYA,SAAS+B,GAAmBV,GAAOvQ,GAAM;AAEvC,QAAMrB,IAAQ,CAAA;AAEd,MAAImT,GAEA7E;AAEJ,OAAKA,KAAQjN,EAAK;AAChB,QAAIiN,MAAS,cAAc4C,GAAI,KAAK7P,EAAK,YAAYiN,CAAI,GAAG;AAC1D,YAAMlM,IAASgR,GAAexB,GAAOtD,GAAMjN,EAAK,WAAWiN,CAAI,CAAC;AAEhE,UAAIlM,GAAQ;AACV,cAAM,CAACrE,GAAKkB,CAAK,IAAImD;AAErB,QACEwP,EAAM,yBACN7T,MAAQ,WACR,OAAOkB,KAAU,YACjBoS,GAAiB,IAAIhQ,EAAK,OAAO,IAEjC8R,IAAalU,IAEbe,EAAMjC,CAAG,IAAIkB;AAAA,MAEjB;AAAA,IACF;AAGF,MAAIkU,GAAY;AAEd,UAAM/F;AAAA;AAAA,MAA8BpN,EAAM,UAAUA,EAAM,QAAQ,CAAA;AAAA;AAClE,IAAAoN,EAAMwE,EAAM,0BAA0B,QAAQ,eAAe,WAAW,IACtEuB;AAAA,EACJ;AAEA,SAAOnT;AACT;AAYA,SAAS8S,GAAsBlB,GAAOvQ,GAAM;AAE1C,QAAMrB,IAAQ,CAAA;AAEd,aAAW0J,KAAarI,EAAK;AAC3B,QAAIqI,EAAU,SAAS;AACrB,UAAIA,EAAU,QAAQA,EAAU,KAAK,UAAUkI,EAAM,WAAW;AAE9D,cAAMe,IADUjJ,EAAU,KAAK,OACJ,KAAK,CAAC;AACjCkJ,QAAOD,EAAW;AAClB,cAAMU,IAAmBV,EAAW;AACpCC,QAAOS,EAAiB;AACxB,cAAMnK,IAAWmK,EAAiB,WAAW,CAAC;AAC9CT,QAAO1J,EAAS,MAEhB,OAAO;AAAA,UACLlJ;AAAA,UACA4R,EAAM,UAAU,mBAAmB1I,EAAS,QAAQ;AAAA,QAC9D;AAAA,MACM;AACE,QAAA2J,GAAYjB,GAAOvQ,EAAK,QAAQ;AAAA,SAE7B;AAEL,YAAM9B,IAAOmK,EAAU;AAEvB,UAAIzK;AAEJ,UAAIyK,EAAU,SAAS,OAAOA,EAAU,SAAU;AAChD,YACEA,EAAU,MAAM,QAChBA,EAAU,MAAM,KAAK,UACrBkI,EAAM,WACN;AAEA,gBAAMe,IADUjJ,EAAU,MAAM,KAAK,OACV,KAAK,CAAC;AACjCkJ,UAAOD,EAAW,MAClB1T,IAAQ2S,EAAM,UAAU,mBAAmBe,EAAW,UAAU;AAAA,QAClE;AACE,UAAAE,GAAYjB,GAAOvQ,EAAK,QAAQ;AAAA;AAGlC,QAAApC,IAAQyK,EAAU,UAAU,OAAO,KAAOA,EAAU;AAItD,MAAA1J,EAAMT,CAAI;AAAA,MAAuCN;AAAA,IACnD;AAGF,SAAOe;AACT;AAYA,SAASuS,GAAeX,GAAOvQ,GAAM;AAEnC,QAAMN,IAAW,CAAA;AACjB,MAAIyJ,IAAQ;AAIZ,QAAM8I,IAAe1B,EAAM,WAAW,oBAAI,IAAG,IAAKT;AAElD,SAAO,EAAE3G,IAAQnJ,EAAK,SAAS,UAAQ;AACrC,UAAMmR,IAAQnR,EAAK,SAASmJ,CAAK;AAEjC,QAAIzM;AAEJ,QAAI6T,EAAM,UAAU;AAClB,YAAMrS,IACJiT,EAAM,SAAS,YACXA,EAAM,UACNA,EAAM,SAAS,uBACbA,EAAM,SAAS,sBACfA,EAAM,OACN;AAER,UAAIjT,GAAM;AACR,cAAMgU,IAAQD,EAAa,IAAI/T,CAAI,KAAK;AACxC,QAAAxB,IAAMwB,IAAO,MAAMgU,GACnBD,EAAa,IAAI/T,GAAMgU,IAAQ,CAAC;AAAA,MAClC;AAAA,IACF;AAEA,UAAMnR,IAASyP,GAAID,GAAOY,GAAOzU,CAAG;AACpC,IAAIqE,MAAW,UAAWrB,EAAS,KAAKqB,CAAM;AAAA,EAChD;AAEA,SAAOrB;AACT;AAcA,SAASqS,GAAexB,GAAOtD,GAAMrP,GAAO;AAC1C,QAAM4L,IAAOe,GAAKgG,EAAM,QAAQtD,CAAI;AAGpC,MACE,EAAArP,KAAU,QAET,OAAOA,KAAU,YAAY,OAAO,MAAMA,CAAK,IAYlD;AAAA,QAPI,MAAM,QAAQA,CAAK,MAGrBA,IAAQ4L,EAAK,iBAAiB2I,GAAOvU,CAAK,IAAIwU,GAAOxU,CAAK,IAIxD4L,EAAK,aAAa,SAAS;AAC7B,UAAIuE,IACF,OAAOnQ,KAAU,WAAWA,IAAQyU,GAAW9B,GAAO,OAAO3S,CAAK,CAAC;AAErE,aAAI2S,EAAM,0BAA0B,UAClCxC,IAAcuE,GAA2BvE,CAAW,IAG/C,CAAC,SAASA,CAAW;AAAA,IAC9B;AAEA,WAAO;AAAA,MACLwC,EAAM,6BAA6B,WAAW/G,EAAK,QAC/CW,GAAYX,EAAK,QAAQ,KAAKA,EAAK,WACnCA,EAAK;AAAA,MACT5L;AAAA,IACJ;AAAA;AACA;AAcA,SAASyU,GAAW9B,GAAO3S,GAAO;AAChC,MAAI;AACF,WAAO2U,GAAU3U,GAAO,EAAC,aAAa,GAAI,CAAC;AAAA,EAC7C,SAAS4H,GAAO;AACd,QAAI+K,EAAM;AACR,aAAO,CAAA;AAGT,UAAMiC;AAAA;AAAA,MAA8BhN;AAAA,OAC9BzD,IAAU,IAAIuN,GAAa,kCAAkC;AAAA,MACjE,WAAWiB,EAAM;AAAA,MACjB,OAAAiC;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ;AAAA,IACd,CAAK;AACD,UAAAzQ,EAAQ,OAAOwO,EAAM,YAAY,QACjCxO,EAAQ,MAAMkO,KAAO,iCAEflO;AAAA,EACR;AACF;AAcA,SAASiP,GAAsBT,GAAOrS,GAAMuU,GAAiB;AAE3D,MAAI1R;AAEJ,MAAI,CAAC0R;AACH,IAAA1R,IAAS,EAAC,MAAM,WAAW,OAAO7C,EAAI;AAAA,WAC7BA,EAAK,SAAS,GAAG,GAAG;AAC7B,UAAMwU,IAAcxU,EAAK,MAAM,GAAG;AAClC,QAAIiL,IAAQ,IAERnJ;AAEJ,WAAO,EAAEmJ,IAAQuJ,EAAY,UAAQ;AAEnC,YAAMzF,IAAO0F,GAAiBD,EAAYvJ,CAAK,CAAC,IAC5C,EAAC,MAAM,cAAc,MAAMuJ,EAAYvJ,CAAK,EAAC,IAC7C,EAAC,MAAM,WAAW,OAAOuJ,EAAYvJ,CAAK,EAAC;AAC/C,MAAAnJ,IAAOA,IACH;AAAA,QACE,MAAM;AAAA,QACN,QAAQA;AAAA,QACR,UAAUiN;AAAA,QACV,UAAU,GAAQ9D,KAAS8D,EAAK,SAAS;AAAA,QACzC,UAAU;AAAA,MACtB,IACUA;AAAA,IACN;AAGA,IAAAlM,IAASf;AAAA,EACX;AACE,IAAAe,IACE4R,GAAiBzU,CAAI,KAAK,CAAC,SAAS,KAAKA,CAAI,IACzC,EAAC,MAAM,oBAAcA,EAAI,IACzB,EAAC,MAAM,WAAW,OAAOA,EAAI;AAKrC,MAAI6C,EAAO,SAAS,WAAW;AAC7B,UAAM7C;AAAA;AAAA,MAAuC6C,EAAO;AAAA;AACpD,WAAO8O,GAAI,KAAKU,EAAM,YAAYrS,CAAI,IAAIqS,EAAM,WAAWrS,CAAI,IAAIA;AAAA,EACrE;AAGA,MAAIqS,EAAM;AACR,WAAOA,EAAM,UAAU,mBAAmBxP,CAAM;AAGlD,EAAAyQ,GAAYjB,CAAK;AACnB;AAOA,SAASiB,GAAYjB,GAAOqC,GAAO;AACjC,QAAM7Q,IAAU,IAAIuN;AAAA,IAClB;AAAA,IACA;AAAA,MACE,WAAWiB,EAAM;AAAA,MACjB,OAAAqC;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ;AAAA,IACd;AAAA,EACA;AACE,QAAA7Q,EAAQ,OAAOwO,EAAM,YAAY,QACjCxO,EAAQ,MAAMkO,KAAO,sDAEflO;AACR;AAQA,SAASuQ,GAA2BO,GAAW;AAE7C,QAAMC,IAAY,CAAA;AAElB,MAAIC;AAEJ,OAAKA,KAAQF;AACX,IAAIhD,GAAI,KAAKgD,GAAWE,CAAI,MAC1BD,EAAUE,GAA0BD,CAAI,CAAC,IAAIF,EAAUE,CAAI;AAI/D,SAAOD;AACT;AAQA,SAASE,GAA0BD,GAAM;AACvC,MAAIE,IAAKF,EAAK,QAAQ3I,IAAK8I,EAAM;AAEjC,SAAID,EAAG,MAAM,GAAG,CAAC,MAAM,UAAOA,IAAK,MAAMA,IAClCA;AACT;AAUA,SAASC,GAAOrI,GAAI;AAClB,SAAO,MAAMA,EAAG,YAAW;AAC7B;AC1wBO,MAAMsI,KAAgB;AAAA,EAC3B,QAAQ,CAAC,MAAM;AAAA,EACf,MAAM,CAAC,cAAc,OAAO,OAAO,GAAG;AAAA,EACtC,MAAM,CAAC,QAAQ;AAAA,EACf,YAAY,CAAC,UAAU,OAAO;AAAA,EAC9B,MAAM,CAAC,KAAK,QAAQ,QAAQ,MAAM;AAAA,EAClC,MAAM,CAAC,UAAU;AAAA,EACjB,QAAQ;AAAA,EACR,UAAU,CAAC,MAAM;AAAA,EACjB,MAAM,CAAC,KAAK,MAAM;AAAA,EAClB,QAAQ,CAAC,OAAO;AAAA,EAChB,KAAK;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACA,GClBM5L,KAAe,CAAA;AAed,SAAS6L,GAASxV,GAAOsH,GAAS;AACvC,QAAMkC,IAAsBG,IACtB8L,IACJ,OAAOjM,EAAS,mBAAoB,YAChCA,EAAS,kBACT,IACAkM,IACJ,OAAOlM,EAAS,eAAgB,YAAYA,EAAS,cAAc;AAErE,SAAOoJ,GAAI5S,GAAOyV,GAAiBC,CAAW;AAChD;AAcA,SAAS9C,GAAI5S,GAAOyV,GAAiBC,GAAa;AAChD,MAAItT,GAAKpC,CAAK,GAAG;AACf,QAAI,WAAWA;AACb,aAAOA,EAAM,SAAS,UAAU,CAAC0V,IAAc,KAAK1V,EAAM;AAG5D,QAAIyV,KAAmB,SAASzV,KAASA,EAAM;AAC7C,aAAOA,EAAM;AAGf,QAAI,cAAcA;AAChB,aAAO2V,GAAI3V,EAAM,UAAUyV,GAAiBC,CAAW;AAAA,EAE3D;AAEA,SAAI,MAAM,QAAQ1V,CAAK,IACd2V,GAAI3V,GAAOyV,GAAiBC,CAAW,IAGzC;AACT;AAcA,SAASC,GAAIpM,GAAQkM,GAAiBC,GAAa;AAEjD,QAAMvS,IAAS,CAAA;AACf,MAAIoI,IAAQ;AAEZ,SAAO,EAAEA,IAAQhC,EAAO;AACtB,IAAApG,EAAOoI,CAAK,IAAIqH,GAAIrJ,EAAOgC,CAAK,GAAGkK,GAAiBC,CAAW;AAGjE,SAAOvS,EAAO,KAAK,EAAE;AACvB;AAUA,SAASf,GAAKpC,GAAO;AACnB,SAAO,GAAQA,KAAS,OAAOA,KAAU;AAC3C;ACvGA,MAAM6S,KAAU,SAAS,cAAc,GAAG;AAMnC,SAAS+C,GAA8B5V,GAAO;AACnD,QAAM6V,IAAqB,MAAM7V,IAAQ;AACzC6S,EAAAA,GAAQ,YAAYgD;AACpB,QAAMhF,IAAYgC,GAAQ;AAQ1B;AAAA;AAAA;AAAA,IAGEhC,EAAU,WAAWA,EAAU,SAAS,CAAC,MAAM,MAC/C7Q,MAAU,UASL6Q,MAAcgF,IAPZ,KAOyChF;AAAA;AACpD;ACbO,SAASiF,GAAOC,GAAMrH,GAAOsH,GAAQC,GAAO;AACjD,QAAMzE,IAAMuE,EAAK;AACjB,MAAIG,IAAa,GAEbC;AAWJ,MARIzH,IAAQ,IACVA,IAAQ,CAACA,IAAQ8C,IAAM,IAAIA,IAAM9C,IAEjCA,IAAQA,IAAQ8C,IAAMA,IAAM9C,GAE9BsH,IAASA,IAAS,IAAIA,IAAS,GAG3BC,EAAM,SAAS;AACjB,IAAAE,IAAa,MAAM,KAAKF,CAAK,GAC7BE,EAAW,QAAQzH,GAAOsH,CAAM,GAEhCD,EAAK,OAAO,GAAGI,CAAU;AAAA;AAMzB,SAHIH,KAAQD,EAAK,OAAOrH,GAAOsH,CAAM,GAG9BE,IAAaD,EAAM;AACxB,MAAAE,IAAaF,EAAM,MAAMC,GAAYA,IAAa,GAAK,GACvDC,EAAW,QAAQzH,GAAO,CAAC,GAE3BqH,EAAK,OAAO,GAAGI,CAAU,GACzBD,KAAc,KACdxH,KAAS;AAGf;AAkBO,SAAS0H,GAAKL,GAAME,GAAO;AAChC,SAAIF,EAAK,SAAS,KAChBD,GAAOC,GAAMA,EAAK,QAAQ,GAAGE,CAAK,GAC3BF,KAEFE;AACT;ACrEA,MAAMrV,KAAiB,CAAA,EAAG;AAUnB,SAASyV,GAAkBC,GAAY;AAE5C,QAAMX,IAAM,CAAA;AACZ,MAAIpK,IAAQ;AAEZ,SAAO,EAAEA,IAAQ+K,EAAW;AAC1B,IAAAC,GAAgBZ,GAAKW,EAAW/K,CAAK,CAAC;AAGxC,SAAOoK;AACT;AAYA,SAASY,GAAgBZ,GAAKa,GAAW;AAEvC,MAAIC;AAEJ,OAAKA,KAAQD,GAAW;AAGtB,UAAME,KAFQ9V,GAAe,KAAK+U,GAAKc,CAAI,IAAId,EAAIc,CAAI,IAAI,YAEpCd,EAAIc,CAAI,IAAI,CAAA,IAE7BE,IAAQH,EAAUC,CAAI;AAE5B,QAAIG;AAEJ,QAAID;AACF,WAAKC,KAAQD,GAAO;AAClB,QAAK/V,GAAe,KAAK8V,GAAME,CAAI,MAAGF,EAAKE,CAAI,IAAI,CAAA;AACnD,cAAM5W,IAAQ2W,EAAMC,CAAI;AACxB,QAAAC;AAAA;AAAA,UAEEH,EAAKE,CAAI;AAAA,UACT,MAAM,QAAQ5W,CAAK,IAAIA,IAAQA,IAAQ,CAACA,CAAK,IAAI,CAAA;AAAA,QAC3D;AAAA,MACM;AAAA,EAEJ;AACF;AAaA,SAAS6W,GAAWC,GAAUf,GAAM;AAClC,MAAIxK,IAAQ;AAEZ,QAAMwL,IAAS,CAAA;AAEf,SAAO,EAAExL,IAAQwK,EAAK;AAEnB,KAACA,EAAKxK,CAAK,EAAE,QAAQ,UAAUuL,IAAWC,GAAQ,KAAKhB,EAAKxK,CAAK,CAAC;AAGrE,EAAAuK,GAAOgB,GAAU,GAAG,GAAGC,CAAM;AAC/B;AC9EO,SAASC,GAAgChX,GAAOiX,GAAM;AAC3D,QAAML,IAAO,OAAO,SAAS5W,GAAOiX,CAAI;AACxC;AAAA;AAAA,IAEAL,IAAO,KAAKA,MAAS,MAAMA,IAAO,MAAMA,IAAO;AAAA,IAE/CA,IAAO,OAAOA,IAAO;AAAA,IAErBA,IAAO,SAAUA,IAAO;AAAA,IAExBA,IAAO,SAAUA,IAAO;AAAA,KACvBA,IAAO,WAAY,UAAWA,IAAO,WAAY;AAAA;AAAA,IAElDA,IAAO,UACE,MAEF,OAAO,cAAcA,CAAI;AAAA;AAClC;ACZO,SAASM,GAAoBlX,GAAO;AACzC,SAAOA,EAEN,QAAQ,eAAe,GAAG,EAE1B,QAAQ,UAAU,EAAE,EAOpB,YAAW,EAAG,YAAW;AAC5B;ACXO,MAAMmX,KAAaC,GAAW,UAAU,GAclCC,KAAoBD,GAAW,YAAY,GAuB3CE,KAAaF,GAAW,qBAAqB;AAanD,SAASG,GAAaX,GAAM;AACjC;AAAA;AAAA;AAAA,IAGEA,MAAS,SAASA,IAAO,MAAMA,MAAS;AAAA;AAE5C;AAaO,MAAMY,KAAaJ,GAAW,IAAI,GAoB5BK,KAAgBL,GAAW,YAAY,GAevCM,KAAmBN,GAAW,gBAAgB;AAiBpD,SAASO,EAAmBf,GAAM;AACvC,SAAOA,MAAS,QAAQA,IAAO;AACjC;AAWO,SAASgB,GAA0BhB,GAAM;AAC9C,SAAOA,MAAS,SAASA,IAAO,KAAKA,MAAS;AAChD;AAiBO,SAASiB,GAAcjB,GAAM;AAClC,SAAOA,MAAS,MAAMA,MAAS,MAAMA,MAAS;AAChD;AAuBO,MAAMkB,KAAqBV,GAAW,+BAAc,IAsB9CW,KAAoBX,GAAW,IAAI;AAUhD,SAASA,GAAWY,GAAO;AACzB,SAAOvM;AAUP,WAASA,EAAMmL,GAAM;AACnB,WAAOA,MAAS,QAAQA,IAAO,MAAMoB,EAAM,KAAK,OAAO,aAAapB,CAAI,CAAC;AAAA,EAC3E;AACF;AC7LO,SAASqB,GAAajY,GAAO;AAElC,QAAMmD,IAAS,CAAA;AACf,MAAIoI,IAAQ,IACRmD,IAAQ,GACRwJ,IAAO;AACX,SAAO,EAAE3M,IAAQvL,EAAM,UAAQ;AAC7B,UAAM4W,IAAO5W,EAAM,WAAWuL,CAAK;AAEnC,QAAI4M,IAAU;AAGd,QAAIvB,MAAS,MAAMS,GAAkBrX,EAAM,WAAWuL,IAAQ,CAAC,CAAC,KAAK8L,GAAkBrX,EAAM,WAAWuL,IAAQ,CAAC,CAAC;AAChH,MAAA2M,IAAO;AAAA,aAGAtB,IAAO;AACd,MAAK,oBAAoB,KAAK,OAAO,aAAaA,CAAI,CAAC,MACrDuB,IAAU,OAAO,aAAavB,CAAI;AAAA,aAI7BA,IAAO,SAAUA,IAAO,OAAQ;AACvC,YAAMwB,IAAOpY,EAAM,WAAWuL,IAAQ,CAAC;AAGvC,MAAIqL,IAAO,SAAUwB,IAAO,SAAUA,IAAO,SAC3CD,IAAU,OAAO,aAAavB,GAAMwB,CAAI,GACxCF,IAAO,KAIPC,IAAU;AAAA,IAEd;AAGE,MAAAA,IAAU,OAAO,aAAavB,CAAI;AAEpC,IAAIuB,MACFhV,EAAO,KAAKnD,EAAM,MAAM0O,GAAOnD,CAAK,GAAG,mBAAmB4M,CAAO,CAAC,GAClEzJ,IAAQnD,IAAQ2M,IAAO,GACvBC,IAAU,KAERD,MACF3M,KAAS2M,GACTA,IAAO;AAAA,EAEX;AACA,SAAO/U,EAAO,KAAK,EAAE,IAAInD,EAAM,MAAM0O,CAAK;AAC5C;AClEO,SAAS2J,GAAaC,GAASC,GAAI5Z,GAAM6Z,GAAK;AACnD,QAAMC,IAAQD,IAAMA,IAAM,IAAI,OAAO;AACrC,MAAIE,IAAO;AACX,SAAOhK;AAGP,WAASA,EAAMkI,GAAM;AACnB,WAAIiB,GAAcjB,CAAI,KACpB0B,EAAQ,MAAM3Z,CAAI,GACXoS,EAAO6F,CAAI,KAEb2B,EAAG3B,CAAI;AAAA,EAChB;AAGA,WAAS7F,EAAO6F,GAAM;AACpB,WAAIiB,GAAcjB,CAAI,KAAK8B,MAASD,KAClCH,EAAQ,QAAQ1B,CAAI,GACb7F,MAETuH,EAAQ,KAAK3Z,CAAI,GACV4Z,EAAG3B,CAAI;AAAA,EAChB;AACF;AClDO,MAAMzN,KAAU;AAAA,EACrB,UAAUwP;AACZ;AAQA,SAASA,GAAkBL,GAAS;AAClC,QAAMM,IAAeN,EAAQ,QAAQ,KAAK,OAAO,WAAW,gBAAgBO,GAA4BC,CAAgB;AAExH,MAAIC;AACJ,SAAOH;AAGP,WAASC,EAA2BjC,GAAM;AACxC,QAAIA,MAAS,MAAM;AACjB,MAAA0B,EAAQ,QAAQ1B,CAAI;AACpB;AAAA,IACF;AACA,WAAA0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBD,GAAaC,GAASM,GAAc,YAAY;AAAA,EACzD;AAGA,WAASE,EAAiBlC,GAAM;AAC9B,WAAA0B,EAAQ,MAAM,WAAW,GAClBzU,EAAU+S,CAAI;AAAA,EACvB;AAGA,WAAS/S,EAAU+S,GAAM;AACvB,UAAMoC,IAAQV,EAAQ,MAAM,aAAa;AAAA,MACvC,aAAa;AAAA,MACb,UAAAS;AAAA,IACN,CAAK;AACD,WAAIA,MACFA,EAAS,OAAOC,IAElBD,IAAWC,GACJzR,EAAKqP,CAAI;AAAA,EAClB;AAGA,WAASrP,EAAKqP,GAAM;AAClB,QAAIA,MAAS,MAAM;AACjB,MAAA0B,EAAQ,KAAK,WAAW,GACxBA,EAAQ,KAAK,WAAW,GACxBA,EAAQ,QAAQ1B,CAAI;AACpB;AAAA,IACF;AACA,WAAIe,EAAmBf,CAAI,KACzB0B,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,WAAW,GACjBzU,MAITyU,EAAQ,QAAQ1B,CAAI,GACbrP;AAAA,EACT;AACF;ACvDO,MAAM0R,KAAW;AAAA,EACtB,UAAUC;AACZ,GAGMC,KAAqB;AAAA,EACzB,UAAUC;AACZ;AAQA,SAASF,GAAmBZ,GAAS;AACnC,QAAM/W,IAAO,MAEP8X,IAAQ,CAAA;AACd,MAAIC,IAAY,GAEZC,GAEAC,GAEAC;AACJ,SAAO/K;AAGP,WAASA,EAAMkI,GAAM;AAWnB,QAAI0C,IAAYD,EAAM,QAAQ;AAC5B,YAAMK,IAAOL,EAAMC,CAAS;AAC5B,aAAA/X,EAAK,iBAAiBmY,EAAK,CAAC,GACrBpB,EAAQ,QAAQoB,EAAK,CAAC,EAAE,cAAcC,GAAkBC,CAAkB,EAAEhD,CAAI;AAAA,IACzF;AAGA,WAAOgD,EAAmBhD,CAAI;AAAA,EAChC;AAGA,WAAS+C,EAAiB/C,GAAM;AAM9B,QALA0C,KAKI/X,EAAK,eAAe,YAAY;AAClC,MAAAA,EAAK,eAAe,aAAa,QAC7BgY,KACFM,EAAS;AAKX,YAAMC,IAAmBvY,EAAK,OAAO;AACrC,UAAIwY,IAAkBD,GAElBxI;AAGJ,aAAOyI;AACL,YAAIxY,EAAK,OAAOwY,CAAe,EAAE,CAAC,MAAM,UAAUxY,EAAK,OAAOwY,CAAe,EAAE,CAAC,EAAE,SAAS,aAAa;AACtG,UAAAzI,IAAQ/P,EAAK,OAAOwY,CAAe,EAAE,CAAC,EAAE;AACxC;AAAA,QACF;AAEF,MAAAC,EAAeV,CAAS;AAGxB,UAAI/N,IAAQuO;AACZ,aAAOvO,IAAQhK,EAAK,OAAO;AACzB,QAAAA,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,MAAM;AAAA,UAC1B,GAAG+F;AAAA,QACb,GACQ/F;AAIF,aAAAuK,GAAOvU,EAAK,QAAQwY,IAAkB,GAAG,GAAGxY,EAAK,OAAO,MAAMuY,CAAgB,CAAC,GAG/EvY,EAAK,OAAO,SAASgK,GACdqO,EAAmBhD,CAAI;AAAA,IAChC;AACA,WAAOlI,EAAMkI,CAAI;AAAA,EACnB;AAGA,WAASgD,EAAmBhD,GAAM;AAMhC,QAAI0C,MAAcD,EAAM,QAAQ;AAI9B,UAAI,CAACE;AACH,eAAOU,EAAkBrD,CAAI;AAM/B,UAAI2C,EAAU,oBAAoBA,EAAU,iBAAiB;AAC3D,eAAOW,EAAUtD,CAAI;AAQvB,MAAArV,EAAK,YAAY,GAAQgY,EAAU,oBAAoB,CAACA,EAAU;AAAA,IACpE;AAGA,WAAAhY,EAAK,iBAAiB,CAAA,GACf+W,EAAQ,MAAMa,IAAoBgB,GAAsBC,CAAqB,EAAExD,CAAI;AAAA,EAC5F;AAGA,WAASuD,EAAqBvD,GAAM;AAClC,WAAI2C,KAAWM,EAAS,GACxBG,EAAeV,CAAS,GACjBW,EAAkBrD,CAAI;AAAA,EAC/B;AAGA,WAASwD,EAAsBxD,GAAM;AACnC,WAAArV,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAAI+X,MAAcD,EAAM,QACxDI,IAAkBlY,EAAK,IAAG,EAAG,QACtB2Y,EAAUtD,CAAI;AAAA,EACvB;AAGA,WAASqD,EAAkBrD,GAAM;AAE/B,WAAArV,EAAK,iBAAiB,CAAA,GACf+W,EAAQ,QAAQa,IAAoBkB,GAAmBH,CAAS,EAAEtD,CAAI;AAAA,EAC/E;AAGA,WAASyD,EAAkBzD,GAAM;AAC/B,WAAA0C,KACAD,EAAM,KAAK,CAAC9X,EAAK,kBAAkBA,EAAK,cAAc,CAAC,GAEhD0Y,EAAkBrD,CAAI;AAAA,EAC/B;AAGA,WAASsD,EAAUtD,GAAM;AACvB,QAAIA,MAAS,MAAM;AACjB,MAAI2C,KAAWM,EAAS,GACxBG,EAAe,CAAC,GAChB1B,EAAQ,QAAQ1B,CAAI;AACpB;AAAA,IACF;AACA,WAAA2C,IAAYA,KAAahY,EAAK,OAAO,KAAKA,EAAK,KAAK,GACpD+W,EAAQ,MAAM,aAAa;AAAA,MACzB,YAAYiB;AAAA,MACZ,aAAa;AAAA,MACb,UAAUC;AAAA,IAChB,CAAK,GACMc,EAAa1D,CAAI;AAAA,EAC1B;AAGA,WAAS0D,EAAa1D,GAAM;AAC1B,QAAIA,MAAS,MAAM;AACjB,MAAA2D,EAAajC,EAAQ,KAAK,WAAW,GAAG,EAAI,GAC5C0B,EAAe,CAAC,GAChB1B,EAAQ,QAAQ1B,CAAI;AACpB;AAAA,IACF;AACA,WAAIe,EAAmBf,CAAI,KACzB0B,EAAQ,QAAQ1B,CAAI,GACpB2D,EAAajC,EAAQ,KAAK,WAAW,CAAC,GAEtCgB,IAAY,GACZ/X,EAAK,YAAY,QACVmN,MAET4J,EAAQ,QAAQ1B,CAAI,GACb0D;AAAA,EACT;AAUA,WAASC,EAAavB,GAAOwB,GAAW;AACtC,UAAMxX,IAASzB,EAAK,YAAYyX,CAAK;AAyCrC,QAxCIwB,KAAWxX,EAAO,KAAK,IAAI,GAC/BgW,EAAM,WAAWQ,GACbA,MAAYA,EAAW,OAAOR,IAClCQ,IAAaR,GACbO,EAAU,WAAWP,EAAM,KAAK,GAChCO,EAAU,MAAMvW,CAAM,GAmClBzB,EAAK,OAAO,KAAKyX,EAAM,MAAM,IAAI,GAAG;AACtC,UAAIzN,IAAQgO,EAAU,OAAO;AAC7B,aAAOhO;AACL;AAAA;AAAA,UAEAgO,EAAU,OAAOhO,CAAK,EAAE,CAAC,EAAE,MAAM,SAASkO;AAAA,WAE1C,CAACF,EAAU,OAAOhO,CAAK,EAAE,CAAC,EAAE;AAAA,UAE5BgO,EAAU,OAAOhO,CAAK,EAAE,CAAC,EAAE,IAAI,SAASkO;AAAA;AAGtC;AAMJ,YAAMK,IAAmBvY,EAAK,OAAO;AACrC,UAAIwY,IAAkBD,GAElBW,GAEAnJ;AAGJ,aAAOyI;AACL,YAAIxY,EAAK,OAAOwY,CAAe,EAAE,CAAC,MAAM,UAAUxY,EAAK,OAAOwY,CAAe,EAAE,CAAC,EAAE,SAAS,aAAa;AACtG,cAAIU,GAAM;AACR,YAAAnJ,IAAQ/P,EAAK,OAAOwY,CAAe,EAAE,CAAC,EAAE;AACxC;AAAA,UACF;AACA,UAAAU,IAAO;AAAA,QACT;AAMF,WAJAT,EAAeV,CAAS,GAGxB/N,IAAQuO,GACDvO,IAAQhK,EAAK,OAAO;AACzB,QAAAA,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,MAAM;AAAA,UAC1B,GAAG+F;AAAA,QACb,GACQ/F;AAIF,MAAAuK,GAAOvU,EAAK,QAAQwY,IAAkB,GAAG,GAAGxY,EAAK,OAAO,MAAMuY,CAAgB,CAAC,GAG/EvY,EAAK,OAAO,SAASgK;AAAA,IACvB;AAAA,EACF;AAQA,WAASyO,EAAetB,GAAM;AAC5B,QAAInN,IAAQ8N,EAAM;AAGlB,WAAO9N,MAAUmN,KAAM;AACrB,YAAMgC,IAAQrB,EAAM9N,CAAK;AACzB,MAAAhK,EAAK,iBAAiBmZ,EAAM,CAAC,GAC7BA,EAAM,CAAC,EAAE,KAAK,KAAKnZ,GAAM+W,CAAO;AAAA,IAClC;AACA,IAAAe,EAAM,SAASX;AAAA,EACjB;AACA,WAASmB,IAAY;AACnB,IAAAN,EAAU,MAAM,CAAC,IAAI,CAAC,GACtBC,IAAa,QACbD,IAAY,QACZhY,EAAK,eAAe,aAAa;AAAA,EACnC;AACF;AAQA,SAAS6X,GAAkBd,GAASC,GAAIoC,GAAK;AAG3C,SAAOtC,GAAaC,GAASA,EAAQ,QAAQ,KAAK,OAAO,WAAW,UAAUC,GAAIoC,CAAG,GAAG,cAAc,KAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC;AACpL;ACtVO,SAASC,GAAkBhE,GAAM;AACtC,MAAIA,MAAS,QAAQgB,GAA0BhB,CAAI,KAAKmB,GAAkBnB,CAAI;AAC5E,WAAO;AAET,MAAIkB,GAAmBlB,CAAI;AACzB,WAAO;AAEX;ACVO,SAASiE,GAAWhE,GAAYiE,GAAQC,GAAS;AAEtD,QAAMC,IAAS,CAAA;AACf,MAAIzP,IAAQ;AAEZ,SAAO,EAAEA,IAAQsL,EAAW,UAAQ;AAClC,UAAM5Q,IAAU4Q,EAAWtL,CAAK,EAAE;AAElC,IAAItF,KAAW,CAAC+U,EAAO,SAAS/U,CAAO,MACrC6U,IAAS7U,EAAQ6U,GAAQC,CAAO,GAChCC,EAAO,KAAK/U,CAAO;AAAA,EAEvB;AAEA,SAAO6U;AACT;ACbO,MAAMG,KAAY;AAAA,EACvB,MAAM;AAAA,EACN,YAAYC;AAAA,EACZ,UAAUC;AACZ;AAQA,SAASD,GAAoBJ,GAAQC,GAAS;AAC5C,MAAIxP,IAAQ,IAER6P,GAEAC,GAEAnI,GAEAoI,GAEAC,GAEAC,GAEAC,GAEAC;AAMJ,SAAO,EAAEnQ,IAAQuP,EAAO;AAEtB,QAAIA,EAAOvP,CAAK,EAAE,CAAC,MAAM,WAAWuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,uBAAuBuP,EAAOvP,CAAK,EAAE,CAAC,EAAE;AAIpG,WAHA6P,IAAO7P,GAGA6P;AAEL,YAAIN,EAAOM,CAAI,EAAE,CAAC,MAAM,UAAUN,EAAOM,CAAI,EAAE,CAAC,EAAE,SAAS,uBAAuBN,EAAOM,CAAI,EAAE,CAAC,EAAE;AAAA,QAElGL,EAAQ,eAAeD,EAAOM,CAAI,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,MAAML,EAAQ,eAAeD,EAAOvP,CAAK,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,GAAG;AAKhH,eAAKuP,EAAOM,CAAI,EAAE,CAAC,EAAE,UAAUN,EAAOvP,CAAK,EAAE,CAAC,EAAE,WAAWuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,IAAI,SAASuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,MAAM,UAAU,KAAK,GAAGuP,EAAOM,CAAI,EAAE,CAAC,EAAE,IAAI,SAASN,EAAOM,CAAI,EAAE,CAAC,EAAE,MAAM,SAASN,EAAOvP,CAAK,EAAE,CAAC,EAAE,IAAI,SAASuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,MAAM,UAAU;AAC3P;AAIF,UAAAiQ,IAAMV,EAAOM,CAAI,EAAE,CAAC,EAAE,IAAI,SAASN,EAAOM,CAAI,EAAE,CAAC,EAAE,MAAM,SAAS,KAAKN,EAAOvP,CAAK,EAAE,CAAC,EAAE,IAAI,SAASuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,MAAM,SAAS,IAAI,IAAI;AAC7I,gBAAMmD,IAAQ;AAAA,YACZ,GAAGoM,EAAOM,CAAI,EAAE,CAAC,EAAE;AAAA,UAC/B,GACgB5J,IAAM;AAAA,YACV,GAAGsJ,EAAOvP,CAAK,EAAE,CAAC,EAAE;AAAA,UAChC;AACU,UAAAoQ,GAAUjN,GAAO,CAAC8M,CAAG,GACrBG,GAAUnK,GAAKgK,CAAG,GAClBF,IAAkB;AAAA,YAChB,MAAME,IAAM,IAAI,mBAAmB;AAAA,YACnC,OAAA9M;AAAA,YACA,KAAK;AAAA,cACH,GAAGoM,EAAOM,CAAI,EAAE,CAAC,EAAE;AAAA,YACjC;AAAA,UACA,GACUG,IAAkB;AAAA,YAChB,MAAMC,IAAM,IAAI,mBAAmB;AAAA,YACnC,OAAO;AAAA,cACL,GAAGV,EAAOvP,CAAK,EAAE,CAAC,EAAE;AAAA,YAClC;AAAA,YACY,KAAAiG;AAAA,UACZ,GACU0B,IAAO;AAAA,YACL,MAAMsI,IAAM,IAAI,eAAe;AAAA,YAC/B,OAAO;AAAA,cACL,GAAGV,EAAOM,CAAI,EAAE,CAAC,EAAE;AAAA,YACjC;AAAA,YACY,KAAK;AAAA,cACH,GAAGN,EAAOvP,CAAK,EAAE,CAAC,EAAE;AAAA,YAClC;AAAA,UACA,GACU8P,IAAQ;AAAA,YACN,MAAMG,IAAM,IAAI,WAAW;AAAA,YAC3B,OAAO;AAAA,cACL,GAAGF,EAAgB;AAAA,YACjC;AAAA,YACY,KAAK;AAAA,cACH,GAAGC,EAAgB;AAAA,YACjC;AAAA,UACA,GACUT,EAAOM,CAAI,EAAE,CAAC,EAAE,MAAM;AAAA,YACpB,GAAGE,EAAgB;AAAA,UAC/B,GACUR,EAAOvP,CAAK,EAAE,CAAC,EAAE,QAAQ;AAAA,YACvB,GAAGgQ,EAAgB;AAAA,UAC/B,GACUE,IAAa,CAAA,GAGTX,EAAOM,CAAI,EAAE,CAAC,EAAE,IAAI,SAASN,EAAOM,CAAI,EAAE,CAAC,EAAE,MAAM,WACrDK,IAAarF,GAAKqF,GAAY,CAAC,CAAC,SAASX,EAAOM,CAAI,EAAE,CAAC,GAAGL,CAAO,GAAG,CAAC,QAAQD,EAAOM,CAAI,EAAE,CAAC,GAAGL,CAAO,CAAC,CAAC,IAIzGU,IAAarF,GAAKqF,GAAY,CAAC,CAAC,SAASJ,GAAON,CAAO,GAAG,CAAC,SAASO,GAAiBP,CAAO,GAAG,CAAC,QAAQO,GAAiBP,CAAO,GAAG,CAAC,SAAS7H,GAAM6H,CAAO,CAAC,CAAC,GAK5JU,IAAarF,GAAKqF,GAAYZ,GAAWE,EAAQ,OAAO,WAAW,WAAW,MAAMD,EAAO,MAAMM,IAAO,GAAG7P,CAAK,GAAGwP,CAAO,CAAC,GAG3HU,IAAarF,GAAKqF,GAAY,CAAC,CAAC,QAAQvI,GAAM6H,CAAO,GAAG,CAAC,SAASQ,GAAiBR,CAAO,GAAG,CAAC,QAAQQ,GAAiBR,CAAO,GAAG,CAAC,QAAQM,GAAON,CAAO,CAAC,CAAC,GAGtJD,EAAOvP,CAAK,EAAE,CAAC,EAAE,IAAI,SAASuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,MAAM,UACvDmQ,IAAS,GACTD,IAAarF,GAAKqF,GAAY,CAAC,CAAC,SAASX,EAAOvP,CAAK,EAAE,CAAC,GAAGwP,CAAO,GAAG,CAAC,QAAQD,EAAOvP,CAAK,EAAE,CAAC,GAAGwP,CAAO,CAAC,CAAC,KAEzGW,IAAS,GAEX5F,GAAOgF,GAAQM,IAAO,GAAG7P,IAAQ6P,IAAO,GAAGK,CAAU,GACrDlQ,IAAQ6P,IAAOK,EAAW,SAASC,IAAS;AAC5C;AAAA,QACF;AAAA;AAON,OADAnQ,IAAQ,IACD,EAAEA,IAAQuP,EAAO;AACtB,IAAIA,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,wBAC5BuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,OAAO;AAG5B,SAAOuP;AACT;AAOA,SAASK,GAAkB7C,GAASC,GAAI;AACtC,QAAMqD,IAAmB,KAAK,OAAO,WAAW,iBAAiB,MAC3D7C,IAAW,KAAK,UAChBhC,IAAS6D,GAAkB7B,CAAQ;AAGzC,MAAI8C;AACJ,SAAOnN;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAAiF,IAASjF,GACT0B,EAAQ,MAAM,mBAAmB,GAC1BwD,EAAOlF,CAAI;AAAA,EACpB;AAYA,WAASkF,EAAOlF,GAAM;AACpB,QAAIA,MAASiF;AACX,aAAAvD,EAAQ,QAAQ1B,CAAI,GACbkF;AAET,UAAM9C,IAAQV,EAAQ,KAAK,mBAAmB,GAGxCyD,IAAQnB,GAAkBhE,CAAI,GAI9BwE,IAAO,CAACW,KAASA,MAAU,KAAKhF,KAAU6E,EAAiB,SAAShF,CAAI,GACxE9N,IAAQ,CAACiO,KAAUA,MAAW,KAAKgF,KAASH,EAAiB,SAAS7C,CAAQ;AACpF,WAAAC,EAAM,QAAQ,GAAQ6C,MAAW,KAAKT,IAAOA,MAASrE,KAAU,CAACjO,KACjEkQ,EAAM,SAAS,GAAQ6C,MAAW,KAAK/S,IAAQA,MAAUiT,KAAS,CAACX,KAC5D7C,EAAG3B,CAAI;AAAA,EAChB;AACF;AAeA,SAAS+E,GAAUrK,GAAOoK,GAAQ;AAChC,EAAApK,EAAM,UAAUoK,GAChBpK,EAAM,UAAUoK,GAChBpK,EAAM,gBAAgBoK;AACxB;ACrOO,MAAMM,KAAW;AAAA,EACtB,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAiB3D,GAASC,GAAIoC,GAAK;AAC1C,MAAIjC,IAAO;AACX,SAAOhK;AAcP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,gBAAgB,GAC7BA,EAAQ,MAAM,kBAAkB,GACzB8C;AAAA,EACT;AAcA,WAASA,EAAKxE,GAAM;AAClB,WAAIO,GAAWP,CAAI,KACjB0B,EAAQ,QAAQ1B,CAAI,GACbsF,KAELtF,MAAS,KACJ+D,EAAI/D,CAAI,IAEVuF,EAAWvF,CAAI;AAAA,EACxB;AAcA,WAASsF,EAAmBtF,GAAM;AAEhC,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMS,GAAkBT,CAAI,KAErE8B,IAAO,GACA0D,EAAyBxF,CAAI,KAE/BuF,EAAWvF,CAAI;AAAA,EACxB;AAcA,WAASwF,EAAyBxF,GAAM;AACtC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpB8B,IAAO,GACA2D,MAIJzF,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMS,GAAkBT,CAAI,MAAM8B,MAAS,MACrFJ,EAAQ,QAAQ1B,CAAI,GACbwF,MAET1D,IAAO,GACAyD,EAAWvF,CAAI;AAAA,EACxB;AAYA,WAASyF,EAAUzF,GAAM;AACvB,WAAIA,MAAS,MACX0B,EAAQ,KAAK,kBAAkB,GAC/BA,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,gBAAgB,GAC7BA,EAAQ,KAAK,UAAU,GAChBC,KAIL3B,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMW,GAAaX,CAAI,IAC3D+D,EAAI/D,CAAI,KAEjB0B,EAAQ,QAAQ1B,CAAI,GACbyF;AAAA,EACT;AAYA,WAASF,EAAWvF,GAAM;AACxB,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACb0F,KAELhF,GAAWV,CAAI,KACjB0B,EAAQ,QAAQ1B,CAAI,GACbuF,KAEFxB,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAAS0F,EAAiB1F,GAAM;AAC9B,WAAOS,GAAkBT,CAAI,IAAI2F,EAAW3F,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EAC9D;AAYA,WAAS2F,EAAW3F,GAAM;AACxB,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpB8B,IAAO,GACA4D,KAEL1F,MAAS,MAEX0B,EAAQ,KAAK,kBAAkB,EAAE,OAAO,iBACxCA,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,gBAAgB,GAC7BA,EAAQ,KAAK,UAAU,GAChBC,KAEFiE,EAAW5F,CAAI;AAAA,EACxB;AAcA,WAAS4F,EAAW5F,GAAM;AAExB,SAAKA,MAAS,MAAMS,GAAkBT,CAAI,MAAM8B,MAAS,IAAI;AAC3D,YAAMN,IAAOxB,MAAS,KAAK4F,IAAaD;AACxC,aAAAjE,EAAQ,QAAQ1B,CAAI,GACbwB;AAAA,IACT;AACA,WAAOuC,EAAI/D,CAAI;AAAA,EACjB;AACF;AC5NO,MAAM6F,KAAY;AAAA,EACvB,SAAS;AAAA,EACT,UAAUC;AACZ;AAOA,SAASA,GAAkBpE,GAASC,GAAIoC,GAAK;AAC3C,SAAOjM;AAgBP,WAASA,EAAMkI,GAAM;AACnB,WAAOiB,GAAcjB,CAAI,IAAIyB,GAAaC,GAASyD,GAAO,YAAY,EAAEnF,CAAI,IAAImF,EAAMnF,CAAI;AAAA,EAC5F;AAgBA,WAASmF,EAAMnF,GAAM;AACnB,WAAOA,MAAS,QAAQe,EAAmBf,CAAI,IAAI2B,EAAG3B,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EACxE;AACF;AC/CO,MAAM+F,KAAa;AAAA,EACxB,cAAc;AAAA,IACZ,UAAUC;AAAA,EACd;AAAA,EACA,MAAEC;AAAAA,EACA,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAwBxE,GAASC,GAAIoC,GAAK;AACjD,QAAMpZ,IAAO;AACb,SAAOmN;AAYP,WAASA,EAAMkI,GAAM;AACnB,QAAIA,MAAS,IAAI;AACf,YAAMjE,IAAQpR,EAAK;AACnB,aAAKoR,EAAM,SACT2F,EAAQ,MAAM,cAAc;AAAA,QAC1B,YAAY;AAAA,MACtB,CAAS,GACD3F,EAAM,OAAO,KAEf2F,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kBAAkB,GACxByD;AAAA,IACT;AACA,WAAOpB,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASmF,EAAMnF,GAAM;AACnB,WAAIiB,GAAcjB,CAAI,KACpB0B,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,4BAA4B,GACzCA,EAAQ,KAAK,kBAAkB,GACxBC,MAETD,EAAQ,KAAK,kBAAkB,GACxBC,EAAG3B,CAAI;AAAA,EAChB;AACF;AAeA,SAASgG,GAA+BtE,GAASC,GAAIoC,GAAK;AACxD,QAAMpZ,IAAO;AACb,SAAOwb;AAeP,WAASA,EAAUnG,GAAM;AACvB,WAAIiB,GAAcjB,CAAI,IAGbyB,GAAaC,GAAS0E,GAAY,cAAczb,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAEqV,CAAI,IAEpIoG,EAAWpG,CAAI;AAAA,EACxB;AAeA,WAASoG,EAAWpG,GAAM;AACxB,WAAO0B,EAAQ,QAAQqE,IAAYpE,GAAIoC,CAAG,EAAE/D,CAAI;AAAA,EAClD;AACF;AAGA,SAASiG,GAAKvE,GAAS;AACrB,EAAAA,EAAQ,KAAK,YAAY;AAC3B;ACnIO,MAAM2E,KAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAwB5E,GAASC,GAAIoC,GAAK;AACjD,SAAOjM;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,cAAc,GAC5BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,cAAc,GACpBwD;AAAA,EACT;AAYA,WAASA,EAAOlF,GAAM;AAEpB,WAAIc,GAAiBd,CAAI,KACvB0B,EAAQ,MAAM,sBAAsB,GACpCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,sBAAsB,GACnCA,EAAQ,KAAK,iBAAiB,GACvBC,KAEFoC,EAAI/D,CAAI;AAAA,EACjB;AACF;AClDO,MAAMf,KAAqB;AAAA,EAChC,MAAM;AAAA,EACN,UAAUsH;AACZ;AAOA,SAASA,GAA2B7E,GAASC,GAAIoC,GAAK;AACpD,QAAMpZ,IAAO;AACb,MAAImX,IAAO,GAEPF,GAEA4E;AACJ,SAAO1O;AAgBP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,oBAAoB,GAClCA,EAAQ,MAAM,0BAA0B,GACxCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,0BAA0B,GAChC8C;AAAA,EACT;AAiBA,WAASA,EAAKxE,GAAM;AAClB,WAAIA,MAAS,MACX0B,EAAQ,MAAM,iCAAiC,GAC/CA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,iCAAiC,GACvC+E,MAET/E,EAAQ,MAAM,yBAAyB,GACvCE,IAAM,IACN4E,IAAO/F,IACArX,EAAM4W,CAAI;AAAA,EACnB;AAcA,WAASyG,EAAQzG,GAAM;AACrB,WAAIA,MAAS,MAAMA,MAAS,OAC1B0B,EAAQ,MAAM,qCAAqC,GACnDA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,qCAAqC,GAClDA,EAAQ,MAAM,yBAAyB,GACvCE,IAAM,GACN4E,IAAO3F,IACAzX,MAETsY,EAAQ,MAAM,yBAAyB,GACvCE,IAAM,GACN4E,IAAO5F,IACAxX,EAAM4W,CAAI;AAAA,EACnB;AAmBA,WAAS5W,EAAM4W,GAAM;AACnB,QAAIA,MAAS,MAAM8B,GAAM;AACvB,YAAMM,IAAQV,EAAQ,KAAK,yBAAyB;AACpD,aAAI8E,MAAS/F,MAAqB,CAACzB,GAA8BrU,EAAK,eAAeyX,CAAK,CAAC,IAClF2B,EAAI/D,CAAI,KAKjB0B,EAAQ,MAAM,0BAA0B,GACxCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,0BAA0B,GACvCA,EAAQ,KAAK,oBAAoB,GAC1BC;AAAA,IACT;AACA,WAAI6E,EAAKxG,CAAI,KAAK8B,MAASF,KACzBF,EAAQ,QAAQ1B,CAAI,GACb5W,KAEF2a,EAAI/D,CAAI;AAAA,EACjB;AACF;ACvIA,MAAM0G,KAAsB;AAAA,EAC1B,SAAS;AAAA,EACT,UAAUC;AACZ,GAGaC,KAAa;AAAA,EACxB,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAmBnF,GAASC,GAAIoC,GAAK;AAC5C,QAAMpZ,IAAO,MAEPmc,IAAa;AAAA,IACjB,SAAS;AAAA,IACT,UAAUC;AAAA,EACd;AACE,MAAIC,IAAgB,GAChBC,IAAW,GAEXhC;AACJ,SAAOnN;AAcP,WAASA,EAAMkI,GAAM;AAEnB,WAAOkH,EAAmBlH,CAAI;AAAA,EAChC;AAcA,WAASkH,EAAmBlH,GAAM;AAChC,UAAMmH,IAAOxc,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAAqc,IAAgBG,KAAQA,EAAK,CAAC,EAAE,SAAS,eAAeA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,SAAS,GACvGlC,IAASjF,GACT0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,yBAAyB,GAChC0F,EAAapH,CAAI;AAAA,EAC1B;AAcA,WAASoH,EAAapH,GAAM;AAC1B,WAAIA,MAASiF,KACXgC,KACAvF,EAAQ,QAAQ1B,CAAI,GACboH,KAELH,IAAW,IACNlD,EAAI/D,CAAI,KAEjB0B,EAAQ,KAAK,yBAAyB,GAC/BT,GAAcjB,CAAI,IAAIyB,GAAaC,GAAS2F,GAAY,YAAY,EAAErH,CAAI,IAAIqH,EAAWrH,CAAI;AAAA,EACtG;AAcA,WAASqH,EAAWrH,GAAM;AACxB,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,iBAAiB,GACvB/W,EAAK,YAAYgX,EAAG3B,CAAI,IAAI0B,EAAQ,MAAMgF,IAAqBY,GAAgBnC,CAAK,EAAEnF,CAAI,MAEnG0B,EAAQ,MAAM,qBAAqB,GACnCA,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACM1M,EAAKgL,CAAI;AAAA,EAClB;AAcA,WAAShL,EAAKgL,GAAM;AAClB,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,qBAAqB,GAC3B2F,EAAWrH,CAAI,KAEpBiB,GAAcjB,CAAI,KACpB0B,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,qBAAqB,GAC3BD,GAAaC,GAAS6F,GAAY,YAAY,EAAEvH,CAAI,KAEzDA,MAAS,MAAMA,MAASiF,IACnBlB,EAAI/D,CAAI,KAEjB0B,EAAQ,QAAQ1B,CAAI,GACbhL;AAAA,EACT;AAcA,WAASuS,EAAWvH,GAAM;AACxB,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,IACnCqH,EAAWrH,CAAI,KAExB0B,EAAQ,MAAM,qBAAqB,GACnCA,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACM8F,EAAKxH,CAAI;AAAA,EAClB;AAcA,WAASwH,EAAKxH,GAAM;AAClB,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,qBAAqB,GAC3B2F,EAAWrH,CAAI,KAEpBA,MAAS,MAAMA,MAASiF,IACnBlB,EAAI/D,CAAI,KAEjB0B,EAAQ,QAAQ1B,CAAI,GACbwH;AAAA,EACT;AAeA,WAASF,EAAetH,GAAM;AAC5B,WAAO0B,EAAQ,QAAQoF,GAAY3B,GAAOsC,CAAa,EAAEzH,CAAI;AAAA,EAC/D;AAcA,WAASyH,EAAczH,GAAM;AAC3B,WAAA0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBM;AAAA,EACT;AAcA,WAASA,EAAahC,GAAM;AAC1B,WAAOgH,IAAgB,KAAK/F,GAAcjB,CAAI,IAAIyB,GAAaC,GAASgG,GAAoB,cAAcV,IAAgB,CAAC,EAAEhH,CAAI,IAAI0H,EAAmB1H,CAAI;AAAA,EAC9J;AAcA,WAAS0H,EAAmB1H,GAAM;AAChC,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,IACnC0B,EAAQ,MAAMgF,IAAqBY,GAAgBnC,CAAK,EAAEnF,CAAI,KAEvE0B,EAAQ,MAAM,eAAe,GACtBiG,EAAa3H,CAAI;AAAA,EAC1B;AAcA,WAAS2H,EAAa3H,GAAM;AAC1B,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,eAAe,GACrBgG,EAAmB1H,CAAI,MAEhC0B,EAAQ,QAAQ1B,CAAI,GACb2H;AAAA,EACT;AAcA,WAASxC,EAAMnF,GAAM;AACnB,WAAA0B,EAAQ,KAAK,YAAY,GAClBC,EAAG3B,CAAI;AAAA,EAChB;AAOA,WAAS+G,EAAmBrF,GAASC,GAAIoC,GAAK;AAC5C,QAAIjC,IAAO;AACX,WAAO8F;AAOP,aAASA,EAAY5H,GAAM;AACzB,aAAA0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClB5J;AAAA,IACT;AAcA,aAASA,EAAMkI,GAAM;AAInB,aAAA0B,EAAQ,MAAM,iBAAiB,GACxBT,GAAcjB,CAAI,IAAIyB,GAAaC,GAASmG,GAAqB,cAAcld,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAEqV,CAAI,IAAI6H,EAAoB7H,CAAI;AAAA,IACtM;AAcA,aAAS6H,EAAoB7H,GAAM;AACjC,aAAIA,MAASiF,KACXvD,EAAQ,MAAM,yBAAyB,GAChCoG,EAAc9H,CAAI,KAEpB+D,EAAI/D,CAAI;AAAA,IACjB;AAcA,aAAS8H,EAAc9H,GAAM;AAC3B,aAAIA,MAASiF,KACXnD,KACAJ,EAAQ,QAAQ1B,CAAI,GACb8H,KAELhG,KAAQmF,KACVvF,EAAQ,KAAK,yBAAyB,GAC/BT,GAAcjB,CAAI,IAAIyB,GAAaC,GAASqG,GAAoB,YAAY,EAAE/H,CAAI,IAAI+H,EAAmB/H,CAAI,KAE/G+D,EAAI/D,CAAI;AAAA,IACjB;AAcA,aAAS+H,EAAmB/H,GAAM;AAChC,aAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,iBAAiB,GACvBC,EAAG3B,CAAI,KAET+D,EAAI/D,CAAI;AAAA,IACjB;AAAA,EACF;AACF;AAOA,SAAS2G,GAA4BjF,GAASC,GAAIoC,GAAK;AACrD,QAAMpZ,IAAO;AACb,SAAOmN;AAOP,WAASA,EAAMkI,GAAM;AACnB,WAAIA,MAAS,OACJ+D,EAAI/D,CAAI,KAEjB0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBzU;AAAA,EACT;AAOA,WAASA,EAAU+S,GAAM;AACvB,WAAOrV,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAAIoZ,EAAI/D,CAAI,IAAI2B,EAAG3B,CAAI;AAAA,EAChE;AACF;AC/bO,MAAMgI,KAAe;AAAA,EAC1B,MAAM;AAAA,EACN,UAAUC;AACZ,GAGMC,KAAe;AAAA,EACnB,SAAS;AAAA,EACT,UAAUC;AACZ;AAOA,SAASF,GAAqBvG,GAASC,GAAIoC,GAAK;AAC9C,QAAMpZ,IAAO;AACb,SAAOmN;AAgBP,WAASA,EAAMkI,GAAM;AAGnB,WAAA0B,EAAQ,MAAM,cAAc,GAGrBD,GAAaC,GAAS0G,GAAa,cAAc,CAAK,EAAEpI,CAAI;AAAA,EACrE;AAYA,WAASoI,EAAYpI,GAAM;AACzB,UAAMmH,IAAOxc,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAOwc,KAAQA,EAAK,CAAC,EAAE,SAAS,gBAAgBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,UAAU,IAAIkB,EAAQrI,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EAC9H;AAYA,WAASqI,EAAQrI,GAAM;AACrB,WAAIA,MAAS,OACJmF,EAAMnF,CAAI,IAEfe,EAAmBf,CAAI,IAClB0B,EAAQ,QAAQwG,IAAcG,GAASlD,CAAK,EAAEnF,CAAI,KAE3D0B,EAAQ,MAAM,eAAe,GACtBwD,EAAOlF,CAAI;AAAA,EACpB;AAYA,WAASkF,EAAOlF,GAAM;AACpB,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,eAAe,GACrB2G,EAAQrI,CAAI,MAErB0B,EAAQ,QAAQ1B,CAAI,GACbkF;AAAA,EACT;AAGA,WAASC,EAAMnF,GAAM;AACnB,WAAA0B,EAAQ,KAAK,cAAc,GAIpBC,EAAG3B,CAAI;AAAA,EAChB;AACF;AAOA,SAASmI,GAAqBzG,GAASC,GAAIoC,GAAK;AAC9C,QAAMpZ,IAAO;AACb,SAAOud;AAaP,WAASA,EAAalI,GAAM;AAG1B,WAAIrV,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAC3BoZ,EAAI/D,CAAI,IAEbe,EAAmBf,CAAI,KACzB0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBwG,KASFzG,GAAaC,GAAS0G,GAAa,cAAc,CAAK,EAAEpI,CAAI;AAAA,EACrE;AAYA,WAASoI,EAAYpI,GAAM;AACzB,UAAMmH,IAAOxc,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAOwc,KAAQA,EAAK,CAAC,EAAE,SAAS,gBAAgBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,UAAU,IAAIxF,EAAG3B,CAAI,IAAIe,EAAmBf,CAAI,IAAIkI,EAAalI,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EACzK;AACF;AClKO,MAAMsI,KAAW;AAAA,EACtB,MAAM;AAAA,EACR,UAAEnG;AAAAA,EACA,SAASoG;AAAA,EACT,UAAUC;AACZ;AAIA,SAASD,GAAgBrE,GAAQ;AAC/B,MAAIuE,IAAgBvE,EAAO,SAAS,GAChCwE,IAAiB,GAEjB/T,GAEAgU;AAGJ,OAAKzE,EAAOwE,CAAc,EAAE,CAAC,EAAE,SAAS,gBAAgBxE,EAAOwE,CAAc,EAAE,CAAC,EAAE,SAAS,aAAaxE,EAAOuE,CAAa,EAAE,CAAC,EAAE,SAAS,gBAAgBvE,EAAOuE,CAAa,EAAE,CAAC,EAAE,SAAS;AAI1L,SAHA9T,IAAQ+T,GAGD,EAAE/T,IAAQ8T;AACf,UAAIvE,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgB;AAE5C,QAAAuP,EAAOwE,CAAc,EAAE,CAAC,EAAE,OAAO,mBACjCxE,EAAOuE,CAAa,EAAE,CAAC,EAAE,OAAO,mBAChCC,KAAkB,GAClBD,KAAiB;AACjB;AAAA,MACF;AAAA;AAOJ,OAFA9T,IAAQ+T,IAAiB,GACzBD,KACO,EAAE9T,KAAS8T;AAChB,IAAIE,MAAU,SACRhU,MAAU8T,KAAiBvE,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,iBACvDgU,IAAQhU,MAEDA,MAAU8T,KAAiBvE,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,kBAC9DuP,EAAOyE,CAAK,EAAE,CAAC,EAAE,OAAO,gBACpBhU,MAAUgU,IAAQ,MACpBzE,EAAOyE,CAAK,EAAE,CAAC,EAAE,MAAMzE,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,KAC5CuP,EAAO,OAAOyE,IAAQ,GAAGhU,IAAQgU,IAAQ,CAAC,GAC1CF,KAAiB9T,IAAQgU,IAAQ,GACjChU,IAAQgU,IAAQ,IAElBA,IAAQ;AAGZ,SAAOzE;AACT;AAOA,SAAS/B,GAASnC,GAAM;AAEtB,SAAOA,MAAS,MAAM,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC,EAAE,CAAC,EAAE,SAAS;AACxE;AAOA,SAASwI,GAAiB9G,GAASC,GAAIoC,GAAK;AAE1C,MAAIkD,IAAW,GAEXnF,GAEAM;AACJ,SAAOtK;AAcP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,kBAAkB,GACzB0F,EAAapH,CAAI;AAAA,EAC1B;AAYA,WAASoH,EAAapH,GAAM;AAC1B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpBiH,KACOG,MAET1F,EAAQ,KAAK,kBAAkB,GACxBkH,EAAQ5I,CAAI;AAAA,EACrB;AAYA,WAAS4I,EAAQ5I,GAAM;AAErB,WAAIA,MAAS,OACJ+D,EAAI/D,CAAI,IAMbA,MAAS,MACX0B,EAAQ,MAAM,OAAO,GACrBA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,OAAO,GACbkH,KAIL5I,MAAS,MACXoC,IAAQV,EAAQ,MAAM,kBAAkB,GACxCI,IAAO,GACAgG,EAAc9H,CAAI,KAEvBe,EAAmBf,CAAI,KACzB0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBkH,MAITlH,EAAQ,MAAM,cAAc,GACrB/Q,EAAKqP,CAAI;AAAA,EAClB;AAYA,WAASrP,EAAKqP,GAAM;AAClB,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMe,EAAmBf,CAAI,KACxE0B,EAAQ,KAAK,cAAc,GACpBkH,EAAQ5I,CAAI,MAErB0B,EAAQ,QAAQ1B,CAAI,GACbrP;AAAA,EACT;AAYA,WAASmX,EAAc9H,GAAM;AAE3B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpB8B,KACOgG,KAILhG,MAASmF,KACXvF,EAAQ,KAAK,kBAAkB,GAC/BA,EAAQ,KAAK,UAAU,GAChBC,EAAG3B,CAAI,MAIhBoC,EAAM,OAAO,gBACNzR,EAAKqP,CAAI;AAAA,EAClB;AACF;ACnMO,MAAM6I,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxB,YAAYC,GAAS;AAEnB,SAAK,OAAOA,IAAU,CAAC,GAAGA,CAAO,IAAI,CAAA,GAErC,KAAK,QAAQ,CAAA;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,IAAInU,GAAO;AACT,QAAIA,IAAQ,KAAKA,KAAS,KAAK,KAAK,SAAS,KAAK,MAAM;AACtD,YAAM,IAAI,WAAW,0BAA0BA,IAAQ,oCAAoC,KAAK,KAAK,SAAS,KAAK,MAAM,UAAU,GAAG;AAExI,WAAIA,IAAQ,KAAK,KAAK,SAAe,KAAK,KAAKA,CAAK,IAC7C,KAAK,MAAM,KAAK,MAAM,SAASA,IAAQ,KAAK,KAAK,SAAS,CAAC;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,SAAS;AACX,WAAO,KAAK,KAAK,SAAS,KAAK,MAAM;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ;AACN,gBAAK,UAAU,CAAC,GACT,KAAK,MAAM,IAAG;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,MAAMmD,GAAO8C,GAAK;AAEhB,UAAMmO,IAAOnO,KAAoC,OAAO;AACxD,WAAImO,IAAO,KAAK,KAAK,SACZ,KAAK,KAAK,MAAMjR,GAAOiR,CAAI,IAEhCjR,IAAQ,KAAK,KAAK,SACb,KAAK,MAAM,MAAM,KAAK,MAAM,SAASiR,IAAO,KAAK,KAAK,QAAQ,KAAK,MAAM,SAASjR,IAAQ,KAAK,KAAK,MAAM,EAAE,QAAO,IAErH,KAAK,KAAK,MAAMA,CAAK,EAAE,OAAO,KAAK,MAAM,MAAM,KAAK,MAAM,SAASiR,IAAO,KAAK,KAAK,MAAM,EAAE,SAAS;AAAA,EAC9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,OAAOjR,GAAOkR,GAAa3J,GAAO;AAEhC,UAAM3B,IAAQsL,KAAe;AAC7B,SAAK,UAAU,KAAK,MAAMlR,CAAK,CAAC;AAChC,UAAMmR,IAAU,KAAK,MAAM,OAAO,KAAK,MAAM,SAASvL,GAAO,OAAO,iBAAiB;AACrF,WAAI2B,KAAO6J,GAAY,KAAK,MAAM7J,CAAK,GAChC4J,EAAQ,QAAO;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM;AACJ,gBAAK,UAAU,OAAO,iBAAiB,GAChC,KAAK,KAAK,IAAG;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,KAAKnG,GAAM;AACT,SAAK,UAAU,OAAO,iBAAiB,GACvC,KAAK,KAAK,KAAKA,CAAI;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,SAASzD,GAAO;AACd,SAAK,UAAU,OAAO,iBAAiB,GACvC6J,GAAY,KAAK,MAAM7J,CAAK;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,QAAQyD,GAAM;AACZ,SAAK,UAAU,CAAC,GAChB,KAAK,MAAM,KAAKA,CAAI;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,YAAYzD,GAAO;AACjB,SAAK,UAAU,CAAC,GAChB6J,GAAY,KAAK,OAAO7J,EAAM,QAAO,CAAE;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,UAAU8J,GAAG;AACX,QAAI,EAAAA,MAAM,KAAK,KAAK,UAAUA,IAAI,KAAK,KAAK,UAAU,KAAK,MAAM,WAAW,KAAKA,IAAI,KAAK,KAAK,KAAK,WAAW;AAC/G,UAAIA,IAAI,KAAK,KAAK,QAAQ;AAExB,cAAMF,IAAU,KAAK,KAAK,OAAOE,GAAG,OAAO,iBAAiB;AAC5D,QAAAD,GAAY,KAAK,OAAOD,EAAQ,QAAO,CAAE;AAAA,MAC3C,OAAO;AAEL,cAAMA,IAAU,KAAK,MAAM,OAAO,KAAK,KAAK,SAAS,KAAK,MAAM,SAASE,GAAG,OAAO,iBAAiB;AACpG,QAAAD,GAAY,KAAK,MAAMD,EAAQ,QAAO,CAAE;AAAA,MAC1C;AAAA,EACF;AACF;AAcA,SAASC,GAAY/J,GAAMY,GAAO;AAEhC,MAAIT,IAAa;AACjB,MAAIS,EAAM,SAAS;AACjB,IAAAZ,EAAK,KAAK,GAAGY,CAAK;AAAA;AAElB,WAAOT,IAAaS,EAAM;AACxB,MAAAZ,EAAK,KAAK,GAAGY,EAAM,MAAMT,GAAYA,IAAa,GAAK,CAAC,GACxDA,KAAc;AAGpB;ACvOO,SAAS8J,GAAYC,GAAa;AAEvC,QAAMC,IAAQ,CAAA;AACd,MAAI3U,IAAQ,IAER1C,GAEAsX,GAEAC,GAEAC,GAEAlK,GAEAmK,GAEAC;AACJ,QAAMzF,IAAS,IAAI2E,GAAaQ,CAAW;AAC3C,SAAO,EAAE1U,IAAQuP,EAAO,UAAQ;AAC9B,WAAOvP,KAAS2U;AACd,MAAA3U,IAAQ2U,EAAM3U,CAAK;AAMrB,QAJA1C,IAAQiS,EAAO,IAAIvP,CAAK,GAIpBA,KAAS1C,EAAM,CAAC,EAAE,SAAS,eAAeiS,EAAO,IAAIvP,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,qBAC9E+U,IAAYzX,EAAM,CAAC,EAAE,WAAW,QAChCuX,IAAa,GACTA,IAAaE,EAAU,UAAUA,EAAUF,CAAU,EAAE,CAAC,EAAE,SAAS,sBACrEA,KAAc,IAEZA,IAAaE,EAAU,UAAUA,EAAUF,CAAU,EAAE,CAAC,EAAE,SAAS;AACrE,aAAO,EAAEA,IAAaE,EAAU,UAC1BA,EAAUF,CAAU,EAAE,CAAC,EAAE,SAAS;AAGtC,QAAIE,EAAUF,CAAU,EAAE,CAAC,EAAE,SAAS,gBACpCE,EAAUF,CAAU,EAAE,CAAC,EAAE,8BAA8B,IACvDA;AAOR,QAAIvX,EAAM,CAAC,MAAM;AACf,MAAIA,EAAM,CAAC,EAAE,gBACX,OAAO,OAAOqX,GAAOM,GAAW1F,GAAQvP,CAAK,CAAC,GAC9CA,IAAQ2U,EAAM3U,CAAK,GACnBgV,IAAO;AAAA,aAIF1X,EAAM,CAAC,EAAE,YAAY;AAG5B,WAFAuX,IAAa7U,GACb4U,IAAY,QACLC;AAEL,YADAC,IAAavF,EAAO,IAAIsF,CAAU,GAC9BC,EAAW,CAAC,EAAE,SAAS,gBAAgBA,EAAW,CAAC,EAAE,SAAS;AAChE,UAAIA,EAAW,CAAC,MAAM,YAChBF,MACFrF,EAAO,IAAIqF,CAAS,EAAE,CAAC,EAAE,OAAO,oBAElCE,EAAW,CAAC,EAAE,OAAO,cACrBF,IAAYC;AAAA,iBAEL,EAAAC,EAAW,CAAC,EAAE,SAAS,gBAAgBA,EAAW,CAAC,EAAE,SAAS,kBAGvE;AAGJ,MAAIF,MAEFtX,EAAM,CAAC,EAAE,MAAM;AAAA,QACb,GAAGiS,EAAO,IAAIqF,CAAS,EAAE,CAAC,EAAE;AAAA,MACtC,GAGQhK,IAAa2E,EAAO,MAAMqF,GAAW5U,CAAK,GAC1C4K,EAAW,QAAQtN,CAAK,GACxBiS,EAAO,OAAOqF,GAAW5U,IAAQ4U,IAAY,GAAGhK,CAAU;AAAA,IAE9D;AAAA,EACF;AAGA,SAAAL,GAAOmK,GAAa,GAAG,OAAO,mBAAmBnF,EAAO,MAAM,CAAC,CAAC,GACzD,CAACyF;AACV;AAYA,SAASC,GAAW1F,GAAQ2F,GAAY;AACtC,QAAMzH,IAAQ8B,EAAO,IAAI2F,CAAU,EAAE,CAAC,GAChC1F,IAAUD,EAAO,IAAI2F,CAAU,EAAE,CAAC;AACxC,MAAIC,IAAgBD,IAAa;AAEjC,QAAME,IAAiB,CAAA;AACvB,MAAIC,IAAY5H,EAAM;AACtB,EAAK4H,MACHA,IAAY7F,EAAQ,OAAO/B,EAAM,WAAW,EAAEA,EAAM,KAAK,GACrDA,EAAM,6BACR4H,EAAU,2BAA2B;AAGzC,QAAMC,IAAcD,EAAU,QAExBV,IAAQ,CAAA,GAERY,IAAO,CAAA;AAEb,MAAI9d,GAEA+V,GACAxN,IAAQ,IAERwV,IAAU/H,GACVgI,IAAS,GACTtS,IAAQ;AACZ,QAAMuS,IAAS,CAACvS,CAAK;AAIrB,SAAOqS,KAAS;AAEd,WAAOjG,EAAO,IAAI,EAAE4F,CAAa,EAAE,CAAC,MAAMK;AAAS;AAGnD,IAAAJ,EAAe,KAAKD,CAAa,GAC5BK,EAAQ,eACX/d,IAAS+X,EAAQ,YAAYgG,CAAO,GAC/BA,EAAQ,QACX/d,EAAO,KAAK,IAAI,GAEd+V,KACF6H,EAAU,WAAWG,EAAQ,KAAK,GAEhCA,EAAQ,gCACVH,EAAU,qCAAqC,KAEjDA,EAAU,MAAM5d,CAAM,GAClB+d,EAAQ,gCACVH,EAAU,qCAAqC,UAKnD7H,IAAWgI,GACXA,IAAUA,EAAQ;AAAA,EACpB;AAKA,OADAA,IAAU/H,GACH,EAAEzN,IAAQsV,EAAY;AAC3B;AAAA,IAEAA,EAAYtV,CAAK,EAAE,CAAC,MAAM,UAAUsV,EAAYtV,IAAQ,CAAC,EAAE,CAAC,MAAM,WAAWsV,EAAYtV,CAAK,EAAE,CAAC,EAAE,SAASsV,EAAYtV,IAAQ,CAAC,EAAE,CAAC,EAAE,QAAQsV,EAAYtV,CAAK,EAAE,CAAC,EAAE,MAAM,SAASsV,EAAYtV,CAAK,EAAE,CAAC,EAAE,IAAI,SAC3MmD,IAAQnD,IAAQ,GAChB0V,EAAO,KAAKvS,CAAK,GAEjBqS,EAAQ,aAAa,QACrBA,EAAQ,WAAW,QACnBA,IAAUA,EAAQ;AAqBtB,OAhBAH,EAAU,SAAS,CAAA,GAKfG,KAEFA,EAAQ,aAAa,QACrBA,EAAQ,WAAW,UAEnBE,EAAO,IAAG,GAKZ1V,IAAQ0V,EAAO,QACR1V,OAAS;AACd,UAAM2V,IAAQL,EAAY,MAAMI,EAAO1V,CAAK,GAAG0V,EAAO1V,IAAQ,CAAC,CAAC,GAC1DmD,IAAQiS,EAAe,IAAG;AAChC,IAAAT,EAAM,KAAK,CAACxR,GAAOA,IAAQwS,EAAM,SAAS,CAAC,CAAC,GAC5CpG,EAAO,OAAOpM,GAAO,GAAGwS,CAAK;AAAA,EAC/B;AAGA,OAFAhB,EAAM,QAAO,GACb3U,IAAQ,IACD,EAAEA,IAAQ2U,EAAM;AACrB,IAAAY,EAAKE,IAASd,EAAM3U,CAAK,EAAE,CAAC,CAAC,IAAIyV,IAASd,EAAM3U,CAAK,EAAE,CAAC,GACxDyV,KAAUd,EAAM3U,CAAK,EAAE,CAAC,IAAI2U,EAAM3U,CAAK,EAAE,CAAC,IAAI;AAEhD,SAAOuV;AACT;ACjNO,MAAM3X,KAAU;AAAA,EACrB,SAASgY;AAAA,EACT,UAAUC;AACZ,GAGMC,KAAwB;AAAA,EAC5B,SAAS;AAAA,EACT,UAAUC;AACZ;AAQA,SAASH,GAAerG,GAAQ;AAC9B,SAAAkF,GAAYlF,CAAM,GACXA;AACT;AAOA,SAASsG,GAAgB9I,GAASC,GAAI;AAEpC,MAAIQ;AACJ,SAAO7C;AAYP,WAASA,EAAWU,GAAM;AACxB,WAAA0B,EAAQ,MAAM,SAAS,GACvBS,IAAWT,EAAQ,MAAM,gBAAgB;AAAA,MACvC,aAAa;AAAA,IACnB,CAAK,GACMiJ,EAAY3K,CAAI;AAAA,EACzB;AAYA,WAAS2K,EAAY3K,GAAM;AACzB,WAAIA,MAAS,OACJ4K,EAAW5K,CAAI,IAKpBe,EAAmBf,CAAI,IAClB0B,EAAQ,MAAM+I,IAAuBI,GAAiBD,CAAU,EAAE5K,CAAI,KAI/E0B,EAAQ,QAAQ1B,CAAI,GACb2K;AAAA,EACT;AAOA,WAASC,EAAW5K,GAAM;AACxB,WAAA0B,EAAQ,KAAK,cAAc,GAC3BA,EAAQ,KAAK,SAAS,GACfC,EAAG3B,CAAI;AAAA,EAChB;AAOA,WAAS6K,EAAgB7K,GAAM;AAC7B,WAAA0B,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,cAAc,GAC3BS,EAAS,OAAOT,EAAQ,MAAM,gBAAgB;AAAA,MAC5C,aAAa;AAAA,MACb,UAAAS;AAAA,IACN,CAAK,GACDA,IAAWA,EAAS,MACbwI;AAAA,EACT;AACF;AAOA,SAASD,GAAqBhJ,GAASC,GAAIoC,GAAK;AAC9C,QAAMpZ,IAAO;AACb,SAAOmgB;AAOP,WAASA,EAAe9K,GAAM;AAC5B,WAAA0B,EAAQ,KAAK,cAAc,GAC3BA,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBD,GAAaC,GAASqJ,GAAU,YAAY;AAAA,EACrD;AAOA,WAASA,EAAS/K,GAAM;AACtB,QAAIA,MAAS,QAAQe,EAAmBf,CAAI;AAC1C,aAAO+D,EAAI/D,CAAI;AAKjB,UAAMmH,IAAOxc,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAI,CAACA,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,KAAKwc,KAAQA,EAAK,CAAC,EAAE,SAAS,gBAAgBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,UAAU,IACrJxF,EAAG3B,CAAI,IAET0B,EAAQ,UAAU/W,EAAK,OAAO,WAAW,MAAMoZ,GAAKpC,CAAE,EAAE3B,CAAI;AAAA,EACrE;AACF;ACxHO,SAASgL,GAAmBtJ,GAASC,GAAIoC,GAAKhc,GAAMkjB,GAAaC,GAAmBC,GAASC,GAAYxJ,GAAK;AACnH,QAAMC,IAAQD,KAAO,OAAO;AAC5B,MAAIyJ,IAAU;AACd,SAAOvT;AAcP,WAASA,EAAMkI,GAAM;AACnB,WAAIA,MAAS,MACX0B,EAAQ,MAAM3Z,CAAI,GAClB2Z,EAAQ,MAAMuJ,CAAW,GACzBvJ,EAAQ,MAAMwJ,CAAiB,GAC/BxJ,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAKwJ,CAAiB,GACvBI,KAILtL,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMW,GAAaX,CAAI,IAC3D+D,EAAI/D,CAAI,KAEjB0B,EAAQ,MAAM3Z,CAAI,GAClB2Z,EAAQ,MAAMyJ,CAAO,GACrBzJ,EAAQ,MAAM0J,CAAU,GACxB1J,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACM6J,EAAIvL,CAAI;AAAA,EACjB;AAYA,WAASsL,EAAetL,GAAM;AAC5B,WAAIA,MAAS,MACX0B,EAAQ,MAAMwJ,CAAiB,GAC/BxJ,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAKwJ,CAAiB,GAC9BxJ,EAAQ,KAAKuJ,CAAW,GACxBvJ,EAAQ,KAAK3Z,CAAI,GACV4Z,MAETD,EAAQ,MAAM0J,CAAU,GACxB1J,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACM8J,EAASxL,CAAI;AAAA,EACtB;AAYA,WAASwL,EAASxL,GAAM;AACtB,WAAIA,MAAS,MACX0B,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK0J,CAAU,GAChBE,EAAetL,CAAI,KAExBA,MAAS,QAAQA,MAAS,MAAMe,EAAmBf,CAAI,IAClD+D,EAAI/D,CAAI,KAEjB0B,EAAQ,QAAQ1B,CAAI,GACbA,MAAS,KAAKyL,IAAiBD;AAAA,EACxC;AAYA,WAASC,EAAezL,GAAM;AAC5B,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzC0B,EAAQ,QAAQ1B,CAAI,GACbwL,KAEFA,EAASxL,CAAI;AAAA,EACtB;AAYA,WAASuL,EAAIvL,GAAM;AACjB,WAAI,CAACqL,MAAYrL,MAAS,QAAQA,MAAS,MAAMgB,GAA0BhB,CAAI,MAC7E0B,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK0J,CAAU,GACvB1J,EAAQ,KAAKyJ,CAAO,GACpBzJ,EAAQ,KAAK3Z,CAAI,GACV4Z,EAAG3B,CAAI,KAEZqL,IAAUxJ,KAAS7B,MAAS,MAC9B0B,EAAQ,QAAQ1B,CAAI,GACpBqL,KACOE,KAELvL,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpBqL,KACOE,KAMLvL,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMW,GAAaX,CAAI,IAC3D+D,EAAI/D,CAAI,KAEjB0B,EAAQ,QAAQ1B,CAAI,GACbA,MAAS,KAAK0L,IAAYH;AAAA,EACnC;AAYA,WAASG,EAAU1L,GAAM;AACvB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzC0B,EAAQ,QAAQ1B,CAAI,GACbuL,KAEFA,EAAIvL,CAAI;AAAA,EACjB;AACF;ACpKO,SAAS2L,GAAajK,GAASC,GAAIoC,GAAKhc,GAAM6jB,GAAYR,GAAY;AAC3E,QAAMzgB,IAAO;AACb,MAAImX,IAAO,GAEP+B;AACJ,SAAO/L;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM3Z,CAAI,GAClB2Z,EAAQ,MAAMkK,CAAU,GACxBlK,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAKkK,CAAU,GACvBlK,EAAQ,MAAM0J,CAAU,GACjB/C;AAAA,EACT;AAYA,WAASA,EAAQrI,GAAM;AACrB,WAAI8B,IAAO,OAAO9B,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM,CAAC6D;AAAA;AAAA;AAAA;AAAA;AAAA,IAMlE7D,MAAS,MAAM,CAAC8B,KAAQ,4BAA4BnX,EAAK,OAAO,aACvDoZ,EAAI/D,CAAI,IAEbA,MAAS,MACX0B,EAAQ,KAAK0J,CAAU,GACvB1J,EAAQ,MAAMkK,CAAU,GACxBlK,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAKkK,CAAU,GACvBlK,EAAQ,KAAK3Z,CAAI,GACV4Z,KAILZ,EAAmBf,CAAI,KACzB0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClB2G,MAET3G,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACMmK,EAAY7L,CAAI;AAAA,EACzB;AAYA,WAAS6L,EAAY7L,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMe,EAAmBf,CAAI,KAAK8B,MAAS,OACtFJ,EAAQ,KAAK,aAAa,GACnB2G,EAAQrI,CAAI,MAErB0B,EAAQ,QAAQ1B,CAAI,GACf6D,MAAMA,IAAO,CAAC5C,GAAcjB,CAAI,IAC9BA,MAAS,KAAK8L,IAAcD;AAAA,EACrC;AAYA,WAASC,EAAY9L,GAAM;AACzB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzC0B,EAAQ,QAAQ1B,CAAI,GACpB8B,KACO+J,KAEFA,EAAY7L,CAAI;AAAA,EACzB;AACF;ACzGO,SAAS+L,GAAarK,GAASC,GAAIoC,GAAKhc,GAAM6jB,GAAYR,GAAY;AAE3E,MAAInG;AACJ,SAAOnN;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzC0B,EAAQ,MAAM3Z,CAAI,GAClB2Z,EAAQ,MAAMkK,CAAU,GACxBlK,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAKkK,CAAU,GACvB3G,IAASjF,MAAS,KAAK,KAAKA,GACrBgM,KAEFjI,EAAI/D,CAAI;AAAA,EACjB;AAcA,WAASgM,EAAMhM,GAAM;AACnB,WAAIA,MAASiF,KACXvD,EAAQ,MAAMkK,CAAU,GACxBlK,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAKkK,CAAU,GACvBlK,EAAQ,KAAK3Z,CAAI,GACV4Z,MAETD,EAAQ,MAAM0J,CAAU,GACjB/C,EAAQrI,CAAI;AAAA,EACrB;AAYA,WAASqI,EAAQrI,GAAM;AACrB,WAAIA,MAASiF,KACXvD,EAAQ,KAAK0J,CAAU,GAChBY,EAAM/G,CAAM,KAEjBjF,MAAS,OACJ+D,EAAI/D,CAAI,IAIbe,EAAmBf,CAAI,KAEzB0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBD,GAAaC,GAAS2G,GAAS,YAAY,MAEpD3G,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACMwD,EAAOlF,CAAI;AAAA,EACpB;AAOA,WAASkF,EAAOlF,GAAM;AACpB,WAAIA,MAASiF,KAAUjF,MAAS,QAAQe,EAAmBf,CAAI,KAC7D0B,EAAQ,KAAK,aAAa,GACnB2G,EAAQrI,CAAI,MAErB0B,EAAQ,QAAQ1B,CAAI,GACbA,MAAS,KAAKiM,IAAS/G;AAAA,EAChC;AAYA,WAAS+G,EAAOjM,GAAM;AACpB,WAAIA,MAASiF,KAAUjF,MAAS,MAC9B0B,EAAQ,QAAQ1B,CAAI,GACbkF,KAEFA,EAAOlF,CAAI;AAAA,EACpB;AACF;ACrIO,SAASkM,GAAkBxK,GAASC,GAAI;AAE7C,MAAIkC;AACJ,SAAO/L;AAGP,WAASA,EAAMkI,GAAM;AACnB,WAAIe,EAAmBf,CAAI,KACzB0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GACzBmC,IAAO,IACA/L,KAELmJ,GAAcjB,CAAI,IACbyB,GAAaC,GAAS5J,GAAO+L,IAAO,eAAe,YAAY,EAAE7D,CAAI,IAEvE2B,EAAG3B,CAAI;AAAA,EAChB;AACF;AC1BO,MAAMtM,KAAa;AAAA,EACxB,MAAM;AAAA,EACN,UAAUyY;AACZ,GAGMC,KAAc;AAAA,EAClB,SAAS;AAAA,EACT,UAAUC;AACZ;AAOA,SAASF,GAAmBzK,GAASC,GAAIoC,GAAK;AAC5C,QAAMpZ,IAAO;AAEb,MAAI2hB;AACJ,SAAOxU;AAYP,WAASA,EAAMkI,GAAM;AAInB,WAAA0B,EAAQ,MAAM,YAAY,GACnBvB,EAAOH,CAAI;AAAA,EACpB;AAYA,WAASG,EAAOH,GAAM;AAGpB,WAAO2L,GAAa;AAAA,MAAKhhB;AAAA,MAAM+W;AAAA,MAAS6K;AAAA;AAAA,MAExCxI;AAAA,MAAK;AAAA,MAAmB;AAAA,MAAyB;AAAA,IAAuB,EAAE/D,CAAI;AAAA,EAChF;AAYA,WAASuM,EAAWvM,GAAM;AAExB,WADAsM,IAAahM,GAAoB3V,EAAK,eAAeA,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,GACrGqV,MAAS,MACX0B,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kBAAkB,GACxB8K,KAEFzI,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASwM,EAAYxM,GAAM;AAEzB,WAAOgB,GAA0BhB,CAAI,IAAIkM,GAAkBxK,GAAS+K,CAAiB,EAAEzM,CAAI,IAAIyM,EAAkBzM,CAAI;AAAA,EACvH;AAYA,WAASyM,EAAkBzM,GAAM;AAC/B,WAAOgL;AAAA,MAAmBtJ;AAAA,MAASgL;AAAA;AAAA,MAEnC3I;AAAA,MAAK;AAAA,MAAyB;AAAA,MAAgC;AAAA,MAAsC;AAAA,MAA4B;AAAA,IAA6B,EAAE/D,CAAI;AAAA,EACrK;AAYA,WAAS0M,EAAiB1M,GAAM;AAC9B,WAAO0B,EAAQ,QAAQ0K,IAAajH,GAAOA,CAAK,EAAEnF,CAAI;AAAA,EACxD;AAcA,WAASmF,EAAMnF,GAAM;AACnB,WAAOiB,GAAcjB,CAAI,IAAIyB,GAAaC,GAASiL,GAAiB,YAAY,EAAE3M,CAAI,IAAI2M,EAAgB3M,CAAI;AAAA,EAChH;AAcA,WAAS2M,EAAgB3M,GAAM;AAC7B,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,YAAY,GAKzB/W,EAAK,OAAO,QAAQ,KAAK2hB,CAAU,GAK5B3K,EAAG3B,CAAI,KAET+D,EAAI/D,CAAI;AAAA,EACjB;AACF;AAOA,SAASqM,GAAoB3K,GAASC,GAAIoC,GAAK;AAC7C,SAAOqI;AAcP,WAASA,EAAYpM,GAAM;AACzB,WAAOgB,GAA0BhB,CAAI,IAAIkM,GAAkBxK,GAASkL,CAAY,EAAE5M,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EACpG;AAaA,WAAS4M,EAAa5M,GAAM;AAC1B,WAAO+L,GAAarK,GAASmL,GAAY9I,GAAK,mBAAmB,yBAAyB,uBAAuB,EAAE/D,CAAI;AAAA,EACzH;AAYA,WAAS6M,EAAW7M,GAAM;AACxB,WAAOiB,GAAcjB,CAAI,IAAIyB,GAAaC,GAASoL,GAA8B,YAAY,EAAE9M,CAAI,IAAI8M,EAA6B9M,CAAI;AAAA,EAC1I;AAYA,WAAS8M,EAA6B9M,GAAM;AAC1C,WAAOA,MAAS,QAAQe,EAAmBf,CAAI,IAAI2B,EAAG3B,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EACxE;AACF;AClPO,MAAM+M,KAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAwBtL,GAASC,GAAIoC,GAAK;AACjD,SAAOjM;AAaP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,QAAQ1B,CAAI,GACbmF;AAAA,EACT;AAaA,WAASA,EAAMnF,GAAM;AACnB,WAAIe,EAAmBf,CAAI,KACzB0B,EAAQ,KAAK,iBAAiB,GACvBC,EAAG3B,CAAI,KAET+D,EAAI/D,CAAI;AAAA,EACjB;AACF;AC5CO,MAAMiN,KAAa;AAAA,EACxB,MAAM;AAAA,EACN,SAASC;AAAA,EACT,UAAUC;AACZ;AAGA,SAASD,GAAkBhJ,GAAQC,GAAS;AAC1C,MAAIyG,IAAa1G,EAAO,SAAS,GAC7BlC,IAAe,GAEfzP,GAEA+J;AAGJ,SAAI4H,EAAOlC,CAAY,EAAE,CAAC,EAAE,SAAS,iBACnCA,KAAgB,IAId4I,IAAa,IAAI5I,KAAgBkC,EAAO0G,CAAU,EAAE,CAAC,EAAE,SAAS,iBAClEA,KAAc,IAEZ1G,EAAO0G,CAAU,EAAE,CAAC,EAAE,SAAS,yBAAyB5I,MAAiB4I,IAAa,KAAKA,IAAa,IAAI5I,KAAgBkC,EAAO0G,IAAa,CAAC,EAAE,CAAC,EAAE,SAAS,kBACjKA,KAAc5I,IAAe,MAAM4I,IAAa,IAAI,IAElDA,IAAa5I,MACfzP,IAAU;AAAA,IACR,MAAM;AAAA,IACN,OAAO2R,EAAOlC,CAAY,EAAE,CAAC,EAAE;AAAA,IAC/B,KAAKkC,EAAO0G,CAAU,EAAE,CAAC,EAAE;AAAA,EACjC,GACItO,IAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAO4H,EAAOlC,CAAY,EAAE,CAAC,EAAE;AAAA,IAC/B,KAAKkC,EAAO0G,CAAU,EAAE,CAAC,EAAE;AAAA,IAC3B,aAAa;AAAA,EACnB,GACI1L,GAAOgF,GAAQlC,GAAc4I,IAAa5I,IAAe,GAAG,CAAC,CAAC,SAASzP,GAAS4R,CAAO,GAAG,CAAC,SAAS7H,GAAM6H,CAAO,GAAG,CAAC,QAAQ7H,GAAM6H,CAAO,GAAG,CAAC,QAAQ5R,GAAS4R,CAAO,CAAC,CAAC,IAEnKD;AACT;AAOA,SAASiJ,GAAmBzL,GAASC,GAAIoC,GAAK;AAC5C,MAAIjC,IAAO;AACX,SAAOhK;AAYP,WAASA,EAAMkI,GAAM;AAEnB,WAAA0B,EAAQ,MAAM,YAAY,GACnBvB,EAAOH,CAAI;AAAA,EACpB;AAYA,WAASG,EAAOH,GAAM;AACpB,WAAA0B,EAAQ,MAAM,oBAAoB,GAC3B0F,EAAapH,CAAI;AAAA,EAC1B;AAYA,WAASoH,EAAapH,GAAM;AAC1B,WAAIA,MAAS,MAAM8B,MAAS,KAC1BJ,EAAQ,QAAQ1B,CAAI,GACboH,KAILpH,MAAS,QAAQgB,GAA0BhB,CAAI,KACjD0B,EAAQ,KAAK,oBAAoB,GAC1B2G,EAAQrI,CAAI,KAEd+D,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASqI,EAAQrI,GAAM;AACrB,WAAIA,MAAS,MACX0B,EAAQ,MAAM,oBAAoB,GAC3B0L,EAAgBpN,CAAI,KAEzBA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,YAAY,GAIlBC,EAAG3B,CAAI,KAEZiB,GAAcjB,CAAI,IACbyB,GAAaC,GAAS2G,GAAS,YAAY,EAAErI,CAAI,KAK1D0B,EAAQ,MAAM,gBAAgB,GACvB/Q,EAAKqP,CAAI;AAAA,EAClB;AAcA,WAASoN,EAAgBpN,GAAM;AAC7B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACboN,MAET1L,EAAQ,KAAK,oBAAoB,GAC1B2G,EAAQrI,CAAI;AAAA,EACrB;AAYA,WAASrP,EAAKqP,GAAM;AAClB,WAAIA,MAAS,QAAQA,MAAS,MAAMgB,GAA0BhB,CAAI,KAChE0B,EAAQ,KAAK,gBAAgB,GACtB2G,EAAQrI,CAAI,MAErB0B,EAAQ,QAAQ1B,CAAI,GACbrP;AAAA,EACT;AACF;ACnLO,MAAM0c,KAAicaC,KAAe,CAAC,OAAO,UAAU,SAAS,UAAU,GC5EpDC,KAAW;AAAA,EACtB,UAAU;AAAA,EACV,MAAM;AAAA,EACN,WAAWC;AAAA,EACX,UAAUC;AACZ,GAGMC,KAAkB;AAAA,EACtB,SAAS;AAAA,EACT,UAAUC;AACZ,GACMC,KAA2B;AAAA,EAC/B,SAAS;AAAA,EACT,UAAUC;AACZ;AAGA,SAASL,GAAkBtJ,GAAQ;AACjC,MAAIvP,IAAQuP,EAAO;AACnB,SAAOvP,OACD,EAAAuP,EAAOvP,CAAK,EAAE,CAAC,MAAM,WAAWuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS;AAA9D;AAIF,SAAIA,IAAQ,KAAKuP,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,iBAE7CuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,QAAQuP,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,OAE9CuP,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,QAAQuP,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,OAElDuP,EAAO,OAAOvP,IAAQ,GAAG,CAAC,IAErBuP;AACT;AAOA,SAASuJ,GAAiB/L,GAASC,GAAIoC,GAAK;AAC1C,QAAMpZ,IAAO;AAEb,MAAIsa,GAEA6I,GAEAphB,GAEAiI,GAEAoZ;AACJ,SAAOjW;AAYP,WAASA,EAAMkI,GAAM;AAEnB,WAAOG,EAAOH,CAAI;AAAA,EACpB;AAYA,WAASG,EAAOH,GAAM;AACpB,WAAA0B,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,cAAc,GAC5BA,EAAQ,QAAQ1B,CAAI,GACbwE;AAAA,EACT;AAgBA,WAASA,EAAKxE,GAAM;AAClB,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbgO,KAELhO,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpB8N,IAAa,IACNG,KAELjO,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpBiF,IAAS,GAMFta,EAAK,YAAYgX,IAAKuM,KAI3B3N,GAAWP,CAAI,KAEjB0B,EAAQ,QAAQ1B,CAAI,GACpBtT,IAAS,OAAO,aAAasT,CAAI,GAC1BmO,KAEFpK,EAAI/D,CAAI;AAAA,EACjB;AAgBA,WAASgO,EAAgBhO,GAAM;AAC7B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpBiF,IAAS,GACFmJ,KAELpO,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpBiF,IAAS,GACTtQ,IAAQ,GACD0Z,KAIL9N,GAAWP,CAAI,KACjB0B,EAAQ,QAAQ1B,CAAI,GACpBiF,IAAS,GAGFta,EAAK,YAAYgX,IAAKuM,KAExBnK,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASoO,EAAkBpO,GAAM;AAC/B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GAGbrV,EAAK,YAAYgX,IAAKuM,KAExBnK,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASqO,EAAgBrO,GAAM;AAC7B,UAAM5W,KAAQ;AACd,WAAI4W,MAAS5W,GAAM,WAAWuL,GAAO,KACnC+M,EAAQ,QAAQ1B,CAAI,GAChBrL,MAAUvL,GAAM,SAGXuB,EAAK,YAAYgX,IAAK2M,IAExBD,KAEFtK,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASiO,EAAcjO,GAAM;AAC3B,WAAIO,GAAWP,CAAI,KAEjB0B,EAAQ,QAAQ1B,CAAI,GACpBtT,IAAS,OAAO,aAAasT,CAAI,GAC1BmO,KAEFpK,EAAI/D,CAAI;AAAA,EACjB;AAcA,WAASmO,EAAQnO,GAAM;AACrB,QAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMgB,GAA0BhB,CAAI,GAAG;AAClF,YAAMuO,KAAQvO,MAAS,IACjBtW,KAAOgD,EAAO,YAAW;AAC/B,aAAI,CAAC6hB,MAAS,CAACT,KAAcR,GAAa,SAAS5jB,EAAI,KACrDub,IAAS,GAGFta,EAAK,YAAYgX,EAAG3B,CAAI,IAAIsO,EAAatO,CAAI,KAElDqN,GAAe,SAAS3gB,EAAO,YAAW,CAAE,KAC9CuY,IAAS,GACLsJ,MACF7M,EAAQ,QAAQ1B,CAAI,GACbwO,KAKF7jB,EAAK,YAAYgX,EAAG3B,CAAI,IAAIsO,EAAatO,CAAI,MAEtDiF,IAAS,GAEFta,EAAK,aAAa,CAACA,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAAIoZ,EAAI/D,CAAI,IAAI8N,IAAaW,EAAwBzO,CAAI,IAAI0O,EAA4B1O,CAAI;AAAA,IACzJ;AAGA,WAAIA,MAAS,MAAMS,GAAkBT,CAAI,KACvC0B,EAAQ,QAAQ1B,CAAI,GACpBtT,KAAU,OAAO,aAAasT,CAAI,GAC3BmO,KAEFpK,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASwO,EAAiBxO,GAAM;AAC9B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GAGbrV,EAAK,YAAYgX,IAAK2M,KAExBvK,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASyO,EAAwBzO,GAAM;AACrC,WAAIiB,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACbyO,KAEFE,EAAY3O,CAAI;AAAA,EACzB;AAyBA,WAAS0O,EAA4B1O,GAAM;AACzC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACb2O,KAIL3O,MAAS,MAAMA,MAAS,MAAMO,GAAWP,CAAI,KAC/C0B,EAAQ,QAAQ1B,CAAI,GACb4O,KAEL3N,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACb0O,KAEFC,EAAY3O,CAAI;AAAA,EACzB;AAgBA,WAAS4O,EAAsB5O,GAAM;AAEnC,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMS,GAAkBT,CAAI,KACpF0B,EAAQ,QAAQ1B,CAAI,GACb4O,KAEFC,EAA2B7O,CAAI;AAAA,EACxC;AAeA,WAAS6O,EAA2B7O,GAAM;AACxC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACb8O,KAEL7N,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACb6O,KAEFH,EAA4B1O,CAAI;AAAA,EACzC;AAeA,WAAS8O,EAA6B9O,GAAM;AAC1C,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,KAClE+D,EAAI/D,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAC1B0B,EAAQ,QAAQ1B,CAAI,GACpB+N,IAAU/N,GACH+O,KAEL9N,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACb8O,KAEFE,EAA+BhP,CAAI;AAAA,EAC5C;AAcA,WAAS+O,EAA6B/O,GAAM;AAC1C,WAAIA,MAAS+N,KACXrM,EAAQ,QAAQ1B,CAAI,GACpB+N,IAAU,MACHkB,KAELjP,MAAS,QAAQe,EAAmBf,CAAI,IACnC+D,EAAI/D,CAAI,KAEjB0B,EAAQ,QAAQ1B,CAAI,GACb+O;AAAA,EACT;AAYA,WAASC,EAA+BhP,GAAM;AAC5C,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMgB,GAA0BhB,CAAI,IACnJ6O,EAA2B7O,CAAI,KAExC0B,EAAQ,QAAQ1B,CAAI,GACbgP;AAAA,EACT;AAaA,WAASC,EAAkCjP,GAAM;AAC/C,WAAIA,MAAS,MAAMA,MAAS,MAAMiB,GAAcjB,CAAI,IAC3C0O,EAA4B1O,CAAI,IAElC+D,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAAS2O,EAAY3O,GAAM;AACzB,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbkP,KAEFnL,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASkP,EAAclP,GAAM;AAC3B,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,IAGnCsO,EAAatO,CAAI,IAEtBiB,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACbkP,KAEFnL,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASsO,EAAatO,GAAM;AAC1B,WAAIA,MAAS,MAAMiF,MAAW,KAC5BvD,EAAQ,QAAQ1B,CAAI,GACbmP,KAELnP,MAAS,MAAMiF,MAAW,KAC5BvD,EAAQ,QAAQ1B,CAAI,GACboP,MAELpP,MAAS,MAAMiF,MAAW,KAC5BvD,EAAQ,QAAQ1B,CAAI,GACbqP,KAELrP,MAAS,MAAMiF,MAAW,KAC5BvD,EAAQ,QAAQ1B,CAAI,GACbkO,KAELlO,MAAS,MAAMiF,MAAW,KAC5BvD,EAAQ,QAAQ1B,CAAI,GACbsP,MAELvO,EAAmBf,CAAI,MAAMiF,MAAW,KAAKA,MAAW,MAC1DvD,EAAQ,KAAK,cAAc,GACpBA,EAAQ,MAAMgM,IAAiB6B,GAAmBC,CAAiB,EAAExP,CAAI,KAE9EA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,cAAc,GACpB8N,EAAkBxP,CAAI,MAE/B0B,EAAQ,QAAQ1B,CAAI,GACbsO;AAAA,EACT;AAaA,WAASkB,EAAkBxP,GAAM;AAC/B,WAAO0B,EAAQ,MAAMkM,IAA0B6B,GAA0BF,CAAiB,EAAEvP,CAAI;AAAA,EAClG;AAaA,WAASyP,EAAyBzP,GAAM;AACtC,WAAA0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBgO;AAAA,EACT;AAaA,WAASA,EAAmB1P,GAAM;AAChC,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,IACnCwP,EAAkBxP,CAAI,KAE/B0B,EAAQ,MAAM,cAAc,GACrB4M,EAAatO,CAAI;AAAA,EAC1B;AAYA,WAASmP,EAA0BnP,GAAM;AACvC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbkO,KAEFI,EAAatO,CAAI;AAAA,EAC1B;AAYA,WAASoP,GAAuBpP,GAAM;AACpC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpBtT,IAAS,IACFijB,KAEFrB,EAAatO,CAAI;AAAA,EAC1B;AAYA,WAAS2P,EAAsB3P,GAAM;AACnC,QAAIA,MAAS,IAAI;AACf,YAAMtW,KAAOgD,EAAO,YAAW;AAC/B,aAAI4gB,GAAa,SAAS5jB,EAAI,KAC5BgY,EAAQ,QAAQ1B,CAAI,GACbqP,KAEFf,EAAatO,CAAI;AAAA,IAC1B;AACA,WAAIO,GAAWP,CAAI,KAAKtT,EAAO,SAAS,KAEtCgV,EAAQ,QAAQ1B,CAAI,GACpBtT,KAAU,OAAO,aAAasT,CAAI,GAC3B2P,KAEFrB,EAAatO,CAAI;AAAA,EAC1B;AAYA,WAASsP,GAAwBtP,GAAM;AACrC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbkO,KAEFI,EAAatO,CAAI;AAAA,EAC1B;AAoBA,WAASkO,EAA8BlO,GAAM;AAC3C,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbqP,KAILrP,MAAS,MAAMiF,MAAW,KAC5BvD,EAAQ,QAAQ1B,CAAI,GACbkO,KAEFI,EAAatO,CAAI;AAAA,EAC1B;AAYA,WAASqP,EAAkBrP,GAAM;AAC/B,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,cAAc,GACpB6N,EAAkBvP,CAAI,MAE/B0B,EAAQ,QAAQ1B,CAAI,GACbqP;AAAA,EACT;AAYA,WAASE,EAAkBvP,GAAM;AAC/B,WAAA0B,EAAQ,KAAK,UAAU,GAKhBC,EAAG3B,CAAI;AAAA,EAChB;AACF;AAOA,SAAS6N,GAAiCnM,GAASC,GAAIoC,GAAK;AAC1D,QAAMpZ,IAAO;AACb,SAAOmN;AAaP,WAASA,EAAMkI,GAAM;AACnB,WAAIe,EAAmBf,CAAI,KACzB0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClByD,KAEFpB,EAAI/D,CAAI;AAAA,EACjB;AAaA,WAASmF,EAAMnF,GAAM;AACnB,WAAOrV,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAAIoZ,EAAI/D,CAAI,IAAI2B,EAAG3B,CAAI;AAAA,EAChE;AACF;AAOA,SAAS2N,GAAwBjM,GAASC,GAAIoC,GAAK;AACjD,SAAOjM;AAaP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBA,EAAQ,QAAQmE,IAAWlE,GAAIoC,CAAG;AAAA,EAC3C;AACF;AC91BO,MAAM6L,KAAW;AAAA,EACtB,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAiBnO,GAASC,GAAIoC,GAAK;AAC1C,QAAMpZ,IAAO;AAEb,MAAIsa,GAEAtQ,GAEAmb;AACJ,SAAOhY;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,cAAc,GAC5BA,EAAQ,QAAQ1B,CAAI,GACbwE;AAAA,EACT;AAgBA,WAASA,EAAKxE,GAAM;AAClB,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbgO,KAELhO,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbiO,KAELjO,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACb+P,KAILxP,GAAWP,CAAI,KACjB0B,EAAQ,QAAQ1B,CAAI,GACbgQ,KAEFjM,EAAI/D,CAAI;AAAA,EACjB;AAgBA,WAASgO,EAAgBhO,GAAM;AAC7B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACboO,KAELpO,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpBrL,IAAQ,GACD0Z,KAEL9N,GAAWP,CAAI,KACjB0B,EAAQ,QAAQ1B,CAAI,GACbxH,KAEFuL,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASoO,EAAkBpO,GAAM;AAC/B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbiQ,KAEFlM,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAAS1H,EAAQ0H,GAAM;AACrB,WAAIA,MAAS,OACJ+D,EAAI/D,CAAI,IAEbA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbkQ,KAELnP,EAAmBf,CAAI,KACzB8P,IAAcxX,GACP6X,GAAiBnQ,CAAI,MAE9B0B,EAAQ,QAAQ1B,CAAI,GACb1H;AAAA,EACT;AAYA,WAAS4X,EAAalQ,GAAM;AAC1B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbiQ,KAEF3X,EAAQ0H,CAAI;AAAA,EACrB;AAYA,WAASiQ,EAAWjQ,GAAM;AACxB,WAAOA,MAAS,KAAKpF,EAAIoF,CAAI,IAAIA,MAAS,KAAKkQ,EAAalQ,CAAI,IAAI1H,EAAQ0H,CAAI;AAAA,EAClF;AAYA,WAASqO,EAAgBrO,GAAM;AAC7B,UAAM5W,IAAQ;AACd,WAAI4W,MAAS5W,EAAM,WAAWuL,GAAO,KACnC+M,EAAQ,QAAQ1B,CAAI,GACbrL,MAAUvL,EAAM,SAASgnB,IAAQ/B,KAEnCtK,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASoQ,EAAMpQ,GAAM;AACnB,WAAIA,MAAS,OACJ+D,EAAI/D,CAAI,IAEbA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbqQ,KAELtP,EAAmBf,CAAI,KACzB8P,IAAcM,GACPD,GAAiBnQ,CAAI,MAE9B0B,EAAQ,QAAQ1B,CAAI,GACboQ;AAAA,EACT;AAYA,WAASC,EAAWrQ,GAAM;AACxB,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbsQ,KAEFF,EAAMpQ,CAAI;AAAA,EACnB;AAYA,WAASsQ,EAAStQ,GAAM;AACtB,WAAIA,MAAS,KACJpF,EAAIoF,CAAI,IAEbA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbsQ,KAEFF,EAAMpQ,CAAI;AAAA,EACnB;AAYA,WAASxH,EAAYwH,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,KACrBpF,EAAIoF,CAAI,IAEbe,EAAmBf,CAAI,KACzB8P,IAActX,GACP2X,GAAiBnQ,CAAI,MAE9B0B,EAAQ,QAAQ1B,CAAI,GACbxH;AAAA,EACT;AAYA,WAASuX,EAAY/P,GAAM;AACzB,WAAIA,MAAS,OACJ+D,EAAI/D,CAAI,IAEbA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbuQ,KAELxP,EAAmBf,CAAI,KACzB8P,IAAcC,GACPI,GAAiBnQ,CAAI,MAE9B0B,EAAQ,QAAQ1B,CAAI,GACb+P;AAAA,EACT;AAYA,WAASQ,EAAiBvQ,GAAM;AAC9B,WAAOA,MAAS,KAAKpF,EAAIoF,CAAI,IAAI+P,EAAY/P,CAAI;AAAA,EACnD;AAYA,WAASiO,EAAcjO,GAAM;AAE3B,WAAIO,GAAWP,CAAI,KACjB0B,EAAQ,QAAQ1B,CAAI,GACbwQ,KAEFzM,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASwQ,EAASxQ,GAAM;AAEtB,WAAIA,MAAS,MAAMS,GAAkBT,CAAI,KACvC0B,EAAQ,QAAQ1B,CAAI,GACbwQ,KAEFC,EAAgBzQ,CAAI;AAAA,EAC7B;AAYA,WAASyQ,EAAgBzQ,GAAM;AAC7B,WAAIe,EAAmBf,CAAI,KACzB8P,IAAcW,GACPN,GAAiBnQ,CAAI,KAE1BiB,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACbyQ,KAEF7V,EAAIoF,CAAI;AAAA,EACjB;AAYA,WAASgQ,EAAQhQ,GAAM;AAErB,WAAIA,MAAS,MAAMS,GAAkBT,CAAI,KACvC0B,EAAQ,QAAQ1B,CAAI,GACbgQ,KAELhQ,MAAS,MAAMA,MAAS,MAAMgB,GAA0BhB,CAAI,IACvD0Q,EAAe1Q,CAAI,IAErB+D,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAAS0Q,EAAe1Q,GAAM;AAC5B,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbpF,KAILoF,MAAS,MAAMA,MAAS,MAAMO,GAAWP,CAAI,KAC/C0B,EAAQ,QAAQ1B,CAAI,GACb2Q,KAEL5P,EAAmBf,CAAI,KACzB8P,IAAcY,GACPP,GAAiBnQ,CAAI,KAE1BiB,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACb0Q,KAEF9V,EAAIoF,CAAI;AAAA,EACjB;AAYA,WAAS2Q,EAAqB3Q,GAAM;AAElC,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMS,GAAkBT,CAAI,KACpF0B,EAAQ,QAAQ1B,CAAI,GACb2Q,KAEFC,EAA0B5Q,CAAI;AAAA,EACvC;AAaA,WAAS4Q,EAA0B5Q,GAAM;AACvC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACb6Q,KAEL9P,EAAmBf,CAAI,KACzB8P,IAAcc,GACPT,GAAiBnQ,CAAI,KAE1BiB,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACb4Q,KAEFF,EAAe1Q,CAAI;AAAA,EAC5B;AAaA,WAAS6Q,EAA4B7Q,GAAM;AACzC,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,KAClE+D,EAAI/D,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAC1B0B,EAAQ,QAAQ1B,CAAI,GACpBiF,IAASjF,GACF8Q,KAEL/P,EAAmBf,CAAI,KACzB8P,IAAce,GACPV,GAAiBnQ,CAAI,KAE1BiB,GAAcjB,CAAI,KACpB0B,EAAQ,QAAQ1B,CAAI,GACb6Q,MAETnP,EAAQ,QAAQ1B,CAAI,GACb+Q;AAAA,EACT;AAYA,WAASD,EAA4B9Q,GAAM;AACzC,WAAIA,MAASiF,KACXvD,EAAQ,QAAQ1B,CAAI,GACpBiF,IAAS,QACF+L,KAELhR,MAAS,OACJ+D,EAAI/D,CAAI,IAEbe,EAAmBf,CAAI,KACzB8P,IAAcgB,GACPX,GAAiBnQ,CAAI,MAE9B0B,EAAQ,QAAQ1B,CAAI,GACb8Q;AAAA,EACT;AAYA,WAASC,EAA8B/Q,GAAM;AAC3C,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,KACjF+D,EAAI/D,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAAMgB,GAA0BhB,CAAI,IACvD0Q,EAAe1Q,CAAI,KAE5B0B,EAAQ,QAAQ1B,CAAI,GACb+Q;AAAA,EACT;AAaA,WAASC,EAAiChR,GAAM;AAC9C,WAAIA,MAAS,MAAMA,MAAS,MAAMgB,GAA0BhB,CAAI,IACvD0Q,EAAe1Q,CAAI,IAErB+D,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASpF,EAAIoF,GAAM;AACjB,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,cAAc,GAC3BA,EAAQ,KAAK,UAAU,GAChBC,KAEFoC,EAAI/D,CAAI;AAAA,EACjB;AAgBA,WAASmQ,GAAiBnQ,GAAM;AAC9B,WAAA0B,EAAQ,KAAK,cAAc,GAC3BA,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBuP;AAAA,EACT;AAgBA,WAASA,EAAgBjR,GAAM;AAG7B,WAAOiB,GAAcjB,CAAI,IAAIyB,GAAaC,GAASwP,IAAuB,cAAcvmB,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAEqV,CAAI,IAAIkR,GAAsBlR,CAAI;AAAA,EAC1M;AAgBA,WAASkR,GAAsBlR,GAAM;AACnC,WAAA0B,EAAQ,MAAM,cAAc,GACrBoO,EAAY9P,CAAI;AAAA,EACzB;AACF;AChpBO,MAAMmR,KAAW;AAAA,EACtB,MAAM;AAAA,EACN,YAAYC;AAAA,EACZ,WAAWC;AAAA,EACX,UAAUC;AACZ,GAGMC,KAAoB;AAAA,EACxB,UAAUC;AACZ,GAEMC,KAAyB;AAAA,EAC7B,UAAUC;AACZ,GAEMC,KAA8B;AAAA,EAClC,UAAUC;AACZ;AAGA,SAASR,GAAmBlN,GAAQ;AAClC,MAAIvP,IAAQ;AAEZ,QAAMkd,IAAY,CAAA;AAClB,SAAO,EAAEld,IAAQuP,EAAO,UAAQ;AAC9B,UAAM9B,IAAQ8B,EAAOvP,CAAK,EAAE,CAAC;AAE7B,QADAkd,EAAU,KAAK3N,EAAOvP,CAAK,CAAC,GACxByN,EAAM,SAAS,gBAAgBA,EAAM,SAAS,eAAeA,EAAM,SAAS,YAAY;AAE1F,YAAM0C,IAAS1C,EAAM,SAAS,eAAe,IAAI;AACjD,MAAAA,EAAM,OAAO,QACbzN,KAASmQ;AAAA,IACX;AAAA,EACF;AAGA,SAAIZ,EAAO,WAAW2N,EAAU,UAC9B3S,GAAOgF,GAAQ,GAAGA,EAAO,QAAQ2N,CAAS,GAErC3N;AACT;AAGA,SAASmN,GAAkBnN,GAAQC,GAAS;AAC1C,MAAIxP,IAAQuP,EAAO,QACfY,IAAS,GAET1C,GAEAoC,GAEAtS,GAEA4f;AAGJ,SAAOnd;AAEL,QADAyN,IAAQ8B,EAAOvP,CAAK,EAAE,CAAC,GACnB6P,GAAM;AAER,UAAIpC,EAAM,SAAS,UAAUA,EAAM,SAAS,eAAeA,EAAM;AAC/D;AAKF,MAAI8B,EAAOvP,CAAK,EAAE,CAAC,MAAM,WAAWyN,EAAM,SAAS,gBACjDA,EAAM,YAAY;AAAA,IAEtB,WAAWlQ;AACT,UAAIgS,EAAOvP,CAAK,EAAE,CAAC,MAAM,YAAYyN,EAAM,SAAS,gBAAgBA,EAAM,SAAS,gBAAgB,CAACA,EAAM,cACxGoC,IAAO7P,GACHyN,EAAM,SAAS,cAAa;AAC9B,QAAA0C,IAAS;AACT;AAAA,MACF;AAAA,UAEG,CAAI1C,EAAM,SAAS,eACxBlQ,IAAQyC;AAGZ,QAAM8P,IAAQ;AAAA,IACZ,MAAMP,EAAOM,CAAI,EAAE,CAAC,EAAE,SAAS,cAAc,SAAS;AAAA,IACtD,OAAO;AAAA,MACL,GAAGN,EAAOM,CAAI,EAAE,CAAC,EAAE;AAAA,IACzB;AAAA,IACI,KAAK;AAAA,MACH,GAAGN,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE;AAAA,IACtC;AAAA,EACA,GACQ6N,IAAQ;AAAA,IACZ,MAAM;AAAA,IACN,OAAO;AAAA,MACL,GAAG7N,EAAOM,CAAI,EAAE,CAAC,EAAE;AAAA,IACzB;AAAA,IACI,KAAK;AAAA,MACH,GAAGN,EAAOhS,CAAK,EAAE,CAAC,EAAE;AAAA,IAC1B;AAAA,EACA,GACQoK,IAAO;AAAA,IACX,MAAM;AAAA,IACN,OAAO;AAAA,MACL,GAAG4H,EAAOM,IAAOM,IAAS,CAAC,EAAE,CAAC,EAAE;AAAA,IACtC;AAAA,IACI,KAAK;AAAA,MACH,GAAGZ,EAAOhS,IAAQ,CAAC,EAAE,CAAC,EAAE;AAAA,IAC9B;AAAA,EACA;AACE,SAAA4f,IAAQ,CAAC,CAAC,SAASrN,GAAON,CAAO,GAAG,CAAC,SAAS4N,GAAO5N,CAAO,CAAC,GAG7D2N,IAAQtS,GAAKsS,GAAO5N,EAAO,MAAMM,IAAO,GAAGA,IAAOM,IAAS,CAAC,CAAC,GAG7DgN,IAAQtS,GAAKsS,GAAO,CAAC,CAAC,SAASxV,GAAM6H,CAAO,CAAC,CAAC,GAK9C2N,IAAQtS,GAAKsS,GAAO7N,GAAWE,EAAQ,OAAO,WAAW,WAAW,MAAMD,EAAO,MAAMM,IAAOM,IAAS,GAAG5S,IAAQ,CAAC,GAAGiS,CAAO,CAAC,GAG9H2N,IAAQtS,GAAKsS,GAAO,CAAC,CAAC,QAAQxV,GAAM6H,CAAO,GAAGD,EAAOhS,IAAQ,CAAC,GAAGgS,EAAOhS,IAAQ,CAAC,GAAG,CAAC,QAAQ6f,GAAO5N,CAAO,CAAC,CAAC,GAG7G2N,IAAQtS,GAAKsS,GAAO5N,EAAO,MAAMhS,IAAQ,CAAC,CAAC,GAG3C4f,IAAQtS,GAAKsS,GAAO,CAAC,CAAC,QAAQrN,GAAON,CAAO,CAAC,CAAC,GAC9CjF,GAAOgF,GAAQM,GAAMN,EAAO,QAAQ4N,CAAK,GAClC5N;AACT;AAOA,SAASoN,GAAiB5P,GAASC,GAAIoC,GAAK;AAC1C,QAAMpZ,IAAO;AACb,MAAIgK,IAAQhK,EAAK,OAAO,QAEpBqnB,GAEAC;AAGJ,SAAOtd;AACL,SAAKhK,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgBhK,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgB,CAAChK,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,WAAW;AACnI,MAAAqd,IAAarnB,EAAK,OAAOgK,CAAK,EAAE,CAAC;AACjC;AAAA,IACF;AAEF,SAAOmD;AAiBP,WAASA,EAAMkI,GAAM;AAEnB,WAAKgS,IAaDA,EAAW,YACNE,EAAYlS,CAAI,KAEzBiS,IAAUtnB,EAAK,OAAO,QAAQ,SAAS2V,GAAoB3V,EAAK,eAAe;AAAA,MAC7E,OAAOqnB,EAAW;AAAA,MAClB,KAAKrnB,EAAK,IAAG;AAAA,IACnB,CAAK,CAAC,CAAC,GACH+W,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,aAAa,GAC3BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,UAAU,GAChByD,KAxBEpB,EAAI/D,CAAI;AAAA,EAyBnB;AAkBA,WAASmF,EAAMnF,GAAM;AAKnB,WAAIA,MAAS,KACJ0B,EAAQ,QAAQ6P,IAAmBY,GAAYF,IAAUE,IAAaD,CAAW,EAAElS,CAAI,IAI5FA,MAAS,KACJ0B,EAAQ,QAAQ+P,IAAwBU,GAAYF,IAAUG,IAAmBF,CAAW,EAAElS,CAAI,IAIpGiS,IAAUE,EAAWnS,CAAI,IAAIkS,EAAYlS,CAAI;AAAA,EACtD;AAgBA,WAASoS,EAAiBpS,GAAM;AAC9B,WAAO0B,EAAQ,QAAQiQ,IAA6BQ,GAAYD,CAAW,EAAElS,CAAI;AAAA,EACnF;AAkBA,WAASmS,EAAWnS,GAAM;AAExB,WAAO2B,EAAG3B,CAAI;AAAA,EAChB;AAkBA,WAASkS,EAAYlS,GAAM;AACzB,WAAAgS,EAAW,YAAY,IAChBjO,EAAI/D,CAAI;AAAA,EACjB;AACF;AAOA,SAASwR,GAAiB9P,GAASC,GAAIoC,GAAK;AAC1C,SAAOsO;AAYP,WAASA,EAAcrS,GAAM;AAC3B,WAAA0B,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,gBAAgB,GACtB4Q;AAAA,EACT;AAYA,WAASA,EAAetS,GAAM;AAC5B,WAAOgB,GAA0BhB,CAAI,IAAIkM,GAAkBxK,GAAS6Q,CAAY,EAAEvS,CAAI,IAAIuS,EAAavS,CAAI;AAAA,EAC7G;AAYA,WAASuS,EAAavS,GAAM;AAC1B,WAAIA,MAAS,KACJwS,EAAYxS,CAAI,IAElBgL,GAAmBtJ,GAAS+Q,GAA0BC,GAA4B,uBAAuB,8BAA8B,oCAAoC,0BAA0B,6BAA6B,EAAE,EAAE1S,CAAI;AAAA,EACnP;AAYA,WAASyS,EAAyBzS,GAAM;AACtC,WAAOgB,GAA0BhB,CAAI,IAAIkM,GAAkBxK,GAASiR,CAAe,EAAE3S,CAAI,IAAIwS,EAAYxS,CAAI;AAAA,EAC/G;AAYA,WAAS0S,EAA2B1S,GAAM;AACxC,WAAO+D,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAAS2S,EAAgB3S,GAAM;AAC7B,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,KAClC+L,GAAarK,GAASkR,GAAoB7O,GAAK,iBAAiB,uBAAuB,qBAAqB,EAAE/D,CAAI,IAEpHwS,EAAYxS,CAAI;AAAA,EACzB;AAYA,WAAS4S,EAAmB5S,GAAM;AAChC,WAAOgB,GAA0BhB,CAAI,IAAIkM,GAAkBxK,GAAS8Q,CAAW,EAAExS,CAAI,IAAIwS,EAAYxS,CAAI;AAAA,EAC3G;AAYA,WAASwS,EAAYxS,GAAM;AACzB,WAAIA,MAAS,MACX0B,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,gBAAgB,GAC7BA,EAAQ,KAAK,UAAU,GAChBC,KAEFoC,EAAI/D,CAAI;AAAA,EACjB;AACF;AAOA,SAAS0R,GAAsBhQ,GAASC,GAAIoC,GAAK;AAC/C,QAAMpZ,IAAO;AACb,SAAOkoB;AAYP,WAASA,EAAc7S,GAAM;AAC3B,WAAO2L,GAAa,KAAKhhB,GAAM+W,GAASoR,GAAoBC,GAAsB,aAAa,mBAAmB,iBAAiB,EAAE/S,CAAI;AAAA,EAC3I;AAYA,WAAS8S,EAAmB9S,GAAM;AAChC,WAAOrV,EAAK,OAAO,QAAQ,SAAS2V,GAAoB3V,EAAK,eAAeA,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,IAAIgX,EAAG3B,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EAC1J;AAYA,WAAS+S,EAAqB/S,GAAM;AAClC,WAAO+D,EAAI/D,CAAI;AAAA,EACjB;AACF;AAOA,SAAS4R,GAA2BlQ,GAASC,GAAIoC,GAAK;AACpD,SAAOiP;AAcP,WAASA,EAAwBhT,GAAM;AAGrC,WAAA0B,EAAQ,MAAM,WAAW,GACzBA,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,iBAAiB,GACvBuR;AAAA,EACT;AAcA,WAASA,EAAuBjT,GAAM;AACpC,WAAIA,MAAS,MACX0B,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,iBAAiB,GAC9BA,EAAQ,KAAK,WAAW,GACjBC,KAEFoC,EAAI/D,CAAI;AAAA,EACjB;AACF;ACniBO,MAAMkT,KAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,YAAY/B,GAAS;AAAA,EACrB,UAAUgC;AACZ;AAOA,SAASA,GAAwBzR,GAASC,GAAIoC,GAAK;AACjD,QAAMpZ,IAAO;AACb,SAAOmN;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kBAAkB,GACxB8C;AAAA,EACT;AAYA,WAASA,EAAKxE,GAAM;AAClB,WAAIA,MAAS,MACX0B,EAAQ,MAAM,aAAa,GAC3BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,YAAY,GAClByD,KAEFpB,EAAI/D,CAAI;AAAA,EACjB;AA6BA,WAASmF,EAAMnF,GAAM;AAMnB,WAAOA,MAAS,MAAM,4BAA4BrV,EAAK,OAAO,aAAaoZ,EAAI/D,CAAI,IAAI2B,EAAG3B,CAAI;AAAA,EAChG;AACF;ACzFO,MAAMoT,KAAiB;AAAA,EAC5B,MAAM;AAAA,EACN,YAAYjC,GAAS;AAAA,EACrB,UAAUkC;AACZ;AAOA,SAASA,GAAuB3R,GAASC,GAAIoC,GAAK;AAChD,QAAMpZ,IAAO;AACb,SAAOmN;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,WAAW,GACzBA,EAAQ,MAAM,aAAa,GAC3BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,WAAW,GACjByD;AAAA,EACT;AAGA,WAASA,EAAMnF,GAAM;AAKnB,WAAOA,MAAS,MAAM,4BAA4BrV,EAAK,OAAO,aAAaoZ,EAAI/D,CAAI,IAAI2B,EAAG3B,CAAI;AAAA,EAChG;AACF;AC1CO,MAAMsT,KAAa;AAAA,EACxB,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAmB7R,GAASC,GAAI;AACvC,SAAO7J;AAGP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBD,GAAaC,GAASC,GAAI,YAAY;AAAA,EAC/C;AACF;ACnBO,MAAM6R,KAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAsB/R,GAASC,GAAIoC,GAAK;AAC/C,MAAIjC,IAAO,GAEPmD;AACJ,SAAOnN;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,eAAe,GAEtBvB,EAAOH,CAAI;AAAA,EACpB;AAYA,WAASG,EAAOH,GAAM;AACpB,WAAAiF,IAASjF,GACFqI,EAAQrI,CAAI;AAAA,EACrB;AAYA,WAASqI,EAAQrI,GAAM;AACrB,WAAIA,MAASiF,KACXvD,EAAQ,MAAM,uBAAuB,GAC9BgS,EAAS1T,CAAI,KAElB8B,KAAQ,MAAM9B,MAAS,QAAQe,EAAmBf,CAAI,MACxD0B,EAAQ,KAAK,eAAe,GACrBC,EAAG3B,CAAI,KAET+D,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAAS0T,EAAS1T,GAAM;AACtB,WAAIA,MAASiF,KACXvD,EAAQ,QAAQ1B,CAAI,GACpB8B,KACO4R,MAEThS,EAAQ,KAAK,uBAAuB,GAC7BT,GAAcjB,CAAI,IAAIyB,GAAaC,GAAS2G,GAAS,YAAY,EAAErI,CAAI,IAAIqI,EAAQrI,CAAI;AAAA,EAChG;AACF;ACpFO,MAAMb,KAAO;AAAA,EAClB,cAAc;AAAA,IACZ,UAAUwU;AAAA,EACd;AAAA,EACE,MAAMC;AAAA,EACN,MAAM;AAAA,EACN,UAAUC;AACZ,GAGMC,KAAoC;AAAA,EACxC,SAAS;AAAA,EACT,UAAUC;AACZ,GAGMC,KAAkB;AAAA,EACtB,SAAS;AAAA,EACT,UAAUC;AACZ;AAUA,SAASJ,GAAkBnS,GAASC,GAAIoC,GAAK;AAC3C,QAAMpZ,IAAO,MACPwc,IAAOxc,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,MAAIupB,IAAc/M,KAAQA,EAAK,CAAC,EAAE,SAAS,eAAeA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,SAAS,GACrGrF,IAAO;AACX,SAAOhK;AAGP,WAASA,EAAMkI,GAAM;AACnB,UAAMmU,IAAOxpB,EAAK,eAAe,SAASqV,MAAS,MAAMA,MAAS,MAAMA,MAAS,KAAK,kBAAkB;AACxG,QAAImU,MAAS,kBAAkB,CAACxpB,EAAK,eAAe,UAAUqV,MAASrV,EAAK,eAAe,SAASiW,GAAWZ,CAAI,GAAG;AAOpH,UANKrV,EAAK,eAAe,SACvBA,EAAK,eAAe,OAAOwpB,GAC3BzS,EAAQ,MAAMyS,GAAM;AAAA,QAClB,YAAY;AAAA,MACtB,CAAS,IAECA,MAAS;AACX,eAAAzS,EAAQ,MAAM,gBAAgB,GACvB1B,MAAS,MAAMA,MAAS,KAAK0B,EAAQ,MAAM8R,IAAezP,GAAKqQ,CAAQ,EAAEpU,CAAI,IAAIoU,EAASpU,CAAI;AAEvG,UAAI,CAACrV,EAAK,aAAaqV,MAAS;AAC9B,eAAA0B,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,MAAM,eAAe,GACtBwD,EAAOlF,CAAI;AAAA,IAEtB;AACA,WAAO+D,EAAI/D,CAAI;AAAA,EACjB;AAGA,WAASkF,EAAOlF,GAAM;AACpB,WAAIY,GAAWZ,CAAI,KAAK,EAAE8B,IAAO,MAC/BJ,EAAQ,QAAQ1B,CAAI,GACbkF,MAEJ,CAACva,EAAK,aAAamX,IAAO,OAAOnX,EAAK,eAAe,SAASqV,MAASrV,EAAK,eAAe,SAASqV,MAAS,MAAMA,MAAS,OAC/H0B,EAAQ,KAAK,eAAe,GACrB0S,EAASpU,CAAI,KAEf+D,EAAI/D,CAAI;AAAA,EACjB;AAKA,WAASoU,EAASpU,GAAM;AACtB,WAAA0B,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,gBAAgB,GAC7B/W,EAAK,eAAe,SAASA,EAAK,eAAe,UAAUqV,GACpD0B,EAAQ;AAAA,MAAMmE;AAAA;AAAA,MAErBlb,EAAK,YAAYoZ,IAAMsQ;AAAA,MAAS3S,EAAQ,QAAQoS,IAAmCQ,GAAaC,CAAW;AAAA,IAAC;AAAA,EAC9G;AAGA,WAASF,EAAQrU,GAAM;AACrB,WAAArV,EAAK,eAAe,mBAAmB,IACvCupB,KACOI,EAAYtU,CAAI;AAAA,EACzB;AAGA,WAASuU,EAAYvU,GAAM;AACzB,WAAIiB,GAAcjB,CAAI,KACpB0B,EAAQ,MAAM,0BAA0B,GACxCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,0BAA0B,GAChC4S,KAEFvQ,EAAI/D,CAAI;AAAA,EACjB;AAGA,WAASsU,EAAYtU,GAAM;AACzB,WAAArV,EAAK,eAAe,OAAOupB,IAAcvpB,EAAK,eAAe+W,EAAQ,KAAK,gBAAgB,GAAG,EAAI,EAAE,QAC5FC,EAAG3B,CAAI;AAAA,EAChB;AACF;AAOA,SAAS2T,GAAyBjS,GAASC,GAAIoC,GAAK;AAClD,QAAMpZ,IAAO;AACb,SAAAA,EAAK,eAAe,aAAa,QAC1B+W,EAAQ,MAAMmE,IAAWwO,GAASG,CAAQ;AAGjD,WAASH,EAAQrU,GAAM;AACrB,WAAArV,EAAK,eAAe,oBAAoBA,EAAK,eAAe,qBAAqBA,EAAK,eAAe,kBAI9F8W,GAAaC,GAASC,GAAI,kBAAkBhX,EAAK,eAAe,OAAO,CAAC,EAAEqV,CAAI;AAAA,EACvF;AAGA,WAASwU,EAASxU,GAAM;AACtB,WAAIrV,EAAK,eAAe,qBAAqB,CAACsW,GAAcjB,CAAI,KAC9DrV,EAAK,eAAe,oBAAoB,QACxCA,EAAK,eAAe,mBAAmB,QAChC8pB,EAAiBzU,CAAI,MAE9BrV,EAAK,eAAe,oBAAoB,QACxCA,EAAK,eAAe,mBAAmB,QAChC+W,EAAQ,QAAQsS,IAAiBrS,GAAI8S,CAAgB,EAAEzU,CAAI;AAAA,EACpE;AAGA,WAASyU,EAAiBzU,GAAM;AAE9B,WAAArV,EAAK,eAAe,aAAa,IAEjCA,EAAK,YAAY,QAGV8W,GAAaC,GAASA,EAAQ,QAAQvC,IAAMwC,GAAIoC,CAAG,GAAG,cAAcpZ,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAEqV,CAAI;AAAA,EAC/J;AACF;AAOA,SAASiU,GAAevS,GAASC,GAAIoC,GAAK;AACxC,QAAMpZ,IAAO;AACb,SAAO8W,GAAaC,GAAS0G,GAAa,kBAAkBzd,EAAK,eAAe,OAAO,CAAC;AAGxF,WAASyd,EAAYpI,GAAM;AACzB,UAAMmH,IAAOxc,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAOwc,KAAQA,EAAK,CAAC,EAAE,SAAS,oBAAoBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,WAAWxc,EAAK,eAAe,OAAOgX,EAAG3B,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EACrJ;AACF;AAOA,SAAS4T,GAAgBlS,GAAS;AAChC,EAAAA,EAAQ,KAAK,KAAK,eAAe,IAAI;AACvC;AAOA,SAASqS,GAAiCrS,GAASC,GAAIoC,GAAK;AAC1D,QAAMpZ,IAAO;AAIb,SAAO8W,GAAaC,GAAS0G,GAAa,4BAA4Bzd,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAK;AAGtJ,WAASyd,EAAYpI,GAAM;AACzB,UAAMmH,IAAOxc,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAO,CAACsW,GAAcjB,CAAI,KAAKmH,KAAQA,EAAK,CAAC,EAAE,SAAS,6BAA6BxF,EAAG3B,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EAC1G;AACF;ACtMO,MAAM0U,KAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,WAAWC;AAAA,EACX,UAAUC;AACZ;AAGA,SAASD,GAAyBzQ,GAAQC,GAAS;AAEjD,MAAIxP,IAAQuP,EAAO,QAEf3R,GAEA+J,GAEA5I;AAIJ,SAAOiB;AACL,QAAIuP,EAAOvP,CAAK,EAAE,CAAC,MAAM,SAAS;AAChC,UAAIuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,WAAW;AACvC,QAAApC,IAAUoC;AACV;AAAA,MACF;AACA,MAAIuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,gBAC5B2H,IAAO3H;AAAA,IAEX;AAGE,MAAIuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,aAE5BuP,EAAO,OAAOvP,GAAO,CAAC,GAEpB,CAACjB,KAAcwQ,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,iBAC3CjB,IAAaiB;AAInB,QAAMkgB,IAAU;AAAA,IACd,MAAM;AAAA,IACN,OAAO;AAAA,MACL,GAAG3Q,EAAO3R,CAAO,EAAE,CAAC,EAAE;AAAA,IAC5B;AAAA,IACI,KAAK;AAAA,MACH,GAAG2R,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE;AAAA,IACtC;AAAA,EACA;AAGE,SAAAA,EAAO5H,CAAI,EAAE,CAAC,EAAE,OAAO,qBAInB5I,KACFwQ,EAAO,OAAO5H,GAAM,GAAG,CAAC,SAASuY,GAAS1Q,CAAO,CAAC,GAClDD,EAAO,OAAOxQ,IAAa,GAAG,GAAG,CAAC,QAAQwQ,EAAO3R,CAAO,EAAE,CAAC,GAAG4R,CAAO,CAAC,GACtED,EAAO3R,CAAO,EAAE,CAAC,EAAE,MAAM;AAAA,IACvB,GAAG2R,EAAOxQ,CAAU,EAAE,CAAC,EAAE;AAAA,EAC/B,KAEIwQ,EAAO3R,CAAO,EAAE,CAAC,IAAIsiB,GAIvB3Q,EAAO,KAAK,CAAC,QAAQ2Q,GAAS1Q,CAAO,CAAC,GAC/BD;AACT;AAOA,SAAS0Q,GAAwBlT,GAASC,GAAIoC,GAAK;AACjD,QAAMpZ,IAAO;AAEb,MAAIsa;AACJ,SAAOnN;AAaP,WAASA,EAAMkI,GAAM;AACnB,QAAIrL,IAAQhK,EAAK,OAAO,QAEpBmqB;AAEJ,WAAOngB;AAGL,UAAIhK,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgBhK,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgBhK,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,SAAS,WAAW;AAC1I,QAAAmgB,IAAYnqB,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,SAAS;AAC3C;AAAA,MACF;AAKF,WAAI,CAAChK,EAAK,OAAO,KAAKA,EAAK,MAAM,IAAI,MAAMA,EAAK,aAAamqB,MAC3DpT,EAAQ,MAAM,mBAAmB,GACjCuD,IAASjF,GACFG,EAAOH,CAAI,KAEb+D,EAAI/D,CAAI;AAAA,EACjB;AAaA,WAASG,EAAOH,GAAM;AACpB,WAAA0B,EAAQ,MAAM,2BAA2B,GAClCwD,EAAOlF,CAAI;AAAA,EACpB;AAaA,WAASkF,EAAOlF,GAAM;AACpB,WAAIA,MAASiF,KACXvD,EAAQ,QAAQ1B,CAAI,GACbkF,MAETxD,EAAQ,KAAK,2BAA2B,GACjCT,GAAcjB,CAAI,IAAIyB,GAAaC,GAASyD,GAAO,YAAY,EAAEnF,CAAI,IAAImF,EAAMnF,CAAI;AAAA,EAC5F;AAaA,WAASmF,EAAMnF,GAAM;AACnB,WAAIA,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,mBAAmB,GACzBC,EAAG3B,CAAI,KAET+D,EAAI/D,CAAI;AAAA,EACjB;AACF;AC3KO,MAAM+U,KAAO;AAAA,EAClB,UAAUC;AACZ;AAQA,SAASA,GAAetT,GAAS;AAC/B,QAAM/W,IAAO,MACPme,IAAUpH,EAAQ;AAAA;AAAA,IAExBmE;AAAA,IAAWoP;AAAA;AAAA,IAEXvT,EAAQ,QAAQ,KAAK,OAAO,WAAW,aAAawT,GAAgBzT,GAAaC,GAASA,EAAQ,QAAQ,KAAK,OAAO,WAAW,MAAMwT,GAAgBxT,EAAQ,QAAQnP,IAAS2iB,CAAc,CAAC,GAAG,YAAY,CAAC;AAAA,EAAC;AAChN,SAAOpM;AAGP,WAASmM,EAAcjV,GAAM;AAC3B,QAAIA,MAAS,MAAM;AACjB,MAAA0B,EAAQ,QAAQ1B,CAAI;AACpB;AAAA,IACF;AACA,WAAA0B,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,iBAAiB,GAC9B/W,EAAK,mBAAmB,QACjBme;AAAA,EACT;AAGA,WAASoM,EAAelV,GAAM;AAC5B,QAAIA,MAAS,MAAM;AACjB,MAAA0B,EAAQ,QAAQ1B,CAAI;AACpB;AAAA,IACF;AACA,WAAA0B,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GACzB/W,EAAK,mBAAmB,QACjBme;AAAA,EACT;AACF;AC9CO,MAAMqM,KAAW;AAAA,EACtB,YAAYC,GAAc;AAC5B,GACaC,KAASC,GAAkB,QAAQ,GACnChZ,KAAOgZ,GAAkB,MAAM;AAQ5C,SAASA,GAAkB3nB,GAAO;AAChC,SAAO;AAAA,IACL,YAAYynB,GAAeznB,MAAU,SAAS4nB,KAAyB,MAAS;AAAA,IAChF,UAAUC;AAAA,EACd;AAOE,WAASA,EAAe9T,GAAS;AAC/B,UAAM/W,IAAO,MACPsV,IAAa,KAAK,OAAO,WAAWtS,CAAK,GACzC2O,IAAOoF,EAAQ,QAAQzB,GAAYnI,GAAO2d,CAAO;AACvD,WAAO3d;AAGP,aAASA,EAAMkI,GAAM;AACnB,aAAOqI,EAAQrI,CAAI,IAAI1D,EAAK0D,CAAI,IAAIyV,EAAQzV,CAAI;AAAA,IAClD;AAGA,aAASyV,EAAQzV,GAAM;AACrB,UAAIA,MAAS,MAAM;AACjB,QAAA0B,EAAQ,QAAQ1B,CAAI;AACpB;AAAA,MACF;AACA,aAAA0B,EAAQ,MAAM,MAAM,GACpBA,EAAQ,QAAQ1B,CAAI,GACbrP;AAAA,IACT;AAGA,aAASA,EAAKqP,GAAM;AAClB,aAAIqI,EAAQrI,CAAI,KACd0B,EAAQ,KAAK,MAAM,GACZpF,EAAK0D,CAAI,MAIlB0B,EAAQ,QAAQ1B,CAAI,GACbrP;AAAA,IACT;AAQA,aAAS0X,EAAQrI,GAAM;AACrB,UAAIA,MAAS;AACX,eAAO;AAET,YAAMb,IAAOc,EAAWD,CAAI;AAC5B,UAAIrL,IAAQ;AACZ,UAAIwK;AAGF,eAAO,EAAExK,IAAQwK,EAAK,UAAQ;AAC5B,gBAAM2D,IAAO3D,EAAKxK,CAAK;AACvB,cAAI,CAACmO,EAAK,YAAYA,EAAK,SAAS,KAAKnY,GAAMA,EAAK,QAAQ;AAC1D,mBAAO;AAAA,QAEX;AAEF,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAQA,SAASyqB,GAAeM,GAAe;AACrC,SAAOC;AAGP,WAASA,EAAezR,GAAQC,GAAS;AACvC,QAAIxP,IAAQ,IAERgU;AAIJ,WAAO,EAAEhU,KAASuP,EAAO;AACvB,MAAIyE,MAAU,SACRzE,EAAOvP,CAAK,KAAKuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,WAC7CgU,IAAQhU,GACRA,QAEO,CAACuP,EAAOvP,CAAK,KAAKuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,YAEjDA,MAAUgU,IAAQ,MACpBzE,EAAOyE,CAAK,EAAE,CAAC,EAAE,MAAMzE,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,KAC5CuP,EAAO,OAAOyE,IAAQ,GAAGhU,IAAQgU,IAAQ,CAAC,GAC1ChU,IAAQgU,IAAQ,IAElBA,IAAQ;AAGZ,WAAO+M,IAAgBA,EAAcxR,GAAQC,CAAO,IAAID;AAAA,EAC1D;AACF;AAaA,SAASqR,GAAuBrR,GAAQC,GAAS;AAC/C,MAAI0F,IAAa;AAEjB,SAAO,EAAEA,KAAc3F,EAAO;AAC5B,SAAK2F,MAAe3F,EAAO,UAAUA,EAAO2F,CAAU,EAAE,CAAC,EAAE,SAAS,iBAAiB3F,EAAO2F,IAAa,CAAC,EAAE,CAAC,EAAE,SAAS,QAAQ;AAC9H,YAAMlZ,IAAOuT,EAAO2F,IAAa,CAAC,EAAE,CAAC,GAC/B+L,IAASzR,EAAQ,YAAYxT,CAAI;AACvC,UAAIgE,IAAQihB,EAAO,QACfC,IAAc,IACd/T,IAAO,GAEPgU;AACJ,aAAOnhB,OAAS;AACd,cAAMohB,IAAQH,EAAOjhB,CAAK;AAC1B,YAAI,OAAOohB,KAAU,UAAU;AAE7B,eADAF,IAAcE,EAAM,QACbA,EAAM,WAAWF,IAAc,CAAC,MAAM;AAC3C,YAAA/T,KACA+T;AAEF,cAAIA,EAAa;AACjB,UAAAA,IAAc;AAAA,QAChB,WAESE,MAAU;AACjB,UAAAD,IAAO,IACPhU;AAAA,iBACSiU,MAAU,IAEd;AAEL,UAAAphB;AACA;AAAA,QACF;AAAA,MACF;AAMA,UAHIwP,EAAQ,4BAA4B0F,MAAe3F,EAAO,WAC5DpC,IAAO,IAELA,GAAM;AACR,cAAMM,IAAQ;AAAA,UACZ,MAAMyH,MAAe3F,EAAO,UAAU4R,KAAQhU,IAAO,IAAI,eAAe;AAAA,UACxE,OAAO;AAAA,YACL,cAAcnN,IAAQkhB,IAAcllB,EAAK,MAAM,eAAeklB;AAAA,YAC9D,QAAQllB,EAAK,MAAM,SAASgE;AAAA,YAC5B,MAAMhE,EAAK,IAAI;AAAA,YACf,QAAQA,EAAK,IAAI,SAASmR;AAAA,YAC1B,QAAQnR,EAAK,IAAI,SAASmR;AAAA,UACtC;AAAA,UACU,KAAK;AAAA,YACH,GAAGnR,EAAK;AAAA,UACpB;AAAA,QACA;AACQ,QAAAA,EAAK,MAAM;AAAA,UACT,GAAGyR,EAAM;AAAA,QACnB,GACYzR,EAAK,MAAM,WAAWA,EAAK,IAAI,SACjC,OAAO,OAAOA,GAAMyR,CAAK,KAEzB8B,EAAO,OAAO2F,GAAY,GAAG,CAAC,SAASzH,GAAO+B,CAAO,GAAG,CAAC,QAAQ/B,GAAO+B,CAAO,CAAC,GAChF0F,KAAc;AAAA,MAElB;AACA,MAAAA;AAAA,IACF;AAEF,SAAO3F;AACT;AC3MO,MAAM7B,KAAW;AAAA,EACrB,IAAKlD;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAK4G;AACR,GAGaiQ,KAAiB;AAAA,EAC3B,IAAKtiB;AACR,GAGauiB,KAAc;AAAA,EACzB,CAAC,EAAE,GAAGjO;AAAA,EACN,CAAC,EAAE,GAAGA;AAAA,EACL,IAAKA;AACR,GAGa+M,KAAO;AAAA,EACjB,IAAK9H;AAAA,EACL,IAAKuG;AAAAA,EACL,IAAK,CAACkB,IAAiBlB,EAAa;AAAA,EACpC,IAAKjG;AAAA,EACL,IAAKmH;AAAA,EACL,IAAKlB;AAAAA,EACL,IAAK5M;AAAA,EACL,KAAMA;AACT,GAGayO,KAAS;AAAA,EACnB,IAAKpW;AAAA,EACL,IAAKoH;AACR,GAGa/J,KAAO;AAAA,EAClB,CAAC,EAAE,GAAGgX;AAAA,EACN,CAAC,EAAE,GAAGA;AAAA,EACN,CAAC,EAAE,GAAGA;AAAA,EACL,IAAKJ;AAAA,EACL,IAAKjU;AAAA,EACL,IAAKoF;AAAA,EACL,IAAK,CAACe,IAAUwK,EAAQ;AAAA,EACxB,IAAKwD;AAAA,EACL,IAAK,CAACrG,IAAiB1G,EAAe;AAAA,EACtC,IAAK8K;AAAA,EACL,IAAK9M;AAAA,EACL,IAAKiE;AACR,GAGa4N,KAAa;AAAA,EACxB,MAAM,CAAC7R,IAAW8R,EAAW;AAC/B,GAGanR,KAAmB;AAAA,EAC9B,MAAM,CAAC,IAAI,EAAE;AACf,GAGaoR,KAAU;AAAA,EACrB,MAAM,CAAA;AACR;;;;;;;;;;;;ACxBO,SAASC,GAAgBC,GAAQC,GAAYhY,GAAM;AAExD,MAAI7D,IAAQ;AAAA,IACV,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,MAAM6D,KAAQA,EAAK,QAAQ;AAAA,IAC3B,QAAQA,KAAQA,EAAK,UAAU;AAAA,IAC/B,QAAQA,KAAQA,EAAK,UAAU;AAAA,EACnC;AAEE,QAAMiY,IAAc,CAAA,GAEdC,IAAuB,CAAA;AAE7B,MAAIb,IAAS,CAAA,GAETnT,IAAQ,CAAA;AASZ,QAAMf,IAAU;AAAA,IACd,SAASgV,EAAiBC,CAAqB;AAAA,IAC/C,OAAOD,EAAiBE,CAAiB;AAAA,IACzC,SAAAC;AAAA,IACA,OAAAlO;AAAA,IACA,MAAA1C;AAAA,IACA,WAAWyQ,EAAiBE,GAAmB;AAAA,MAC7C,WAAW;AAAA,IACjB,CAAK;AAAA,EACL,GAOQzS,IAAU;AAAA,IACd,MAAM;AAAA,IACN,gBAAgB,CAAA;AAAA,IAChB,YAAA2S;AAAA,IACA,QAAQ,CAAA;AAAA,IACR,KAAAC;AAAA,IACA,QAAAT;AAAA,IACA,UAAU;AAAA,IACV,gBAAAU;AAAA,IACA,aAAAC;AAAA,IACA,OAAAC;AAAA,EACJ;AAOE,MAAInb,IAAQwa,EAAW,SAAS,KAAKpS,GAASzC,CAAO;AAQrD,SAAI6U,EAAW,cACbE,EAAqB,KAAKF,CAAU,GAE/BpS;AAGP,WAAS+S,EAAM5M,GAAO;AAKpB,WAJAsL,IAASpW,GAAKoW,GAAQtL,CAAK,GAC3B6M,EAAI,GAGAvB,EAAOA,EAAO,SAAS,CAAC,MAAM,OACzB,CAAA,KAETwB,EAAUb,GAAY,CAAC,GAGvBpS,EAAQ,SAASF,GAAWwS,GAAsBtS,EAAQ,QAAQA,CAAO,GAClEA,EAAQ;AAAA,EACjB;AAOA,WAAS6S,EAAe5U,GAAOiV,GAAY;AACzC,WAAOC,GAAgBL,EAAY7U,CAAK,GAAGiV,CAAU;AAAA,EACvD;AAGA,WAASJ,EAAY7U,GAAO;AAC1B,WAAOmV,GAAY3B,GAAQxT,CAAK;AAAA,EAClC;AAGA,WAAS2U,IAAM;AAEb,UAAM;AAAA,MACJ,cAAAS;AAAA,MACA,QAAAC;AAAA,MACA,MAAA/pB;AAAA,MACA,QAAA+J;AAAA,MACA,QAAAqN;AAAA,IACN,IAAQpK;AACJ,WAAO;AAAA,MACL,cAAA8c;AAAA,MACA,QAAAC;AAAA,MACA,MAAA/pB;AAAA,MACA,QAAA+J;AAAA,MACA,QAAAqN;AAAA,IACN;AAAA,EACE;AAGA,WAASgS,EAAW1tB,GAAO;AACzB,IAAAotB,EAAYptB,EAAM,IAAI,IAAIA,EAAM,QAChCsuB,EAAuB;AAAA,EACzB;AAiBA,WAASP,IAAO;AAEd,QAAIQ;AACJ,WAAOjd,EAAM,SAASkb,EAAO,UAAQ;AACnC,YAAMG,IAAQH,EAAOlb,EAAM,MAAM;AAGjC,UAAI,OAAOqb,KAAU;AAKnB,aAJA4B,IAAajd,EAAM,QACfA,EAAM,eAAe,MACvBA,EAAM,eAAe,IAEhBA,EAAM,WAAWid,KAAcjd,EAAM,eAAeqb,EAAM;AAC/D,UAAA6B,EAAG7B,EAAM,WAAWrb,EAAM,YAAY,CAAC;AAAA;AAGzC,QAAAkd,EAAG7B,CAAK;AAAA,IAEZ;AAAA,EACF;AAUA,WAAS6B,EAAG5X,GAAM;AAGhB,IAAAjE,IAAQA,EAAMiE,CAAI;AAAA,EACpB;AAGA,WAAS6W,EAAQ7W,GAAM;AACrB,IAAIe,EAAmBf,CAAI,KACzBtF,EAAM,QACNA,EAAM,SAAS,GACfA,EAAM,UAAUsF,MAAS,KAAK,IAAI,GAClC0X,EAAuB,KACd1X,MAAS,OAClBtF,EAAM,UACNA,EAAM,WAIJA,EAAM,eAAe,IACvBA,EAAM,YAENA,EAAM,gBAGFA,EAAM;AAAA;AAAA;AAAA,IAIVkb,EAAOlb,EAAM,MAAM,EAAE,WACnBA,EAAM,eAAe,IACrBA,EAAM,YAKVyJ,EAAQ,WAAWnE;AAAA,EAIrB;AAGA,WAAS2I,EAAM5gB,GAAM8vB,GAAQ;AAG3B,UAAMzV,IAAQyV,KAAU,CAAA;AACxB,WAAAzV,EAAM,OAAOra,GACbqa,EAAM,QAAQ2U,EAAG,GACjB5S,EAAQ,OAAO,KAAK,CAAC,SAAS/B,GAAO+B,CAAO,CAAC,GAC7C1B,EAAM,KAAKL,CAAK,GACTA;AAAA,EACT;AAGA,WAAS6D,EAAKle,GAAM;AAClB,UAAMqa,IAAQK,EAAM,IAAG;AACvB,WAAAL,EAAM,MAAM2U,EAAG,GACf5S,EAAQ,OAAO,KAAK,CAAC,QAAQ/B,GAAO+B,CAAO,CAAC,GACrC/B;AAAA,EACT;AAOA,WAASuU,EAAsBmB,GAAW9iB,GAAM;AAC9C,IAAAoiB,EAAUU,GAAW9iB,EAAK,IAAI;AAAA,EAChC;AAOA,WAAS4hB,EAAkB1hB,GAAGF,GAAM;AAClC,IAAAA,EAAK,QAAO;AAAA,EACd;AAUA,WAAS0hB,EAAiBqB,GAAUF,GAAQ;AAC1C,WAAOhY;AAeP,aAASA,EAAKI,GAAY6P,GAAakI,GAAY;AAEjD,UAAIC,IAEAC,GAEAC,IAEAnjB;AACJ,aAAO,MAAM,QAAQiL,CAAU;AAAA;AAAA,QAC/BmY,EAAuBnY,CAAU;AAAA,UAAI,cAAcA;AAAA;AAAA,QAEnDmY,EAAuB;AAAA;AAAA,UAA0BnY;AAAA,QAAU,CAAE;AAAA,UAAIoY,EAAsBpY,CAAU;AAUjG,eAASoY,EAAsBC,IAAK;AAClC,eAAOxgB;AAGP,iBAASA,GAAMkI,IAAM;AACnB,gBAAMF,KAAOE,OAAS,QAAQsY,GAAItY,EAAI,GAChCjB,KAAMiB,OAAS,QAAQsY,GAAI,MAC3BnZ,KAAO;AAAA;AAAA;AAAA,YAGb,GAAI,MAAM,QAAQW,EAAI,IAAIA,KAAOA,KAAO,CAACA,EAAI,IAAI,CAAA;AAAA,YAAK,GAAI,MAAM,QAAQf,EAAG,IAAIA,KAAMA,KAAM,CAACA,EAAG,IAAI,CAAA;AAAA,UAAG;AACtG,iBAAOqZ,EAAuBjZ,EAAI,EAAEa,EAAI;AAAA,QAC1C;AAAA,MACF;AAUA,eAASoY,EAAuBjZ,IAAM;AAGpC,eAFA8Y,KAAmB9Y,IACnB+Y,IAAiB,GACb/Y,GAAK,WAAW,IACX6Y,IAEFO,EAAgBpZ,GAAK+Y,CAAc,CAAC;AAAA,MAC7C;AAUA,eAASK,EAAgBT,IAAW;AAClC,eAAOhgB;AAGP,iBAASA,GAAMkI,IAAM;AAanB,iBARAhL,IAAOwjB,EAAK,GACZL,KAAmBL,IACdA,GAAU,YACb3T,EAAQ,mBAAmB2T,KAKzBA,GAAU,QAAQ3T,EAAQ,OAAO,WAAW,QAAQ,KAAK,SAAS2T,GAAU,IAAI,IAC3E/T,GAAQ,IAEV+T,GAAU,SAAS;AAAA;AAAA;AAAA;AAAA,YAI1BD,IAAS,OAAO,OAAO,OAAO,OAAO1T,CAAO,GAAG0T,CAAM,IAAI1T;AAAA,YAASzC;AAAA,YAASC;AAAA,YAAIoC;AAAA,UAAG,EAAE/D,EAAI;AAAA,QAC1F;AAAA,MACF;AAGA,eAAS2B,GAAG3B,IAAM;AAEhB,eAAA+X,EAASI,IAAkBnjB,CAAI,GACxB8a;AAAA,MACT;AAGA,eAAS/L,GAAI/D,IAAM;AAGjB,eADAhL,EAAK,QAAO,GACR,EAAEkjB,IAAiBD,GAAiB,SAC/BM,EAAgBN,GAAiBC,CAAc,CAAC,IAElDF;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAUA,WAASZ,EAAUU,GAAWvZ,GAAM;AAClC,IAAIuZ,EAAU,cAAc,CAACrB,EAAqB,SAASqB,CAAS,KAClErB,EAAqB,KAAKqB,CAAS,GAEjCA,EAAU,WACZ5Y,GAAOiF,EAAQ,QAAQ5F,GAAM4F,EAAQ,OAAO,SAAS5F,GAAMuZ,EAAU,QAAQ3T,EAAQ,OAAO,MAAM5F,CAAI,GAAG4F,CAAO,CAAC,GAE/G2T,EAAU,cACZ3T,EAAQ,SAAS2T,EAAU,UAAU3T,EAAQ,QAAQA,CAAO;AAAA,EAEhE;AAQA,WAASqU,IAAQ;AACf,UAAMC,IAAa1B,EAAG,GAChB2B,IAAgBvU,EAAQ,UACxBwU,IAAwBxU,EAAQ,kBAChCyU,IAAmBzU,EAAQ,OAAO,QAClC0U,IAAa,MAAM,KAAKpW,CAAK;AACnC,WAAO;AAAA,MACL,MAAMmW;AAAA,MACN,SAAAE;AAAA,IACN;AAQI,aAASA,IAAU;AACjB,MAAApe,IAAQ+d,GACRtU,EAAQ,WAAWuU,GACnBvU,EAAQ,mBAAmBwU,GAC3BxU,EAAQ,OAAO,SAASyU,GACxBnW,IAAQoW,GACRnB,EAAuB;AAAA,IACzB;AAAA,EACF;AASA,WAASA,IAA0B;AACjC,IAAIhd,EAAM,QAAQ8b,KAAe9b,EAAM,SAAS,MAC9CA,EAAM,SAAS8b,EAAY9b,EAAM,IAAI,GACrCA,EAAM,UAAU8b,EAAY9b,EAAM,IAAI,IAAI;AAAA,EAE9C;AACF;AAYA,SAAS6c,GAAY3B,GAAQxT,GAAO;AAClC,QAAM2W,IAAa3W,EAAM,MAAM,QACzB4W,IAAmB5W,EAAM,MAAM,cAC/B6W,IAAW7W,EAAM,IAAI,QACrB8W,IAAiB9W,EAAM,IAAI;AAEjC,MAAI+W;AACJ,MAAIJ,MAAeE;AAEjB,IAAAE,IAAO,CAACvD,EAAOmD,CAAU,EAAE,MAAMC,GAAkBE,CAAc,CAAC;AAAA,OAC7D;AAEL,QADAC,IAAOvD,EAAO,MAAMmD,GAAYE,CAAQ,GACpCD,IAAmB,IAAI;AACzB,YAAMI,IAAOD,EAAK,CAAC;AACnB,MAAI,OAAOC,KAAS,WAClBD,EAAK,CAAC,IAAIC,EAAK,MAAMJ,CAAgB,IAGrCG,EAAK,MAAK;AAAA,IAEd;AACA,IAAID,IAAiB,KAEnBC,EAAK,KAAKvD,EAAOqD,CAAQ,EAAE,MAAM,GAAGC,CAAc,CAAC;AAAA,EAEvD;AACA,SAAOC;AACT;AAYA,SAAS7B,GAAgB1B,GAAQyB,GAAY;AAC3C,MAAI1iB,IAAQ;AAEZ,QAAMpI,IAAS,CAAA;AAEf,MAAI8sB;AACJ,SAAO,EAAE1kB,IAAQihB,EAAO,UAAQ;AAC9B,UAAMG,IAAQH,EAAOjhB,CAAK;AAE1B,QAAIvL;AACJ,QAAI,OAAO2sB,KAAU;AACnB,MAAA3sB,IAAQ2sB;AAAA,QACH,SAAQA,GAAK;AAAA,MAClB,KAAK,IACH;AACE,QAAA3sB,IAAQ;AACR;AAAA,MACF;AAAA,MACF,KAAK,IACH;AACE,QAAAA,IAAQ;AAAA;AACR;AAAA,MACF;AAAA,MACF,KAAK,IACH;AACE,QAAAA,IAAQ;AAAA;AACR;AAAA,MACF;AAAA,MACF,KAAK,IACH;AACE,QAAAA,IAAQiuB,IAAa,MAAM;AAC3B;AAAA,MACF;AAAA,MACF,KAAK,IACH;AACE,YAAI,CAACA,KAAcgC,EAAO;AAC1B,QAAAjwB,IAAQ;AACR;AAAA,MACF;AAAA,MACF;AAGI,QAAAA,IAAQ,OAAO,aAAa2sB,CAAK;AAAA,IAE3C;AACI,IAAAsD,IAAQtD,MAAU,IAClBxpB,EAAO,KAAKnD,CAAK;AAAA,EACnB;AACA,SAAOmD,EAAO,KAAK,EAAE;AACvB;AC1kBO,SAAS+sB,GAAM5oB,GAAS;AAM7B,QAAM4lB,IAAS;AAAA,IACb;AAAA;AAAA,MAJF7W,GAAkB,CAAC8Z,IAAmB,IAFrB7oB,KAAW,CAAA,GAEuB,cAAc,CAAA,CAAG,CAAC;AAAA;AAAA,IAKnE,SAAShB,EAAO6C,EAAO;AAAA,IACvB,SAAS,CAAA;AAAA,IACT,UAAU7C,EAAO2S,EAAQ;AAAA,IACzB,MAAM3S,EAAOqlB,EAAI;AAAA,IACjB,MAAM,CAAA;AAAA,IACN,QAAQrlB,EAAO2lB,EAAM;AAAA,IACrB,MAAM3lB,EAAO4M,EAAI;AAAA,EACrB;AACE,SAAOga;AAQP,WAAS5mB,EAAOoZ,GAAS;AACvB,WAAO0Q;AAEP,aAASA,EAAQjb,GAAM;AACrB,aAAO8X,GAAgBC,GAAQxN,GAASvK,CAAI;AAAA,IAC9C;AAAA,EACF;AACF;AC3CO,SAASkb,GAAYvV,GAAQ;AAClC,SAAO,CAACkF,GAAYlF,CAAM;AAAG;AAG7B,SAAOA;AACT;ACAA,MAAMwV,KAAS;AAMR,SAASC,KAAa;AAC3B,MAAIliB,IAAS,GACT/K,IAAS,IAEToL,IAAQ,IAER8hB;AACJ,SAAOC;AAIP,WAASA,EAAazwB,GAAO0wB,GAAUlf,GAAK;AAE1C,UAAMgb,IAAS,CAAA;AAEf,QAAI3d,GAEAuJ,GAEAsI,GAEAiQ,GAEA/Z;AAWJ,SAVA5W,IAAQsD,KAAU,OAAOtD,KAAU,WAAWA,EAAM,SAAQ,IAAK,IAAI,YAAY0wB,KAAY,MAAS,EAAE,OAAO1wB,CAAK,IACpH0gB,IAAgB,GAChBpd,IAAS,IACLoL,MAEE1O,EAAM,WAAW,CAAC,MAAM,SAC1B0gB,KAEFhS,IAAQ,SAEHgS,IAAgB1gB,EAAM,UAAQ;AAKnC,UAJAswB,GAAO,YAAY5P,GACnB7R,IAAQyhB,GAAO,KAAKtwB,CAAK,GACzB2wB,IAAc9hB,KAASA,EAAM,UAAU,SAAYA,EAAM,QAAQ7O,EAAM,QACvE4W,IAAO5W,EAAM,WAAW2wB,CAAW,GAC/B,CAAC9hB,GAAO;AACV,QAAAvL,IAAStD,EAAM,MAAM0gB,CAAa;AAClC;AAAA,MACF;AACA,UAAI9J,MAAS,MAAM8J,MAAkBiQ,KAAeH;AAClD,QAAAhE,EAAO,KAAK,EAAE,GACdgE,IAAmB;AAAA;AAUnB,gBARIA,MACFhE,EAAO,KAAK,EAAE,GACdgE,IAAmB,SAEjB9P,IAAgBiQ,MAClBnE,EAAO,KAAKxsB,EAAM,MAAM0gB,GAAeiQ,CAAW,CAAC,GACnDtiB,KAAUsiB,IAAcjQ,IAElB9J,GAAI;AAAA,UACV,KAAK,GACH;AACE,YAAA4V,EAAO,KAAK,KAAK,GACjBne;AACA;AAAA,UACF;AAAA,UACF,KAAK,GACH;AAGE,iBAFA+J,IAAO,KAAK,KAAK/J,IAAS,CAAC,IAAI,GAC/Bme,EAAO,KAAK,EAAE,GACPne,MAAW+J,IAAM,CAAAoU,EAAO,KAAK,EAAE;AACtC;AAAA,UACF;AAAA,UACF,KAAK,IACH;AACE,YAAAA,EAAO,KAAK,EAAE,GACdne,IAAS;AACT;AAAA,UACF;AAAA,UACF;AAEI,YAAAmiB,IAAmB,IACnBniB,IAAS;AAAA,QAEvB;AAEM,MAAAqS,IAAgBiQ,IAAc;AAAA,IAChC;AACA,WAAInf,MACEgf,KAAkBhE,EAAO,KAAK,EAAE,GAChClpB,KAAQkpB,EAAO,KAAKlpB,CAAM,GAC9BkpB,EAAO,KAAK,IAAI,IAEXA;AAAA,EACT;AACF;AChHA,MAAMoE,KAA6B;AAc5B,SAASC,GAAa7wB,GAAO;AAClC,SAAOA,EAAM,QAAQ4wB,IAA4BE,EAAM;AACzD;AAYA,SAASA,GAAO7jB,GAAI8jB,GAAIC,GAAI;AAC1B,MAAID;AAEF,WAAOA;AAKT,MADaC,EAAG,WAAW,CAAC,MACf,IAAI;AACf,UAAMhB,IAAOgB,EAAG,WAAW,CAAC,GACtBC,IAAMjB,MAAS,OAAOA,MAAS;AACrC,WAAOhZ,GAAgCga,EAAG,MAAMC,IAAM,IAAI,CAAC,GAAGA,IAAM,KAAK,EAAE;AAAA,EAC7E;AACA,SAAOrb,GAA8Bob,CAAE,KAAK/jB;AAC9C;ACIA,MAAMgF,KAAM,CAAA,EAAG;AAyBR,SAASif,GAAalxB,GAAO0wB,GAAUppB,GAAS;AACrD,SAAI,OAAOopB,KAAa,aACtBppB,IAAUopB,GACVA,IAAW,SAENS,GAAS7pB,CAAO,EAAE+oB,GAAYH,GAAM5oB,CAAO,EAAE,SAAQ,EAAG,MAAMipB,GAAU,EAAGvwB,GAAO0wB,GAAU,EAAI,CAAC,CAAC,CAAC;AAC5G;AAOA,SAASS,GAAS7pB,GAAS;AAEzB,QAAM1I,IAAS;AAAA,IACb,YAAY,CAAA;AAAA,IACZ,gBAAgB,CAAC,YAAY,YAAY,WAAW,aAAa,QAAQ;AAAA,IACzE,OAAO;AAAA,MACL,UAAUwyB,EAAOC,EAAI;AAAA,MACrB,kBAAkBC;AAAA,MAClB,eAAeA;AAAA,MACf,YAAYF,EAAO3F,EAAO;AAAA,MAC1B,YAAY2F,EAAOzU,EAAU;AAAA,MAC7B,iBAAiB2U;AAAA,MACjB,oBAAoBA;AAAA,MACpB,YAAYF,EAAOG,EAAQ;AAAA,MAC3B,qBAAqBjuB;AAAA,MACrB,qBAAqBA;AAAA,MACrB,cAAc8tB,EAAOG,IAAUjuB,CAAM;AAAA,MACrC,UAAU8tB,EAAOlS,IAAU5b,CAAM;AAAA,MACjC,cAAcguB;AAAA,MACd,MAAMA;AAAA,MACN,eAAeA;AAAA,MACf,YAAYF,EAAO9mB,EAAU;AAAA,MAC7B,6BAA6BhH;AAAA,MAC7B,uBAAuBA;AAAA,MACvB,uBAAuBA;AAAA,MACvB,UAAU8tB,EAAOI,EAAQ;AAAA,MACzB,iBAAiBJ,EAAOK,EAAS;AAAA,MACjC,mBAAmBL,EAAOK,EAAS;AAAA,MACnC,UAAUL,EAAOllB,IAAM5I,CAAM;AAAA,MAC7B,cAAcguB;AAAA,MACd,UAAUF,EAAOllB,IAAM5I,CAAM;AAAA,MAC7B,cAAcguB;AAAA,MACd,OAAOF,EAAOM,EAAK;AAAA,MACnB,OAAOpuB;AAAA,MACP,MAAM8tB,EAAOC,EAAI;AAAA,MACjB,UAAUD,EAAOO,EAAQ;AAAA,MACzB,eAAeC;AAAA,MACf,aAAaR,EAAOrb,IAAM8b,CAAkB;AAAA,MAC5C,eAAeT,EAAOrb,EAAI;AAAA,MAC1B,WAAWqb,EAAO1F,EAAS;AAAA,MAC3B,WAAWoG;AAAA,MACX,iBAAiBxuB;AAAA,MACjB,2BAA2BA;AAAA,MAC3B,qBAAqBA;AAAA,MACrB,eAAe8tB,EAAO3F,EAAO;AAAA,MAC7B,QAAQ2F,EAAOW,EAAM;AAAA,MACrB,eAAeX,EAAOhH,EAAa;AAAA,IACzC;AAAA,IACI,MAAM;AAAA,MACJ,YAAY4H,EAAM;AAAA,MAClB,oBAAoBC;AAAA,MACpB,UAAUD,EAAM;AAAA,MAChB,eAAeE;AAAA,MACf,kBAAkBC;AAAA,MAClB,YAAYH,EAAM;AAAA,MAClB,sBAAsBI;AAAA,MACtB,qCAAqCC;AAAA,MACrC,iCAAiCA;AAAA,MACjC,yBAAyBC;AAAA,MACzB,oBAAoBC;AAAA,MACpB,YAAYP,EAAOQ,CAAgB;AAAA,MACnC,iBAAiBC;AAAA,MACjB,qBAAqBC;AAAA,MACrB,qBAAqBC;AAAA,MACrB,eAAeP;AAAA,MACf,cAAcJ,EAAOY,CAAkB;AAAA,MACvC,UAAUZ,EAAOa,CAAc;AAAA,MAC/B,cAAcT;AAAA,MACd,MAAMA;AAAA,MACN,YAAYJ,EAAM;AAAA,MAClB,6BAA6Bc;AAAA,MAC7B,uBAAuBC;AAAA,MACvB,uBAAuBC;AAAA,MACvB,UAAUhB,EAAM;AAAA,MAChB,iBAAiBA,EAAOiB,CAAe;AAAA,MACvC,mBAAmBjB,EAAOiB,CAAe;AAAA,MACzC,UAAUjB,EAAOkB,CAAc;AAAA,MAC/B,cAAcd;AAAA,MACd,UAAUJ,EAAOmB,CAAc;AAAA,MAC/B,cAAcf;AAAA,MACd,OAAOJ,EAAOoB,EAAW;AAAA,MACzB,OAAOC;AAAA,MACP,WAAWC;AAAA,MACX,YAAYC;AAAA,MACZ,MAAMvB,EAAOwB,CAAU;AAAA,MACvB,UAAUxB,EAAM;AAAA,MAChB,aAAaA,EAAM;AAAA,MACnB,eAAeA,EAAM;AAAA,MACrB,WAAWA,EAAM;AAAA,MACjB,iBAAiByB;AAAA,MACjB,2BAA2BC;AAAA,MAC3B,qBAAqBC;AAAA,MACrB,UAAUC;AAAA,MACV,eAAe5B,EAAO6B,CAAmB;AAAA,MACzC,2BAA2BC;AAAA,MAC3B,mBAAmBC;AAAA,MACnB,QAAQ/B,EAAM;AAAA,MACd,eAAeA,EAAM;AAAA,IAC3B;AAAA,EACA;AACE,EAAAgC,GAAUp1B,IAAS0I,KAAW,CAAA,GAAI,mBAAmB,CAAA,CAAE;AAGvD,QAAMC,IAAO,CAAA;AACb,SAAO0sB;AAUP,WAASA,EAAQnZ,GAAQ;AAEvB,QAAIvI,IAAO;AAAA,MACT,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAEI,UAAMwI,IAAU;AAAA,MACd,OAAO,CAACxI,CAAI;AAAA,MACZ,YAAY,CAAA;AAAA,MACZ,QAAA3T;AAAA,MACA,OAAA2gB;AAAA,MACA,MAAA1C;AAAA,MACA,QAAAvZ;AAAA,MACA,QAAA4wB;AAAA,MACA,MAAA3sB;AAAA,IACN,GAEU4sB,KAAY,CAAA;AAClB,QAAI5oB,KAAQ;AACZ,WAAO,EAAEA,KAAQuP,EAAO;AAGtB,UAAIA,EAAOvP,EAAK,EAAE,CAAC,EAAE,SAAS,iBAAiBuP,EAAOvP,EAAK,EAAE,CAAC,EAAE,SAAS;AACvE,YAAIuP,EAAOvP,EAAK,EAAE,CAAC,MAAM;AACvB,UAAA4oB,GAAU,KAAK5oB,EAAK;AAAA,aACf;AACL,gBAAMwS,KAAOoW,GAAU,IAAG;AAC1B,UAAA5oB,KAAQ6oB,EAAYtZ,GAAQiD,IAAMxS,EAAK;AAAA,QACzC;AAIJ,SADAA,KAAQ,IACD,EAAEA,KAAQuP,EAAO,UAAQ;AAC9B,YAAMuZ,KAAUz1B,EAAOkc,EAAOvP,EAAK,EAAE,CAAC,CAAC;AACvC,MAAI0G,GAAI,KAAKoiB,IAASvZ,EAAOvP,EAAK,EAAE,CAAC,EAAE,IAAI,KACzC8oB,GAAQvZ,EAAOvP,EAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,OAAO,OAAO;AAAA,QAChD,gBAAgBuP,EAAOvP,EAAK,EAAE,CAAC,EAAE;AAAA,MAC3C,GAAWwP,CAAO,GAAGD,EAAOvP,EAAK,EAAE,CAAC,CAAC;AAAA,IAEjC;AAGA,QAAIwP,EAAQ,WAAW,SAAS,GAAG;AACjC,YAAMgD,KAAOhD,EAAQ,WAAWA,EAAQ,WAAW,SAAS,CAAC;AAE7D,OADgBgD,GAAK,CAAC,KAAKuW,IACnB,KAAKvZ,GAAS,QAAWgD,GAAK,CAAC,CAAC;AAAA,IAC1C;AAkBA,SAfAxL,EAAK,WAAW;AAAA,MACd,OAAOjB,GAAMwJ,EAAO,SAAS,IAAIA,EAAO,CAAC,EAAE,CAAC,EAAE,QAAQ;AAAA,QACpD,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,MAChB,CAAO;AAAA,MACD,KAAKxJ,GAAMwJ,EAAO,SAAS,IAAIA,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,MAAM;AAAA,QAChE,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,MAChB,CAAO;AAAA,IACP,GAGIvP,KAAQ,IACD,EAAEA,KAAQ3M,EAAO,WAAW;AACjC,MAAA2T,IAAO3T,EAAO,WAAW2M,EAAK,EAAEgH,CAAI,KAAKA;AAE3C,WAAOA;AAAA,EACT;AAQA,WAAS6hB,EAAYtZ,GAAQpM,GAAO6lB,GAAQ;AAC1C,QAAIhpB,KAAQmD,IAAQ,GAChB8lB,KAAmB,IACnBC,KAAa,IAEb9C,IAEAxR,IAEAuU,IAEA1J;AACJ,WAAO,EAAEzf,MAASgpB,KAAQ;AACxB,YAAM1rB,KAAQiS,EAAOvP,EAAK;AAC1B,cAAQ1C,GAAM,CAAC,EAAE,MAAI;AAAA,QACnB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,cACH;AACE,UAAIA,GAAM,CAAC,MAAM,UACf2rB,OAEAA,MAEFxJ,KAAW;AACX;AAAA,QACF;AAAA,QACF,KAAK,mBACH;AACE,UAAIniB,GAAM,CAAC,MAAM,YACX8oB,MAAY,CAAC3G,MAAY,CAACwJ,MAAoB,CAACE,OACjDA,KAAsBnpB,KAExByf,KAAW;AAEb;AAAA,QACF;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAID;AAAA,QAEJ;AAEI,UAAAA,KAAW;AAAA,MAEvB;AACM,UAAI,CAACwJ,MAAoB3rB,GAAM,CAAC,MAAM,WAAWA,GAAM,CAAC,EAAE,SAAS,oBAAoB2rB,OAAqB,MAAM3rB,GAAM,CAAC,MAAM,WAAWA,GAAM,CAAC,EAAE,SAAS,mBAAmBA,GAAM,CAAC,EAAE,SAAS,gBAAgB;AAC/M,YAAI8oB,IAAU;AACZ,cAAIgD,KAAYppB;AAEhB,eADA4U,KAAY,QACLwU,QAAa;AAClB,kBAAMC,KAAY9Z,EAAO6Z,EAAS;AAClC,gBAAIC,GAAU,CAAC,EAAE,SAAS,gBAAgBA,GAAU,CAAC,EAAE,SAAS,mBAAmB;AACjF,kBAAIA,GAAU,CAAC,MAAM,OAAQ;AAC7B,cAAIzU,OACFrF,EAAOqF,EAAS,EAAE,CAAC,EAAE,OAAO,mBAC5BsU,KAAa,KAEfG,GAAU,CAAC,EAAE,OAAO,cACpBzU,KAAYwU;AAAA,YACd,WAAW,EAAAC,GAAU,CAAC,EAAE,SAAS,gBAAgBA,GAAU,CAAC,EAAE,SAAS,sBAAsBA,GAAU,CAAC,EAAE,SAAS,gCAAgCA,GAAU,CAAC,EAAE,SAAS,sBAAsBA,GAAU,CAAC,EAAE,SAAS,kBAGnN;AAAA,UAEJ;AACA,UAAIF,OAAwB,CAACvU,MAAauU,KAAsBvU,QAC9DwR,GAAS,UAAU,KAIrBA,GAAS,MAAM,OAAO,OAAO,CAAA,GAAIxR,KAAYrF,EAAOqF,EAAS,EAAE,CAAC,EAAE,QAAQtX,GAAM,CAAC,EAAE,GAAG,GACtFiS,EAAO,OAAOqF,MAAa5U,IAAO,GAAG,CAAC,QAAQomB,IAAU9oB,GAAM,CAAC,CAAC,CAAC,GACjE0C,MACAgpB;AAAA,QACF;AAGA,YAAI1rB,GAAM,CAAC,EAAE,SAAS,kBAAkB;AAEtC,gBAAM6Q,KAAO;AAAA,YACX,MAAM;AAAA,YACN,SAAS;AAAA,YACT,OAAO,OAAO,OAAO,CAAA,GAAI7Q,GAAM,CAAC,EAAE,KAAK;AAAA;AAAA,YAEvC,KAAK;AAAA,UACjB;AACU,UAAA8oB,KAAWjY,IACXoB,EAAO,OAAOvP,IAAO,GAAG,CAAC,SAASmO,IAAM7Q,GAAM,CAAC,CAAC,CAAC,GACjD0C,MACAgpB,KACAG,KAAsB,QACtB1J,KAAW;AAAA,QACb;AAAA,MACF;AAAA,IACF;AACA,WAAAlQ,EAAOpM,CAAK,EAAE,CAAC,EAAE,UAAU+lB,IACpBF;AAAA,EACT;AAYA,WAASnD,EAAO9qB,GAAQuuB,GAAK;AAC3B,WAAOzZ;AAOP,aAASA,EAAKpC,IAAO;AACnB,MAAAuG,EAAM,KAAK,MAAMjZ,EAAO0S,EAAK,GAAGA,EAAK,GACjC6b,KAAKA,EAAI,KAAK,MAAM7b,EAAK;AAAA,IAC/B;AAAA,EACF;AAKA,WAAS1V,IAAS;AAChB,SAAK,MAAM,KAAK;AAAA,MACd,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB,CAAK;AAAA,EACH;AAKA,WAASic,EAAMnd,GAAM4W,GAAO8b,GAAc;AAIxC,IAHe,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAEvB,SACf,KAAK1yB,CAAI,GAClB,KAAK,MAAM,KAAKA,CAAI,GACpB,KAAK,WAAW,KAAK,CAAC4W,GAAO8b,KAAgB,MAAS,CAAC,GACvD1yB,EAAK,WAAW;AAAA,MACd,OAAOkP,GAAM0H,EAAM,KAAK;AAAA;AAAA,MAExB,KAAK;AAAA,IACX;AAAA,EACE;AAUA,WAASgZ,EAAO6C,GAAK;AACnB,WAAO/rB;AAOP,aAASA,EAAMkQ,GAAO;AACpB,MAAI6b,KAAKA,EAAI,KAAK,MAAM7b,CAAK,GAC7B6D,EAAK,KAAK,MAAM7D,CAAK;AAAA,IACvB;AAAA,EACF;AAKA,WAAS6D,EAAK7D,GAAO+b,GAAa;AAChC,UAAM3yB,IAAO,KAAK,MAAM,IAAG,GACrBgZ,KAAO,KAAK,WAAW,IAAG;AAChC,QAAKA;AAKE,MAAIA,GAAK,CAAC,EAAE,SAASpC,EAAM,SAC5B+b,IACFA,EAAY,KAAK,MAAM/b,GAAOoC,GAAK,CAAC,CAAC,KAErBA,GAAK,CAAC,KAAKkZ,IACnB,KAAK,MAAMtb,GAAOoC,GAAK,CAAC,CAAC;AAAA,QATnC,OAAM,IAAI,MAAM,mBAAmBpC,EAAM,OAAO,QAAQvH,GAAkB;AAAA,MACxE,OAAOuH,EAAM;AAAA,MACb,KAAKA,EAAM;AAAA,IACnB,CAAO,IAAI,kBAAkB;AASzB,IAAA5W,EAAK,SAAS,MAAMkP,GAAM0H,EAAM,GAAG;AAAA,EACrC;AAKA,WAASkb,IAAS;AAChB,WAAO1e,GAAS,KAAK,MAAM,IAAG,CAAE;AAAA,EAClC;AAUA,WAASqc,IAAqB;AAC5B,SAAK,KAAK,8BAA8B;AAAA,EAC1C;AAMA,WAASD,EAAqB5Y,GAAO;AACnC,QAAI,KAAK,KAAK,6BAA6B;AACzC,YAAMgc,IAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACjD,MAAAA,EAAS,QAAQ,OAAO,SAAS,KAAK,eAAehc,CAAK,GAAG,EAAE,GAC/D,KAAK,KAAK,8BAA8B;AAAA,IAC1C;AAAA,EACF;AAMA,WAAS0Z,IAA4B;AACnC,UAAMnrB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,OAAOmF;AAAA,EACd;AAMA,WAASorB,IAA4B;AACnC,UAAMprB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,OAAOmF;AAAA,EACd;AAMA,WAASkrB,IAAwB;AAE/B,IAAI,KAAK,KAAK,mBACd,KAAK,OAAM,GACX,KAAK,KAAK,iBAAiB;AAAA,EAC7B;AAMA,WAASD,IAAmB;AAC1B,UAAMjrB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQmF,EAAK,QAAQ,4BAA4B,EAAE,GACxD,KAAK,KAAK,iBAAiB;AAAA,EAC7B;AAMA,WAASqrB,IAAqB;AAC5B,UAAMrrB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQmF,EAAK,QAAQ,gBAAgB,EAAE;AAAA,EAC9C;AAMA,WAASwrB,EAA4B/Z,GAAO;AAC1C,UAAM2P,IAAQ,KAAK,OAAM,GACnBvmB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQumB,GACbvmB,EAAK,aAAa8U,GAAoB,KAAK,eAAe8B,CAAK,CAAC,EAAE,YAAW;AAAA,EAC/E;AAMA,WAASga,IAA8B;AACrC,UAAMzrB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQmF;AAAA,EACf;AAMA,WAASurB,IAAoC;AAC3C,UAAMvrB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,MAAMmF;AAAA,EACb;AAMA,WAAS0qB,EAAyBjZ,GAAO;AACvC,UAAM5W,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,QAAI,CAACA,EAAK,OAAO;AACf,YAAM6yB,IAAQ,KAAK,eAAejc,CAAK,EAAE;AACzC,MAAA5W,EAAK,QAAQ6yB;AAAA,IACf;AAAA,EACF;AAMA,WAASlB,IAA0B;AACjC,SAAK,KAAK,+BAA+B;AAAA,EAC3C;AAMA,WAASD,EAAgC9a,GAAO;AAC9C,UAAM5W,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQ,KAAK,eAAe4W,CAAK,EAAE,YAAY,CAAC,MAAM,KAAK,IAAI;AAAA,EACtE;AAMA,WAAS6a,IAAsB;AAC7B,SAAK,KAAK,+BAA+B;AAAA,EAC3C;AAOA,WAASvC,EAAYtY,GAAO;AAG1B,UAAMkc,IAFO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAEvB;AACtB,QAAInX,KAAOmX,EAASA,EAAS,SAAS,CAAC;AACvC,KAAI,CAACnX,MAAQA,GAAK,SAAS,YAEzBA,KAAO7K,GAAI,GACX6K,GAAK,WAAW;AAAA,MACd,OAAOzM,GAAM0H,EAAM,KAAK;AAAA;AAAA,MAExB,KAAK;AAAA,IACb,GACMkc,EAAS,KAAKnX,EAAI,IAEpB,KAAK,MAAM,KAAKA,EAAI;AAAA,EACtB;AAOA,WAASqU,EAAWpZ,GAAO;AACzB,UAAM+E,IAAO,KAAK,MAAM,IAAG;AAC3B,IAAAA,EAAK,SAAS,KAAK,eAAe/E,CAAK,GACvC+E,EAAK,SAAS,MAAMzM,GAAM0H,EAAM,GAAG;AAAA,EACrC;AAOA,WAASua,EAAiBva,GAAO;AAC/B,UAAM+B,IAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAEhD,QAAI,KAAK,KAAK,aAAa;AACzB,YAAMgD,IAAOhD,EAAQ,SAASA,EAAQ,SAAS,SAAS,CAAC;AACzD,MAAAgD,EAAK,SAAS,MAAMzM,GAAM0H,EAAM,GAAG,GACnC,KAAK,KAAK,cAAc;AACxB;AAAA,IACF;AACA,IAAI,CAAC,KAAK,KAAK,gCAAgCpa,EAAO,eAAe,SAASmc,EAAQ,IAAI,MACxFuW,EAAY,KAAK,MAAMtY,CAAK,GAC5BoZ,EAAW,KAAK,MAAMpZ,CAAK;AAAA,EAE/B;AAOA,WAASia,IAAkB;AACzB,SAAK,KAAK,cAAc;AAAA,EAC1B;AAOA,WAASC,IAAiB;AACxB,UAAM3rB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQmF;AAAA,EACf;AAOA,WAAS4rB,IAAiB;AACxB,UAAM5rB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQmF;AAAA,EACf;AAOA,WAASsrB,IAAiB;AACxB,UAAMtrB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQmF;AAAA,EACf;AAOA,WAASisB,IAAa;AACpB,UAAMpxB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAK7C,QAAI,KAAK,KAAK,aAAa;AAEzB,YAAM+yB,IAAgB,KAAK,KAAK,iBAAiB;AACjD,MAAA/yB,EAAK,QAAQ,aAEbA,EAAK,gBAAgB+yB,GAErB,OAAO/yB,EAAK,KACZ,OAAOA,EAAK;AAAA,IACd;AAEE,aAAOA,EAAK,YAEZ,OAAOA,EAAK;AAEd,SAAK,KAAK,gBAAgB;AAAA,EAC5B;AAOA,WAASgxB,KAAc;AACrB,UAAMhxB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAK7C,QAAI,KAAK,KAAK,aAAa;AAEzB,YAAM+yB,IAAgB,KAAK,KAAK,iBAAiB;AACjD,MAAA/yB,EAAK,QAAQ,aAEbA,EAAK,gBAAgB+yB,GAErB,OAAO/yB,EAAK,KACZ,OAAOA,EAAK;AAAA,IACd;AAEE,aAAOA,EAAK,YAEZ,OAAOA,EAAK;AAEd,SAAK,KAAK,gBAAgB;AAAA,EAC5B;AAOA,WAASkxB,EAAgBta,GAAO;AAC9B,UAAMiT,IAAS,KAAK,eAAejT,CAAK,GAClCgc,IAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAGjD,IAAAA,EAAS,QAAQnE,GAAa5E,CAAM,GAEpC+I,EAAS,aAAa9d,GAAoB+U,CAAM,EAAE,YAAW;AAAA,EAC/D;AAOA,WAASoH,KAAc;AACrB,UAAM+B,IAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAC3Cp1B,IAAQ,KAAK,OAAM,GACnBoC,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAG7C,QADA,KAAK,KAAK,cAAc,IACpBA,EAAK,SAAS,QAAQ;AAExB,YAAMN,KAAWszB,EAAS;AAC1B,MAAAhzB,EAAK,WAAWN;AAAA,IAClB;AACE,MAAAM,EAAK,MAAMpC;AAAA,EAEf;AAOA,WAAS0zB,IAAkC;AACzC,UAAMnsB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,MAAMmF;AAAA,EACb;AAOA,WAASosB,IAA4B;AACnC,UAAMpsB,IAAO,KAAK,OAAM,GAClBnF,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQmF;AAAA,EACf;AAOA,WAASqsB,IAAiB;AACxB,SAAK,KAAK,cAAc;AAAA,EAC1B;AAOA,WAAS9B,IAAmB;AAC1B,SAAK,KAAK,gBAAgB;AAAA,EAC5B;AAOA,WAAS2B,GAAsBza,GAAO;AACpC,UAAM2P,IAAQ,KAAK,OAAM,GACnBvmB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAG7C,IAAAA,EAAK,QAAQumB,GAEbvmB,EAAK,aAAa8U,GAAoB,KAAK,eAAe8B,CAAK,CAAC,EAAE,YAAW,GAC7E,KAAK,KAAK,gBAAgB;AAAA,EAC5B;AAOA,WAASqZ,GAA+BrZ,GAAO;AAC7C,SAAK,KAAK,yBAAyBA,EAAM;AAAA,EAC3C;AAMA,WAASsZ,GAA8BtZ,GAAO;AAC5C,UAAMzR,IAAO,KAAK,eAAeyR,CAAK,GAChCra,IAAO,KAAK,KAAK;AAEvB,QAAIqB;AACJ,IAAIrB,KACFqB,KAAQgX,GAAgCzP,GAAM5I,MAAS,oCAAoC,KAAK,EAAE,GAClG,KAAK,KAAK,yBAAyB,UAGnCqB,KADe4V,GAA8BrO,CAAI;AAGnD,UAAMwW,KAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,GAAK,SAAS/d;AAAA,EAChB;AAMA,WAASuyB,GAAyBvZ,GAAO;AACvC,UAAM+E,IAAO,KAAK,MAAM,IAAG;AAC3B,IAAAA,EAAK,SAAS,MAAMzM,GAAM0H,EAAM,GAAG;AAAA,EACrC;AAMA,WAASmZ,GAAuBnZ,GAAO;AACrC,IAAAoZ,EAAW,KAAK,MAAMpZ,CAAK;AAC3B,UAAM5W,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,MAAM,KAAK,eAAe4W,CAAK;AAAA,EACtC;AAMA,WAASkZ,GAAoBlZ,GAAO;AAClC,IAAAoZ,EAAW,KAAK,MAAMpZ,CAAK;AAC3B,UAAM5W,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,MAAM,YAAY,KAAK,eAAe4W,CAAK;AAAA,EAClD;AAOA,WAAS2D,KAAa;AACpB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAAS4U,KAAW;AAClB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACb;AAAA,EACE;AAGA,WAASrS,KAAW;AAClB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,IACb;AAAA,EACE;AAGA,WAAS5U,KAAa;AACpB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,IACX;AAAA,EACE;AAGA,WAASknB,KAAW;AAClB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAAS/F,KAAU;AACjB,WAAO;AAAA,MACL,MAAM;AAAA;AAAA,MAEN,OAAO;AAAA,MACP,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAASgG,KAAY;AACnB,WAAO;AAAA,MACL,MAAM;AAAA,IACZ;AAAA,EACE;AAGA,WAASvlB,KAAO;AACd,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,IACb;AAAA,EACE;AAGA,WAASwlB,KAAQ;AACf,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK;AAAA,IACX;AAAA,EACE;AAGA,WAASL,KAAO;AACd,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAMA,WAAStb,GAAKiD,GAAO;AACnB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAASA,EAAM,SAAS;AAAA,MACxB,OAAO;AAAA,MACP,QAAQA,EAAM;AAAA,MACd,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAMA,WAAS2Y,GAAS3Y,GAAO;AACvB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQA,EAAM;AAAA,MACd,SAAS;AAAA,MACT,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAAS0S,KAAY;AACnB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAASqG,KAAS;AAChB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAAS7e,KAAO;AACd,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,IACb;AAAA,EACE;AAGA,WAASkX,KAAgB;AACvB,WAAO;AAAA,MACL,MAAM;AAAA,IACZ;AAAA,EACE;AACF;AAUA,SAAS9Y,GAAM+jB,GAAG;AAChB,SAAO;AAAA,IACL,MAAMA,EAAE;AAAA,IACR,QAAQA,EAAE;AAAA,IACV,QAAQA,EAAE;AAAA,EACd;AACA;AAOA,SAASrB,GAAUsB,GAAUhf,GAAY;AACvC,MAAI/K,IAAQ;AACZ,SAAO,EAAEA,IAAQ+K,EAAW,UAAQ;AAClC,UAAMtW,IAAQsW,EAAW/K,CAAK;AAC9B,IAAI,MAAM,QAAQvL,CAAK,IACrBg0B,GAAUsB,GAAUt1B,CAAK,IAEzBwW,GAAU8e,GAAUt1B,CAAK;AAAA,EAE7B;AACF;AAOA,SAASwW,GAAU8e,GAAU9e,GAAW;AAEtC,MAAI1X;AACJ,OAAKA,KAAO0X;AACV,QAAIvE,GAAI,KAAKuE,GAAW1X,CAAG;AACzB,cAAQA,GAAG;AAAA,QACT,KAAK,kBACH;AACE,gBAAM6X,IAAQH,EAAU1X,CAAG;AAC3B,UAAI6X,KACF2e,EAASx2B,CAAG,EAAE,KAAK,GAAG6X,CAAK;AAE7B;AAAA,QACF;AAAA,QACF,KAAK,cACH;AACE,gBAAMA,IAAQH,EAAU1X,CAAG;AAC3B,UAAI6X,KACF2e,EAASx2B,CAAG,EAAE,KAAK,GAAG6X,CAAK;AAE7B;AAAA,QACF;AAAA,QACF,KAAK;AAAA,QACL,KAAK,QACH;AACE,gBAAMA,IAAQH,EAAU1X,CAAG;AAC3B,UAAI6X,KACF,OAAO,OAAO2e,EAASx2B,CAAG,GAAG6X,CAAK;AAEpC;AAAA,QACF;AAAA,MAEV;AAGA;AAGA,SAAS2d,GAAe5d,GAAMC,GAAO;AACnC,QAAID,IACI,IAAI,MAAM,mBAAmBA,EAAK,OAAO,QAAQjF,GAAkB;AAAA,IACvE,OAAOiF,EAAK;AAAA,IACZ,KAAKA,EAAK;AAAA,EAChB,CAAK,IAAI,4BAA4BC,EAAM,OAAO,QAAQlF,GAAkB;AAAA,IACtE,OAAOkF,EAAM;AAAA,IACb,KAAKA,EAAM;AAAA,EACjB,CAAK,IAAI,WAAW,IAEV,IAAI,MAAM,sCAAsCA,EAAM,OAAO,QAAQlF,GAAkB;AAAA,IAC3F,OAAOkF,EAAM;AAAA,IACb,KAAKA,EAAM;AAAA,EACjB,CAAK,IAAI,iBAAiB;AAE1B;ACnoCe,SAAS4e,GAAYjuB,GAAS;AAG3C,QAAM/F,IAAO;AAEb,EAAAA,EAAK,SAAS2rB;AAKd,WAASA,EAAOsI,GAAK;AACnB,WAAOtE,GAAasE,GAAK;AAAA,MACvB,GAAGj0B,EAAK,KAAK,UAAU;AAAA,MACvB,GAAG+F;AAAA;AAAA;AAAA;AAAA,MAIH,YAAY/F,EAAK,KAAK,qBAAqB,KAAK,CAAA;AAAA,MAChD,iBAAiBA,EAAK,KAAK,wBAAwB,KAAK,CAAA;AAAA,IAC9D,CAAK;AAAA,EACH;AACF;ACvBO,SAASk0B,GAAW9iB,GAAOvQ,GAAM;AAEtC,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUwP,EAAM,KAAKA,EAAM,IAAIvQ,CAAI,GAAG,EAAI;AAAA,EAC9C;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACTO,SAASsuB,GAAU9e,GAAOvQ,GAAM;AAErC,QAAMe,IAAS,EAAC,MAAM,WAAW,SAAS,MAAM,YAAY,IAAI,UAAU,CAAA,EAAE;AAC5E,SAAAwP,EAAM,MAAMvQ,GAAMe,CAAM,GACjB,CAACwP,EAAM,UAAUvQ,GAAMe,CAAM,GAAG,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC;AACpE;ACLO,SAASyT,GAAKjE,GAAOvQ,GAAM;AAChC,QAAMpC,IAAQoC,EAAK,QAAQA,EAAK,QAAQ;AAAA,IAAO,IAEzCsJ,IAAa,CAAA;AAEnB,EAAItJ,EAAK,SACPsJ,EAAW,YAAY,CAAC,cAActJ,EAAK,IAAI;AAKjD,MAAIe,IAAS;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAAuI;AAAA,IACA,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAA1L,EAAK,CAAC;AAAA,EACpC;AAEE,SAAIoC,EAAK,SACPe,EAAO,OAAO,EAAC,MAAMf,EAAK,KAAI,IAGhCuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACxBA,IAASwP,EAAM,UAAUvQ,GAAMe,CAAM,GAGrCA,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAY,CAAA,GAAI,UAAU,CAACA,CAAM,EAAC,GAC7EwP,EAAM,MAAMvQ,GAAMe,CAAM,GACjBA;AACT;AC9BO,SAASuyB,GAAc/iB,GAAOvQ,GAAM;AAEzC,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUwP,EAAM,IAAIvQ,CAAI;AAAA,EAC5B;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACVO,SAASquB,GAAS7e,GAAOvQ,GAAM;AAEpC,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUwP,EAAM,IAAIvQ,CAAI;AAAA,EAC5B;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACXO,SAASwyB,GAAkBhjB,GAAOvQ,GAAM;AAC7C,QAAMwzB,IACJ,OAAOjjB,EAAM,QAAQ,iBAAkB,WACnCA,EAAM,QAAQ,gBACd,iBACA7L,IAAK,OAAO1E,EAAK,UAAU,EAAE,YAAW,GACxCyzB,IAAS5d,GAAanR,EAAG,YAAW,CAAE,GACtCyE,IAAQoH,EAAM,cAAc,QAAQ7L,CAAE;AAE5C,MAAIgvB,GAEAC,IAAepjB,EAAM,eAAe,IAAI7L,CAAE;AAE9C,EAAIivB,MAAiB,UACnBA,IAAe,GACfpjB,EAAM,cAAc,KAAK7L,CAAE,GAC3BgvB,IAAUnjB,EAAM,cAAc,UAE9BmjB,IAAUvqB,IAAQ,GAGpBwqB,KAAgB,GAChBpjB,EAAM,eAAe,IAAI7L,GAAIivB,CAAY;AAGzC,QAAM1E,IAAO;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY;AAAA,MACV,MAAM,MAAMuE,IAAgB,QAAQC;AAAA,MACpC,IACED,IACA,WACAC,KACCE,IAAe,IAAI,MAAMA,IAAe;AAAA,MAC3C,iBAAiB;AAAA,MACjB,iBAAiB,CAAC,gBAAgB;AAAA,IACxC;AAAA,IACI,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAOD,CAAO,EAAC,CAAC;AAAA,EACrD;AACE,EAAAnjB,EAAM,MAAMvQ,GAAMivB,CAAI;AAGtB,QAAM2E,IAAM;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAU,CAAC3E,CAAI;AAAA,EACnB;AACE,SAAA1e,EAAM,MAAMvQ,GAAM4zB,CAAG,GACdrjB,EAAM,UAAUvQ,GAAM4zB,CAAG;AAClC;AClDO,SAASvK,GAAQ9Y,GAAOvQ,GAAM;AAEnC,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS,MAAMf,EAAK;AAAA,IACpB,YAAY,CAAA;AAAA,IACZ,UAAUuQ,EAAM,IAAIvQ,CAAI;AAAA,EAC5B;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACRO,SAAS+I,GAAKyG,GAAOvQ,GAAM;AAChC,MAAIuQ,EAAM,QAAQ,oBAAoB;AAEpC,UAAMxP,IAAS,EAAC,MAAM,OAAO,OAAOf,EAAK,MAAK;AAC9C,WAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AAAA,EACrC;AAGF;ACRO,SAAS8yB,GAAOtjB,GAAOvQ,GAAM;AAClC,QAAM8zB,IAAU9zB,EAAK;AACrB,MAAI+zB,IAAS;AAQb,MANID,MAAY,cACdC,KAAU,OACDD,MAAY,WACrBC,KAAU,OAAO/zB,EAAK,SAASA,EAAK,cAAc,MAGhDA,EAAK,SAAS;AAChB,WAAO,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAOA,EAAK,MAAM+zB,EAAM,CAAC;AAGzD,QAAMC,IAAWzjB,EAAM,IAAIvQ,CAAI,GACzB4tB,IAAOoG,EAAS,CAAC;AAEvB,EAAIpG,KAAQA,EAAK,SAAS,SACxBA,EAAK,QAAQ,MAAMA,EAAK,QAExBoG,EAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAG7C,QAAMrY,IAAOqY,EAASA,EAAS,SAAS,CAAC;AAEzC,SAAIrY,KAAQA,EAAK,SAAS,SACxBA,EAAK,SAASoY,IAEdC,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAOD,EAAM,CAAC,GAGtCC;AACT;ACjCO,SAASC,GAAe1jB,GAAOvQ,GAAM;AAC1C,QAAM0E,IAAK,OAAO1E,EAAK,UAAU,EAAE,YAAW,GACxCkI,IAAaqI,EAAM,eAAe,IAAI7L,CAAE;AAE9C,MAAI,CAACwD;AACH,WAAO2rB,GAAOtjB,GAAOvQ,CAAI;AAI3B,QAAMsJ,IAAa,EAAC,KAAKuM,GAAa3N,EAAW,OAAO,EAAE,GAAG,KAAKlI,EAAK,IAAG;AAE1E,EAAIkI,EAAW,UAAU,QAAQA,EAAW,UAAU,WACpDoB,EAAW,QAAQpB,EAAW;AAIhC,QAAMnH,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAAuI,GAAY,UAAU,CAAA,EAAE;AACzE,SAAAiH,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACrBO,SAASuuB,GAAM/e,GAAOvQ,GAAM;AAEjC,QAAMsJ,IAAa,EAAC,KAAKuM,GAAa7V,EAAK,GAAG,EAAC;AAE/C,EAAIA,EAAK,QAAQ,QAAQA,EAAK,QAAQ,WACpCsJ,EAAW,MAAMtJ,EAAK,MAGpBA,EAAK,UAAU,QAAQA,EAAK,UAAU,WACxCsJ,EAAW,QAAQtJ,EAAK;AAI1B,QAAMe,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAAuI,GAAY,UAAU,CAAA,EAAE;AACzE,SAAAiH,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACfO,SAASmzB,GAAW3jB,GAAOvQ,GAAM;AAEtC,QAAM8Q,IAAO,EAAC,MAAM,QAAQ,OAAO9Q,EAAK,MAAM,QAAQ,aAAa,GAAG,EAAC;AACvE,EAAAuQ,EAAM,MAAMvQ,GAAM8Q,CAAI;AAGtB,QAAM/P,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAU,CAAC+P,CAAI;AAAA,EACnB;AACE,SAAAP,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACbO,SAASozB,GAAc5jB,GAAOvQ,GAAM;AACzC,QAAM0E,IAAK,OAAO1E,EAAK,UAAU,EAAE,YAAW,GACxCkI,IAAaqI,EAAM,eAAe,IAAI7L,CAAE;AAE9C,MAAI,CAACwD;AACH,WAAO2rB,GAAOtjB,GAAOvQ,CAAI;AAI3B,QAAMsJ,IAAa,EAAC,MAAMuM,GAAa3N,EAAW,OAAO,EAAE,EAAC;AAE5D,EAAIA,EAAW,UAAU,QAAQA,EAAW,UAAU,WACpDoB,EAAW,QAAQpB,EAAW;AAIhC,QAAMnH,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAAuI;AAAA,IACA,UAAUiH,EAAM,IAAIvQ,CAAI;AAAA,EAC5B;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;AC1BO,SAASkuB,GAAK1e,GAAOvQ,GAAM;AAEhC,QAAMsJ,IAAa,EAAC,MAAMuM,GAAa7V,EAAK,GAAG,EAAC;AAEhD,EAAIA,EAAK,UAAU,QAAQA,EAAK,UAAU,WACxCsJ,EAAW,QAAQtJ,EAAK;AAI1B,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAAuI;AAAA,IACA,UAAUiH,EAAM,IAAIvQ,CAAI;AAAA,EAC5B;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACZO,SAASwuB,GAAShf,GAAOvQ,GAAM4P,GAAQ;AAC5C,QAAMwkB,IAAU7jB,EAAM,IAAIvQ,CAAI,GACxBq0B,IAAQzkB,IAAS0kB,GAAU1kB,CAAM,IAAI2kB,GAAcv0B,CAAI,GAEvDsJ,IAAa,CAAA,GAEb5J,IAAW,CAAA;AAEjB,MAAI,OAAOM,EAAK,WAAY,WAAW;AACrC,UAAM4tB,IAAOwG,EAAQ,CAAC;AAEtB,QAAI9K;AAEJ,IAAIsE,KAAQA,EAAK,SAAS,aAAaA,EAAK,YAAY,MACtDtE,IAAYsE,KAEZtE,IAAY,EAAC,MAAM,WAAW,SAAS,KAAK,YAAY,IAAI,UAAU,CAAA,EAAE,GACxE8K,EAAQ,QAAQ9K,CAAS,IAGvBA,EAAU,SAAS,SAAS,KAC9BA,EAAU,SAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC,GAGvDA,EAAU,SAAS,QAAQ;AAAA,MACzB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,MAAM,YAAY,SAAStpB,EAAK,SAAS,UAAU,GAAI;AAAA,MACpE,UAAU,CAAA;AAAA,IAChB,CAAK,GAIDsJ,EAAW,YAAY,CAAC,gBAAgB;AAAA,EAC1C;AAEA,MAAIH,IAAQ;AAEZ,SAAO,EAAEA,IAAQirB,EAAQ,UAAQ;AAC/B,UAAMjjB,IAAQijB,EAAQjrB,CAAK;AAG3B,KACEkrB,KACAlrB,MAAU,KACVgI,EAAM,SAAS,aACfA,EAAM,YAAY,QAElBzR,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC,GAGvCyR,EAAM,SAAS,aAAaA,EAAM,YAAY,OAAO,CAACkjB,IACxD30B,EAAS,KAAK,GAAGyR,EAAM,QAAQ,IAE/BzR,EAAS,KAAKyR,CAAK;AAAA,EAEvB;AAEA,QAAMwK,IAAOyY,EAAQA,EAAQ,SAAS,CAAC;AAGvC,EAAIzY,MAAS0Y,KAAS1Y,EAAK,SAAS,aAAaA,EAAK,YAAY,QAChEjc,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC;AAI3C,QAAMqB,IAAS,EAAC,MAAM,WAAW,SAAS,MAAM,YAAAuI,GAAY,UAAA5J,EAAQ;AACpE,SAAA6Q,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;AAMA,SAASuzB,GAAUt0B,GAAM;AACvB,MAAIq0B,IAAQ;AACZ,MAAIr0B,EAAK,SAAS,QAAQ;AACxB,IAAAq0B,IAAQr0B,EAAK,UAAU;AACvB,UAAMN,IAAWM,EAAK;AACtB,QAAImJ,IAAQ;AAEZ,WAAO,CAACkrB,KAAS,EAAElrB,IAAQzJ,EAAS;AAClC,MAAA20B,IAAQE,GAAc70B,EAASyJ,CAAK,CAAC;AAAA,EAEzC;AAEA,SAAOkrB;AACT;AAMA,SAASE,GAAcv0B,GAAM;AAC3B,QAAMw0B,IAASx0B,EAAK;AAEpB,SAAOw0B,KACHx0B,EAAK,SAAS,SAAS;AAE7B;ACxGO,SAAS2T,GAAKpD,GAAOvQ,GAAM;AAEhC,QAAMsJ,IAAa,CAAA,GACb8qB,IAAU7jB,EAAM,IAAIvQ,CAAI;AAC9B,MAAImJ,IAAQ;AAOZ,OALI,OAAOnJ,EAAK,SAAU,YAAYA,EAAK,UAAU,MACnDsJ,EAAW,QAAQtJ,EAAK,QAInB,EAAEmJ,IAAQirB,EAAQ,UAAQ;AAC/B,UAAMjjB,IAAQijB,EAAQjrB,CAAK;AAE3B,QACEgI,EAAM,SAAS,aACfA,EAAM,YAAY,QAClBA,EAAM,cACN,MAAM,QAAQA,EAAM,WAAW,SAAS,KACxCA,EAAM,WAAW,UAAU,SAAS,gBAAgB,GACpD;AACA,MAAA7H,EAAW,YAAY,CAAC,oBAAoB;AAC5C;AAAA,IACF;AAAA,EACF;AAGA,QAAMvI,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAASf,EAAK,UAAU,OAAO;AAAA,IAC/B,YAAAsJ;AAAA,IACA,UAAUiH,EAAM,KAAK6jB,GAAS,EAAI;AAAA,EACtC;AACE,SAAA7jB,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACpCO,SAASuoB,GAAU/Y,GAAOvQ,GAAM;AAErC,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUwP,EAAM,IAAIvQ,CAAI;AAAA,EAC5B;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACTO,SAAS8P,GAAKN,GAAOvQ,GAAM;AAEhC,QAAMe,IAAS,EAAC,MAAM,QAAQ,UAAUwP,EAAM,KAAKA,EAAM,IAAIvQ,CAAI,CAAC,EAAC;AACnE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACNO,SAAS4uB,GAAOpf,GAAOvQ,GAAM;AAElC,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUwP,EAAM,IAAIvQ,CAAI;AAAA,EAC5B;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACXO,SAAS0zB,GAAMlkB,GAAOvQ,GAAM;AACjC,QAAM00B,IAAOnkB,EAAM,IAAIvQ,CAAI,GACrB20B,IAAWD,EAAK,MAAK,GAErBE,IAAe,CAAA;AAErB,MAAID,GAAU;AAEZ,UAAM/G,IAAO;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,CAAA;AAAA,MACZ,UAAUrd,EAAM,KAAK,CAACokB,CAAQ,GAAG,EAAI;AAAA,IAC3C;AACI,IAAApkB,EAAM,MAAMvQ,EAAK,SAAS,CAAC,GAAG4tB,CAAI,GAClCgH,EAAa,KAAKhH,CAAI;AAAA,EACxB;AAEA,MAAI8G,EAAK,SAAS,GAAG;AAEnB,UAAMG,IAAO;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,CAAA;AAAA,MACZ,UAAUtkB,EAAM,KAAKmkB,GAAM,EAAI;AAAA,IACrC,GAEUpoB,IAAQ6C,GAAWnP,EAAK,SAAS,CAAC,CAAC,GACnCoP,IAAMH,GAASjP,EAAK,SAASA,EAAK,SAAS,SAAS,CAAC,CAAC;AAC5D,IAAIsM,KAAS8C,MAAKylB,EAAK,WAAW,EAAC,OAAAvoB,GAAO,KAAA8C,EAAG,IAC7CwlB,EAAa,KAAKC,CAAI;AAAA,EACxB;AAGA,QAAM9zB,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUwP,EAAM,KAAKqkB,GAAc,EAAI;AAAA,EAC3C;AACE,SAAArkB,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACpCO,SAAS+zB,GAASvkB,GAAOvQ,GAAM4P,GAAQ;AAC5C,QAAMkjB,IAAWljB,IAASA,EAAO,WAAW,QAGtC+S,KADWmQ,IAAWA,EAAS,QAAQ9yB,CAAI,IAAI,OACxB,IAAI,OAAO,MAElC+0B,IAAQnlB,KAAUA,EAAO,SAAS,UAAUA,EAAO,QAAQ,QAC3DuiB,IAAS4C,IAAQA,EAAM,SAAS/0B,EAAK,SAAS;AACpD,MAAIg1B,IAAY;AAEhB,QAAMC,IAAQ,CAAA;AAEd,SAAO,EAAED,IAAY7C,KAAQ;AAE3B,UAAM+C,IAAOl1B,EAAK,SAASg1B,CAAS,GAE9B1rB,IAAa,CAAA,GACbwI,IAAaijB,IAAQA,EAAMC,CAAS,IAAI;AAE9C,IAAIljB,MACFxI,EAAW,QAAQwI;AAIrB,QAAI/Q,IAAS,EAAC,MAAM,WAAW,SAAA4hB,GAAS,YAAArZ,GAAY,UAAU,CAAA,EAAE;AAEhE,IAAI4rB,MACFn0B,EAAO,WAAWwP,EAAM,IAAI2kB,CAAI,GAChC3kB,EAAM,MAAM2kB,GAAMn0B,CAAM,GACxBA,IAASwP,EAAM,UAAU2kB,GAAMn0B,CAAM,IAGvCk0B,EAAM,KAAKl0B,CAAM;AAAA,EACnB;AAGA,QAAMA,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUwP,EAAM,KAAK0kB,GAAO,EAAI;AAAA,EACpC;AACE,SAAA1kB,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACjDO,SAASo0B,GAAU5kB,GAAOvQ,GAAM;AAIrC,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUwP,EAAM,IAAIvQ,CAAI;AAAA,EAC5B;AACE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;AC/BA,MAAMq0B,KAAM,GACNrtB,KAAQ;AAWP,SAASstB,GAAUz3B,GAAO;AAC/B,QAAMwB,IAAS,OAAOxB,CAAK,GACrBswB,IAAS;AACf,MAAIzhB,IAAQyhB,EAAO,KAAK9uB,CAAM,GAC1Bk2B,IAAO;AAEX,QAAMlpB,IAAQ,CAAA;AAEd,SAAOK;AACL,IAAAL,EAAM;AAAA,MACJmpB,GAASn2B,EAAO,MAAMk2B,GAAM7oB,EAAM,KAAK,GAAG6oB,IAAO,GAAG,EAAI;AAAA,MACxD7oB,EAAM,CAAC;AAAA,IACb,GAEI6oB,IAAO7oB,EAAM,QAAQA,EAAM,CAAC,EAAE,QAC9BA,IAAQyhB,EAAO,KAAK9uB,CAAM;AAG5B,SAAAgN,EAAM,KAAKmpB,GAASn2B,EAAO,MAAMk2B,CAAI,GAAGA,IAAO,GAAG,EAAK,CAAC,GAEjDlpB,EAAM,KAAK,EAAE;AACtB;AAYA,SAASmpB,GAAS33B,GAAO0O,GAAO8C,GAAK;AACnC,MAAIme,IAAa,GACbE,IAAW7vB,EAAM;AAErB,MAAI0O,GAAO;AACT,QAAIkI,IAAO5W,EAAM,YAAY2vB,CAAU;AAEvC,WAAO/Y,MAAS4gB,MAAO5gB,MAASzM;AAC9B,MAAAwlB,KACA/Y,IAAO5W,EAAM,YAAY2vB,CAAU;AAAA,EAEvC;AAEA,MAAIne,GAAK;AACP,QAAIoF,IAAO5W,EAAM,YAAY6vB,IAAW,CAAC;AAEzC,WAAOjZ,MAAS4gB,MAAO5gB,MAASzM;AAC9B,MAAA0lB,KACAjZ,IAAO5W,EAAM,YAAY6vB,IAAW,CAAC;AAAA,EAEzC;AAEA,SAAOA,IAAWF,IAAa3vB,EAAM,MAAM2vB,GAAYE,CAAQ,IAAI;AACrE;ACjDO,SAAS3c,GAAKP,GAAOvQ,GAAM;AAEhC,QAAMe,IAAS,EAAC,MAAM,QAAQ,OAAOs0B,GAAU,OAAOr1B,EAAK,KAAK,CAAC,EAAC;AAClE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACLO,SAASinB,GAAczX,GAAOvQ,GAAM;AAEzC,QAAMe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAU,CAAA;AAAA,EACd;AACE,SAAAwP,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;ACAO,MAAMy0B,KAAW;AAAA,EACxB,YAAEnC;AAAAA,EACA,OAAOhE;AAAAA,EACT,MAAE7a;AAAAA,EACA,QAAQ8e;AAAA,EACV,UAAElE;AAAAA,EACF,mBAAEmE;AAAAA,EACF,SAAElK;AAAAA,EACF,MAAEvf;AAAAA,EACF,gBAAEmqB;AAAAA,EACF,OAAE3E;AAAAA,EACF,YAAE4E;AAAAA,EACF,eAAEC;AAAAA,EACF,MAAElF;AAAAA,EACF,UAAEM;AAAAA,EACF,MAAE5b;AAAAA,EACF,WAAE2V;AAAAA;AAAAA,EAEF,MAAEzY;AAAAA,EACF,QAAE8e;AAAAA,EACA,OAAA8E;AAAA,EACA,WAAAU;AAAA,EACA,UAAAL;AAAA,EACF,MAAEhkB;AAAAA,EACF,eAAEkX;AAAAA,EACA,MAAMyN;AAAA,EACN,MAAMA;AAAA,EACN,YAAYA;AAAA,EACZ,oBAAoBA;AACtB;AAGA,SAASA,KAAS;AAElB;AC/DO,MAAMC,KAAa,IACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GCFpBC,KAAM,OAAO,QAAS,WAAW,OAAO,YAExCC,KAAe,CAACC,GAAG5sB,MAAM;AAC7B,QAAM6sB,IAAK,CAACC,GAAKrtB,OACfmtB,EAAE,IAAIntB,GAAOqtB,CAAG,GACTA,IAGHC,IAAS,CAAAttB,MAAS;AACtB,QAAImtB,EAAE,IAAIntB,CAAK;AACb,aAAOmtB,EAAE,IAAIntB,CAAK;AAEpB,UAAM,CAAC5M,GAAMqB,CAAK,IAAI8L,EAAEP,CAAK;AAC7B,YAAQ5M,GAAI;AAAA,MACV,KAAKo5B;AAAA,MACL,KAAKD;AACH,eAAOa,EAAG34B,GAAOuL,CAAK;AAAA,MACxB,KAAKysB,IAAO;AACV,cAAMt0B,IAAMi1B,EAAG,CAAA,GAAIptB,CAAK;AACxB,mBAAWA,KAASvL;AAClB,UAAA0D,EAAI,KAAKm1B,EAAOttB,CAAK,CAAC;AACxB,eAAO7H;AAAA,MACT;AAAA,MACA,KAAKu0B,IAAQ;AACX,cAAMa,IAASH,EAAG,CAAA,GAAIptB,CAAK;AAC3B,mBAAW,CAACzM,GAAKyM,CAAK,KAAKvL;AACzB,UAAA84B,EAAOD,EAAO/5B,CAAG,CAAC,IAAI+5B,EAAOttB,CAAK;AACpC,eAAOutB;AAAA,MACT;AAAA,MACA,KAAKZ;AACH,eAAOS,EAAG,IAAI,KAAK34B,CAAK,GAAGuL,CAAK;AAAA,MAClC,KAAK4sB,IAAQ;AACX,cAAM,EAAC,QAAA32B,GAAQ,OAAAu3B,EAAK,IAAI/4B;AACxB,eAAO24B,EAAG,IAAI,OAAOn3B,GAAQu3B,CAAK,GAAGxtB,CAAK;AAAA,MAC5C;AAAA,MACA,KAAK6sB,IAAK;AACR,cAAMlJ,IAAMyJ,EAAG,oBAAI,OAAKptB,CAAK;AAC7B,mBAAW,CAACzM,GAAKyM,CAAK,KAAKvL;AACzB,UAAAkvB,EAAI,IAAI2J,EAAO/5B,CAAG,GAAG+5B,EAAOttB,CAAK,CAAC;AACpC,eAAO2jB;AAAA,MACT;AAAA,MACA,KAAKmJ,IAAK;AACR,cAAMW,IAAML,EAAG,oBAAI,OAAKptB,CAAK;AAC7B,mBAAWA,KAASvL;AAClB,UAAAg5B,EAAI,IAAIH,EAAOttB,CAAK,CAAC;AACvB,eAAOytB;AAAA,MACT;AAAA,MACA,KAAKV,IAAO;AACV,cAAM,EAAC,MAAAh4B,GAAM,SAAA6D,EAAO,IAAInE;AACxB,eAAO24B,EAAG,IAAIH,GAAIl4B,CAAI,EAAE6D,CAAO,GAAGoH,CAAK;AAAA,MACzC;AAAA,MACA,KAAKgtB;AACH,eAAOI,EAAG,OAAO34B,CAAK,GAAGuL,CAAK;AAAA,MAChC,KAAK;AACH,eAAOotB,EAAG,OAAO,OAAO34B,CAAK,CAAC,GAAGuL,CAAK;AAAA,MACxC,KAAK;AACH,eAAOotB,EAAG,IAAI,WAAW34B,CAAK,EAAE,QAAQA,CAAK;AAAA,MAC/C,KAAK,YAAY;AACf,cAAM,EAAE,QAAAsD,EAAM,IAAK,IAAI,WAAWtD,CAAK;AACvC,eAAO24B,EAAG,IAAI,SAASr1B,CAAM,GAAGtD,CAAK;AAAA,MACvC;AAAA,IACN;AACI,WAAO24B,EAAG,IAAIH,GAAI75B,CAAI,EAAEqB,CAAK,GAAGuL,CAAK;AAAA,EACvC;AAEA,SAAOstB;AACT,GAWaI,KAAc,CAAAC,MAAcT,GAAa,oBAAI,OAAKS,CAAU,EAAE,CAAC,GC7EtEC,KAAQ,IAER,EAAC,UAAA3jB,GAAQ,IAAI,CAAA,GACb,EAAC,MAAAvT,GAAI,IAAI,QAETm3B,KAAS,CAAAp5B,MAAS;AACtB,QAAMrB,IAAO,OAAOqB;AACpB,MAAIrB,MAAS,YAAY,CAACqB;AACxB,WAAO,CAAC+3B,IAAWp5B,CAAI;AAEzB,QAAM06B,IAAW7jB,GAAS,KAAKxV,CAAK,EAAE,MAAM,GAAG,EAAE;AACjD,UAAQq5B,GAAQ;AAAA,IACd,KAAK;AACH,aAAO,CAACrB,IAAOmB,EAAK;AAAA,IACtB,KAAK;AACH,aAAO,CAAClB,IAAQkB,EAAK;AAAA,IACvB,KAAK;AACH,aAAO,CAACjB,IAAMiB,EAAK;AAAA,IACrB,KAAK;AACH,aAAO,CAAChB,IAAQgB,EAAK;AAAA,IACvB,KAAK;AACH,aAAO,CAACf,IAAKe,EAAK;AAAA,IACpB,KAAK;AACH,aAAO,CAACd,IAAKc,EAAK;AAAA,IACpB,KAAK;AACH,aAAO,CAACnB,IAAOqB,CAAQ;AAAA,EAC7B;AAEE,SAAIA,EAAS,SAAS,OAAO,IACpB,CAACrB,IAAOqB,CAAQ,IAErBA,EAAS,SAAS,OAAO,IACpB,CAACf,IAAOe,CAAQ,IAElB,CAACpB,IAAQoB,CAAQ;AAC1B,GAEMC,KAAa,CAAC,CAACC,GAAM56B,CAAI,MAC7B46B,MAASxB,OACRp5B,MAAS,cAAcA,MAAS,WAG7B66B,KAAa,CAACC,GAAQC,GAAMhB,GAAG5sB,MAAM;AAEzC,QAAM6sB,IAAK,CAACC,GAAK54B,MAAU;AACzB,UAAMuL,IAAQO,EAAE,KAAK8sB,CAAG,IAAI;AAC5B,WAAAF,EAAE,IAAI14B,GAAOuL,CAAK,GACXA;AAAA,EACT,GAEMouB,IAAO,CAAA35B,MAAS;AACpB,QAAI04B,EAAE,IAAI14B,CAAK;AACb,aAAO04B,EAAE,IAAI14B,CAAK;AAEpB,QAAI,CAACu5B,GAAM56B,CAAI,IAAIy6B,GAAOp5B,CAAK;AAC/B,YAAQu5B,GAAI;AAAA,MACV,KAAKxB,IAAW;AACd,YAAIrd,IAAQ1a;AACZ,gBAAQrB,GAAI;AAAA,UACV,KAAK;AACH,YAAA46B,IAAOhB,IACP7d,IAAQ1a,EAAM,SAAQ;AACtB;AAAA,UACF,KAAK;AAAA,UACL,KAAK;AACH,gBAAIy5B;AACF,oBAAM,IAAI,UAAU,yBAAyB96B,CAAI;AACnD,YAAA+b,IAAQ;AACR;AAAA,UACF,KAAK;AACH,mBAAOie,EAAG,CAACb,EAAI,GAAG93B,CAAK;AAAA,QACnC;AACQ,eAAO24B,EAAG,CAACY,GAAM7e,CAAK,GAAG1a,CAAK;AAAA,MAChC;AAAA,MACA,KAAKg4B,IAAO;AACV,YAAIr5B,GAAM;AACR,cAAIi4B,IAAS52B;AACb,iBAAIrB,MAAS,aACXi4B,IAAS,IAAI,WAAW52B,EAAM,MAAM,IAE7BrB,MAAS,kBAChBi4B,IAAS,IAAI,WAAW52B,CAAK,IAExB24B,EAAG,CAACh6B,GAAM,CAAC,GAAGi4B,CAAM,CAAC,GAAG52B,CAAK;AAAA,QACtC;AAEA,cAAM0D,IAAM,CAAA,GACN6H,IAAQotB,EAAG,CAACY,GAAM71B,CAAG,GAAG1D,CAAK;AACnC,mBAAW0a,KAAS1a;AAClB,UAAA0D,EAAI,KAAKi2B,EAAKjf,CAAK,CAAC;AACtB,eAAOnP;AAAA,MACT;AAAA,MACA,KAAK0sB,IAAQ;AACX,YAAIt5B;AACF,kBAAQA,GAAI;AAAA,YACV,KAAK;AACH,qBAAOg6B,EAAG,CAACh6B,GAAMqB,EAAM,SAAQ,CAAE,GAAGA,CAAK;AAAA,YAC3C,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACH,qBAAO24B,EAAG,CAACh6B,GAAMqB,EAAM,QAAO,CAAE,GAAGA,CAAK;AAAA,UACtD;AAGQ,YAAI05B,KAAS,YAAY15B;AACvB,iBAAO25B,EAAK35B,EAAM,QAAQ;AAE5B,cAAM45B,IAAU,CAAA,GACVruB,IAAQotB,EAAG,CAACY,GAAMK,CAAO,GAAG55B,CAAK;AACvC,mBAAWlB,KAAOmD,GAAKjC,CAAK;AAC1B,WAAIy5B,KAAU,CAACH,GAAWF,GAAOp5B,EAAMlB,CAAG,CAAC,CAAC,MAC1C86B,EAAQ,KAAK,CAACD,EAAK76B,CAAG,GAAG66B,EAAK35B,EAAMlB,CAAG,CAAC,CAAC,CAAC;AAE9C,eAAOyM;AAAA,MACT;AAAA,MACA,KAAK2sB;AACH,eAAOS,EAAG,CAACY,GAAMv5B,EAAM,YAAW,CAAE,GAAGA,CAAK;AAAA,MAC9C,KAAKm4B,IAAQ;AACX,cAAM,EAAC,QAAA32B,GAAQ,OAAAu3B,EAAK,IAAI/4B;AACxB,eAAO24B,EAAG,CAACY,GAAM,EAAC,QAAA/3B,GAAQ,OAAAu3B,EAAK,CAAC,GAAG/4B,CAAK;AAAA,MAC1C;AAAA,MACA,KAAKo4B,IAAK;AACR,cAAMwB,IAAU,CAAA,GACVruB,IAAQotB,EAAG,CAACY,GAAMK,CAAO,GAAG55B,CAAK;AACvC,mBAAW,CAAClB,GAAK4b,CAAK,KAAK1a;AACzB,WAAIy5B,KAAU,EAAEH,GAAWF,GAAOt6B,CAAG,CAAC,KAAKw6B,GAAWF,GAAO1e,CAAK,CAAC,OACjEkf,EAAQ,KAAK,CAACD,EAAK76B,CAAG,GAAG66B,EAAKjf,CAAK,CAAC,CAAC;AAEzC,eAAOnP;AAAA,MACT;AAAA,MACA,KAAK8sB,IAAK;AACR,cAAMuB,IAAU,CAAA,GACVruB,IAAQotB,EAAG,CAACY,GAAMK,CAAO,GAAG55B,CAAK;AACvC,mBAAW0a,KAAS1a;AAClB,WAAIy5B,KAAU,CAACH,GAAWF,GAAO1e,CAAK,CAAC,MACrCkf,EAAQ,KAAKD,EAAKjf,CAAK,CAAC;AAE5B,eAAOnP;AAAA,MACT;AAAA,IACN;AAEI,UAAM,EAAC,SAAApH,EAAO,IAAInE;AAClB,WAAO24B,EAAG,CAACY,GAAM,EAAC,MAAM56B,GAAM,SAAAwF,EAAO,CAAC,GAAGnE,CAAK;AAAA,EAChD;AAEA,SAAO25B;AACT,GAccE,KAAY,CAAC75B,GAAO,EAAC,MAAA05B,GAAM,OAAAI,EAAK,IAAI,OAAO;AACvD,QAAMhuB,IAAI,CAAA;AACV,SAAO0tB,GAAW,EAAEE,KAAQI,IAAQ,CAAC,CAACJ,GAAM,oBAAI,OAAK5tB,CAAC,EAAE9L,CAAK,GAAG8L;AAClE,GC3JAiuB,KAAe,OAAO,mBAAoB;AAAA;AAAA,EAExC,CAACC,GAAK1yB,MACJA,MAAY,UAAUA,KAAW,WAAWA,KAC1C2xB,GAAYY,GAAUG,GAAK1yB,CAAO,CAAC,IAAI,gBAAgB0yB,CAAG;AAAA,IAE9D,CAACA,GAAK1yB,MAAY2xB,GAAYY,GAAUG,GAAK1yB,CAAO,CAAC;AC2DhD,SAAS2yB,GAA2BnuB,GAAGouB,GAAkB;AAE9D,QAAM/2B,IAAS,CAAC,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAE1C,SAAI+2B,IAAmB,KACrB/2B,EAAO,KAAK;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAO+2B,CAAgB,EAAC,CAAC;AAAA,EAChE,CAAK,GAGI/2B;AACT;AAaO,SAASg3B,GAAyBC,GAAgBF,GAAkB;AACzE,SACE,wBACCE,IAAiB,MACjBF,IAAmB,IAAI,MAAMA,IAAmB;AAErD;AAWO,SAASG,GAAO1nB,GAAO;AAC5B,QAAMijB,IACJ,OAAOjjB,EAAM,QAAQ,iBAAkB,WACnCA,EAAM,QAAQ,gBACd,iBACA2nB,IACJ3nB,EAAM,QAAQ,uBAAuBsnB,IACjCM,IACJ5nB,EAAM,QAAQ,qBAAqBwnB,IAC/BK,IAAgB7nB,EAAM,QAAQ,iBAAiB,aAC/C8nB,IAAuB9nB,EAAM,QAAQ,wBAAwB,MAC7D+nB,IAA0B/nB,EAAM,QAAQ,2BAA2B;AAAA,IACvE,WAAW,CAAC,SAAS;AAAA,EACzB,GAEQgoB,IAAY,CAAA;AAClB,MAAIP,IAAiB;AAErB,SAAO,EAAEA,IAAiBznB,EAAM,cAAc,UAAQ;AACpD,UAAMrI,IAAaqI,EAAM,aAAa;AAAA,MACpCA,EAAM,cAAcynB,CAAc;AAAA,IACxC;AAEI,QAAI,CAAC9vB;AACH;AAGF,UAAMnB,IAAUwJ,EAAM,IAAIrI,CAAU,GAC9BxD,IAAK,OAAOwD,EAAW,UAAU,EAAE,YAAW,GAC9CurB,IAAS5d,GAAanR,EAAG,YAAW,CAAE;AAC5C,QAAIozB,IAAmB;AAEvB,UAAMU,IAAiB,CAAA,GACjBC,IAASloB,EAAM,eAAe,IAAI7L,CAAE;AAG1C,WAAO+zB,MAAW,UAAa,EAAEX,KAAoBW,KAAQ;AAC3D,MAAID,EAAe,SAAS,KAC1BA,EAAe,KAAK,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAGhD,UAAI94B,IACF,OAAOw4B,KAAwB,WAC3BA,IACAA,EAAoBF,GAAgBF,CAAgB;AAE1D,MAAI,OAAOp4B,KAAa,aACtBA,IAAW,EAAC,MAAM,QAAQ,OAAOA,EAAQ,IAG3C84B,EAAe,KAAK;AAAA,QAClB,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAY;AAAA,UACV,MACE,MACAhF,IACA,WACAC,KACCqE,IAAmB,IAAI,MAAMA,IAAmB;AAAA,UACnD,qBAAqB;AAAA,UACrB,WACE,OAAOK,KAAsB,WACzBA,IACAA,EAAkBH,GAAgBF,CAAgB;AAAA,UACxD,WAAW,CAAC,uBAAuB;AAAA,QAC7C;AAAA,QACQ,UAAU,MAAM,QAAQp4B,CAAQ,IAAIA,IAAW,CAACA,CAAQ;AAAA,MAChE,CAAO;AAAA,IACH;AAEA,UAAMic,IAAO5U,EAAQA,EAAQ,SAAS,CAAC;AAEvC,QAAI4U,KAAQA,EAAK,SAAS,aAAaA,EAAK,YAAY,KAAK;AAC3D,YAAM+c,IAAW/c,EAAK,SAASA,EAAK,SAAS,SAAS,CAAC;AACvD,MAAI+c,KAAYA,EAAS,SAAS,SAChCA,EAAS,SAAS,MAElB/c,EAAK,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC,GAG/CA,EAAK,SAAS,KAAK,GAAG6c,CAAc;AAAA,IACtC;AACE,MAAAzxB,EAAQ,KAAK,GAAGyxB,CAAc;AAIhC,UAAMjJ,IAAW;AAAA,MACf,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,IAAIiE,IAAgB,QAAQC,EAAM;AAAA,MAC/C,UAAUljB,EAAM,KAAKxJ,GAAS,EAAI;AAAA,IACxC;AAEI,IAAAwJ,EAAM,MAAMrI,GAAYqnB,CAAQ,GAEhCgJ,EAAU,KAAKhJ,CAAQ;AAAA,EACzB;AAEA,MAAIgJ,EAAU,WAAW;AAIzB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,eAAe,IAAM,WAAW,CAAC,WAAW,EAAC;AAAA,MAC1D,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,SAASF;AAAA,UACT,YAAY;AAAA,YACV,GAAGM,GAAgBL,CAAuB;AAAA,YAC1C,IAAI;AAAA,UACd;AAAA,UACQ,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAOF,EAAa,CAAC;AAAA,QACvD;AAAA,QACM,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI;AAAA,QAC1B;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,UACT,YAAY,CAAA;AAAA,UACZ,UAAU7nB,EAAM,KAAKgoB,GAAW,EAAI;AAAA,QAC5C;AAAA,QACM,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI;AAAA,MAChC;AAAA,IACA;AACA;AChHO,MAAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBT,SAAU5d,GAAM;AACd,QAAIA,KAAS;AACX,aAAO7E;AAGT,QAAI,OAAO6E,KAAS;AAClB,aAAO6d,GAAY7d,CAAI;AAGzB,QAAI,OAAOA,KAAS;AAClB,aAAO,MAAM,QAAQA,CAAI,IAAI8d,GAAW9d,CAAI,IAAI+d,GAAa/d,CAAI;AAGnE,QAAI,OAAOA,KAAS;AAClB,aAAOge,GAAYhe,CAAI;AAGzB,UAAM,IAAI,MAAM,8CAA8C;AAAA,EAChE;AAAA;AAOJ,SAAS8d,GAAWG,GAAO;AAEzB,QAAMlwB,IAAS,CAAA;AACf,MAAII,IAAQ;AAEZ,SAAO,EAAEA,IAAQ8vB,EAAM;AACrB,IAAAlwB,EAAOI,CAAK,IAAIyvB,GAAQK,EAAM9vB,CAAK,CAAC;AAGtC,SAAO0vB,GAAYjB,CAAG;AAMtB,WAASA,KAAO7jB,GAAY;AAC1B,QAAI5K,IAAQ;AAEZ,WAAO,EAAEA,IAAQJ,EAAO;AACtB,UAAIA,EAAOI,CAAK,EAAE,MAAM,MAAM4K,CAAU,EAAG,QAAO;AAGpD,WAAO;AAAA,EACT;AACF;AAQA,SAASglB,GAAa1vB,GAAO;AAC3B,QAAM6vB;AAAA;AAAA,IAAwD7vB;AAAA;AAE9D,SAAOwvB,GAAYtlB,CAAG;AAMtB,WAASA,EAAIvT,GAAM;AACjB,UAAMm5B;AAAA;AAAA;AAAA,MACoBn5B;AAAA;AAI1B,QAAItD;AAEJ,SAAKA,KAAO2M;AACV,UAAI8vB,EAAaz8B,CAAG,MAAMw8B,EAAcx8B,CAAG,EAAG,QAAO;AAGvD,WAAO;AAAA,EACT;AACF;AAQA,SAASs8B,GAAY3vB,GAAO;AAC1B,SAAOwvB,GAAYt8B,CAAI;AAKvB,WAASA,EAAKyD,GAAM;AAClB,WAAOA,KAAQA,EAAK,SAASqJ;AAAA,EAC/B;AACF;AAQA,SAASwvB,GAAYO,GAAc;AACjC,SAAO/vB;AAMP,WAASA,EAAMzL,GAAOuL,GAAOyG,GAAQ;AACnC,WAAO,GACLypB,GAAez7B,CAAK,KAClBw7B,EAAa;AAAA,MACX;AAAA,MACAx7B;AAAA,MACA,OAAOuL,KAAU,WAAWA,IAAQ;AAAA,MACpCyG,KAAU;AAAA,IACpB;AAAA,EAEE;AACF;AAEA,SAASuG,KAAK;AACZ,SAAO;AACT;AAMA,SAASkjB,GAAez7B,GAAO;AAC7B,SAAOA,MAAU,QAAQ,OAAOA,KAAU,YAAY,UAAUA;AAClE;ACnEA,MAAM+J,KAAQ,CAAA,GAKD2xB,KAAW,IAKXC,KAAO,IAKPC,KAAO;AAiDb,SAASC,GAAatpB,GAAM6K,GAAM0e,GAASC,GAAS;AAEzD,MAAItwB;AAEJ,EAAI,OAAO2R,KAAS,cAAc,OAAO0e,KAAY,cACnDC,IAAUD,GAEVA,IAAU1e,KAGV3R,IAAQ2R;AAGV,QAAM4e,IAAKhB,GAAQvvB,CAAK,GAClBwwB,IAAOF,IAAU,KAAK;AAE5B,EAAAG,EAAQ3pB,GAAM,QAAW,EAAE,EAAC;AAO5B,WAAS2pB,EAAQ95B,GAAMmJ,GAAO4wB,GAAS;AACrC,UAAMn8B;AAAA;AAAA,MACJoC,KAAQ,OAAOA,KAAS,WAAWA,IAAO,CAAA;AAAA;AAG5C,QAAI,OAAOpC,EAAM,QAAS,UAAU;AAClC,YAAMM;AAAA;AAAA,QAEJ,OAAON,EAAM,WAAY,WACrBA,EAAM;AAAA;AAAA,UAER,OAAOA,EAAM,QAAS,WACpBA,EAAM,OACN;AAAA;AAAA;AAEN,aAAO,eAAeo8B,GAAO,QAAQ;AAAA,QACnC,OACE,YAAiBh6B,EAAK,QAAQ9B,IAAO,MAAMA,IAAO,MAAM,OAAO;AAAA,MACzE,CAAO;AAAA,IACH;AAEA,WAAO87B;AAEP,aAASA,IAAQ;AAEf,UAAIj5B,IAAS4G,IAETsyB,GAEA3gB,GAEA4gB;AAEJ,WAAI,CAAClf,KAAQ4e,EAAG55B,GAAMmJ,GAAO4wB,EAAQA,EAAQ,SAAS,CAAC,KAAK,MAAS,OAEnEh5B,IAASo5B,GAAST,EAAQ15B,GAAM+5B,CAAO,CAAC,GAEpCh5B,EAAO,CAAC,MAAMw4B;AAChB,eAAOx4B;AAIX,UAAI,cAAcf,KAAQA,EAAK,UAAU;AACvC,cAAMo6B;AAAA;AAAA,UAA2Cp6B;AAAA;AAEjD,YAAIo6B,EAAa,YAAYr5B,EAAO,CAAC,MAAMy4B;AAIzC,eAHAlgB,KAAUqgB,IAAUS,EAAa,SAAS,SAAS,MAAMP,GACzDK,IAAeH,EAAQ,OAAOK,CAAY,GAEnC9gB,IAAS,MAAMA,IAAS8gB,EAAa,SAAS,UAAQ;AAC3D,kBAAMjpB,IAAQipB,EAAa,SAAS9gB,CAAM;AAI1C,gBAFA2gB,IAAYH,EAAQ3oB,GAAOmI,GAAQ4gB,CAAY,EAAC,GAE5CD,EAAU,CAAC,MAAMV;AACnB,qBAAOU;AAGT,YAAA3gB,IACE,OAAO2gB,EAAU,CAAC,KAAM,WAAWA,EAAU,CAAC,IAAI3gB,IAASugB;AAAA,UAC/D;AAAA,MAEJ;AAEA,aAAO94B;AAAA,IACT;AAAA,EACF;AACF;AAUA,SAASo5B,GAASv8B,GAAO;AACvB,SAAI,MAAM,QAAQA,CAAK,IACdA,IAGL,OAAOA,KAAU,WACZ,CAAC07B,IAAU17B,CAAK,IAGlBA,KAAU,OAA8B+J,KAAQ,CAAC/J,CAAK;AAC/D;ACvHO,SAASo8B,GAAM7pB,GAAMkqB,GAAeC,GAAkBC,GAAc;AAEzE,MAAIZ,GAEA3e,GAEA0e;AAEJ,EACE,OAAOW,KAAkB,cACzB,OAAOC,KAAqB,cAE5Btf,IAAO,QACP0e,IAAUW,GACVV,IAAUW,MAGVtf,IAAOqf,GAEPX,IAAUY,GACVX,IAAUY,IAGZd,GAAatpB,GAAM6K,GAAMwf,GAAUb,CAAO;AAM1C,WAASa,EAASx6B,GAAM+5B,GAAS;AAC/B,UAAMnqB,IAASmqB,EAAQA,EAAQ,SAAS,CAAC,GACnC5wB,IAAQyG,IAASA,EAAO,SAAS,QAAQ5P,CAAI,IAAI;AACvD,WAAO05B,EAAQ15B,GAAMmJ,GAAOyG,CAAM;AAAA,EACpC;AACF;ACrIA,MAAMC,KAAM,CAAA,EAAG,gBAGTtI,KAAe,CAAA;AAYd,SAASkzB,GAAYtqB,GAAMjL,GAAS;AACzC,QAAMkC,IAAWlC,KAAWqC,IAEtBmzB,IAAiB,oBAAI,IAAG,GAExBC,IAAe,oBAAI,IAAG,GAEtBC,IAAiB,oBAAI,IAAG,GAIxBpF,IAAW,EAAC,GAAGqF,IAAiB,GAAGzzB,EAAS,SAAQ,GAGpDmJ,IAAQ;AAAA,IACZ,KAAAgD;AAAA,IACA,WAAAunB;AAAA,IACA,gBAAAJ;AAAA,IACA,cAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,eAAe,CAAA;AAAA,IACnB,UAAIpF;AAAAA,IACA,KAAAhlB;AAAA,IACA,SAASpJ;AAAA,IACT,OAAA2zB;AAAA,IACJ,MAAIC;AAAAA,EACJ;AAEE,SAAAhB,GAAM7pB,GAAM,SAAUnQ,GAAM;AAC1B,QAAIA,EAAK,SAAS,gBAAgBA,EAAK,SAAS,sBAAsB;AACpE,YAAM8sB,IAAM9sB,EAAK,SAAS,eAAe06B,IAAiBC,GACpDj2B,IAAK,OAAO1E,EAAK,UAAU,EAAE,YAAW;AAI9C,MAAK8sB,EAAI,IAAIpoB,CAAE,KAEbooB,EAAI,IAAIpoB,GAAI1E,CAAI;AAAA,IAEpB;AAAA,EACF,CAAC,GAEMuQ;AAYP,WAASC,EAAIxQ,GAAM4P,GAAQ;AACzB,UAAMrT,IAAOyD,EAAK,MACZi7B,IAAS1qB,EAAM,SAAShU,CAAI;AAElC,QAAIsT,GAAI,KAAKU,EAAM,UAAUhU,CAAI,KAAK0+B;AACpC,aAAOA,EAAO1qB,GAAOvQ,GAAM4P,CAAM;AAGnC,QAAIW,EAAM,QAAQ,eAAeA,EAAM,QAAQ,YAAY,SAAShU,CAAI,GAAG;AACzE,UAAI,cAAcyD,GAAM;AACtB,cAAM,EAAC,UAAAN,GAAU,GAAGw7B,EAAO,IAAIl7B,GACzBe,IAAS43B,GAAgBuC,CAAO;AAEtC,eAAAn6B,EAAO,WAAWwP,EAAM,IAAIvQ,CAAI,GAEzBe;AAAA,MACT;AAGA,aAAO43B,GAAgB34B,CAAI;AAAA,IAC7B;AAIA,YAFgBuQ,EAAM,QAAQ,kBAAkB4qB,IAEjC5qB,GAAOvQ,GAAM4P,CAAM;AAAA,EACpC;AAUA,WAAS2D,EAAI3D,GAAQ;AAEnB,UAAMzI,IAAS,CAAA;AAEf,QAAI,cAAcyI,GAAQ;AACxB,YAAMwrB,IAAQxrB,EAAO;AACrB,UAAIzG,IAAQ;AACZ,aAAO,EAAEA,IAAQiyB,EAAM,UAAQ;AAC7B,cAAMr6B,IAASwP,EAAM,IAAI6qB,EAAMjyB,CAAK,GAAGyG,CAAM;AAG7C,YAAI7O,GAAQ;AACV,cAAIoI,KAASiyB,EAAMjyB,IAAQ,CAAC,EAAE,SAAS,YACjC,CAAC,MAAM,QAAQpI,CAAM,KAAKA,EAAO,SAAS,WAC5CA,EAAO,QAAQs6B,GAAuBt6B,EAAO,KAAK,IAGhD,CAAC,MAAM,QAAQA,CAAM,KAAKA,EAAO,SAAS,YAAW;AACvD,kBAAM6sB,IAAO7sB,EAAO,SAAS,CAAC;AAE9B,YAAI6sB,KAAQA,EAAK,SAAS,WACxBA,EAAK,QAAQyN,GAAuBzN,EAAK,KAAK;AAAA,UAElD;AAGF,UAAI,MAAM,QAAQ7sB,CAAM,IACtBoG,EAAO,KAAK,GAAGpG,CAAM,IAErBoG,EAAO,KAAKpG,CAAM;AAAA,QAEtB;AAAA,MACF;AAAA,IACF;AAEA,WAAOoG;AAAA,EACT;AACF;AAYA,SAAS4zB,GAAMhoB,GAAME,GAAI;AACvB,EAAIF,EAAK,aAAUE,EAAG,WAAW9R,GAAS4R,CAAI;AAChD;AAcA,SAAS+nB,GAAU/nB,GAAME,GAAI;AAE3B,MAAIlS,IAASkS;AAGb,MAAIF,KAAQA,EAAK,MAAM;AACrB,UAAMuoB,IAAQvoB,EAAK,KAAK,OAClBwoB,IAAYxoB,EAAK,KAAK,WACtByoB,IAAczoB,EAAK,KAAK;AAE9B,QAAI,OAAOuoB,KAAU;AAGnB,UAAIv6B,EAAO,SAAS;AAClB,QAAAA,EAAO,UAAUu6B;AAAA,WAMd;AAGH,cAAM57B,IAAW,cAAcqB,IAASA,EAAO,WAAW,CAACA,CAAM;AACjE,QAAAA,IAAS,EAAC,MAAM,WAAW,SAASu6B,GAAO,YAAY,CAAA,GAAI,UAAA57B,EAAQ;AAAA,MACrE;AAGF,IAAIqB,EAAO,SAAS,aAAay6B,KAC/B,OAAO,OAAOz6B,EAAO,YAAY43B,GAAgB6C,CAAW,CAAC,GAI7D,cAAcz6B,KACdA,EAAO,YACPw6B,MAAc,QACdA,MAAc,WAEdx6B,EAAO,WAAWw6B;AAAA,EAEtB;AAEA,SAAOx6B;AACT;AAYA,SAASo6B,GAAsB5qB,GAAOvQ,GAAM;AAC1C,QAAMmF,IAAOnF,EAAK,QAAQ,CAAA,GAEpBe,IACJ,WAAWf,KACX,EAAE6P,GAAI,KAAK1K,GAAM,aAAa,KAAK0K,GAAI,KAAK1K,GAAM,WAAW,KACzD,EAAC,MAAM,QAAQ,OAAOnF,EAAK,MAAK,IAChC;AAAA,IACE,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUuQ,EAAM,IAAIvQ,CAAI;AAAA,EAClC;AAEE,SAAAuQ,EAAM,MAAMvQ,GAAMe,CAAM,GACjBwP,EAAM,UAAUvQ,GAAMe,CAAM;AACrC;AAcO,SAASi6B,GAAKI,GAAO/G,GAAO;AAEjC,QAAMtzB,IAAS,CAAA;AACf,MAAIoI,IAAQ;AAMZ,OAJIkrB,KACFtzB,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC,GAGlC,EAAEoI,IAAQiyB,EAAM;AACrB,IAAIjyB,KAAOpI,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC,GAClDA,EAAO,KAAKq6B,EAAMjyB,CAAK,CAAC;AAG1B,SAAIkrB,KAAS+G,EAAM,SAAS,KAC1Br6B,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC,GAGlCA;AACT;AAUA,SAASs6B,GAAuBz9B,GAAO;AACrC,MAAIuL,IAAQ,GACRqL,IAAO5W,EAAM,WAAWuL,CAAK;AAEjC,SAAOqL,MAAS,KAAKA,MAAS;AAC5B,IAAArL,KACAqL,IAAO5W,EAAM,WAAWuL,CAAK;AAG/B,SAAOvL,EAAM,MAAMuL,CAAK;AAC1B;ACjYO,SAASsyB,GAAOtrB,GAAMjL,GAAS;AACpC,QAAMqL,IAAQkqB,GAAYtqB,GAAMjL,CAAO,GACjClF,IAAOuQ,EAAM,IAAIJ,GAAM,MAAS,GAChCurB,IAAOzD,GAAO1nB,CAAK,GAEnBxP,IAAS,MAAM,QAAQf,CAAI,IAC7B,EAAC,MAAM,QAAQ,UAAUA,EAAI,IAC7BA,KAAQ,EAAC,MAAM,QAAQ,UAAU,CAAA,EAAE;AAEvC,SAAI07B,KAKF36B,EAAO,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,GAAG26B,CAAI,GAGjD36B;AACT;AC0Ce,SAAS46B,GAAaC,GAAa12B,GAAS;AACzD,SAAI02B,KAAe,SAASA,IAInB,eAAgBzrB,GAAM0rB,GAAM;AAEjC,UAAMC;AAAA;AAAA,MACJL,GAAOtrB,GAAM,EAAC,MAAA0rB,GAAM,GAAG32B,EAAO,CAAC;AAAA;AAEjC,UAAM02B,EAAY,IAAIE,GAAUD,CAAI;AAAA,EACtC,IAMK,SAAU1rB,GAAM0rB,GAAM;AAM3B;AAAA;AAAA,MACEJ,GAAOtrB,GAAM,EAAC,MAAA0rB,GAAM,GAAID,KAAe12B,EAAQ,CAAC;AAAA;AAAA,EAEpD;AACF;ACvKO,SAAS62B,GAAKv2B,GAAO;AAC1B,MAAIA;AACF,UAAMA;AAEV;;;;;ACTA,MAAIw2B,IAAS,OAAO,UAAU,gBAC1BC,IAAQ,OAAO,UAAU,UACzBC,IAAiB,OAAO,gBACxBC,IAAO,OAAO,0BAEdC,IAAU,SAAiB96B,GAAK;AACnC,WAAI,OAAO,MAAM,WAAY,aACrB,MAAM,QAAQA,CAAG,IAGlB26B,EAAM,KAAK36B,CAAG,MAAM;AAAA,EAC5B,GAEI+6B,IAAgB,SAAuBC,GAAK;AAC/C,QAAI,CAACA,KAAOL,EAAM,KAAKK,CAAG,MAAM;AAC/B,aAAO;AAGR,QAAIC,IAAoBP,EAAO,KAAKM,GAAK,aAAa,GAClDE,IAAmBF,EAAI,eAAeA,EAAI,YAAY,aAAaN,EAAO,KAAKM,EAAI,YAAY,WAAW,eAAe;AAE7H,QAAIA,EAAI,eAAe,CAACC,KAAqB,CAACC;AAC7C,aAAO;AAKR,QAAI9/B;AACJ,SAAKA,KAAO4/B;AAAK;AAEjB,WAAO,OAAO5/B,IAAQ,OAAes/B,EAAO,KAAKM,GAAK5/B,CAAG;AAAA,EAC1D,GAGI+/B,IAAc,SAAqBC,GAAQx3B,GAAS;AACvD,IAAIg3B,KAAkBh3B,EAAQ,SAAS,cACtCg3B,EAAeQ,GAAQx3B,EAAQ,MAAM;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,OAAOA,EAAQ;AAAA,MACf,UAAU;AAAA,IACb,CAAG,IAEDw3B,EAAOx3B,EAAQ,IAAI,IAAIA,EAAQ;AAAA,EAEjC,GAGIy3B,IAAc,SAAqBL,GAAKp+B,GAAM;AACjD,QAAIA,MAAS;AACZ,UAAK89B,EAAO,KAAKM,GAAKp+B,CAAI;AAEnB,YAAIi+B;AAGV,iBAAOA,EAAKG,GAAKp+B,CAAI,EAAE;AAAA,YAJvB;AAQF,WAAOo+B,EAAIp+B,CAAI;AAAA,EAChB;AAEA0+B,SAAAA,KAAiB,SAASA,IAAS;AAClC,QAAI13B,GAAShH,GAAM2+B,GAAKC,GAAMC,GAAaC,GACvCN,IAAS,UAAU,CAAC,GACpBrwB,IAAI,GACJ8lB,IAAS,UAAU,QACnB8K,IAAO;AAaX,SAVI,OAAOP,KAAW,cACrBO,IAAOP,GACPA,IAAS,UAAU,CAAC,KAAK,CAAA,GAEzBrwB,IAAI,KAEDqwB,KAAU,QAAS,OAAOA,KAAW,YAAY,OAAOA,KAAW,gBACtEA,IAAS,CAAA,IAGHrwB,IAAI8lB,GAAQ,EAAE9lB;AAGpB,UAFAnH,IAAU,UAAUmH,CAAC,GAEjBnH,KAAW;AAEd,aAAKhH,KAAQgH;AACZ,UAAA23B,IAAMF,EAAYD,GAAQx+B,CAAI,GAC9B4+B,IAAOH,EAAYz3B,GAAShH,CAAI,GAG5Bw+B,MAAWI,MAEVG,KAAQH,MAAST,EAAcS,CAAI,MAAMC,IAAcX,EAAQU,CAAI,OAClEC,KACHA,IAAc,IACdC,IAAQH,KAAOT,EAAQS,CAAG,IAAIA,IAAM,CAAA,KAEpCG,IAAQH,KAAOR,EAAcQ,CAAG,IAAIA,IAAM,CAAA,GAI3CJ,EAAYC,GAAQ,EAAE,MAAMx+B,GAAM,UAAU0+B,EAAOK,GAAMD,GAAOF,CAAI,GAAG,KAG7D,OAAOA,IAAS,OAC1BL,EAAYC,GAAQ,EAAE,MAAMx+B,GAAM,UAAU4+B,GAAM;AAQvD,WAAOJ;AAAA,EACR;;;;ACpHe,SAASL,GAAcz+B,GAAO;AAC5C,MAAI,OAAOA,KAAU,YAAYA,MAAU;AAC1C,WAAO;AAGR,QAAMs/B,IAAY,OAAO,eAAet/B,CAAK;AAC7C,UAAQs/B,MAAc,QAAQA,MAAc,OAAO,aAAa,OAAO,eAAeA,CAAS,MAAM,SAAS,EAAE,OAAO,eAAet/B,MAAU,EAAE,OAAO,YAAYA;AACtK;AC+BO,SAASu/B,KAAS;AAEvB,QAAMC,IAAM,CAAA,GAENC,IAAW,EAAC,KAAAC,GAAK,KAAAlkB,EAAG;AAE1B,SAAOikB;AAGP,WAASC,KAAOn2B,GAAQ;AACtB,QAAIo2B,IAAkB;AAEtB,UAAMC,IAAWr2B,EAAO,IAAG;AAE3B,QAAI,OAAOq2B,KAAa;AACtB,YAAM,IAAI,UAAU,6CAA6CA,CAAQ;AAG3E,IAAAxnB,EAAK,MAAM,GAAG7O,CAAM;AAQpB,aAAS6O,EAAKxQ,MAAUwJ,GAAQ;AAC9B,YAAM4C,IAAKwrB,EAAI,EAAEG,CAAe;AAChC,UAAIp0B,IAAQ;AAEZ,UAAI3D,GAAO;AACT,QAAAg4B,EAASh4B,CAAK;AACd;AAAA,MACF;AAGA,aAAO,EAAE2D,IAAQhC,EAAO;AACtB,SAAI6H,EAAO7F,CAAK,MAAM,QAAQ6F,EAAO7F,CAAK,MAAM,YAC9C6F,EAAO7F,CAAK,IAAIhC,EAAOgC,CAAK;AAKhC,MAAAhC,IAAS6H,GAGL4C,IACFopB,GAAKppB,GAAIoE,CAAI,EAAE,GAAGhH,CAAM,IAExBwuB,EAAS,MAAM,GAAGxuB,CAAM;AAAA,IAE5B;AAAA,EACF;AAGA,WAASoK,EAAIqkB,GAAY;AACvB,QAAI,OAAOA,KAAe;AACxB,YAAM,IAAI;AAAA,QACR,iDAAiDA;AAAA,MACzD;AAGI,WAAAL,EAAI,KAAKK,CAAU,GACZJ;AAAA,EACT;AACF;AAkCO,SAASrC,GAAK0C,GAAYF,GAAU;AAEzC,MAAI5kB;AAEJ,SAAO+kB;AAQP,WAASA,KAAW5pB,GAAY;AAC9B,UAAM6pB,IAAoBF,EAAW,SAAS3pB,EAAW;AAEzD,QAAIhT;AAEJ,IAAI68B,KACF7pB,EAAW,KAAK8pB,CAAI;AAGtB,QAAI;AACF,MAAA98B,IAAS28B,EAAW,MAAM,MAAM3pB,CAAU;AAAA,IAC5C,SAASvO,GAAO;AACd,YAAMs4B;AAAA;AAAA,QAAkCt4B;AAAA;AAMxC,UAAIo4B,KAAqBhlB;AACvB,cAAMklB;AAGR,aAAOD,EAAKC,CAAS;AAAA,IACvB;AAEA,IAAKF,MACC78B,KAAUA,EAAO,QAAQ,OAAOA,EAAO,QAAS,aAClDA,EAAO,KAAKg9B,GAAMF,CAAI,IACb98B,aAAkB,QAC3B88B,EAAK98B,CAAM,IAEXg9B,EAAKh9B,CAAM;AAAA,EAGjB;AAOA,WAAS88B,EAAKr4B,MAAUwJ,GAAQ;AAC9B,IAAK4J,MACHA,IAAS,IACT4kB,EAASh4B,GAAO,GAAGwJ,CAAM;AAAA,EAE7B;AAOA,WAAS+uB,EAAKngC,GAAO;AACnB,IAAAigC,EAAK,MAAMjgC,CAAK;AAAA,EAClB;AACF;AC1JO,MAAMogC,KAAU,EAAC,UAAAC,IAAU,SAAAC,IAAS,SAAAC,IAAS,MAAAC,IAAM,KAAK,IAAG;AAclE,SAASH,GAASI,GAAMF,GAAS;AAC/B,MAAIA,MAAY,UAAa,OAAOA,KAAY;AAC9C,UAAM,IAAI,UAAU,iCAAiC;AAGvDG,EAAAA,GAAWD,CAAI;AACf,MAAI/xB,IAAQ,GACR8C,IAAM,IACNjG,IAAQk1B,EAAK,QAEbE;AAEJ,MACEJ,MAAY,UACZA,EAAQ,WAAW,KACnBA,EAAQ,SAASE,EAAK,QACtB;AACA,WAAOl1B;AACL,UAAIk1B,EAAK,YAAYl1B,CAAK,MAAM;AAG9B,YAAIo1B,GAAc;AAChB,UAAAjyB,IAAQnD,IAAQ;AAChB;AAAA,QACF;AAAA,YACK,CAAIiG,IAAM,MAGfmvB,IAAe,IACfnvB,IAAMjG,IAAQ;AAIlB,WAAOiG,IAAM,IAAI,KAAKivB,EAAK,MAAM/xB,GAAO8C,CAAG;AAAA,EAC7C;AAEA,MAAI+uB,MAAYE;AACd,WAAO;AAGT,MAAIG,IAAmB,IACnBC,IAAeN,EAAQ,SAAS;AAEpC,SAAOh1B;AACL,QAAIk1B,EAAK,YAAYl1B,CAAK,MAAM;AAG9B,UAAIo1B,GAAc;AAChB,QAAAjyB,IAAQnD,IAAQ;AAChB;AAAA,MACF;AAAA;AAEA,MAAIq1B,IAAmB,MAGrBD,IAAe,IACfC,IAAmBr1B,IAAQ,IAGzBs1B,IAAe,OAEbJ,EAAK,YAAYl1B,CAAK,MAAMg1B,EAAQ,YAAYM,GAAc,IAC5DA,IAAe,MAGjBrvB,IAAMjG,MAKRs1B,IAAe,IACfrvB,IAAMovB;AAMd,SAAIlyB,MAAU8C,IACZA,IAAMovB,IACGpvB,IAAM,MACfA,IAAMivB,EAAK,SAGNA,EAAK,MAAM/xB,GAAO8C,CAAG;AAC9B;AAUA,SAAS8uB,GAAQG,GAAM;AAGrB,MAFAC,GAAWD,CAAI,GAEXA,EAAK,WAAW;AAClB,WAAO;AAGT,MAAIjvB,IAAM,IACNjG,IAAQk1B,EAAK,QAEbK;AAGJ,SAAO,EAAEv1B;AACP,QAAIk1B,EAAK,YAAYl1B,CAAK,MAAM;AAC9B,UAAIu1B,GAAgB;AAClB,QAAAtvB,IAAMjG;AACN;AAAA,MACF;AAAA,UACK,CAAKu1B,MAEVA,IAAiB;AAIrB,SAAOtvB,IAAM,IACTivB,EAAK,YAAY,CAAC,MAAM,KACtB,MACA,MACFjvB,MAAQ,KAAKivB,EAAK,YAAY,CAAC,MAAM,KACnC,OACAA,EAAK,MAAM,GAAGjvB,CAAG;AACzB;AAUA,SAAS+uB,GAAQE,GAAM;AACrBC,EAAAA,GAAWD,CAAI;AAEf,MAAIl1B,IAAQk1B,EAAK,QAEbjvB,IAAM,IACNuvB,IAAY,GACZC,IAAW,IAGXC,IAAc,GAEdH;AAEJ,SAAOv1B,OAAS;AACd,UAAMqL,IAAO6pB,EAAK,YAAYl1B,CAAK;AAEnC,QAAIqL,MAAS,IAAc;AAGzB,UAAIkqB,GAAgB;AAClB,QAAAC,IAAYx1B,IAAQ;AACpB;AAAA,MACF;AAEA;AAAA,IACF;AAEA,IAAIiG,IAAM,MAGRsvB,IAAiB,IACjBtvB,IAAMjG,IAAQ,IAGZqL,MAAS,KAEPoqB,IAAW,IACbA,IAAWz1B,IACF01B,MAAgB,MACzBA,IAAc,KAEPD,IAAW,OAGpBC,IAAc;AAAA,EAElB;AAEA,SACED,IAAW,KACXxvB,IAAM;AAAA,EAENyvB,MAAgB;AAAA,EAEfA,MAAgB,KAAKD,MAAaxvB,IAAM,KAAKwvB,MAAaD,IAAY,IAEhE,KAGFN,EAAK,MAAMO,GAAUxvB,CAAG;AACjC;AAUA,SAASgvB,MAAQU,GAAU;AACzB,MAAI31B,IAAQ,IAER41B;AAEJ,SAAO,EAAE51B,IAAQ21B,EAAS;AACxBR,IAAAA,GAAWQ,EAAS31B,CAAK,CAAC,GAEtB21B,EAAS31B,CAAK,MAChB41B,IACEA,MAAW,SAAYD,EAAS31B,CAAK,IAAI41B,IAAS,MAAMD,EAAS31B,CAAK;AAI5E,SAAO41B,MAAW,SAAY,MAAM52B,GAAU42B,CAAM;AACtD;AAYA,SAAS52B,GAAUk2B,GAAM;AACvBC,EAAAA,GAAWD,CAAI;AAEf,QAAMW,IAAWX,EAAK,YAAY,CAAC,MAAM;AAGzC,MAAIzgC,IAAQqhC,GAAgBZ,GAAM,CAACW,CAAQ;AAE3C,SAAIphC,EAAM,WAAW,KAAK,CAACohC,MACzBphC,IAAQ,MAGNA,EAAM,SAAS,KAAKygC,EAAK,YAAYA,EAAK,SAAS,CAAC,MAAM,OAC5DzgC,KAAS,MAGJohC,IAAW,MAAMphC,IAAQA;AAClC;AAYA,SAASqhC,GAAgBZ,GAAMa,GAAgB;AAC7C,MAAIn+B,IAAS,IACTo+B,IAAoB,GACpBC,IAAY,IACZC,IAAO,GACPl2B,IAAQ,IAERqL,GAEA8qB;AAEJ,SAAO,EAAEn2B,KAASk1B,EAAK,UAAQ;AAC7B,QAAIl1B,IAAQk1B,EAAK;AACf,MAAA7pB,IAAO6pB,EAAK,YAAYl1B,CAAK;AAAA,SACxB;AAAA,UAAIqL,MAAS;AAClB;AAEA,MAAAA,IAAO;AAAA;AAGT,QAAIA,MAAS,IAAc;AACzB,UAAI,EAAA4qB,MAAcj2B,IAAQ,KAAKk2B,MAAS,GAEjC,KAAID,MAAcj2B,IAAQ,KAAKk2B,MAAS,GAAG;AAChD,YACEt+B,EAAO,SAAS,KAChBo+B,MAAsB,KACtBp+B,EAAO,YAAYA,EAAO,SAAS,CAAC,MAAM,MAC1CA,EAAO,YAAYA,EAAO,SAAS,CAAC,MAAM;AAE1C,cAAIA,EAAO,SAAS;AAGlB,gBAFAu+B,IAAiBv+B,EAAO,YAAY,GAAG,GAEnCu+B,MAAmBv+B,EAAO,SAAS,GAAG;AACxC,cAAIu+B,IAAiB,KACnBv+B,IAAS,IACTo+B,IAAoB,MAEpBp+B,IAASA,EAAO,MAAM,GAAGu+B,CAAc,GACvCH,IAAoBp+B,EAAO,SAAS,IAAIA,EAAO,YAAY,GAAG,IAGhEq+B,IAAYj2B,GACZk2B,IAAO;AACP;AAAA,YACF;AAAA,qBACSt+B,EAAO,SAAS,GAAG;AAC5B,YAAAA,IAAS,IACTo+B,IAAoB,GACpBC,IAAYj2B,GACZk2B,IAAO;AACP;AAAA,UACF;AAAA;AAGF,QAAIH,MACFn+B,IAASA,EAAO,SAAS,IAAIA,IAAS,QAAQ,MAC9Co+B,IAAoB;AAAA,MAExB;AACE,QAAIp+B,EAAO,SAAS,IAClBA,KAAU,MAAMs9B,EAAK,MAAMe,IAAY,GAAGj2B,CAAK,IAE/CpI,IAASs9B,EAAK,MAAMe,IAAY,GAAGj2B,CAAK,GAG1Cg2B,IAAoBh2B,IAAQi2B,IAAY;AAG1C,MAAAA,IAAYj2B,GACZk2B,IAAO;AAAA,IACT,MAAO,CAAI7qB,MAAS,MAAgB6qB,IAAO,KACzCA,MAEAA,IAAO;AAAA,EAEX;AAEA,SAAOt+B;AACT;AAUA,SAASu9B,GAAWD,GAAM;AACxB,MAAI,OAAOA,KAAS;AAClB,UAAM,IAAI;AAAA,MACR,qCAAqC,KAAK,UAAUA,CAAI;AAAA,IAC9D;AAEA;ACpaO,MAAMkB,KAAU,EAAC,KAAAC,GAAG;AAE3B,SAASA,KAAM;AACb,SAAO;AACT;ACYO,SAASC,GAAMC,GAAe;AACnC,SAAO,GACLA,MAAkB,QAChB,OAAOA,KAAkB,YACzB,UAAUA,KACVA,EAAc,QACd,cAAcA,KACdA,EAAc;AAAA,EAEdA,EAAc,SAAS;AAE7B;AClBO,SAASC,GAAUtB,GAAM;AAC9B,MAAI,OAAOA,KAAS;AAClB,IAAAA,IAAO,IAAI,IAAIA,CAAI;AAAA,WACV,CAACoB,GAAMpB,CAAI,GAAG;AAEvB,UAAM74B,IAAQ,IAAI;AAAA,MAChB,iFACE64B,IACA;AAAA,IACR;AACI,UAAA74B,EAAM,OAAO,wBACPA;AAAA,EACR;AAEA,MAAI64B,EAAK,aAAa,SAAS;AAE7B,UAAM74B,IAAQ,IAAI,UAAU,gCAAgC;AAC5D,UAAAA,EAAM,OAAO,0BACPA;AAAA,EACR;AAEA,SAAOo6B,GAAoBvB,CAAI;AACjC;AAUA,SAASuB,GAAoB36B,GAAK;AAChC,MAAIA,EAAI,aAAa,IAAI;AAEvB,UAAMO,IAAQ,IAAI;AAAA,MAChB;AAAA,IACN;AACI,UAAAA,EAAM,OAAO,6BACPA;AAAA,EACR;AAEA,QAAMq6B,IAAW56B,EAAI;AACrB,MAAIkE,IAAQ;AAEZ,SAAO,EAAEA,IAAQ02B,EAAS;AACxB,QACEA,EAAS,YAAY12B,CAAK,MAAM,MAChC02B,EAAS,YAAY12B,IAAQ,CAAC,MAAM,IACpC;AACA,YAAM22B,IAAQD,EAAS,YAAY12B,IAAQ,CAAC;AAC5C,UAAI22B,MAAU,MAAgBA,MAAU,KAAe;AAErD,cAAMt6B,IAAQ,IAAI;AAAA,UAChB;AAAA,QACV;AACQ,cAAAA,EAAM,OAAO,6BACPA;AAAA,MACR;AAAA,IACF;AAGF,SAAO,mBAAmBq6B,CAAQ;AACpC;ACvDA,MAAME;AAAA;AAAA,EAA8B;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA;AAEO,MAAMC,GAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBjB,YAAYpiC,GAAO;AAEjB,QAAIsH;AAEJ,IAAKtH,IAEM6hC,GAAM7hC,CAAK,IACpBsH,IAAU,EAAC,MAAMtH,EAAK,IACb,OAAOA,KAAU,YAAYqiC,GAAariC,CAAK,IACxDsH,IAAU,EAAC,OAAAtH,EAAK,IAEhBsH,IAAUtH,IANVsH,IAAU,CAAA,GAkBZ,KAAK,MAAM,SAASA,IAAU,KAAKq6B,GAAQ,IAAG,GAU9C,KAAK,OAAO,CAAA,GASZ,KAAK,UAAU,CAAA,GAOf,KAAK,WAAW,CAAA,GAOhB,KAAK,OAYL,KAAK,KAUL,KAAK,QASL,KAAK;AAIL,QAAIp2B,IAAQ;AAEZ,WAAO,EAAEA,IAAQ42B,GAAM,UAAQ;AAC7B,YAAM59B,IAAQ49B,GAAM52B,CAAK;AAIzB,MACEhH,KAAS+C,KACTA,EAAQ/C,CAAK,MAAM,UACnB+C,EAAQ/C,CAAK,MAAM,SAGnB,KAAKA,CAAK,IAAIA,MAAU,YAAY,CAAC,GAAG+C,EAAQ/C,CAAK,CAAC,IAAI+C,EAAQ/C,CAAK;AAAA,IAE3E;AAGA,QAAIA;AAGJ,SAAKA,KAAS+C;AAEZ,MAAK66B,GAAM,SAAS59B,CAAK,MAEvB,KAAKA,CAAK,IAAI+C,EAAQ/C,CAAK;AAAA,EAGjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,WAAW;AACb,WAAO,OAAO,KAAK,QAAS,WACxB67B,GAAQ,SAAS,KAAK,IAAI,IAC1B;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,IAAI,SAASC,GAAU;AACrB,IAAAiC,GAAejC,GAAU,UAAU,GACnCkC,GAAWlC,GAAU,UAAU,GAC/B,KAAK,OAAOD,GAAQ,KAAK,KAAK,WAAW,IAAIC,CAAQ;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,UAAU;AACZ,WAAO,OAAO,KAAK,QAAS,WACxBD,GAAQ,QAAQ,KAAK,IAAI,IACzB;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,IAAI,QAAQE,GAAS;AACnB,IAAAI,GAAW,KAAK,UAAU,SAAS,GACnC,KAAK,OAAON,GAAQ,KAAKE,KAAW,IAAI,KAAK,QAAQ;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,UAAU;AACZ,WAAO,OAAO,KAAK,QAAS,WACxBF,GAAQ,QAAQ,KAAK,IAAI,IACzB;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,IAAI,QAAQG,GAAS;AAInB,QAHAgC,GAAWhC,GAAS,SAAS,GAC7BG,GAAW,KAAK,SAAS,SAAS,GAE9BH,GAAS;AACX,UAAIA,EAAQ,YAAY,CAAC,MAAM;AAC7B,cAAM,IAAI,MAAM,+BAA+B;AAGjD,UAAIA,EAAQ,SAAS,KAAK,CAAC;AACzB,cAAM,IAAI,MAAM,wCAAwC;AAAA,IAE5D;AAEA,SAAK,OAAOH,GAAQ,KAAK,KAAK,SAAS,KAAK,QAAQG,KAAW,GAAG;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,OAAO;AACT,WAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,IAAI,KAAKE,GAAM;AACb,IAAIoB,GAAMpB,CAAI,MACZA,IAAOsB,GAAUtB,CAAI,IAGvB6B,GAAe7B,GAAM,MAAM,GAEvB,KAAK,SAASA,KAChB,KAAK,QAAQ,KAAKA,CAAI;AAAA,EAE1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,OAAO;AACT,WAAO,OAAO,KAAK,QAAS,WACxBL,GAAQ,SAAS,KAAK,MAAM,KAAK,OAAO,IACxC;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,IAAI,KAAKoC,GAAM;AACb,IAAAF,GAAeE,GAAM,MAAM,GAC3BD,GAAWC,GAAM,MAAM,GACvB,KAAK,OAAOpC,GAAQ,KAAK,KAAK,WAAW,IAAIoC,KAAQ,KAAK,WAAW,GAAG;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+DA,KAAK7wB,GAAeC,GAAwBC,GAAQ;AAElD,UAAM1N,IAAU,KAAK,QAAQwN,GAAeC,GAAwBC,CAAM;AAE1E,UAAA1N,EAAQ,QAAQ,IAEVA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4DA,KAAKwN,GAAeC,GAAwBC,GAAQ;AAElD,UAAM1N,IAAU,KAAK,QAAQwN,GAAeC,GAAwBC,CAAM;AAE1E,WAAA1N,EAAQ,QAAQ,QAETA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4DA,QAAQwN,GAAeC,GAAwBC,GAAQ;AACrD,UAAM1N,IAAU,IAAIuN;AAAA;AAAA,MAElBC;AAAA,MACAC;AAAA,MACAC;AAAA,IACN;AAEI,WAAI,KAAK,SACP1N,EAAQ,OAAO,KAAK,OAAO,MAAMA,EAAQ,MACzCA,EAAQ,OAAO,KAAK,OAGtBA,EAAQ,QAAQ,IAEhB,KAAK,SAAS,KAAKA,CAAO,GAEnBA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,SAASusB,GAAU;AACjB,WAAI,KAAK,UAAU,SACV,KAGL,OAAO,KAAK,SAAU,WACjB,KAAK,QAGE,IAAI,YAAYA,KAAY,MAAS,EACtC,OAAO,KAAK,KAAK;AAAA,EAClC;AACF;AAYA,SAAS6R,GAAWE,GAAMniC,GAAM;AAC9B,MAAImiC,KAAQA,EAAK,SAASrC,GAAQ,GAAG;AACnC,UAAM,IAAI;AAAA,MACR,MAAM9/B,IAAO,yCAAyC8/B,GAAQ,MAAM;AAAA,IAC1E;AAEA;AAYA,SAASkC,GAAeG,GAAMniC,GAAM;AAClC,MAAI,CAACmiC;AACH,UAAM,IAAI,MAAM,MAAMniC,IAAO,mBAAmB;AAEpD;AAYA,SAASogC,GAAWD,GAAMngC,GAAM;AAC9B,MAAI,CAACmgC;AACH,UAAM,IAAI,MAAM,cAAcngC,IAAO,iCAAiC;AAE1E;AAUA,SAAS+hC,GAAariC,GAAO;AAC3B,SAAO,GACLA,KACE,OAAOA,KAAU,YACjB,gBAAgBA,KAChB,gBAAgBA;AAEtB;ACloBO,MAAM0iC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYP,SAAUz4B,GAAU;AAGlB,UAAM04B;AAAA;AAAA;AAAA;AAAA,MAFO,KACO,YAIX;AAAA,OAEH3iC,IAAQ2iC,EAAM14B,CAAQ,GAEtB24B,IAAQ,WAAY;AACxB,aAAO5iC,EAAM,MAAM4iC,GAAO,SAAS;AAAA,IACrC;AAEA,kBAAO,eAAeA,GAAOD,CAAK,GAc3BC;AAAA,EACT;AAAA,GCiUA3wB,KAAM,CAAA,EAAG;AAeR,MAAM4wB,WAAkBH,GAAiB;AAAA;AAAA;AAAA;AAAA,EAI9C,cAAc;AAEZ,UAAM,MAAM,GAeZ,KAAK,WAAW,QAYhB,KAAK,SAAS,QAad,KAAK,YAAY,CAAA,GAajB,KAAK,WAAW,QAShB,KAAK,cAAc,IASnB,KAAK,SAAS,QASd,KAAK,YAAY,CAAA,GAUjB,KAAK,SAAS,QASd,KAAK,eAAenD,GAAM;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,OAAO;AAEL,UAAMvB;AAAA;AAAA,MAEF,IAAI6E,GAAS;AAAA;AAEjB,QAAIt3B,IAAQ;AAEZ,WAAO,EAAEA,IAAQ,KAAK,UAAU,UAAQ;AACtC,YAAMu3B,IAAW,KAAK,UAAUv3B,CAAK;AACrC,MAAAyyB,EAAY,IAAI,GAAG8E,CAAQ;AAAA,IAC7B;AAEA,WAAA9E,EAAY,KAAKgB,GAAO,IAAM,CAAA,GAAI,KAAK,SAAS,CAAC,GAE1ChB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6DA,KAAKl/B,GAAKkB,GAAO;AACf,WAAI,OAAOlB,KAAQ,WAEb,UAAU,WAAW,KACvBikC,GAAe,QAAQ,KAAK,MAAM,GAClC,KAAK,UAAUjkC,CAAG,IAAIkB,GACf,QAIDiS,GAAI,KAAK,KAAK,WAAWnT,CAAG,KAAK,KAAK,UAAUA,CAAG,KAAM,SAI/DA,KACFikC,GAAe,QAAQ,KAAK,MAAM,GAClC,KAAK,YAAYjkC,GACV,QAIF,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA,SAAS;AACP,QAAI,KAAK;AACP,aAAO;AAMT,UAAMyC;AAAA;AAAA;AAAA,MAAyD;AAAA;AAE/D,WAAO,EAAE,KAAK,cAAc,KAAK,UAAU,UAAQ;AACjD,YAAM,CAACuhC,GAAU,GAAGx7B,CAAO,IAAI,KAAK,UAAU,KAAK,WAAW;AAE9D,UAAIA,EAAQ,CAAC,MAAM;AACjB;AAGF,MAAIA,EAAQ,CAAC,MAAM,OACjBA,EAAQ,CAAC,IAAI;AAGf,YAAM07B,IAAcF,EAAS,KAAKvhC,GAAM,GAAG+F,CAAO;AAElD,MAAI,OAAO07B,KAAgB,cACzB,KAAK,aAAa,IAAIA,CAAW;AAAA,IAErC;AAEA,gBAAK,SAAS,IACd,KAAK,cAAc,OAAO,mBAEnB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA,MAAM/E,GAAM;AACV,SAAK,OAAM;AACX,UAAMgF,IAAWC,GAAMjF,CAAI,GACrB/Q,IAAS,KAAK,UAAU,KAAK;AACnC,WAAAiW,GAAa,SAASjW,CAAM,GACrBA,EAAO,OAAO+V,CAAQ,GAAGA,CAAQ;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4CA,QAAQhF,GAAMgC,GAAM;AAClB,UAAM1+B,IAAO;AAEb,gBAAK,OAAM,GACX4hC,GAAa,WAAW,KAAK,UAAU,KAAK,MAAM,GAClDC,GAAe,WAAW,KAAK,YAAY,KAAK,QAAQ,GAEjDnD,IAAOoD,EAAS,QAAWpD,CAAI,IAAI,IAAI,QAAQoD,CAAQ;AAQ9D,aAASA,EAASp9B,GAASC,GAAQ;AACjC,YAAM+8B,IAAWC,GAAMjF,CAAI,GAGrBqF;AAAA;AAAA;AAAA,QAEsB/hC,EAAK,MAAM0hC,CAAQ;AAAA;AAG/C,MAAA1hC,EAAK,IAAI+hC,GAAWL,GAAU,SAAUr7B,GAAO2K,GAAM0rB,GAAM;AACzD,YAAIr2B,KAAS,CAAC2K,KAAQ,CAAC0rB;AACrB,iBAAOsF,EAAS37B,CAAK;AAKvB,cAAM47B;AAAA;AAAA;AAAA,UAEsBjxB;AAAA,WAGtBkxB,IAAgBliC,EAAK,UAAUiiC,GAAavF,CAAI;AAEtD,QAAIyF,GAAgBD,CAAa,IAC/BxF,EAAK,QAAQwF,IAEbxF,EAAK,SAASwF,GAGhBF;AAAA,UAAS37B;AAAA;AAAA,UAAsDq2B;AAAA,QAAI;AAAA,MACrE,CAAC;AAOD,eAASsF,EAAS37B,GAAOq2B,GAAM;AAC7B,QAAIr2B,KAAS,CAACq2B,IACZ/3B,EAAO0B,CAAK,IACH3B,IACTA,EAAQg4B,CAAI,IAGZgC,EAAK,QAAWhC,CAAI;AAAA,MAExB;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiCA,YAAYA,GAAM;AAEhB,QAAI0F,IAAW,IAEXxgC;AAEJ,gBAAK,OAAM,GACXggC,GAAa,eAAe,KAAK,UAAU,KAAK,MAAM,GACtDC,GAAe,eAAe,KAAK,YAAY,KAAK,QAAQ,GAE5D,KAAK,QAAQnF,GAAMsF,CAAQ,GAC3BK,GAAW,eAAe,WAAWD,CAAQ,GAGtCxgC;AAKP,aAASogC,EAAS37B,GAAOq2B,GAAM;AAC7B,MAAA0F,IAAW,IACXxF,GAAKv2B,CAAK,GACVzE,IAAS86B;AAAA,IACX;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwCA,IAAI1rB,GAAM0rB,GAAMgC,GAAM;AACpB,IAAA4D,GAAWtxB,CAAI,GACf,KAAK,OAAM;AAEX,UAAMuxB,IAAe,KAAK;AAE1B,WAAI,CAAC7D,KAAQ,OAAOhC,KAAS,eAC3BgC,IAAOhC,GACPA,IAAO,SAGFgC,IAAOoD,EAAS,QAAWpD,CAAI,IAAI,IAAI,QAAQoD,CAAQ;AAW9D,aAASA,EAASp9B,GAASC,GAAQ;AAKjC,YAAM+8B,IAAWC,GAAMjF,CAAI;AAC3B,MAAA6F,EAAa,IAAIvxB,GAAM0wB,GAAUM,CAAQ;AAQzC,eAASA,EAAS37B,GAAOm8B,GAAY9F,GAAM;AACzC,cAAM+F;AAAA;AAAA,UAEFD,KAAcxxB;AAAA;AAGlB,QAAI3K,IACF1B,EAAO0B,CAAK,IACH3B,IACTA,EAAQ+9B,CAAa,IAGrB/D,EAAK,QAAW+D,GAAe/F,CAAI;AAAA,MAEvC;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA,QAAQ1rB,GAAM0rB,GAAM;AAElB,QAAI0F,IAAW,IAEXxgC;AAEJ,gBAAK,IAAIoP,GAAM0rB,GAAMsF,CAAQ,GAE7BK,GAAW,WAAW,OAAOD,CAAQ,GAE9BxgC;AAKP,aAASogC,EAAS37B,GAAO2K,GAAM;AAC7B,MAAA4rB,GAAKv2B,CAAK,GACVzE,IAASoP,GACToxB,IAAW;AAAA,IACb;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BA,UAAUpxB,GAAM0rB,GAAM;AACpB,SAAK,OAAM;AACX,UAAMgF,IAAWC,GAAMjF,CAAI,GACrB9M,IAAW,KAAK,YAAY,KAAK;AACvC,WAAAiS,GAAe,aAAajS,CAAQ,GACpC0S,GAAWtxB,CAAI,GAER4e,EAAS5e,GAAM0wB,CAAQ;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2DA,IAAIjjC,MAAUmW,GAAY;AACxB,UAAM8tB,IAAY,KAAK,WACjBC,IAAY,KAAK;AAIvB,QAFAnB,GAAe,OAAO,KAAK,MAAM,GAE7B/iC,KAAU,KAEP,KAAI,OAAOA,KAAU;AAC1B,MAAAmkC,EAAUnkC,GAAOmW,CAAU;AAAA,aAClB,OAAOnW,KAAU;AAC1B,MAAI,MAAM,QAAQA,CAAK,IACrBokC,EAAQpkC,CAAK,IAEbqkC,EAAUrkC,CAAK;AAAA;AAGjB,YAAM,IAAI,UAAU,iCAAiCA,IAAQ,GAAG;AAGlE,WAAO;AAMP,aAASskC,EAAItkC,GAAO;AAClB,UAAI,OAAOA,KAAU;AACnB,QAAAmkC,EAAUnkC,GAAO,CAAA,CAAE;AAAA,eACV,OAAOA,KAAU;AAC1B,YAAI,MAAM,QAAQA,CAAK,GAAG;AACxB,gBAAM,CAACukC,GAAQ,GAAGpuB,CAAU;AAAA;AAAA,YACkBnW;AAAA;AAC9C,UAAAmkC,EAAUI,GAAQpuB,CAAU;AAAA,QAC9B;AACE,UAAAkuB,EAAUrkC,CAAK;AAAA;AAGjB,cAAM,IAAI,UAAU,iCAAiCA,IAAQ,GAAG;AAAA,IAEpE;AAMA,aAASqkC,EAAUlhC,GAAQ;AACzB,UAAI,EAAE,aAAaA,MAAW,EAAE,cAAcA;AAC5C,cAAM,IAAI;AAAA,UACR;AAAA,QACV;AAGM,MAAAihC,EAAQjhC,EAAO,OAAO,GAElBA,EAAO,aACT+gC,EAAU,WAAWlF,GAAO,IAAMkF,EAAU,UAAU/gC,EAAO,QAAQ;AAAA,IAEzE;AAMA,aAASihC,EAAQI,GAAS;AACxB,UAAIj5B,IAAQ;AAEZ,UAAIi5B,KAAY,KAET,KAAI,MAAM,QAAQA,CAAO;AAC9B,eAAO,EAAEj5B,IAAQi5B,EAAQ,UAAQ;AAC/B,gBAAM16B,IAAQ06B,EAAQj5B,CAAK;AAC3B,UAAA+4B,EAAIx6B,CAAK;AAAA,QACX;AAAA;AAEA,cAAM,IAAI,UAAU,sCAAsC06B,IAAU,GAAG;AAAA,IAE3E;AAOA,aAASL,EAAUI,GAAQpuB,GAAY;AACrC,UAAI5K,IAAQ,IACRk5B,IAAa;AAEjB,aAAO,EAAEl5B,IAAQ04B,EAAU;AACzB,YAAIA,EAAU14B,CAAK,EAAE,CAAC,MAAMg5B,GAAQ;AAClC,UAAAE,IAAal5B;AACb;AAAA,QACF;AAGF,UAAIk5B,MAAe;AACjB,QAAAR,EAAU,KAAK,CAACM,GAAQ,GAAGpuB,CAAU,CAAC;AAAA,eAI/BA,EAAW,SAAS,GAAG;AAC9B,YAAI,CAACuuB,GAAS,GAAG1+B,CAAI,IAAImQ;AACzB,cAAMwuB,IAAiBV,EAAUQ,CAAU,EAAE,CAAC;AAC9C,QAAIG,GAAWD,CAAc,KAAKC,GAAWF,CAAO,MAClDA,IAAU1F,GAAO,IAAM2F,GAAgBD,CAAO,IAGhDT,EAAUQ,CAAU,IAAI,CAACF,GAAQG,GAAS,GAAG1+B,CAAI;AAAA,MACnD;AAAA,IACF;AAAA,EACF;AACF;AA8BO,MAAM6+B,KAAU,IAAIhC,GAAS,EAAG,OAAM;AAS7C,SAASM,GAAa7iC,GAAMN,GAAO;AACjC,MAAI,OAAOA,KAAU;AACnB,UAAM,IAAI,UAAU,aAAaM,IAAO,oBAAoB;AAEhE;AASA,SAAS8iC,GAAe9iC,GAAMN,GAAO;AACnC,MAAI,OAAOA,KAAU;AACnB,UAAM,IAAI,UAAU,aAAaM,IAAO,sBAAsB;AAElE;AASA,SAASyiC,GAAeziC,GAAMwkC,GAAQ;AACpC,MAAIA;AACF,UAAM,IAAI;AAAA,MACR,kBACExkC,IACA;AAAA,IACR;AAEA;AAQA,SAASujC,GAAWzhC,GAAM;AAGxB,MAAI,CAACwiC,GAAWxiC,CAAI,KAAK,OAAOA,EAAK,QAAS;AAC5C,UAAM,IAAI,UAAU,yBAAyBA,IAAO,GAAG;AAG3D;AAUA,SAASwhC,GAAWtjC,GAAMykC,GAAWpB,GAAU;AAC7C,MAAI,CAACA;AACH,UAAM,IAAI;AAAA,MACR,MAAMrjC,IAAO,4BAA4BykC,IAAY;AAAA,IAC3D;AAEA;AAMA,SAAS7B,GAAMljC,GAAO;AACpB,SAAOglC,GAAgBhlC,CAAK,IAAIA,IAAQ,IAAIoiC,GAAMpiC,CAAK;AACzD;AAMA,SAASglC,GAAgBhlC,GAAO;AAC9B,SAAO,GACLA,KACE,OAAOA,KAAU,YACjB,aAAaA,KACb,cAAcA;AAEpB;AAMA,SAAS0jC,GAAgB1jC,GAAO;AAC9B,SAAO,OAAOA,KAAU,YAAYqiC,GAAariC,CAAK;AACxD;AAUA,SAASqiC,GAAariC,GAAO;AAC3B,SAAO,GACLA,KACE,OAAOA,KAAU,YACjB,gBAAgBA,KAChB,gBAAgBA;AAEtB;ACtrCA,MAAMilC,KACJ,qEAGIC,KAAe,CAAA,GAEfC,KAA2B,EAAC,oBAAoB,GAAI,GACpDC,KAAe,iCAIfC,KAAe;AAAA,EACnB,EAAC,MAAM,cAAc,IAAI,uCAAsC;AAAA,EAC/D,EAAC,MAAM,sBAAsB,IAAI,uCAAsC;AAAA,EACvE;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,IAAI;AAAA,EACR;AAAA,EACE;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,IAAI;AAAA,EACR;AAAA,EACE,EAAC,MAAM,aAAa,IAAI,mBAAkB;AAAA,EAC1C;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,IAAI;AAAA,EACR;AAAA,EACE,EAAC,MAAM,cAAc,IAAI,uCAAsC;AAAA,EAC/D,EAAC,MAAM,uBAAuB,IAAI,8BAA6B;AAAA,EAC/D;AAAA,IACE,MAAM;AAAA,IACN,IAAI;AAAA,EACR;AAAA,EACE,EAAC,MAAM,cAAc,IAAI,oBAAmB;AAAA,EAC5C,EAAC,MAAM,WAAW,IAAI,mCAAmC,IAAI,gBAAe;AAAA,EAC5E,EAAC,MAAM,gBAAgB,IAAI,uBAAsB;AAAA,EACjD,EAAC,MAAM,aAAa,IAAI,kCAAkC,IAAI,aAAY;AAAA,EAC1E,EAAC,MAAM,UAAU,IAAI,6BAA6B,IAAI,WAAU;AAAA,EAChE,EAAC,MAAM,aAAa,IAAI,oBAAmB;AAAA,EAC3C,EAAC,MAAM,qBAAqB,IAAI,qBAAqB,IAAI,eAAc;AAAA,EACvE,EAAC,MAAM,oBAAoB,IAAI,qBAAqB,IAAI,eAAc;AACxE;AAcO,SAASC,GAASh+B,GAAS;AAChC,QAAMi+B,IAAYC,GAAgBl+B,CAAO,GACnC22B,IAAOwH,GAAWn+B,CAAO;AAC/B,SAAOo+B,GAAKH,EAAU,QAAQA,EAAU,MAAMtH,CAAI,GAAGA,CAAI,GAAG32B,CAAO;AACrE;AAmFA,SAASk+B,GAAgBl+B,GAAS;AAChC,QAAMq+B,IAAgBr+B,EAAQ,iBAAiB49B,IACzCU,IAAgBt+B,EAAQ,iBAAiB49B,IACzCW,IAAsBv+B,EAAQ,sBAChC,EAAC,GAAGA,EAAQ,qBAAqB,GAAG69B,GAAwB,IAC5DA;AAQJ,SANkBN,GAAO,EACtB,IAAItP,EAAW,EACf,IAAIqQ,CAAa,EACjB,IAAI7H,IAAc8H,CAAmB,EACrC,IAAIF,CAAa;AAGtB;AAUA,SAASF,GAAWn+B,GAAS;AAC3B,QAAMxF,IAAWwF,EAAQ,YAAY,IAC/B22B,IAAO,IAAImE,GAAK;AAEtB,SAAI,OAAOtgC,KAAa,aACtBm8B,EAAK,QAAQn8B,IASRm8B;AACT;AAYA,SAASyH,GAAKnzB,GAAMjL,GAAS;AAC3B,QAAMw+B,IAAkBx+B,EAAQ,iBAC1By+B,IAAez+B,EAAQ,cACvB0+B,IAAa1+B,EAAQ,YACrB2+B,IAAqB3+B,EAAQ,oBAC7B4+B,IAAW5+B,EAAQ,UACnB6+B,IAAmB7+B,EAAQ,kBAC3B8+B,IAAe9+B,EAAQ,gBAAgB++B;AAE7C,aAAWC,KAAejB;AACxB,IAAI,OAAO,OAAO/9B,GAASg/B,EAAY,IAAI,MAEvC,KACEA,EAAY,QAEXA,EAAY,KACT,UAAUA,EAAY,KAAK,cAC3B,eAEJrB,KAEAqB,EAAY,IAVhB;AAsBJ,SAAAlK,GAAM7pB,GAAMg0B,CAAS,GAEdj0B,GAAaC,GAAM;AAAA,IAC5B,UAAIi0B,GAAAA;AAAAA,IACA,YAAAR;AAAA,IACA,oBAAoB;AAAA,IACxB,KAAIlyB,GAAAA;AAAAA,IACJ,MAAIC,GAAAA;AAAAA,IACA,UAAU;AAAA,IACV,UAAU;AAAA,EACd,CAAG;AAGD,WAASwyB,EAAUnkC,GAAMmJ,GAAOyG,GAAQ;AACtC,QAAI5P,EAAK,SAAS,SAAS4P,KAAU,OAAOzG,KAAU;AACpD,aAAI26B,IACFl0B,EAAO,SAAS,OAAOzG,GAAO,CAAC,IAE/ByG,EAAO,SAASzG,CAAK,IAAI,EAAC,MAAM,QAAQ,OAAOnJ,EAAK,MAAK,GAGpDmJ;AAGT,QAAInJ,EAAK,SAAS,WAAW;AAE3B,UAAItD;AAEJ,WAAKA,KAAOyW;AACV,YACE,OAAO,OAAOA,IAAezW,CAAG,KAChC,OAAO,OAAOsD,EAAK,YAAYtD,CAAG,GAClC;AACA,gBAAMkB,IAAQoC,EAAK,WAAWtD,CAAG,GAC3Bse,IAAO7H,GAAczW,CAAG;AAC9B,WAAIse,MAAS,QAAQA,EAAK,SAAShb,EAAK,OAAO,OAC7CA,EAAK,WAAWtD,CAAG,IAAIsnC,EAAa,OAAOpmC,KAAS,EAAE,GAAGlB,GAAKsD,CAAI;AAAA,QAEtE;AAAA,IAEJ;AAEA,QAAIA,EAAK,SAAS,WAAW;AAC3B,UAAI4T,IAAS8vB,IACT,CAACA,EAAgB,SAAS1jC,EAAK,OAAO,IACtC6jC,IACEA,EAAmB,SAAS7jC,EAAK,OAAO,IACxC;AAMN,UAJI,CAAC4T,KAAU+vB,KAAgB,OAAOx6B,KAAU,aAC9CyK,IAAS,CAAC+vB,EAAa3jC,GAAMmJ,GAAOyG,CAAM,IAGxCgE,KAAUhE,KAAU,OAAOzG,KAAU;AACvC,eAAI46B,KAAoB/jC,EAAK,WAC3B4P,EAAO,SAAS,OAAOzG,GAAO,GAAG,GAAGnJ,EAAK,QAAQ,IAEjD4P,EAAO,SAAS,OAAOzG,GAAO,CAAC,GAG1BA;AAAA,IAEX;AAAA,EACF;AACF;AAWO,SAAS86B,GAAoBrmC,GAAO;AAIzC,QAAMymC,IAAQzmC,EAAM,QAAQ,GAAG,GACzB0mC,IAAe1mC,EAAM,QAAQ,GAAG,GAChC2mC,IAAa3mC,EAAM,QAAQ,GAAG,GAC9BmlB,IAAQnlB,EAAM,QAAQ,GAAG;AAE/B;AAAA;AAAA,IAEEymC,MAAU;AAAA,IAETthB,MAAU,MAAMshB,IAAQthB,KACxBuhB,MAAiB,MAAMD,IAAQC,KAC/BC,MAAe,MAAMF,IAAQE;AAAA,IAE9BvB,GAAa,KAAKplC,EAAM,MAAM,GAAGymC,CAAK,CAAC,IAEhCzmC,IAGF;AAAA;AACT;AC7aA,MAAM4mC,KAAe;AAErB,SAAwBC,KAAsB;AAC5C,SAAO,CAACt0B,MAAe;AACrB,IAAA6pB;AAAA,MACE7pB;AAAA,MACA;AAAA,MACA,CAACnQ,GAAemJ,GAAsByG,MAA0B;AAC9D,cAAMhS,IAAQoC,EAAK,OACbyM,IAAQ+3B,GAAa,KAAK5mC,CAAK;AAGrC,YAAI,CAAC6O,KAAStD,MAAU,QAAQyG,MAAW,KAAM;AAEjD,cAAM2d,IAAa9gB,EAAM,OACnBghB,IAAWF,IAAa9gB,EAAM,CAAC,EAAE,QAMjCqyB,IAAsB;AAAA,UAC1B;AAAA,YACE,MAAM;AAAA,YACN,OAAOlhC,EAAM,UAAU,GAAG2vB,CAAU;AAAA,UAAA;AAAA,UAEtC;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,cACJ,OAAO;AAAA,cACP,aAAa,EAAE,YAAY9gB,EAAM,CAAC,EAAA;AAAA,YAAE;AAAA,UACtC;AAAA,UAEF;AAAA,YACE,MAAM;AAAA,YACN,OAAO7O,EAAM,UAAU6vB,CAAQ;AAAA,UAAA;AAAA,QACjC;AAIF,QAAA7d,EAAO,SAAS,OAAOzG,GAAO,GAAG,GAAG21B,CAAQ;AAAA,MAC9C;AAAA,IAAA;AAAA,EAEJ;AACF;ACxDA,SAAS4F,GAAOC,GAAK/mC,GAAO;AAC1B,MAAI,OAAO+mC,KAAQ;AACjB,WAAOA,EAAI/mC,CAAK;AACX,EAAI+mC,KAAQ,SACjBA,EAAI,UAAU/mC;AAElB;AACA,SAASgnC,MAAeC,GAAM;AAC5B,SAAO,CAAC7kC,MAAS;AACf,QAAI8kC,IAAa;AACjB,UAAMC,IAAWF,EAAK,IAAI,CAACF,MAAQ;AACjC,YAAMK,IAAUN,GAAOC,GAAK3kC,CAAI;AAChC,aAAI,CAAC8kC,KAAc,OAAOE,KAAW,eACnCF,IAAa,KAERE;AAAA,IACT,CAAC;AACD,QAAIF;AACF,aAAO,MAAM;AACX,iBAAS,IAAI,GAAG,IAAIC,EAAS,QAAQ,KAAK;AACxC,gBAAMC,IAAUD,EAAS,CAAC;AAC1B,UAAI,OAAOC,KAAW,aACpBA,EAAO,IAEPN,GAAOG,EAAK,CAAC,GAAG,IAAI;AAAA,QAExB;AAAA,MACF;AAAA,EAEJ;AACF;AAAA;AC3BA,SAASI,GAAWC,GAAW;AAC7B,QAAMC,IAA4B,gBAAAC,GAAgBF,CAAS,GACrDG,IAAQplC,GAAM,WAAW,CAACtB,GAAO2mC,MAAiB;AACtD,UAAM,EAAE,UAAA5lC,GAAU,GAAG6lC,EAAS,IAAK5mC,GAC7B6mC,IAAgBvlC,GAAM,SAAS,QAAQP,CAAQ,GAC/C+lC,IAAYD,EAAc,KAAKE,EAAW;AAChD,QAAID,GAAW;AACb,YAAME,IAAaF,EAAU,MAAM,UAC7BG,IAAcJ,EAAc,IAAI,CAACr0B,MACjCA,MAAUs0B,IACRxlC,GAAM,SAAS,MAAM0lC,CAAU,IAAI,IAAU1lC,GAAM,SAAS,KAAK,IAAI,IAClEA,GAAM,eAAe0lC,CAAU,IAAIA,EAAW,MAAM,WAAW,OAE/Dx0B,CAEV;AACD,aAAuBO,gBAAAA,GAAAA,IAAIyzB,GAAW,EAAE,GAAGI,GAAW,KAAKD,GAAc,UAAUrlC,GAAM,eAAe0lC,CAAU,IAAI1lC,GAAM,aAAa0lC,GAAY,QAAQC,CAAW,IAAI,MAAM;AAAA,IACpL;AACA,WAAuBl0B,gBAAAA,GAAAA,IAAIyzB,GAAW,EAAE,GAAGI,GAAW,KAAKD,GAAc,UAAA5lC,GAAU;AAAA,EACrF,CAAC;AACD,SAAA2lC,EAAM,cAAc,GAAGH,CAAS,SACzBG;AACT;AACA,IAAIQ,KAAuB,gBAAAZ,GAAW,MAAM;AAAA;AAE5C,SAASG,GAAgBF,GAAW;AAClC,QAAMC,IAAYllC,GAAM,WAAW,CAACtB,GAAO2mC,MAAiB;AAC1D,UAAM,EAAE,UAAA5lC,GAAU,GAAG6lC,EAAS,IAAK5mC;AACnC,QAAIsB,GAAM,eAAeP,CAAQ,GAAG;AAClC,YAAMomC,IAAcC,GAAcrmC,CAAQ,GACpCsmC,IAASC,GAAWV,GAAW7lC,EAAS,KAAK;AACnD,aAAIA,EAAS,SAASO,GAAM,aAC1B+lC,EAAO,MAAMV,IAAeV,GAAYU,GAAcQ,CAAW,IAAIA,IAEhE7lC,GAAM,aAAaP,GAAUsmC,CAAM;AAAA,IAC5C;AACA,WAAO/lC,GAAM,SAAS,MAAMP,CAAQ,IAAI,IAAIO,GAAM,SAAS,KAAK,IAAI,IAAI;AAAA,EAC1E,CAAC;AACD,SAAAklC,EAAU,cAAc,GAAGD,CAAS,cAC7BC;AACT;AACA,IAAIe,KAAuB,OAAO,iBAAiB;AAWnD,SAASR,GAAYv0B,GAAO;AAC1B,SAAOlR,GAAM,eAAekR,CAAK,KAAK,OAAOA,EAAM,QAAS,cAAc,eAAeA,EAAM,QAAQA,EAAM,KAAK,cAAc+0B;AAClI;AACA,SAASD,GAAWV,GAAWY,GAAY;AACzC,QAAMC,IAAgB,EAAE,GAAGD,EAAU;AACrC,aAAWxpC,KAAYwpC,GAAY;AACjC,UAAME,IAAgBd,EAAU5oC,CAAQ,GAClC2pC,IAAiBH,EAAWxpC,CAAQ;AAE1C,IADkB,WAAW,KAAKA,CAAQ,IAEpC0pC,KAAiBC,IACnBF,EAAczpC,CAAQ,IAAI,IAAI4pC,MAAS;AACrC,YAAMxlC,IAASulC,EAAe,GAAGC,CAAI;AACrC,aAAAF,EAAc,GAAGE,CAAI,GACdxlC;AAAA,IACT,IACSslC,MACTD,EAAczpC,CAAQ,IAAI0pC,KAEnB1pC,MAAa,UACtBypC,EAAczpC,CAAQ,IAAI,EAAE,GAAG0pC,GAAe,GAAGC,EAAc,IACtD3pC,MAAa,gBACtBypC,EAAczpC,CAAQ,IAAI,CAAC0pC,GAAeC,CAAc,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG;AAAA,EAEtF;AACA,SAAO,EAAE,GAAGf,GAAW,GAAGa,EAAa;AACzC;AACA,SAASL,GAAct1B,GAAS;AAC9B,MAAIhS,IAAS,OAAO,yBAAyBgS,EAAQ,OAAO,KAAK,GAAG,KAChE+1B,IAAU/nC,KAAU,oBAAoBA,KAAUA,EAAO;AAC7D,SAAI+nC,IACK/1B,EAAQ,OAEjBhS,IAAS,OAAO,yBAAyBgS,GAAS,KAAK,GAAG,KAC1D+1B,IAAU/nC,KAAU,oBAAoBA,KAAUA,EAAO,gBACrD+nC,IACK/1B,EAAQ,MAAM,MAEhBA,EAAQ,MAAM,OAAOA,EAAQ;AACtC;AChGA,SAASg2B,GAAE,GAAE;AAAC,MAAI,GAAEC,GAAE/oB,IAAE;AAAG,MAAa,OAAO,KAAjB,YAA8B,OAAO,KAAjB,SAAmB,CAAAA,KAAG;AAAA,WAAoB,OAAO,KAAjB,SAAmB,KAAG,MAAM,QAAQ,CAAC,GAAE;AAAC,QAAIgpB,IAAE,EAAE;AAAO,SAAI,IAAE,GAAE,IAAEA,GAAE,IAAI,GAAE,CAAC,MAAID,IAAED,GAAE,EAAE,CAAC,CAAC,OAAK9oB,MAAIA,KAAG,MAAKA,KAAG+oB;AAAA,EAAE,MAAM,MAAIA,KAAK,EAAE,GAAEA,CAAC,MAAI/oB,MAAIA,KAAG,MAAKA,KAAG+oB;AAAG,SAAO/oB;AAAC;AAAQ,SAASipB,KAAM;AAAC,WAAQ,GAAE,GAAEF,IAAE,GAAE/oB,IAAE,IAAGgpB,IAAE,UAAU,QAAOD,IAAEC,GAAED,IAAI,EAAC,IAAE,UAAUA,CAAC,OAAK,IAAED,GAAE,CAAC,OAAK9oB,MAAIA,KAAG,MAAKA,KAAG;AAAG,SAAOA;AAAC;ACe/W,MAAMkpB,KAAgB,CAACjpC,MAAQ,OAAOA,KAAU,YAAY,GAAGA,CAAK,KAAKA,MAAU,IAAI,MAAMA,GAChFkpC,KAAKF,IACLG,KAAM,CAAClyB,GAAMrY,MAAS,CAACmC,MAAQ;AACpC,MAAIqoC;AACJ,MAAqDxqC,GAAO,YAAa,KAAM,QAAOsqC,GAAGjyB,GAAoDlW,GAAM,OAAqDA,GAAM,SAAS;AACvN,QAAM,EAAE,UAAAsoC,GAAU,iBAAAC,EAAe,IAAK1qC,GAChC2qC,IAAuB,OAAO,KAAKF,CAAQ,EAAE,IAAI,CAACG,MAAU;AAC9D,UAAMC,IAA4D1oC,IAAMyoC,CAAO,GACzEE,IAAuFJ,IAAgBE,CAAO;AACpH,QAAIC,MAAgB,KAAM,QAAO;AACjC,UAAME,IAAaV,GAAcQ,CAAW,KAAKR,GAAcS,CAAkB;AACjF,WAAOL,EAASG,CAAO,EAAEG,CAAU;AAAA,EACvC,CAAC,GACKC,IAAwB7oC,KAAS,OAAO,QAAQA,CAAK,EAAE,OAAO,CAAC6H,GAAKihC,MAAQ;AAC9E,QAAI,CAAC/qC,GAAKkB,CAAK,IAAI6pC;AACnB,WAAI7pC,MAAU,WAGd4I,EAAI9J,CAAG,IAAIkB,IACJ4I;AAAA,EACX,GAAG,CAAA,CAAE,GACCkhC,IAA+BlrC,KAAW,SAAsCwqC,IAA2BxqC,EAAO,sBAAsB,QAAQwqC,MAA6B,SAAvG,SAAyHA,EAAyB,OAAO,CAACxgC,GAAKihC,MAAQ;AAC/O,QAAI,EAAE,OAAOE,GAAS,WAAWC,GAAa,GAAGC,EAAsB,IAAKJ;AAC5E,WAAO,OAAO,QAAQI,CAAsB,EAAE,MAAM,CAACJ,MAAQ;AACzD,UAAI,CAAC/qC,GAAKkB,CAAK,IAAI6pC;AACnB,aAAO,MAAM,QAAQ7pC,CAAK,IAAIA,EAAM,SAAS;AAAA,QACzC,GAAGspC;AAAA,QACH,GAAGM;AAAA,MACvB,EAAkB9qC,CAAG,CAAC,IAAK;AAAA,QACP,GAAGwqC;AAAA,QACH,GAAGM;AAAA,MACvB,EAAmB9qC,CAAG,MAAMkB;AAAA,IAChB,CAAC,IAAI;AAAA,MACD,GAAG4I;AAAA,MACHmhC;AAAA,MACAC;AAAA,IAChB,IAAgBphC;AAAA,EACR,GAAG,CAAA,CAAE;AACL,SAAOsgC,GAAGjyB,GAAMsyB,GAAsBO,GAA4E/oC,GAAM,OAAqDA,GAAM,SAAS;AAChM,GCtDEmpC,KAAuB,KACvBC,KAAwB,CAAAvrC,MAAU;AACtC,QAAMwrC,IAAWC,GAAezrC,CAAM,GAChC;AAAA,IACJ,wBAAA0rC;AAAA,IACA,gCAAAC;AAAA,EACJ,IAAM3rC;AAgBJ,SAAO;AAAA,IACL,iBAhBsB,CAAA4rC,MAAa;AACnC,YAAMC,IAAaD,EAAU,MAAMN,EAAoB;AAEvD,aAAIO,EAAW,CAAC,MAAM,MAAMA,EAAW,WAAW,KAChDA,EAAW,MAAK,GAEXC,GAAkBD,GAAYL,CAAQ,KAAKO,GAA+BH,CAAS;AAAA,IAC5F;AAAA,IAUE,6BATkC,CAACI,GAAcC,MAAuB;AACxE,YAAMC,IAAYR,EAAuBM,CAAY,KAAK,CAAA;AAC1D,aAAIC,KAAsBN,EAA+BK,CAAY,IAC5D,CAAC,GAAGE,GAAW,GAAGP,EAA+BK,CAAY,CAAC,IAEhEE;AAAA,IACT;AAAA,EAIF;AACA,GACMJ,KAAoB,CAACD,GAAYM,MAAoB;AACzD,MAAIN,EAAW,WAAW;AACxB,WAAOM,EAAgB;AAEzB,QAAMC,IAAmBP,EAAW,CAAC,GAC/BQ,IAAsBF,EAAgB,SAAS,IAAIC,CAAgB,GACnEE,IAA8BD,IAAsBP,GAAkBD,EAAW,MAAM,CAAC,GAAGQ,CAAmB,IAAI;AACxH,MAAIC;AACF,WAAOA;AAET,MAAIH,EAAgB,WAAW,WAAW;AACxC;AAEF,QAAMI,IAAYV,EAAW,KAAKP,EAAoB;AACtD,SAAOa,EAAgB,WAAW,KAAK,CAAC;AAAA,IACtC,WAAAK;AAAA,EACJ,MAAQA,EAAUD,CAAS,CAAC,GAAG;AAC/B,GACME,KAAyB,cACzBV,KAAiC,CAAAH,MAAa;AAClD,MAAIa,GAAuB,KAAKb,CAAS,GAAG;AAC1C,UAAMc,IAA6BD,GAAuB,KAAKb,CAAS,EAAE,CAAC,GACrEvgC,IAAWqhC,GAA4B,UAAU,GAAGA,EAA2B,QAAQ,GAAG,CAAC;AACjG,QAAIrhC;AAEF,aAAO,gBAAgBA;AAAA,EAE3B;AACF,GAIMogC,KAAiB,CAAAzrC,MAAU;AAC/B,QAAM;AAAA,IACJ,OAAA2sC;AAAA,IACA,aAAAC;AAAA,EACJ,IAAM5sC,GACEwrC,IAAW;AAAA,IACf,UAAU,oBAAI,IAAG;AAAA,IACjB,YAAY,CAAA;AAAA,EAChB;AACE,aAAWQ,KAAgBY;AACzB,IAAAC,GAA0BD,EAAYZ,CAAY,GAAGR,GAAUQ,GAAcW,CAAK;AAEpF,SAAOnB;AACT,GACMqB,KAA4B,CAACC,GAAYX,GAAiBH,GAAcW,MAAU;AACtF,EAAAG,EAAW,QAAQ,CAAAC,MAAmB;AACpC,QAAI,OAAOA,KAAoB,UAAU;AACvC,YAAMC,IAAwBD,MAAoB,KAAKZ,IAAkBc,GAAQd,GAAiBY,CAAe;AACjH,MAAAC,EAAsB,eAAehB;AACrC;AAAA,IACF;AACA,QAAI,OAAOe,KAAoB,YAAY;AACzC,UAAIG,GAAcH,CAAe,GAAG;AAClC,QAAAF,GAA0BE,EAAgBJ,CAAK,GAAGR,GAAiBH,GAAcW,CAAK;AACtF;AAAA,MACF;AACA,MAAAR,EAAgB,WAAW,KAAK;AAAA,QAC9B,WAAWY;AAAA,QACX,cAAAf;AAAA,MACR,CAAO;AACD;AAAA,IACF;AACA,WAAO,QAAQe,CAAe,EAAE,QAAQ,CAAC,CAAC7sC,GAAK4sC,CAAU,MAAM;AAC7D,MAAAD,GAA0BC,GAAYG,GAAQd,GAAiBjsC,CAAG,GAAG8rC,GAAcW,CAAK;AAAA,IAC1F,CAAC;AAAA,EACH,CAAC;AACH,GACMM,KAAU,CAACd,GAAiBtK,MAAS;AACzC,MAAIsL,IAAyBhB;AAC7B,SAAAtK,EAAK,MAAMyJ,EAAoB,EAAE,QAAQ,CAAA8B,MAAY;AACnD,IAAKD,EAAuB,SAAS,IAAIC,CAAQ,KAC/CD,EAAuB,SAAS,IAAIC,GAAU;AAAA,MAC5C,UAAU,oBAAI,IAAG;AAAA,MACjB,YAAY,CAAA;AAAA,IACpB,CAAO,GAEHD,IAAyBA,EAAuB,SAAS,IAAIC,CAAQ;AAAA,EACvE,CAAC,GACMD;AACT,GACMD,KAAgB,CAAAG,MAAQA,EAAK,eAG7BC,KAAiB,CAAAC,MAAgB;AACrC,MAAIA,IAAe;AACjB,WAAO;AAAA,MACL,KAAK,MAAA;AAAA;AAAA,MACL,KAAK,MAAM;AAAA,MAAC;AAAA,IAClB;AAEE,MAAIC,IAAY,GACZC,IAAQ,oBAAI,IAAG,GACfC,IAAgB,oBAAI,IAAG;AAC3B,QAAMC,IAAS,CAACztC,GAAKkB,MAAU;AAC7B,IAAAqsC,EAAM,IAAIvtC,GAAKkB,CAAK,GACpBosC,KACIA,IAAYD,MACdC,IAAY,GACZE,IAAgBD,GAChBA,IAAQ,oBAAI,IAAG;AAAA,EAEnB;AACA,SAAO;AAAA,IACL,IAAIvtC,GAAK;AACP,UAAIkB,IAAQqsC,EAAM,IAAIvtC,CAAG;AACzB,UAAIkB,MAAU;AACZ,eAAOA;AAET,WAAKA,IAAQssC,EAAc,IAAIxtC,CAAG,OAAO;AACvC,eAAAytC,EAAOztC,GAAKkB,CAAK,GACVA;AAAA,IAEX;AAAA,IACA,IAAIlB,GAAKkB,GAAO;AACd,MAAIqsC,EAAM,IAAIvtC,CAAG,IACfutC,EAAM,IAAIvtC,GAAKkB,CAAK,IAEpBusC,EAAOztC,GAAKkB,CAAK;AAAA,IAErB;AAAA,EACJ;AACA,GACMwsC,KAAqB,KACrBC,KAAqB,KACrBC,KAA4BD,GAAmB,QAC/CE,KAAuB,CAAA/tC,MAAU;AACrC,QAAM;AAAA,IACJ,QAAAmS;AAAA,IACA,4BAAA67B;AAAA,EACJ,IAAMhuC;AAOJ,MAAIiuC,IAAiB,CAAArC,MAAa;AAChC,UAAMsC,IAAY,CAAA;AAClB,QAAIC,IAAe,GACfC,IAAa,GACbC,IAAgB,GAChBC;AACJ,aAAS3hC,IAAQ,GAAGA,IAAQi/B,EAAU,QAAQj/B,KAAS;AACrD,UAAI4hC,IAAmB3C,EAAUj/B,CAAK;AACtC,UAAIwhC,MAAiB,KAAKC,MAAe,GAAG;AAC1C,YAAIG,MAAqBV,IAAoB;AAC3C,UAAAK,EAAU,KAAKtC,EAAU,MAAMyC,GAAe1hC,CAAK,CAAC,GACpD0hC,IAAgB1hC,IAAQmhC;AACxB;AAAA,QACF;AACA,YAAIS,MAAqB,KAAK;AAC5B,UAAAD,IAA0B3hC;AAC1B;AAAA,QACF;AAAA,MACF;AACA,MAAI4hC,MAAqB,MACvBJ,MACSI,MAAqB,MAC9BJ,MACSI,MAAqB,MAC9BH,MACSG,MAAqB,OAC9BH;AAAA,IAEJ;AACA,UAAMI,IAAqCN,EAAU,WAAW,IAAItC,IAAYA,EAAU,UAAUyC,CAAa,GAC3GI,IAAgBC,GAAuBF,CAAkC,GACzEG,IAAuBF,MAAkBD,GACzCI,IAA+BN,KAA2BA,IAA0BD,IAAgBC,IAA0BD,IAAgB;AACpJ,WAAO;AAAA,MACL,WAAAH;AAAA,MACA,sBAAAS;AAAA,MACA,eAAAF;AAAA,MACA,8BAAAG;AAAA,IACN;AAAA,EACE;AACA,MAAIz8B,GAAQ;AACV,UAAM08B,IAAa18B,IAAS07B,IACtBiB,IAAyBb;AAC/B,IAAAA,IAAiB,CAAArC,MAAaA,EAAU,WAAWiD,CAAU,IAAIC,EAAuBlD,EAAU,UAAUiD,EAAW,MAAM,CAAC,IAAI;AAAA,MAChI,YAAY;AAAA,MACZ,WAAW,CAAA;AAAA,MACX,sBAAsB;AAAA,MACtB,eAAejD;AAAA,MACf,8BAA8B;AAAA,IACpC;AAAA,EACE;AACA,MAAIoC,GAA4B;AAC9B,UAAMc,IAAyBb;AAC/B,IAAAA,IAAiB,CAAArC,MAAaoC,EAA2B;AAAA,MACvD,WAAApC;AAAA,MACA,gBAAgBkD;AAAA,IACtB,CAAK;AAAA,EACH;AACA,SAAOb;AACT,GACMS,KAAyB,CAAAD,MACzBA,EAAc,SAASb,EAAkB,IACpCa,EAAc,UAAU,GAAGA,EAAc,SAAS,CAAC,IAMxDA,EAAc,WAAWb,EAAkB,IACtCa,EAAc,UAAU,CAAC,IAE3BA,GAQHM,KAAsB,CAAA/uC,MAAU;AACpC,QAAMgvC,IAA0B,OAAO,YAAYhvC,EAAO,wBAAwB,IAAI,CAAAivC,MAAY,CAACA,GAAU,EAAI,CAAC,CAAC;AAmBnH,SAlBsB,CAAAf,MAAa;AACjC,QAAIA,EAAU,UAAU;AACtB,aAAOA;AAET,UAAMgB,IAAkB,CAAA;AACxB,QAAIC,IAAoB,CAAA;AACxB,WAAAjB,EAAU,QAAQ,CAAAe,MAAY;AAE5B,MAD4BA,EAAS,CAAC,MAAM,OAAOD,EAAwBC,CAAQ,KAEjFC,EAAgB,KAAK,GAAGC,EAAkB,KAAI,GAAIF,CAAQ,GAC1DE,IAAoB,CAAA,KAEpBA,EAAkB,KAAKF,CAAQ;AAAA,IAEnC,CAAC,GACDC,EAAgB,KAAK,GAAGC,EAAkB,KAAI,CAAE,GACzCD;AAAA,EACT;AAEF,GACME,KAAoB,CAAApvC,OAAW;AAAA,EACnC,OAAOstC,GAAettC,EAAO,SAAS;AAAA,EACtC,gBAAgB+tC,GAAqB/tC,CAAM;AAAA,EAC3C,eAAe+uC,GAAoB/uC,CAAM;AAAA,EACzC,GAAGurC,GAAsBvrC,CAAM;AACjC,IACMqvC,KAAsB,OACtBC,KAAiB,CAACC,GAAWC,MAAgB;AACjD,QAAM;AAAA,IACJ,gBAAAvB;AAAA,IACA,iBAAAwB;AAAA,IACA,6BAAAC;AAAA,IACA,eAAAC;AAAA,EACJ,IAAMH,GAQEI,IAAwB,CAAA,GACxBC,IAAaN,EAAU,KAAI,EAAG,MAAMF,EAAmB;AAC7D,MAAI9qC,IAAS;AACb,WAASoI,IAAQkjC,EAAW,SAAS,GAAGljC,KAAS,GAAGA,KAAS,GAAG;AAC9D,UAAMmjC,IAAoBD,EAAWljC,CAAK,GACpC;AAAA,MACJ,YAAAojC;AAAA,MACA,WAAA7B;AAAA,MACA,sBAAAS;AAAA,MACA,eAAAF;AAAA,MACA,8BAAAG;AAAA,IACN,IAAQX,EAAe6B,CAAiB;AACpC,QAAIC,GAAY;AACd,MAAAxrC,IAASurC,KAAqBvrC,EAAO,SAAS,IAAI,MAAMA,IAASA;AACjE;AAAA,IACF;AACA,QAAI0nC,IAAqB,CAAC,CAAC2C,GACvB5C,IAAeyD,EAAgBxD,IAAqBwC,EAAc,UAAU,GAAGG,CAA4B,IAAIH,CAAa;AAChI,QAAI,CAACzC,GAAc;AACjB,UAAI,CAACC,GAAoB;AAEvB,QAAA1nC,IAASurC,KAAqBvrC,EAAO,SAAS,IAAI,MAAMA,IAASA;AACjE;AAAA,MACF;AAEA,UADAynC,IAAeyD,EAAgBhB,CAAa,GACxC,CAACzC,GAAc;AAEjB,QAAAznC,IAASurC,KAAqBvrC,EAAO,SAAS,IAAI,MAAMA,IAASA;AACjE;AAAA,MACF;AACA,MAAA0nC,IAAqB;AAAA,IACvB;AACA,UAAM+D,IAAkBL,EAAczB,CAAS,EAAE,KAAK,GAAG,GACnD+B,IAAatB,IAAuBqB,IAAkBpC,KAAqBoC,GAC3EE,IAAUD,IAAajE;AAC7B,QAAI4D,EAAsB,SAASM,CAAO;AAExC;AAEF,IAAAN,EAAsB,KAAKM,CAAO;AAClC,UAAMC,IAAiBT,EAA4B1D,GAAcC,CAAkB;AACnF,aAASp8B,IAAI,GAAGA,IAAIsgC,EAAe,QAAQ,EAAEtgC,GAAG;AAC9C,YAAM4M,IAAQ0zB,EAAetgC,CAAC;AAC9B,MAAA+/B,EAAsB,KAAKK,IAAaxzB,CAAK;AAAA,IAC/C;AAEA,IAAAlY,IAASurC,KAAqBvrC,EAAO,SAAS,IAAI,MAAMA,IAASA;AAAA,EACnE;AACA,SAAOA;AACT;AAWA,SAAS6rC,KAAS;AAChB,MAAIzjC,IAAQ,GACR0jC,GACAC,GACAjjB,IAAS;AACb,SAAO1gB,IAAQ,UAAU;AACvB,KAAI0jC,IAAW,UAAU1jC,GAAO,OAC1B2jC,IAAgBC,GAAQF,CAAQ,OAClChjB,MAAWA,KAAU,MACrBA,KAAUijB;AAIhB,SAAOjjB;AACT;AACA,MAAMkjB,KAAU,CAAAC,MAAO;AACrB,MAAI,OAAOA,KAAQ;AACjB,WAAOA;AAET,MAAIF,GACAjjB,IAAS;AACb,WAAS/pB,IAAI,GAAGA,IAAIktC,EAAI,QAAQltC;AAC9B,IAAIktC,EAAIltC,CAAC,MACHgtC,IAAgBC,GAAQC,EAAIltC,CAAC,CAAC,OAChC+pB,MAAWA,KAAU,MACrBA,KAAUijB;AAIhB,SAAOjjB;AACT;AACA,SAASojB,GAAoBC,MAAsBC,GAAkB;AACnE,MAAInB,GACAoB,GACAC,GACAC,IAAiBC;AACrB,WAASA,EAAkBxB,GAAW;AACpC,UAAMvvC,IAAS2wC,EAAiB,OAAO,CAACK,GAAgBC,MAAwBA,EAAoBD,CAAc,GAAGN,GAAmB;AACxI,WAAAlB,IAAcJ,GAAkBpvC,CAAM,GACtC4wC,IAAWpB,EAAY,MAAM,KAC7BqB,IAAWrB,EAAY,MAAM,KAC7BsB,IAAiBI,GACVA,EAAc3B,CAAS;AAAA,EAChC;AACA,WAAS2B,EAAc3B,GAAW;AAChC,UAAM4B,IAAeP,EAASrB,CAAS;AACvC,QAAI4B;AACF,aAAOA;AAET,UAAM5sC,IAAS+qC,GAAeC,GAAWC,CAAW;AACpD,WAAAqB,EAAStB,GAAWhrC,CAAM,GACnBA;AAAA,EACT;AACA,SAAO,WAA6B;AAClC,WAAOusC,EAAeV,GAAO,MAAM,MAAM,SAAS,CAAC;AAAA,EACrD;AACF;AACA,MAAMgB,KAAY,CAAAlxC,MAAO;AACvB,QAAMmxC,IAAc,CAAA1E,MAASA,EAAMzsC,CAAG,KAAK,CAAA;AAC3C,SAAAmxC,EAAY,gBAAgB,IACrBA;AACT,GACMC,KAAsB,+BACtBC,KAAyB,+BACzBC,KAAgB,cAChBC,KAAkB,oCAClBC,KAAkB,6HAClBC,KAAqB,sDAErBC,KAAc,mEACdC,KAAa,gGACbC,KAAa,CAAA1wC,MAASowC,GAAc,KAAKpwC,CAAK,GAC9C2wC,KAAW,CAAA3wC,MAAS,CAAC,CAACA,KAAS,CAAC,OAAO,MAAM,OAAOA,CAAK,CAAC,GAC1D4wC,KAAY,CAAA5wC,MAAS,CAAC,CAACA,KAAS,OAAO,UAAU,OAAOA,CAAK,CAAC,GAC9D6wC,KAAY,CAAA7wC,MAASA,EAAM,SAAS,GAAG,KAAK2wC,GAAS3wC,EAAM,MAAM,GAAG,EAAE,CAAC,GACvE8wC,KAAe,CAAA9wC,MAASqwC,GAAgB,KAAKrwC,CAAK,GAClD+wC,KAAQ,MAAM,IACdC,KAAe,CAAAhxC;AAAA;AAAA;AAAA;AAAA,EAIrBswC,GAAgB,KAAKtwC,CAAK,KAAK,CAACuwC,GAAmB,KAAKvwC,CAAK;AAAA,GACvDixC,KAAU,MAAM,IAChBC,KAAW,CAAAlxC,MAASwwC,GAAY,KAAKxwC,CAAK,GAC1CmxC,KAAU,CAAAnxC,MAASywC,GAAW,KAAKzwC,CAAK,GACxCoxC,KAAoB,CAAApxC,MAAS,CAACqxC,EAAiBrxC,CAAK,KAAK,CAACsxC,EAAoBtxC,CAAK,GACnFuxC,KAAkB,CAAAvxC,MAASwxC,GAAoBxxC,GAAOyxC,IAAaR,EAAO,GAC1EI,IAAmB,CAAArxC,MAASkwC,GAAoB,KAAKlwC,CAAK,GAC1D0xC,KAAoB,CAAA1xC,MAASwxC,GAAoBxxC,GAAO2xC,IAAeX,EAAY,GACnFY,KAAoB,CAAA5xC,MAASwxC,GAAoBxxC,GAAO6xC,IAAelB,EAAQ,GAC/EmB,KAAsB,CAAA9xC,MAASwxC,GAAoBxxC,GAAO+xC,IAAiBd,EAAO,GAClFe,KAAmB,CAAAhyC,MAASwxC,GAAoBxxC,GAAOiyC,IAAcd,EAAO,GAC5Ee,KAAoB,CAAAlyC,MAASwxC,GAAoBxxC,GAAOmyC,IAAejB,EAAQ,GAC/EI,IAAsB,CAAAtxC,MAASmwC,GAAuB,KAAKnwC,CAAK,GAChEoyC,KAA4B,CAAApyC,MAASqyC,GAAuBryC,GAAO2xC,EAAa,GAChFW,KAAgC,CAAAtyC,MAASqyC,GAAuBryC,GAAOuyC,EAAiB,GACxFC,KAA8B,CAAAxyC,MAASqyC,GAAuBryC,GAAO+xC,EAAe,GACpFU,KAA0B,CAAAzyC,MAASqyC,GAAuBryC,GAAOyxC,EAAW,GAC5EiB,KAA2B,CAAA1yC,MAASqyC,GAAuBryC,GAAOiyC,EAAY,GAC9EU,KAA4B,CAAA3yC,MAASqyC,GAAuBryC,GAAOmyC,IAAe,EAAI,GAEtFX,KAAsB,CAACxxC,GAAO4yC,GAAWC,MAAc;AAC3D,QAAM1vC,IAAS+sC,GAAoB,KAAKlwC,CAAK;AAC7C,SAAImD,IACEA,EAAO,CAAC,IACHyvC,EAAUzvC,EAAO,CAAC,CAAC,IAErB0vC,EAAU1vC,EAAO,CAAC,CAAC,IAErB;AACT,GACMkvC,KAAyB,CAACryC,GAAO4yC,GAAWE,IAAqB,OAAU;AAC/E,QAAM3vC,IAASgtC,GAAuB,KAAKnwC,CAAK;AAChD,SAAImD,IACEA,EAAO,CAAC,IACHyvC,EAAUzvC,EAAO,CAAC,CAAC,IAErB2vC,IAEF;AACT,GAEMf,KAAkB,CAAAppB,MAASA,MAAU,cAAcA,MAAU,cAC7DspB,KAAe,CAAAtpB,MAASA,MAAU,WAAWA,MAAU,OACvD8oB,KAAc,CAAA9oB,MAASA,MAAU,YAAYA,MAAU,UAAUA,MAAU,WAC3EgpB,KAAgB,CAAAhpB,MAASA,MAAU,UACnCkpB,KAAgB,CAAAlpB,MAASA,MAAU,UACnC4pB,KAAoB,CAAA5pB,MAASA,MAAU,eACvCwpB,KAAgB,CAAAxpB,MAASA,MAAU,UA2BnCoqB,KAAmB,MAAM;AAM7B,QAAMC,IAAahD,GAAU,OAAO,GAC9BiD,IAAYjD,GAAU,MAAM,GAC5BkD,IAAYlD,GAAU,MAAM,GAC5BmD,IAAkBnD,GAAU,aAAa,GACzCoD,IAAgBpD,GAAU,UAAU,GACpCqD,IAAerD,GAAU,SAAS,GAClCsD,IAAkBtD,GAAU,YAAY,GACxCuD,IAAiBvD,GAAU,WAAW,GACtCwD,IAAexD,GAAU,SAAS,GAClCyD,IAAczD,GAAU,QAAQ,GAChC0D,IAAc1D,GAAU,QAAQ,GAChC2D,IAAmB3D,GAAU,cAAc,GAC3C4D,IAAkB5D,GAAU,aAAa,GACzC6D,IAAkB7D,GAAU,aAAa,GACzC8D,IAAY9D,GAAU,MAAM,GAC5B+D,IAAmB/D,GAAU,aAAa,GAC1CgE,IAAchE,GAAU,QAAQ,GAChCiE,IAAYjE,GAAU,MAAM,GAC5BkE,IAAelE,GAAU,SAAS,GAQlCmE,IAAa,MAAM,CAAC,QAAQ,SAAS,OAAO,cAAc,QAAQ,QAAQ,SAAS,QAAQ,GAC3FC,IAAgB,MAAM;AAAA,IAAC;AAAA,IAAU;AAAA,IAAO;AAAA,IAAU;AAAA,IAAQ;AAAA,IAAS;AAAA;AAAA,IAEzE;AAAA,IAAY;AAAA;AAAA,IAEZ;AAAA,IAAa;AAAA;AAAA,IAEb;AAAA,IAAgB;AAAA;AAAA,IAEhB;AAAA,EAAa,GACPC,IAA6B,MAAM,CAAC,GAAGD,EAAa,GAAI9C,GAAqBD,CAAgB,GAC7FiD,IAAgB,MAAM,CAAC,QAAQ,UAAU,QAAQ,WAAW,QAAQ,GACpEC,IAAkB,MAAM,CAAC,QAAQ,WAAW,MAAM,GAClDC,IAA0B,MAAM,CAAClD,GAAqBD,GAAkBmC,CAAY,GACpFiB,IAAa,MAAM,CAAC/D,IAAY,QAAQ,QAAQ,GAAG8D,GAAyB,GAC5EE,IAA4B,MAAM,CAAC9D,IAAW,QAAQ,WAAWU,GAAqBD,CAAgB,GACtGsD,IAA6B,MAAM,CAAC,QAAQ;AAAA,IAChD,MAAM,CAAC,QAAQ/D,IAAWU,GAAqBD,CAAgB;AAAA,EACnE,GAAKT,IAAWU,GAAqBD,CAAgB,GAC7CuD,IAA4B,MAAM,CAAChE,IAAW,QAAQU,GAAqBD,CAAgB,GAC3FwD,IAAwB,MAAM,CAAC,QAAQ,OAAO,OAAO,MAAMvD,GAAqBD,CAAgB,GAChGyD,IAAwB,MAAM,CAAC,SAAS,OAAO,UAAU,WAAW,UAAU,UAAU,WAAW,YAAY,eAAe,UAAU,GACxIC,IAA0B,MAAM,CAAC,SAAS,OAAO,UAAU,WAAW,eAAe,UAAU,GAC/FC,IAAc,MAAM,CAAC,QAAQ,GAAGR,EAAuB,CAAE,GACzDS,KAAc,MAAM,CAACvE,IAAY,QAAQ,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,GAAG8D,GAAyB,GAC5IU,IAAa,MAAM,CAAClC,GAAY1B,GAAqBD,CAAgB,GACrE8D,KAAkB,MAAM,CAAC,GAAGf,EAAa,GAAI5B,IAA6BV,IAAqB;AAAA,IACnG,UAAU,CAACR,GAAqBD,CAAgB;AAAA,EACpD,CAAG,GACK+D,IAAgB,MAAM,CAAC,aAAa;AAAA,IACxC,QAAQ,CAAC,IAAI,KAAK,KAAK,SAAS,OAAO;AAAA,EAC3C,CAAG,GACKC,IAAc,MAAM,CAAC,QAAQ,SAAS,WAAW5C,IAAyBlB,IAAiB;AAAA,IAC/F,MAAM,CAACD,GAAqBD,CAAgB;AAAA,EAChD,CAAG,GACKiE,IAA4B,MAAM,CAACzE,IAAWuB,IAA2BV,EAAiB,GAC1F6D,IAAc,MAAM;AAAA;AAAA,IAE1B;AAAA,IAAI;AAAA,IAAQ;AAAA,IAAQ9B;AAAA,IAAanC;AAAA,IAAqBD;AAAA,EAAgB,GAChEmE,KAAmB,MAAM,CAAC,IAAI7E,IAAUyB,IAA2BV,EAAiB,GACpF+D,KAAiB,MAAM,CAAC,SAAS,UAAU,UAAU,QAAQ,GAC7DC,KAAiB,MAAM,CAAC,UAAU,YAAY,UAAU,WAAW,UAAU,WAAW,eAAe,cAAc,cAAc,cAAc,cAAc,aAAa,OAAO,cAAc,SAAS,YAAY,GACtNC,KAAyB,MAAM,CAAChF,IAAUE,IAAW2B,IAA6BV,EAAmB,GACrG8D,KAAY,MAAM;AAAA;AAAA,IAExB;AAAA,IAAI;AAAA,IAAQ9B;AAAA,IAAWxC;AAAA,IAAqBD;AAAA,EAAgB,GACtDwE,KAAc,MAAM,CAAC,QAAQlF,IAAUW,GAAqBD,CAAgB,GAC5EyE,KAAa,MAAM,CAAC,QAAQnF,IAAUW,GAAqBD,CAAgB,GAC3E0E,KAAY,MAAM,CAACpF,IAAUW,GAAqBD,CAAgB,GAClE2E,KAAiB,MAAM,CAACtF,IAAY,QAAQ,GAAG8D,EAAuB,CAAE;AAC9E,SAAO;AAAA,IACL,WAAW;AAAA,IACX,OAAO;AAAA,MACL,SAAS,CAAC,QAAQ,QAAQ,SAAS,QAAQ;AAAA,MAC3C,QAAQ,CAAC,OAAO;AAAA,MAChB,MAAM,CAAC1D,EAAY;AAAA,MACnB,YAAY,CAACA,EAAY;AAAA,MACzB,OAAO,CAACC,EAAK;AAAA,MACb,WAAW,CAACD,EAAY;AAAA,MACxB,eAAe,CAACA,EAAY;AAAA,MAC5B,MAAM,CAAC,MAAM,OAAO,QAAQ;AAAA,MAC5B,MAAM,CAACM,EAAiB;AAAA,MACxB,eAAe,CAAC,QAAQ,cAAc,SAAS,UAAU,UAAU,YAAY,QAAQ,aAAa,OAAO;AAAA,MAC3G,gBAAgB,CAACN,EAAY;AAAA,MAC7B,SAAS,CAAC,QAAQ,SAAS,QAAQ,UAAU,WAAW,OAAO;AAAA,MAC/D,aAAa,CAAC,YAAY,QAAQ,UAAU,YAAY,WAAW,MAAM;AAAA,MACzE,QAAQ,CAACA,EAAY;AAAA,MACrB,QAAQ,CAACA,EAAY;AAAA,MACrB,SAAS,CAAC,MAAMH,EAAQ;AAAA,MACxB,MAAM,CAACG,EAAY;AAAA,MACnB,eAAe,CAACA,EAAY;AAAA,MAC5B,UAAU,CAAC,WAAW,SAAS,UAAU,QAAQ,SAAS,QAAQ;AAAA,IACxE;AAAA,IACI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQX,QAAQ,CAAC;AAAA,QACP,QAAQ,CAAC,QAAQ,UAAUJ,IAAYW,GAAkBC,GAAqB0C,CAAW;AAAA,MACjG,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMD,WAAW,CAAC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,MAKvB,SAAS,CAAC;AAAA,QACR,SAAS,CAACrD,IAAUU,GAAkBC,GAAqBiC,CAAc;AAAA,MACjF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAeY,EAAU;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,gBAAgBA,EAAU;AAAA,MAClC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,gBAAgB,CAAC,QAAQ,SAAS,cAAc,cAAc;AAAA,MACtE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,kBAAkB,CAAC,SAAS,OAAO;AAAA,MAC3C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,KAAK,CAAC;AAAA,QACJ,KAAK,CAAC,UAAU,SAAS;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC,SAAS,gBAAgB,UAAU,QAAQ,eAAe,SAAS,gBAAgB,iBAAiB,cAAc,gBAAgB,sBAAsB,sBAAsB,sBAAsB,mBAAmB,aAAa,aAAa,QAAQ,eAAe,YAAY,aAAa,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,MAKnT,IAAI,CAAC,WAAW,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,MAK7B,OAAO,CAAC;AAAA,QACN,OAAO,CAAC,SAAS,QAAQ,QAAQ,SAAS,KAAK;AAAA,MACvD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAO,CAAC,QAAQ,SAAS,QAAQ,QAAQ,SAAS,KAAK;AAAA,MAC/D,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC,WAAW,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKvC,cAAc,CAAC;AAAA,QACb,QAAQ,CAAC,WAAW,SAAS,QAAQ,QAAQ,YAAY;AAAA,MACjE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,QAAQE,EAA0B;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,UAAU,CAAC;AAAA,QACT,UAAUC,EAAa;AAAA,MAC/B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAa;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAa;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAYC,EAAe;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,gBAAgBA,EAAe;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,gBAAgBA,EAAe;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,UAAU,CAAC,UAAU,SAAS,YAAY,YAAY,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,MAK9D,OAAO,CAAC;AAAA,QACN,OAAOE,EAAU;AAAA,MACzB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAWA,EAAU;AAAA,MAC7B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAWA,EAAU;AAAA,MAC7B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAOA,EAAU;AAAA,MACzB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,KAAK,CAAC;AAAA,QACJ,KAAKA,EAAU;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,KAAK,CAAC;AAAA,QACJ,KAAKA,EAAU;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAOA,EAAU;AAAA,MACzB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,QAAQ,CAAC;AAAA,QACP,QAAQA,EAAU;AAAA,MAC1B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,MAAM,CAAC;AAAA,QACL,MAAMA,EAAU;AAAA,MACxB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC,WAAW,aAAa,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAK/C,GAAG,CAAC;AAAA,QACF,GAAG,CAAC7D,IAAW,QAAQU,GAAqBD,CAAgB;AAAA,MACpE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,OAAO,CAAC;AAAA,QACN,OAAO,CAACX,IAAY,QAAQ,QAAQ6C,GAAgB,GAAGiB,EAAuB,CAAE;AAAA,MACxF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,MAAM,CAAC,OAAO,eAAe,OAAO,aAAa;AAAA,MACzD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,MAAM,CAAC,UAAU,QAAQ,cAAc;AAAA,MAC/C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,MAAM,CAAC;AAAA,QACL,MAAM,CAAC7D,IAAUD,IAAY,QAAQ,WAAW,QAAQW,CAAgB;AAAA,MAChF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,MAAM,CAAC;AAAA,QACL,MAAM,CAAC,IAAIV,IAAUW,GAAqBD,CAAgB;AAAA,MAClE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,QAAQ,CAAC;AAAA,QACP,QAAQ,CAAC,IAAIV,IAAUW,GAAqBD,CAAgB;AAAA,MACpE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAO,CAACT,IAAW,SAAS,QAAQ,QAAQU,GAAqBD,CAAgB;AAAA,MACzF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaqD,EAAyB;AAAA,MAC9C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,KAAKC,EAA0B;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaC,EAAyB;AAAA,MAC9C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAWA,EAAyB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaF,EAAyB;AAAA,MAC9C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,KAAKC,EAA0B;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaC,EAAyB;AAAA,MAC9C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAWA,EAAyB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAa,CAAC,OAAO,OAAO,SAAS,aAAa,WAAW;AAAA,MACrE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaC,EAAqB;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAqB;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,KAAK,CAAC;AAAA,QACJ,KAAKL,EAAuB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAASA,EAAuB;AAAA,MACxC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAASA,EAAuB;AAAA,MACxC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,SAAS,CAAC,GAAGM,EAAqB,GAAI,QAAQ;AAAA,MACtD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,iBAAiB,CAAC,GAAGC,EAAuB,GAAI,QAAQ;AAAA,MAChE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,gBAAgB,CAAC,QAAQ,GAAGA,EAAuB,CAAE;AAAA,MAC7D,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,SAAS,CAAC,UAAU,GAAGD,EAAqB,CAAE;AAAA,MACtD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,OAAO,CAAC,GAAGC,KAA2B;AAAA,UACpC,UAAU,CAAC,IAAI,MAAM;AAAA,QAC/B,CAAS;AAAA,MACT,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,MAAM,CAAC,QAAQ,GAAGA,KAA2B;AAAA,UAC3C,UAAU,CAAC,IAAI,MAAM;AAAA,QAC/B,CAAS;AAAA,MACT,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,iBAAiBD,EAAqB;AAAA,MAC9C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAe,CAAC,GAAGC,EAAuB,GAAI,UAAU;AAAA,MAChE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAc,CAAC,QAAQ,GAAGA,EAAuB,CAAE;AAAA,MAC3D,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMD,GAAG,CAAC;AAAA,QACF,GAAGP,EAAuB;AAAA,MAClC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAuB;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAuB;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAuB;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAuB;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAuB;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAuB;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAuB;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAuB;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,GAAG,CAAC;AAAA,QACF,GAAGQ,EAAW;AAAA,MACtB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,IAAI,CAAC;AAAA,QACH,IAAIA,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAWR,EAAuB;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKrC,WAAW,CAAC;AAAA,QACV,WAAWA,EAAuB;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQrC,MAAM,CAAC;AAAA,QACL,MAAMS,GAAW;AAAA,MACzB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,GAAG,CAAC;AAAA,QACF,GAAG,CAAC1B,GAAgB,UAAU,GAAG0B,GAAW,CAAE;AAAA,MACtD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS;AAAA,UAAC1B;AAAA,UAAgB;AAAA;AAAA,UAC1B;AAAA,UAAQ,GAAG0B,GAAW;AAAA,QAAE;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS;AAAA,UAAC1B;AAAA,UAAgB;AAAA,UAAU;AAAA;AAAA,UACpC;AAAA;AAAA,UACA;AAAA,YACE,QAAQ,CAACD,CAAe;AAAA,UAClC;AAAA,UAAW,GAAG2B,GAAW;AAAA,QAAE;AAAA,MAC3B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,GAAG,CAAC;AAAA,QACF,GAAG,CAAC,UAAU,MAAM,GAAGA,GAAW,CAAE;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS,CAAC,UAAU,MAAM,QAAQ,GAAGA,GAAW,CAAE;AAAA,MAC1D,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS,CAAC,UAAU,MAAM,GAAGA,GAAW,CAAE;AAAA,MAClD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,aAAa,CAAC;AAAA,QACZ,MAAM,CAAC,QAAQ/B,GAAWd,IAA2BV,EAAiB;AAAA,MAC9E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC,eAAe,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKxD,cAAc,CAAC,UAAU,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,MAKrC,eAAe,CAAC;AAAA,QACd,MAAM,CAACyB,GAAiB7B,GAAqBM,EAAiB;AAAA,MACtE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,gBAAgB,CAAC,mBAAmB,mBAAmB,aAAa,kBAAkB,UAAU,iBAAiB,YAAY,kBAAkB,kBAAkBf,IAAWQ,CAAgB;AAAA,MACpM,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,MAAM,CAACiB,IAA+BjB,GAAkB4B,CAAS;AAAA,MACzE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,MAK5B,eAAe,CAAC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAKzB,oBAAoB,CAAC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,MAKnC,cAAc,CAAC,eAAe,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,MAK7C,eAAe,CAAC,qBAAqB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,MAKnD,gBAAgB,CAAC,sBAAsB,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,MAK1D,UAAU,CAAC;AAAA,QACT,UAAU,CAACG,GAAe9B,GAAqBD,CAAgB;AAAA,MACvE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAc,CAACV,IAAU,QAAQW,GAAqBM,EAAiB;AAAA,MAC/E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS;AAAA;AAAA,UACTyB;AAAA,UAAc,GAAGmB,EAAuB;AAAA,QAAE;AAAA,MAClD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAc,CAAC,QAAQlD,GAAqBD,CAAgB;AAAA,MACpE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,uBAAuB,CAAC;AAAA,QACtB,MAAM,CAAC,UAAU,SAAS;AAAA,MAClC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,MAAM,CAAC,QAAQ,WAAW,QAAQC,GAAqBD,CAAgB;AAAA,MAC/E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,MAAM,CAAC,QAAQ,UAAU,SAAS,WAAW,SAAS,KAAK;AAAA,MACnE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMD,qBAAqB,CAAC;AAAA,QACpB,aAAa6D,EAAU;AAAA,MAC/B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,MAAMA,EAAU;AAAA,MACxB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC,aAAa,YAAY,gBAAgB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,MAK3E,yBAAyB,CAAC;AAAA,QACxB,YAAY,CAAC,GAAGO,GAAc,GAAI,MAAM;AAAA,MAChD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,6BAA6B,CAAC;AAAA,QAC5B,YAAY,CAAC9E,IAAU,aAAa,QAAQW,GAAqBI,EAAiB;AAAA,MAC1F,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,yBAAyB,CAAC;AAAA,QACxB,YAAYwD,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC;AAAA,QACnB,oBAAoB,CAACvE,IAAU,QAAQW,GAAqBD,CAAgB;AAAA,MACpF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC,aAAa,aAAa,cAAc,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,MAKxE,iBAAiB,CAAC,YAAY,iBAAiB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,MAK1D,aAAa,CAAC;AAAA,QACZ,MAAM,CAAC,QAAQ,UAAU,WAAW,QAAQ;AAAA,MACpD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,QAAQ,CAAC;AAAA,QACP,QAAQmD,EAAuB;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,OAAO,CAAC,YAAY,OAAO,UAAU,UAAU,YAAY,eAAe,OAAO,SAASlD,GAAqBD,CAAgB;AAAA,MACvI,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAY,CAAC,UAAU,UAAU,OAAO,YAAY,YAAY,cAAc;AAAA,MACtF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAO,CAAC,UAAU,SAAS,OAAO,MAAM;AAAA,MAChD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,MAAM,CAAC;AAAA,QACL,MAAM,CAAC,cAAc,YAAY,QAAQ;AAAA,MACjD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS,CAAC,QAAQ,UAAU,MAAM;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS,CAAC,QAAQC,GAAqBD,CAAgB;AAAA,MAC/D,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,iBAAiB,CAAC;AAAA,QAChB,IAAI,CAAC,SAAS,SAAS,QAAQ;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAW,CAAC,UAAU,WAAW,WAAW,MAAM;AAAA,MAC1D,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAa,CAAC,UAAU,WAAW,SAAS;AAAA,MACpD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,IAAI8D,GAAe;AAAA,MAC3B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,IAAIC,EAAa;AAAA,MACzB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,IAAIC,EAAW;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,IAAI,CAAC,QAAQ;AAAA,UACX,QAAQ,CAAC;AAAA,YACP,IAAI,CAAC,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,IAAI;AAAA,UAC3D,GAAazE,IAAWU,GAAqBD,CAAgB;AAAA,UACnD,QAAQ,CAAC,IAAIC,GAAqBD,CAAgB;AAAA,UAClD,OAAO,CAACT,IAAWU,GAAqBD,CAAgB;AAAA,QAClE,GAAWqB,IAA0BV,EAAgB;AAAA,MACrD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,IAAIkD,EAAU;AAAA,MACtB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,qBAAqB,CAAC;AAAA,QACpB,MAAMI,EAAyB;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC;AAAA,QACnB,KAAKA,EAAyB;AAAA,MACtC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,IAAIA,EAAyB;AAAA,MACrC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,MAAMJ,EAAU;AAAA,MACxB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,KAAKA,EAAU;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,IAAIA,EAAU;AAAA,MACtB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,SAAS,CAAC;AAAA,QACR,SAASK,EAAW;AAAA,MAC5B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAW;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAW;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAW;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAW;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAW;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAW;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAW;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAW;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAW;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAW;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAW;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAW;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAW;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAcA,EAAW;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,QAAQC,GAAgB;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKvC,YAAY,CAAC;AAAA,QACX,YAAYA,GAAgB;AAAA,MACpC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKvC,gBAAgB,CAAC;AAAA,QACf,QAAQ,CAAC,GAAGC,GAAc,GAAI,UAAU,MAAM;AAAA,MACtD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,QAAQ,CAAC,GAAGA,GAAc,GAAI,UAAU,MAAM;AAAA,MACtD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,QAAQP,EAAU;AAAA,MAC1B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,YAAYA,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,YAAYA,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,YAAYA,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,YAAYA,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,YAAYA,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,YAAYA,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,YAAYA,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,YAAYA,EAAU;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,QAAQA,EAAU;AAAA,MAC1B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,SAAS,CAAC,GAAGO,GAAc,GAAI,QAAQ,QAAQ;AAAA,MACvD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,kBAAkB,CAAC9E,IAAUW,GAAqBD,CAAgB;AAAA,MAC1E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,SAAS,CAAC,IAAIV,IAAUyB,IAA2BV,EAAiB;AAAA,MAC5E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,SAASwD,EAAU;AAAA,MAC3B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,QAAQ,CAAC;AAAA,QACP,QAAQ;AAAA;AAAA,UAER;AAAA,UAAI;AAAA,UAAQxB;AAAA,UAAaf;AAAA,UAA2BT;AAAA,QAAiB;AAAA,MAC7E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,QAAQgD,EAAU;AAAA,MAC1B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,gBAAgB,CAAC,QAAQvB,GAAkBhB,IAA2BT,EAAiB;AAAA,MAC/F,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,sBAAsB,CAAC;AAAA,QACrB,gBAAgBgD,EAAU;AAAA,MAClC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,UAAU,CAAC;AAAA,QACT,MAAMM,GAAgB;AAAA,MAC9B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOD,gBAAgB,CAAC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,MAK7B,cAAc,CAAC;AAAA,QACb,MAAMN,EAAU;AAAA,MACxB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOD,iBAAiB,CAAC;AAAA,QAChB,eAAe,CAACvE,IAAUe,EAAiB;AAAA,MACnD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOD,qBAAqB,CAAC;AAAA,QACpB,eAAewD,EAAU;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,cAAcM,GAAgB;AAAA,MACtC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC;AAAA,QACnB,cAAcN,EAAU;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAe,CAAC,QAAQtB,GAAiBjB,IAA2BT,EAAiB;AAAA,MAC7F,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,qBAAqB,CAAC;AAAA,QACpB,eAAegD,EAAU;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS,CAACvE,IAAUW,GAAqBD,CAAgB;AAAA,MACjE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAa,CAAC,GAAGqE,GAAc,GAAI,eAAe,cAAc;AAAA,MACxE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAYA,GAAc;AAAA,MAClC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAa,CAAC,UAAU,WAAW,WAAW,QAAQ,UAAU,MAAM;AAAA,MAC9E,GAAS,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,MAKjB,kBAAkB,CAAC;AAAA,QACjB,MAAM,CAAC,OAAO,YAAY,aAAa,SAAS;AAAA,MACxD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,yBAAyB,CAAC;AAAA,QACxB,eAAe,CAAC/E,EAAQ;AAAA,MAChC,CAAO;AAAA,MACD,8BAA8B,CAAC;AAAA,QAC7B,oBAAoBgF,GAAsB;AAAA,MAClD,CAAO;AAAA,MACD,4BAA4B,CAAC;AAAA,QAC3B,kBAAkBA,GAAsB;AAAA,MAChD,CAAO;AAAA,MACD,gCAAgC,CAAC;AAAA,QAC/B,oBAAoBT,EAAU;AAAA,MACtC,CAAO;AAAA,MACD,8BAA8B,CAAC;AAAA,QAC7B,kBAAkBA,EAAU;AAAA,MACpC,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,eAAeS,GAAsB;AAAA,MAC7C,CAAO;AAAA,MACD,uBAAuB,CAAC;AAAA,QACtB,aAAaA,GAAsB;AAAA,MAC3C,CAAO;AAAA,MACD,2BAA2B,CAAC;AAAA,QAC1B,eAAeT,EAAU;AAAA,MACjC,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,aAAaA,EAAU;AAAA,MAC/B,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,eAAeS,GAAsB;AAAA,MAC7C,CAAO;AAAA,MACD,uBAAuB,CAAC;AAAA,QACtB,aAAaA,GAAsB;AAAA,MAC3C,CAAO;AAAA,MACD,2BAA2B,CAAC;AAAA,QAC1B,eAAeT,EAAU;AAAA,MACjC,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,aAAaA,EAAU;AAAA,MAC/B,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,eAAeS,GAAsB;AAAA,MAC7C,CAAO;AAAA,MACD,uBAAuB,CAAC;AAAA,QACtB,aAAaA,GAAsB;AAAA,MAC3C,CAAO;AAAA,MACD,2BAA2B,CAAC;AAAA,QAC1B,eAAeT,EAAU;AAAA,MACjC,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,aAAaA,EAAU;AAAA,MAC/B,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,eAAeS,GAAsB;AAAA,MAC7C,CAAO;AAAA,MACD,uBAAuB,CAAC;AAAA,QACtB,aAAaA,GAAsB;AAAA,MAC3C,CAAO;AAAA,MACD,2BAA2B,CAAC;AAAA,QAC1B,eAAeT,EAAU;AAAA,MACjC,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,aAAaA,EAAU;AAAA,MAC/B,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,eAAeS,GAAsB;AAAA,MAC7C,CAAO;AAAA,MACD,uBAAuB,CAAC;AAAA,QACtB,aAAaA,GAAsB;AAAA,MAC3C,CAAO;AAAA,MACD,2BAA2B,CAAC;AAAA,QAC1B,eAAeT,EAAU;AAAA,MACjC,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,aAAaA,EAAU;AAAA,MAC/B,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,eAAeS,GAAsB;AAAA,MAC7C,CAAO;AAAA,MACD,uBAAuB,CAAC;AAAA,QACtB,aAAaA,GAAsB;AAAA,MAC3C,CAAO;AAAA,MACD,2BAA2B,CAAC;AAAA,QAC1B,eAAeT,EAAU;AAAA,MACjC,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,aAAaA,EAAU;AAAA,MAC/B,CAAO;AAAA,MACD,qBAAqB,CAAC;AAAA,QACpB,eAAe,CAAC5D,GAAqBD,CAAgB;AAAA,MAC7D,CAAO;AAAA,MACD,8BAA8B,CAAC;AAAA,QAC7B,oBAAoBsE,GAAsB;AAAA,MAClD,CAAO;AAAA,MACD,4BAA4B,CAAC;AAAA,QAC3B,kBAAkBA,GAAsB;AAAA,MAChD,CAAO;AAAA,MACD,gCAAgC,CAAC;AAAA,QAC/B,oBAAoBT,EAAU;AAAA,MACtC,CAAO;AAAA,MACD,8BAA8B,CAAC;AAAA,QAC7B,kBAAkBA,EAAU;AAAA,MACpC,CAAO;AAAA,MACD,2BAA2B,CAAC;AAAA,QAC1B,eAAe,CAAC,UAAU,SAAS;AAAA,MAC3C,CAAO;AAAA,MACD,0BAA0B,CAAC;AAAA,QACzB,eAAe,CAAC;AAAA,UACd,SAAS,CAAC,QAAQ,QAAQ;AAAA,UAC1B,UAAU,CAAC,QAAQ,QAAQ;AAAA,QACrC,CAAS;AAAA,MACT,CAAO;AAAA,MACD,yBAAyB,CAAC;AAAA,QACxB,kBAAkBd,EAAa;AAAA,MACvC,CAAO;AAAA,MACD,wBAAwB,CAAC;AAAA,QACvB,cAAc,CAACzD,EAAQ;AAAA,MAC/B,CAAO;AAAA,MACD,6BAA6B,CAAC;AAAA,QAC5B,mBAAmBgF,GAAsB;AAAA,MACjD,CAAO;AAAA,MACD,2BAA2B,CAAC;AAAA,QAC1B,iBAAiBA,GAAsB;AAAA,MAC/C,CAAO;AAAA,MACD,+BAA+B,CAAC;AAAA,QAC9B,mBAAmBT,EAAU;AAAA,MACrC,CAAO;AAAA,MACD,6BAA6B,CAAC;AAAA,QAC5B,iBAAiBA,EAAU;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,MAAM,CAAC,SAAS,aAAa,OAAO;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAe,CAAC,UAAU,WAAW,WAAW,QAAQ,UAAU,MAAM;AAAA,MAChF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,MAAMC,GAAe;AAAA,MAC7B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,MAAMC,EAAa;AAAA,MAC3B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,MAAMC,EAAW;AAAA,MACzB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAa,CAAC,SAAS,WAAW;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,MAAM,CAAC,QAAQ/D,GAAqBD,CAAgB;AAAA,MAC5D,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,QAAQ,CAAC;AAAA,QACP,QAAQ;AAAA;AAAA,UAER;AAAA,UAAI;AAAA,UAAQC;AAAA,UAAqBD;AAAA,QAAgB;AAAA,MACzD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,MAAM,CAAC;AAAA,QACL,MAAMuE,GAAS;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAY,CAACjF,IAAUW,GAAqBD,CAAgB;AAAA,MACpE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,UAAU,CAAC;AAAA,QACT,UAAU,CAACV,IAAUW,GAAqBD,CAAgB;AAAA,MAClE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAe;AAAA;AAAA,UAEf;AAAA,UAAI;AAAA,UAAQwC;AAAA,UAAiBlB;AAAA,UAA2BT;AAAA,QAAiB;AAAA,MACjF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,qBAAqB,CAAC;AAAA,QACpB,eAAegD,EAAU;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAW,CAAC,IAAIvE,IAAUW,GAAqBD,CAAgB;AAAA,MACvE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,cAAc,CAACV,IAAUW,GAAqBD,CAAgB;AAAA,MACtE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,QAAQ,CAAC;AAAA,QACP,QAAQ,CAAC,IAAIV,IAAUW,GAAqBD,CAAgB;AAAA,MACpE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,UAAU,CAAC;AAAA,QACT,UAAU,CAACV,IAAUW,GAAqBD,CAAgB;AAAA,MAClE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAO,CAAC,IAAIV,IAAUW,GAAqBD,CAAgB;AAAA,MACnE,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,mBAAmB;AAAA;AAAA,UAEnB;AAAA,UAAI;AAAA,UAAQC;AAAA,UAAqBD;AAAA,QAAgB;AAAA,MACzD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,iBAAiB,CAAC;AAAA,QAChB,iBAAiBuE,GAAS;AAAA,MAClC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,uBAAuB,CAAC;AAAA,QACtB,uBAAuB,CAACjF,IAAUW,GAAqBD,CAAgB;AAAA,MAC/E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,qBAAqB,CAAC;AAAA,QACpB,qBAAqB,CAACV,IAAUW,GAAqBD,CAAgB;AAAA,MAC7E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,sBAAsB,CAAC;AAAA,QACrB,sBAAsB,CAAC,IAAIV,IAAUW,GAAqBD,CAAgB;AAAA,MAClF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,uBAAuB,CAAC;AAAA,QACtB,uBAAuB,CAACV,IAAUW,GAAqBD,CAAgB;AAAA,MAC/E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,mBAAmB,CAAC,IAAIV,IAAUW,GAAqBD,CAAgB;AAAA,MAC/E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC;AAAA,QACnB,oBAAoB,CAACV,IAAUW,GAAqBD,CAAgB;AAAA,MAC5E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,qBAAqB,CAAC;AAAA,QACpB,qBAAqB,CAACV,IAAUW,GAAqBD,CAAgB;AAAA,MAC7E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,kBAAkB,CAAC,IAAIV,IAAUW,GAAqBD,CAAgB;AAAA,MAC9E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,mBAAmB,CAAC;AAAA,QAClB,QAAQ,CAAC,YAAY,UAAU;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,kBAAkBmD,EAAuB;AAAA,MACjD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC;AAAA,QACnB,oBAAoBA,EAAuB;AAAA,MACnD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC;AAAA,QACnB,oBAAoBA,EAAuB;AAAA,MACnD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,OAAO,CAAC,QAAQ,OAAO;AAAA,MAC/B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS,CAAC,OAAO,QAAQ;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,YAAY,CAAC;AAAA,QACX,YAAY,CAAC,IAAI,OAAO,UAAU,WAAW,UAAU,aAAa,QAAQlD,GAAqBD,CAAgB;AAAA,MACzH,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,uBAAuB,CAAC;AAAA,QACtB,YAAY,CAAC,UAAU,UAAU;AAAA,MACzC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,UAAU,CAAC;AAAA,QACT,UAAU,CAACV,IAAU,WAAWW,GAAqBD,CAAgB;AAAA,MAC7E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,MAAM,CAAC;AAAA,QACL,MAAM,CAAC,UAAU,WAAW4C,GAAW3C,GAAqBD,CAAgB;AAAA,MACpF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAO,CAACV,IAAUW,GAAqBD,CAAgB;AAAA,MAC/D,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,SAAS,CAAC;AAAA,QACR,SAAS,CAAC,QAAQ6C,GAAc5C,GAAqBD,CAAgB;AAAA,MAC7E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,UAAU,CAAC;AAAA,QACT,UAAU,CAAC,UAAU,SAAS;AAAA,MACtC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAa,CAAC0C,GAAkBzC,GAAqBD,CAAgB;AAAA,MAC7E,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,sBAAsB,CAAC;AAAA,QACrB,sBAAsBgD,EAA0B;AAAA,MACxD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,QAAQ,CAAC;AAAA,QACP,QAAQwB,GAAW;AAAA,MAC3B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAYA,GAAW;AAAA,MAC/B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAYA,GAAW;AAAA,MAC/B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAYA,GAAW;AAAA,MAC/B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAOC,GAAU;AAAA,MACzB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAWA,GAAU;AAAA,MAC7B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAWA,GAAU;AAAA,MAC7B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAWA,GAAU;AAAA,MAC7B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAKvB,MAAM,CAAC;AAAA,QACL,MAAMC,GAAS;AAAA,MACvB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,UAAU,CAAC;AAAA,QACT,UAAUA,GAAS;AAAA,MAC3B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,UAAU,CAAC;AAAA,QACT,UAAUA,GAAS;AAAA,MAC3B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAW,CAACzE,GAAqBD,GAAkB,IAAI,QAAQ,OAAO,KAAK;AAAA,MACnF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,oBAAoB,CAAC;AAAA,QACnB,QAAQgD,EAA0B;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,WAAW,CAAC,MAAM,MAAM;AAAA,MAChC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,WAAW2B,GAAc;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAeA,GAAc;AAAA,MACrC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAeA,GAAc;AAAA,MACrC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAeA,GAAc;AAAA,MACrC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQnC,QAAQ,CAAC;AAAA,QACP,QAAQd,EAAU;AAAA,MAC1B,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAY,CAAC,QAAQ,MAAM;AAAA,MACnC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,OAAOA,EAAU;AAAA,MACzB,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,QAAQ,CAAC,UAAU,QAAQ,SAAS,cAAc,aAAa,YAAY;AAAA,MACnF,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,QAAQ,CAAC;AAAA,QACP,QAAQ,CAAC,QAAQ,WAAW,WAAW,QAAQ,QAAQ,QAAQ,QAAQ,eAAe,QAAQ,gBAAgB,YAAY,QAAQ,aAAa,iBAAiB,SAAS,QAAQ,WAAW,QAAQ,YAAY,cAAc,cAAc,cAAc,YAAY,YAAY,YAAY,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,eAAe,eAAe,WAAW,YAAY5D,GAAqBD,CAAgB;AAAA,MAC1d,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,gBAAgB,CAAC;AAAA,QACf,gBAAgB,CAAC,SAAS,SAAS;AAAA,MAC3C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,kBAAkB,CAAC;AAAA,QACjB,kBAAkB,CAAC,QAAQ,MAAM;AAAA,MACzC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,QAAQ,CAAC;AAAA,QACP,QAAQ,CAAC,QAAQ,IAAI,KAAK,GAAG;AAAA,MACrC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,QAAQ,CAAC,QAAQ,QAAQ;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAYmD,EAAuB;AAAA,MAC3C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,YAAYA,EAAuB;AAAA,MAC3C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,aAAaA,EAAuB;AAAA,MAC5C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,cAAc,CAAC;AAAA,QACb,MAAM,CAAC,SAAS,OAAO,UAAU,YAAY;AAAA,MACrD,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,MAAM,CAAC,UAAU,QAAQ;AAAA,MACjC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,aAAa,CAAC;AAAA,QACZ,MAAM,CAAC,QAAQ,KAAK,KAAK,MAAM;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,mBAAmB,CAAC;AAAA,QAClB,MAAM,CAAC,aAAa,WAAW;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,OAAO,CAAC;AAAA,QACN,OAAO,CAAC,QAAQ,QAAQ,cAAc;AAAA,MAC9C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,aAAa,CAAC,KAAK,QAAQ,OAAO;AAAA,MAC1C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,WAAW,CAAC;AAAA,QACV,aAAa,CAAC,KAAK,MAAM,MAAM;AAAA,MACvC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,MAK/B,QAAQ,CAAC;AAAA,QACP,QAAQ,CAAC,QAAQ,QAAQ,OAAO,MAAM;AAAA,MAC9C,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,eAAe,CAAC;AAAA,QACd,eAAe,CAAC,QAAQ,UAAU,YAAY,aAAalD,GAAqBD,CAAgB;AAAA,MACxG,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,MAAM,CAAC;AAAA,QACL,MAAM,CAAC,QAAQ,GAAG6D,EAAU,CAAE;AAAA,MACtC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,YAAY,CAAC;AAAA,QACX,QAAQ,CAACvE,IAAUyB,IAA2BV,IAAmBE,EAAiB;AAAA,MAC1F,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKD,QAAQ,CAAC;AAAA,QACP,QAAQ,CAAC,QAAQ,GAAGsD,EAAU,CAAE;AAAA,MACxC,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQD,uBAAuB,CAAC;AAAA,QACtB,uBAAuB,CAAC,QAAQ,MAAM;AAAA,MAC9C,CAAO;AAAA,IACP;AAAA,IACI,wBAAwB;AAAA,MACtB,UAAU,CAAC,cAAc,YAAY;AAAA,MACrC,YAAY,CAAC,gBAAgB,cAAc;AAAA,MAC3C,OAAO,CAAC,WAAW,WAAW,SAAS,OAAO,OAAO,SAAS,UAAU,MAAM;AAAA,MAC9E,WAAW,CAAC,SAAS,MAAM;AAAA,MAC3B,WAAW,CAAC,OAAO,QAAQ;AAAA,MAC3B,MAAM,CAAC,SAAS,QAAQ,QAAQ;AAAA,MAChC,KAAK,CAAC,SAAS,OAAO;AAAA,MACtB,GAAG,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,MAClD,IAAI,CAAC,MAAM,IAAI;AAAA,MACf,IAAI,CAAC,MAAM,IAAI;AAAA,MACf,GAAG,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,MAClD,IAAI,CAAC,MAAM,IAAI;AAAA,MACf,IAAI,CAAC,MAAM,IAAI;AAAA,MACf,MAAM,CAAC,KAAK,GAAG;AAAA,MACf,aAAa,CAAC,SAAS;AAAA,MACvB,cAAc,CAAC,eAAe,oBAAoB,cAAc,eAAe,cAAc;AAAA,MAC7F,eAAe,CAAC,YAAY;AAAA,MAC5B,oBAAoB,CAAC,YAAY;AAAA,MACjC,cAAc,CAAC,YAAY;AAAA,MAC3B,eAAe,CAAC,YAAY;AAAA,MAC5B,gBAAgB,CAAC,YAAY;AAAA,MAC7B,cAAc,CAAC,WAAW,UAAU;AAAA,MACpC,SAAS,CAAC,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,YAAY;AAAA,MACtM,aAAa,CAAC,cAAc,YAAY;AAAA,MACxC,aAAa,CAAC,cAAc,YAAY;AAAA,MACxC,aAAa,CAAC,cAAc,YAAY;AAAA,MACxC,aAAa,CAAC,cAAc,YAAY;AAAA,MACxC,aAAa,CAAC,cAAc,YAAY;AAAA,MACxC,aAAa,CAAC,cAAc,YAAY;AAAA,MACxC,kBAAkB,CAAC,oBAAoB,kBAAkB;AAAA,MACzD,YAAY,CAAC,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,YAAY;AAAA,MAC3H,cAAc,CAAC,cAAc,YAAY;AAAA,MACzC,cAAc,CAAC,cAAc,YAAY;AAAA,MACzC,gBAAgB,CAAC,kBAAkB,kBAAkB,kBAAkB,kBAAkB,kBAAkB,kBAAkB,kBAAkB,gBAAgB;AAAA,MAC/J,kBAAkB,CAAC,kBAAkB,gBAAgB;AAAA,MACrD,kBAAkB,CAAC,kBAAkB,gBAAgB;AAAA,MACrD,WAAW,CAAC,eAAe,eAAe,gBAAgB;AAAA,MAC1D,kBAAkB,CAAC,aAAa,eAAe,eAAe,aAAa;AAAA,MAC3E,YAAY,CAAC,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW;AAAA,MACnH,aAAa,CAAC,aAAa,WAAW;AAAA,MACtC,aAAa,CAAC,aAAa,WAAW;AAAA,MACtC,YAAY,CAAC,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW;AAAA,MACnH,aAAa,CAAC,aAAa,WAAW;AAAA,MACtC,aAAa,CAAC,aAAa,WAAW;AAAA,MACtC,OAAO,CAAC,WAAW,WAAW,UAAU;AAAA,MACxC,WAAW,CAAC,OAAO;AAAA,MACnB,WAAW,CAAC,OAAO;AAAA,MACnB,YAAY,CAAC,OAAO;AAAA,IAC1B;AAAA,IACI,gCAAgC;AAAA,MAC9B,aAAa,CAAC,SAAS;AAAA,IAC7B;AAAA,IACI,yBAAyB,CAAC,KAAK,MAAM,SAAS,YAAY,UAAU,mBAAmB,QAAQ,gBAAgB,cAAc,UAAU,eAAe,WAAW;AAAA,EACrK;AACA,GAsDMe,KAAuB,gBAAA5G,GAAoB0D,EAAgB;ACr9F1D,SAASmD,MAAMC,GAAsB;AAC1C,SAAOF,GAAQjN,GAAKmN,CAAM,CAAC;AAC7B;ACCA,MAAMC,KAAiBjN;AAAA,EACrB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA,QACP,SACE;AAAA,QACF,aACE;AAAA,QACF,SACE;AAAA,QACF,WACE;AAAA,QACF,OACE;AAAA,QACF,MAAM;AAAA,MAAA;AAAA,MAER,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM;AAAA,MAAA;AAAA,IACR;AAAA,IAEF,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,MAAM;AAAA,IAAA;AAAA,EACR;AAEJ;AAEA,SAASkN,GAAO;AAAA,EACd,WAAA7L;AAAA,EACA,SAAAhB;AAAA,EACA,MAAA9wB;AAAA,EACA,SAAA49B,IAAU;AAAA,EACV,GAAGv1C;AACL,GAGK;AACH,QAAMw1C,IAAOD,IAAUrO,KAAO;AAE9B,SACEn0B,gBAAAA,GAAAA;AAAAA,IAACyiC;AAAA,IAAA;AAAA,MACC,aAAU;AAAA,MACV,WAAWL,GAAGE,GAAe,EAAE,SAAA5M,GAAS,MAAA9wB,GAAM,WAAA8xB,EAAA,CAAW,CAAC;AAAA,MACzD,GAAGzpC;AAAA,IAAA;AAAA,EAAA;AAGV;AC9BA,MAAMy1C,KAAe,CAAC;AAAA,EACpB,MAAAp0C;AAAA,EACA,UAAAq0C;AAAA,EACA,mBAAAC;AAAA,EACA,QAAAC;AACF,MAAyB;AACvB,QAAM,EAAE,YAAAC,GAAY,GAAGC,MAAcz0C,EAAK,cAAc,CAAA,GAElD00C,IAAoB,MAAM;AAC9B,IAAAH,IAAS,EAAE,YAAYC,KAAc,GAAA,CAAI;AAAA,EAC3C;AAEA,SACE9iC,gBAAAA,GAAAA;AAAAA,IAACuiC;AAAA,IAAA;AAAA,MACC,SAAQ;AAAA,MACR,UAAUI;AAAA,MACV,MAAK;AAAA,MACL,SAASK;AAAA,MACT,WAAW,gDACTJ,MAAsBE,IAAa,wBAAwB,EAC7D;AAAA,MACC,GAAGC;AAAA,MAEH,UAAAD;AAAA,IAAA;AAAA,EAAA;AAGP,GCvBMG,KAAY,QACZC,KAAmB,IAAI,OAAOD,IAAW,GAAG,GAG5CE,KAA2B;AAAA,EAC/B;AAAA;AAAA,IAEE,OAAO,IAAI,OAAO,6DAA6DF,EAAS,yBAAyBA,EAAS,+BAA+B;AAAA,IACzJ,MAAM;AAAA;AAAA,EAAA;AAAA,EAER;AAAA;AAAA,IAEE,OAAO;AAAA,IACP,MAAM;AAAA;AAAA,EAAA;AAAA,EAER;AAAA;AAAA,IAEE,OAAO,IAAI,OAAO,6DAA6DA,EAAS,2BAA2B;AAAA,IACnH,MAAM;AAAA;AAAA,EAAA;AAAA,EAER;AAAA;AAAA,IAEE,OAAO;AAAA,IACP,MAAM;AAAA;AAAA,EAAA;AAEV;AAYA,SAASG,GAAmBroC,GAAwBsoC,GAAsC;AACxF,QAAMC,IAAevoC,EAAM,CAAC,EAAE,KAAA;AAE9B,UAAQsoC,GAAA;AAAA,IACN,KAAK;AAEH,aAAO;AAAA,QACL,cAAAC;AAAA,QACA,aAAavoC,EAAM,CAAC,EAAE,MAAMmoC,EAAgB,EAAE,IAAI,CAAA9jC,MAAQA,EAAK,MAAM,EAAE,OAAO,CAAAA,MAAQA,EAAK,SAAS,CAAC;AAAA,QACrG,aAAarE,EAAM,CAAC,EAAE,KAAA;AAAA,MAAK;AAAA,IAG/B,KAAK;AAEH,aAAO;AAAA,QACL,cAAAuoC;AAAA,QACA,aAAavoC,EAAM,CAAC,EAAE,MAAMmoC,EAAgB,EAAE,IAAI,CAAA9jC,MAAQA,EAAK,MAAM,EAAE,OAAO,CAAAA,MAAQA,EAAK,SAAS,CAAC;AAAA,QACrG,aAAa;AAAA,MAAA;AAAA,IAGjB,KAAK;AAEH,YAAM0jC,IAAa/nC,EAAM,CAAC,EAAE,KAAA;AAC5B,aAAO;AAAA,QACL,cAAAuoC;AAAA,QACA,aAAaR,IAAa,CAACA,CAAU,IAAI,CAAA;AAAA,QACzC,aAAa;AAAA,MAAA;AAAA,IAGjB,KAAK;AAEH,aAAO;AAAA,QACL,cAAAQ;AAAA,QACA,aAAa,CAAA;AAAA,QACb,aAAavoC,EAAM,CAAC,EAAE,KAAA;AAAA,MAAK;AAAA,IAG/B;AACE,YAAM,IAAI,MAAM,4BAA4BsoC,CAAU,EAAE;AAAA,EAAA;AAE9D;AAKA,SAASE,GAAer3C,GAAmE;AACzF,aAAWs3C,KAAQL,IAAa;AAC9B,IAAAK,EAAK,MAAM,YAAY;AACvB,UAAMzoC,IAAQyoC,EAAK,MAAM,KAAKt3C,CAAK;AACnC,QAAI6O;AACF,aAAO,EAAE,OAAAA,GAAO,MAAAyoC,EAAA;AAAA,EAEpB;AACA,SAAO;AACT;AAKA,SAASC,GACPv3C,GACA2vB,GACAE,GACA2nB,GACqC;AACrC,SAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,OAAOx3C,EAAM,UAAU,GAAG2vB,CAAU;AAAA,IAAA;AAAA,IAEtC;AAAA,MACE,MAAM;AAAA,MACN,MAAM;AAAA,QACJ,OAAO;AAAA,QACP,aAAa6nB;AAAA,MAAA;AAAA,IACf;AAAA,IAEF;AAAA,MACE,MAAM;AAAA,MACN,OAAOx3C,EAAM,UAAU6vB,CAAQ;AAAA,IAAA;AAAA,EACjC;AAEJ;AAEA,SAAwB4nB,KAAkC;AACxD,SAAO,CAACllC,MAAe;AACrB,IAAA6pB;AAAA,MACE7pB;AAAA,MACA;AAAA,MACA,CAACnQ,GAAemJ,GAAsByG,MAA0B;AAE9D,YAAIzG,MAAU,QAAQyG,MAAW,KAAM;AAEvC,cAAMhS,IAAQoC,EAAK,OACbs1C,IAAcL,GAAer3C,CAAK;AAExC,YAAI,CAAC03C,EAAa;AAElB,cAAM,EAAE,OAAA7oC,GAAO,MAAAyoC,EAAA,IAASI,GAClB/nB,IAAa9gB,EAAM,OACnBghB,IAAWF,IAAa9gB,EAAM,CAAC,EAAE;AAEvC,YAAI;AAEF,gBAAM2oC,IAAeN,GAAmBroC,GAAOyoC,EAAK,IAAI,GAGlDpW,IAAWqW,GAAev3C,GAAO2vB,GAAYE,GAAU2nB,CAAY;AAGzE,UAAAxlC,EAAO,SAAS,OAAOzG,GAAO,GAAG,GAAG21B,CAAQ;AAAA,QAE9C,SAASt5B,GAAO;AACd,kBAAQ,KAAK,2CAA2CA,CAAK;AAE7D;AAAA,QACF;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AACF;ACtLA,SAAS+vC,GAAM,EAAE,WAAAnN,GAAW,MAAA7rC,GAAM,GAAGoC,KAAwC;AAC3E,SACE+S,gBAAAA,GAAAA;AAAAA,IAAC;AAAA,IAAA;AAAA,MACC,MAAAnV;AAAA,MACA,aAAU;AAAA,MACV,WAAWu3C;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA1L;AAAA,MAAA;AAAA,MAED,GAAGzpC;AAAA,IAAA;AAAA,EAAA;AAGV;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,MAAM62C,KAAc,CAAC3rB,MAAWA,EAAO,QAAQ,sBAAsB,OAAO,EAAE,YAAW,GACnF4rB,KAAc,CAAC5rB,MAAWA,EAAO;AAAA,EACrC;AAAA,EACA,CAACpd,GAAOipC,GAAIC,MAAOA,IAAKA,EAAG,YAAW,IAAKD,EAAG,YAAW;AAC3D,GACME,KAAe,CAAC/rB,MAAW;AAC/B,QAAMjb,IAAY6mC,GAAY5rB,CAAM;AACpC,SAAOjb,EAAU,OAAO,CAAC,EAAE,YAAW,IAAKA,EAAU,MAAM,CAAC;AAC9D,GACMinC,KAAe,IAAIC,MAAYA,EAAQ,OAAO,CAAC1N,GAAWj/B,GAAO4sC,MAC9D,EAAQ3N,KAAcA,EAAU,KAAI,MAAO,MAAM2N,EAAM,QAAQ3N,CAAS,MAAMj/B,CACtF,EAAE,KAAK,GAAG,EAAE,KAAI,GACX6sC,KAAc,CAACr3C,MAAU;AAC7B,aAAWsO,KAAQtO;AACjB,QAAIsO,EAAK,WAAW,OAAO,KAAKA,MAAS,UAAUA,MAAS;AAC1D,aAAO;AAGb;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,IAAIgpC,KAAoB;AAAA,EACtB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,eAAe;AAAA,EACf,gBAAgB;AAClB;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,MAAMC,KAAOC;AAAA,EACX,CAAC;AAAA,IACC,OAAAC,IAAQ;AAAA,IACR,MAAA9/B,IAAO;AAAA,IACP,aAAA+/B,IAAc;AAAA,IACd,qBAAAC;AAAA,IACA,WAAAlO,IAAY;AAAA,IACZ,UAAA1oC;AAAA,IACA,UAAA62C;AAAA,IACA,GAAG3yC;AAAA,EACP,GAAK+gC,MAAQ6R;AAAA,IACT;AAAA,IACA;AAAA,MACE,KAAA7R;AAAA,MACA,GAAGsR;AAAA,MACH,OAAO3/B;AAAA,MACP,QAAQA;AAAA,MACR,QAAQ8/B;AAAA,MACR,aAAaE,IAAsB,OAAOD,CAAW,IAAI,KAAK,OAAO//B,CAAI,IAAI+/B;AAAA,MAC7E,WAAWR,GAAa,UAAUzN,CAAS;AAAA,MAC3C,GAAG,CAAC1oC,KAAY,CAACs2C,GAAYpyC,CAAI,KAAK,EAAE,eAAe,OAAM;AAAA,MAC7D,GAAGA;AAAA,IACT;AAAA,IACI;AAAA,MACE,GAAG2yC,EAAS,IAAI,CAAC,CAACE,GAAKC,CAAK,MAAMF,GAAcC,GAAKC,CAAK,CAAC;AAAA,MAC3D,GAAG,MAAM,QAAQh3C,CAAQ,IAAIA,IAAW,CAACA,CAAQ;AAAA,IACvD;AAAA,EACA;AACA;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,MAAMi3C,KAAmB,CAACC,GAAUL,MAAa;AAC/C,QAAMM,IAAYV;AAAA,IAChB,CAAC,EAAE,WAAA/N,GAAW,GAAGzpC,EAAK,GAAIgmC,MAAQ6R,GAAcN,IAAM;AAAA,MACpD,KAAAvR;AAAA,MACA,UAAA4R;AAAA,MACA,WAAWV;AAAA,QACT,UAAUL,GAAYI,GAAagB,CAAQ,CAAC,CAAC;AAAA,QAC7C,UAAUA,CAAQ;AAAA,QAClBxO;AAAA,MACR;AAAA,MACM,GAAGzpC;AAAA,IACT,CAAK;AAAA,EACL;AACE,SAAAk4C,EAAU,cAAcjB,GAAagB,CAAQ,GACtCC;AACT;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,MAAMC,KAAa,CAAC,CAAC,QAAQ,EAAE,GAAG,gBAAgB,KAAK,SAAQ,CAAE,CAAC,GAC5DC,KAAcJ,GAAiB,gBAAgBG,EAAU;ACV/D;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,MAAMA,KAAa;AAAA,EACjB;AAAA,IACE;AAAA,IACA;AAAA,MACE,GAAG;AAAA,MACH,KAAK;AAAA,IACX;AAAA,EACA;AAAA,EACE,CAAC,QAAQ,EAAE,GAAG,8BAA8B,KAAK,SAAQ,CAAE;AAC7D,GACME,KAAOL,GAAiB,QAAQG,EAAU,GCY1CG,KAA4B,CAAC;AAAA,EACjC,MAAAj3C;AAAA,EACA,UAAAq0C;AAAA,EACA,mBAAAC;AAAA,EACA,kBAAA4C;AAAA,EACA,QAAA3C;AACF,MAA2B;AACzB,QAAM,CAAC4C,GAAYC,CAAa,IAAIn3C,GAAM,SAASi3C,KAAoB,EAAE,GAEnExC,IAAoB,CAAC92C,MAAkB;AAC3C,IAAA22C,IAAS;AAAA,MACP,cAAcv0C,EAAK,YAAY,gBAAgB;AAAA,MAC/C,YAAYpC;AAAA,IAAA,CACb;AAAA,EACH,GAEMy5C,IAAoB,CAAC10C,MAA2C;AACpE,IAAAy0C,EAAcz0C,EAAE,OAAO,KAAK;AAAA,EAC9B,GACM20C,IAAiB,CAAC30C,MAA6C;AACnE,IAAIA,EAAE,QAAQ,WACZ40C,EAAA;AAAA,EAEJ,GACMA,IAAkB,MAAM;AAC5B,IAAAhD,IAAS;AAAA,MACP,cAAcv0C,EAAK,YAAY,gBAAgB;AAAA,MAC/C,WAAWm3C;AAAA,IAAA,CACZ;AAAA,EACH;AAEA,SACExlC,gBAAAA,GAAAA,KAAC,QAAA,EAAK,WAAU,sEACb,UAAA;AAAA,IAAA3R,EAAK,YAAY,aAAa,IAAI,CAAC8Q,GAAM3H,MACxCuI,gBAAAA,GAAAA;AAAAA,MAACuiC;AAAA,MAAA;AAAA,QAEC,UAAUI;AAAA,QACV,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,MAAK;AAAA,QACL,SAAS,MAAMK,EAAkB5jC,CAAI;AAAA,QACrC,WAAW,gDACTwjC,MAAsBxjC,IAAO,wBAAwB,EACvD;AAAA,QAEC,UAAAA;AAAA,MAAA;AAAA,MAVI3H;AAAA,IAAA,CAYR;AAAA,IACAnJ,EAAK,YAAY,eAChB2R,gBAAAA,GAAAA,KAAC,QAAA,EAAK,WAAU,kCACd,UAAA;AAAA,MAAAD,gBAAAA,GAAAA;AAAAA,QAAC6jC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAUlB;AAAA,UACV,aAAar0C,EAAK,YAAY;AAAA,UAC9B,OAAOm3C;AAAA,UACP,UAAUE;AAAA,UACV,YAAYC;AAAA,UACZ,WAAU;AAAA,UACV,OAAO;AAAA,YACL,QAAQ;AAAA,YACR,SAAS;AAAA,YACT,WAAW;AAAA,UAAA;AAAA,QACb;AAAA,MAAA;AAAA,MAEF5lC,gBAAAA,GAAAA;AAAAA,QAACuiC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAASsD;AAAA,UACT,UAAUlD;AAAA,UACV,WAAU;AAAA,UAEV,UAAA3iC,gBAAAA,GAAAA,IAAC8lC,IAAA,EAAS,WAAU,UAAA,CAAU;AAAA,QAAA;AAAA,MAAA;AAAA,IAChC,EAAA,CACF;AAAA,EAAA,GAEJ;AAEJ;ACnGO,SAASC,GAAO75C,GAAO6Q,GAAW;AACvC,QAAMrP,IAAS,OAAOxB,CAAK;AAE3B,MAAI,OAAO6Q,KAAc;AACvB,UAAM,IAAI,UAAU,oBAAoB;AAG1C,MAAIyD,IAAQ,GACR/I,IAAQ/J,EAAO,QAAQqP,CAAS;AAEpC,SAAOtF,MAAU;AACf,IAAA+I,KACA/I,IAAQ/J,EAAO,QAAQqP,GAAWtF,IAAQsF,EAAU,MAAM;AAG5D,SAAOyD;AACT;AC1Be,SAASwlC,GAAmB7tB,GAAQ;AAClD,MAAI,OAAOA,KAAW;AACrB,UAAM,IAAI,UAAU,mBAAmB;AAKxC,SAAOA,EACL,QAAQ,uBAAuB,MAAM,EACrC,QAAQ,MAAM,OAAO;AACxB;ACmEO,SAAS8tB,GAAexnC,GAAMwD,GAAMzO,GAAS;AAElD,QAAM0yC,IAAUhf,IADC1zB,KAAW,CAAA,GACK,UAAU,CAAA,CAAE,GACvC2yC,IAAQC,GAAQnkC,CAAI;AAC1B,MAAIokC,IAAY;AAEhB,SAAO,EAAEA,IAAYF,EAAM;AACzB,IAAApe,GAAatpB,GAAM,QAAQupB,CAAO;AAIpC,WAASA,EAAQ15B,GAAM+5B,GAAS;AAC9B,QAAI5wB,IAAQ,IAER6uC;AAEJ,WAAO,EAAE7uC,IAAQ4wB,EAAQ,UAAQ;AAC/B,YAAMnqB,IAASmqB,EAAQ5wB,CAAK,GAEtB2pB,IAAWklB,IAAcA,EAAY,WAAW;AAEtD,UACEJ;AAAA,QACEhoC;AAAA,QACAkjB,IAAWA,EAAS,QAAQljB,CAAM,IAAI;AAAA,QACtCooC;AAAA,MACV;AAEQ;AAGF,MAAAA,IAAcpoC;AAAA,IAChB;AAEA,QAAIooC;AACF,aAAO/lB,EAAQjyB,GAAM+5B,CAAO;AAAA,EAEhC;AAYA,WAAS9H,EAAQjyB,GAAM+5B,GAAS;AAC9B,UAAMnqB,IAASmqB,EAAQA,EAAQ,SAAS,CAAC,GACnCxvB,IAAOstC,EAAME,CAAS,EAAE,CAAC,GACzBhiC,IAAU8hC,EAAME,CAAS,EAAE,CAAC;AAClC,QAAIzrC,IAAQ;AAGZ,UAAMnD,IADWyG,EAAO,SACD,QAAQ5P,CAAI;AACnC,QAAIi4C,IAAS,IAET7c,IAAQ,CAAA;AAEZ,IAAA7wB,EAAK,YAAY;AAEjB,QAAIkC,IAAQlC,EAAK,KAAKvK,EAAK,KAAK;AAEhC,WAAOyM,KAAO;AACZ,YAAMtL,IAAWsL,EAAM,OAEjByrC,IAAc;AAAA,QAClB,OAAOzrC,EAAM;AAAA,QACb,OAAOA,EAAM;AAAA,QACb,OAAO,CAAC,GAAGstB,GAAS/5B,CAAI;AAAA,MAChC;AACM,UAAIpC,IAAQmY,EAAQ,GAAGtJ,GAAOyrC,CAAW;AA8BzC,UA5BI,OAAOt6C,KAAU,aACnBA,IAAQA,EAAM,SAAS,IAAI,EAAC,MAAM,QAAQ,OAAAA,EAAK,IAAI,SAIjDA,MAAU,KAIZ2M,EAAK,YAAYpJ,IAAW,KAExBmL,MAAUnL,KACZi6B,EAAM,KAAK;AAAA,QACT,MAAM;AAAA,QACN,OAAOp7B,EAAK,MAAM,MAAMsM,GAAOnL,CAAQ;AAAA,MACnD,CAAW,GAGC,MAAM,QAAQvD,CAAK,IACrBw9B,EAAM,KAAK,GAAGx9B,CAAK,IACVA,KACTw9B,EAAM,KAAKx9B,CAAK,GAGlB0O,IAAQnL,IAAWsL,EAAM,CAAC,EAAE,QAC5BwrC,IAAS,KAGP,CAAC1tC,EAAK;AACR;AAGF,MAAAkC,IAAQlC,EAAK,KAAKvK,EAAK,KAAK;AAAA,IAC9B;AAEA,WAAIi4C,KACE3rC,IAAQtM,EAAK,MAAM,UACrBo7B,EAAM,KAAK,EAAC,MAAM,QAAQ,OAAOp7B,EAAK,MAAM,MAAMsM,CAAK,EAAC,CAAC,GAG3DsD,EAAO,SAAS,OAAOzG,GAAO,GAAG,GAAGiyB,CAAK,KAEzCA,IAAQ,CAACp7B,CAAI,GAGRmJ,IAAQiyB,EAAM;AAAA,EACvB;AACF;AAUA,SAAS0c,GAAQK,GAAa;AAE5B,QAAMp3C,IAAS,CAAA;AAEf,MAAI,CAAC,MAAM,QAAQo3C,CAAW;AAC5B,UAAM,IAAI,UAAU,mDAAmD;AAKzE,QAAMxkC,IACJ,CAACwkC,EAAY,CAAC,KAAK,MAAM,QAAQA,EAAY,CAAC,CAAC,IAC3CA,IACA,CAACA,CAAW;AAElB,MAAIhvC,IAAQ;AAEZ,SAAO,EAAEA,IAAQwK,EAAK,UAAQ;AAC5B,UAAMykC,IAAQzkC,EAAKxK,CAAK;AACxB,IAAApI,EAAO,KAAK,CAACs3C,GAAaD,EAAM,CAAC,CAAC,GAAGE,GAAWF,EAAM,CAAC,CAAC,CAAC,CAAC;AAAA,EAC5D;AAEA,SAAOr3C;AACT;AAUA,SAASs3C,GAAa9tC,GAAM;AAC1B,SAAO,OAAOA,KAAS,WAAW,IAAI,OAAOkW,GAAOlW,CAAI,GAAG,GAAG,IAAIA;AACpE;AAUA,SAAS+tC,GAAWviC,GAAS;AAC3B,SAAO,OAAOA,KAAY,aACtBA,IACA,WAAY;AACV,WAAOA;AAAA,EACT;AACN;ACvPA,MAAMwiC,KAAc,YAEdC,KAAiB,CAAC,YAAY,QAAQ,SAAS,OAAO;AASrD,SAASC,KAAiC;AAC/C,SAAO;AAAA,IACL,YAAY,CAACC,EAA4B;AAAA,IACzC,OAAO;AAAA,MACL,iBAAiBC;AAAA,MACjB,sBAAsBC;AAAA,MACtB,qBAAqBA;AAAA,MACrB,oBAAoBA;AAAA,IAC1B;AAAA,IACI,MAAM;AAAA,MACJ,iBAAiBC;AAAA,MACjB,sBAAsBC;AAAA,MACtB,qBAAqBC;AAAA,MACrB,oBAAoBC;AAAA,IAC1B;AAAA,EACA;AACA;AASO,SAASC,KAA+B;AAC7C,SAAO;AAAA,IACL,QAAQ;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,aAAAV;AAAA,QACA,gBAAAC;AAAA,MACR;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,aAAAD;AAAA,QACA,gBAAAC;AAAA,MACR;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,aAAAD;AAAA,QACA,gBAAAC;AAAA,MACR;AAAA,IACA;AAAA,EACA;AACA;AAMA,SAASG,GAAqB/hC,GAAO;AACnC,OAAK,MAAM,EAAC,MAAM,QAAQ,OAAO,MAAM,KAAK,IAAI,UAAU,CAAA,EAAE,GAAGA,CAAK;AACtE;AAMA,SAASgiC,GAA0BhiC,GAAO;AACxC,OAAK,OAAO,MAAM,iBAAiB,KAAK,MAAMA,CAAK;AACrD;AAMA,SAASmiC,GAAwBniC,GAAO;AACtC,OAAK,OAAO,KAAK,iBAAiB,KAAK,MAAMA,CAAK;AACpD;AAMA,SAASoiC,GAAuBpiC,GAAO;AACrC,OAAK,OAAO,KAAK,KAAK,KAAK,MAAMA,CAAK;AACtC,QAAM5W,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CuR,EAAOvR,EAAK,MACZA,EAAK,MAAM,YAAY,KAAK,eAAe4W,CAAK;AAClD;AAMA,SAASkiC,GAAyBliC,GAAO;AACvC,OAAK,OAAO,KAAK,cAAc,KAAK,MAAMA,CAAK;AACjD;AAMA,SAASiiC,GAAoBjiC,GAAO;AAClC,OAAK,KAAKA,CAAK;AACjB;AAGA,SAAS8hC,GAA6BvoC,GAAM;AAC1C,EAAAwnC;AAAA,IACExnC;AAAA,IACA;AAAA,MACE,CAAC,mDAAmD+oC,EAAO;AAAA,MAC3D,CAAC,WAAA,gEAAA,IAAyD,GAAEC,EAAS;AAAA,IAC3E;AAAA,IACI,EAAC,QAAQ,CAAC,QAAQ,eAAe,EAAC;AAAA,EACtC;AACA;AAYA,SAASD,GAAQxvC,GAAG0vC,GAAUC,GAAQhb,GAAM5xB,GAAO;AACjD,MAAIkC,IAAS;AAcb,MAXI,CAACgI,GAASlK,CAAK,MAKf,MAAM,KAAK2sC,CAAQ,MACrBC,IAASD,IAAWC,GACpBD,IAAW,IACXzqC,IAAS,YAGP,CAAC2qC,GAAgBD,CAAM;AACzB,WAAO;AAGT,QAAME,IAAQC,GAASH,IAAShb,CAAI;AAEpC,MAAI,CAACkb,EAAM,CAAC,EAAG,QAAO;AAGtB,QAAMx4C,IAAS;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK4N,IAASyqC,IAAWG,EAAM,CAAC;AAAA,IAChC,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAOH,IAAWG,EAAM,CAAC,EAAC,CAAC;AAAA,EACzD;AAEE,SAAIA,EAAM,CAAC,IACF,CAACx4C,GAAQ,EAAC,MAAM,QAAQ,OAAOw4C,EAAM,CAAC,EAAC,CAAC,IAG1Cx4C;AACT;AAUA,SAASo4C,GAAUzvC,GAAG+vC,GAAOlzB,GAAO9Z,GAAO;AACzC;AAAA;AAAA,IAEE,CAACkK,GAASlK,GAAO,EAAI;AAAA,IAErB,UAAU,KAAK8Z,CAAK,IAEb,KAGF;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK,YAAYkzB,IAAQ,MAAMlzB;AAAA,MAC/B,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAOkzB,IAAQ,MAAMlzB,EAAK,CAAC;AAAA,IACzD;AAAA;AACA;AAMA,SAAS+yB,GAAgBD,GAAQ;AAC/B,QAAME,IAAQF,EAAO,MAAM,GAAG;AAE9B,SACE,EAAAE,EAAM,SAAS,KACdA,EAAMA,EAAM,SAAS,CAAC,MACpB,IAAI,KAAKA,EAAMA,EAAM,SAAS,CAAC,CAAC,KAC/B,CAAC,aAAa,KAAKA,EAAMA,EAAM,SAAS,CAAC,CAAC,MAC7CA,EAAMA,EAAM,SAAS,CAAC,MACpB,IAAI,KAAKA,EAAMA,EAAM,SAAS,CAAC,CAAC,KAC/B,CAAC,aAAa,KAAKA,EAAMA,EAAM,SAAS,CAAC,CAAC;AAMlD;AAMA,SAASC,GAASv0C,GAAK;AACrB,QAAMy0C,IAAY,sBAAsB,KAAKz0C,CAAG;AAEhD,MAAI,CAACy0C;AACH,WAAO,CAACz0C,GAAK,MAAS;AAGxB,EAAAA,IAAMA,EAAI,MAAM,GAAGy0C,EAAU,KAAK;AAElC,MAAIC,IAAQD,EAAU,CAAC,GACnBE,IAAoBD,EAAM,QAAQ,GAAG;AACzC,QAAME,IAAgBpC,GAAOxyC,GAAK,GAAG;AACrC,MAAI60C,IAAgBrC,GAAOxyC,GAAK,GAAG;AAEnC,SAAO20C,MAAsB,MAAMC,IAAgBC;AACjD,IAAA70C,KAAO00C,EAAM,MAAM,GAAGC,IAAoB,CAAC,GAC3CD,IAAQA,EAAM,MAAMC,IAAoB,CAAC,GACzCA,IAAoBD,EAAM,QAAQ,GAAG,GACrCG;AAGF,SAAO,CAAC70C,GAAK00C,CAAK;AACpB;AAOA,SAAShjC,GAASlK,GAAOstC,GAAO;AAC9B,QAAMvlC,IAAO/H,EAAM,MAAM,WAAWA,EAAM,QAAQ,CAAC;AAEnD,UACGA,EAAM,UAAU,KACfkJ,GAAkBnB,CAAI,KACtBkB,GAAmBlB,CAAI;AAAA,GAExB,CAACulC,KAASvlC,MAAS;AAExB;ACrQA+e,GAAkB,OAAOymB;AAMzB,SAASC,KAA0B;AACjC,OAAK,OAAM;AACb;AAMA,SAASC,GAAkBtjC,GAAO;AAChC,OAAK,MAAM,EAAC,MAAM,qBAAqB,YAAY,IAAI,OAAO,GAAE,GAAGA,CAAK;AAC1E;AAMA,SAASujC,KAAqC;AAC5C,OAAK,OAAM;AACb;AAMA,SAASC,GAAwBxjC,GAAO;AACtC,OAAK;AAAA,IACH,EAAC,MAAM,sBAAsB,YAAY,IAAI,OAAO,IAAI,UAAU,GAAE;AAAA,IACpEA;AAAA,EACJ;AACA;AAMA,SAASyjC,GAAuBzjC,GAAO;AACrC,QAAM2P,IAAQ,KAAK,OAAM,GACnBvmB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CuR,EAAOvR,EAAK,MACZA,EAAK,aAAa8U;AAAA,IAChB,KAAK,eAAe8B,CAAK;AAAA,EAC7B,EAAI,YAAW,GACb5W,EAAK,QAAQumB;AACf;AAMA,SAAS+zB,GAAiB1jC,GAAO;AAC/B,OAAK,KAAKA,CAAK;AACjB;AAMA,SAAS2jC,GAAkC3jC,GAAO;AAChD,QAAM2P,IAAQ,KAAK,OAAM,GACnBvmB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CuR,EAAOvR,EAAK,MACZA,EAAK,aAAa8U;AAAA,IAChB,KAAK,eAAe8B,CAAK;AAAA,EAC7B,EAAI,YAAW,GACb5W,EAAK,QAAQumB;AACf;AAMA,SAASi0B,GAAuB5jC,GAAO;AACrC,OAAK,KAAKA,CAAK;AACjB;AAGA,SAASojC,KAAwB;AAC/B,SAAO;AACT;AAMA,SAASzmB,GAAkBvzB,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC/C,QAAMixC,IAAUlqC,EAAM,cAAc/G,CAAI;AACxC,MAAI5L,IAAQ68C,EAAQ,KAAK,IAAI;AAC7B,QAAMhgC,IAAOlK,EAAM,MAAM,mBAAmB,GACtCmqC,IAAUnqC,EAAM,MAAM,WAAW;AACvC,SAAA3S,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKA,EAAM,cAAcvQ,CAAI,GAAG,EAAC,OAAO,KAAK,QAAQpC,EAAK,CAAC;AAAA,EACrE,GACE88C,EAAO,GACPjgC,EAAI,GACJ7c,KAAS68C,EAAQ,KAAK,GAAG,GAClB78C;AACT;AASO,SAAS+8C,KAA0B;AACxC,SAAO;AAAA,IACL,OAAO;AAAA,MACL,uBAAuBV;AAAA,MACvB,iBAAiBC;AAAA,MACjB,kCAAkCC;AAAA,MAClC,uBAAuBC;AAAA,IAC7B;AAAA,IACI,MAAM;AAAA,MACJ,uBAAuBC;AAAA,MACvB,iBAAiBC;AAAA,MACjB,kCAAkCC;AAAA,MAClC,uBAAuBC;AAAA,IAC7B;AAAA,EACA;AACA;AAWO,SAASI,GAAsB11C,GAAS;AAE7C,MAAI21C,IAAiB;AAErB,SAAI31C,KAAWA,EAAQ,mBACrB21C,IAAiB,KAGZ;AAAA,IACL,UAAU,EAAC,oBAAAC,GAAoB,mBAAAvnB,GAAiB;AAAA;AAAA,IAEhD,QAAQ,CAAC,EAAC,WAAW,KAAK,aAAa,CAAC,SAAS,YAAY,WAAW,EAAC,CAAC;AAAA,EAC9E;AAME,WAASunB,EAAmB96C,GAAM0J,GAAG6G,GAAO/G,GAAM;AAChD,UAAMixC,IAAUlqC,EAAM,cAAc/G,CAAI;AACxC,QAAI5L,IAAQ68C,EAAQ,KAAK,IAAI;AAC7B,UAAMhgC,IAAOlK,EAAM,MAAM,oBAAoB,GACvCmqC,IAAUnqC,EAAM,MAAM,OAAO;AACnC,WAAA3S,KAAS68C,EAAQ;AAAA,MACflqC,EAAM,KAAKA,EAAM,cAAcvQ,CAAI,GAAG,EAAC,QAAQpC,GAAO,OAAO,IAAG,CAAC;AAAA,IACvE,GACI88C,EAAO,GAEP98C,KAAS68C,EAAQ,KAAK,IAAI,GAEtBz6C,EAAK,YAAYA,EAAK,SAAS,SAAS,MAC1Cy6C,EAAQ,MAAM,CAAC,GAEf78C,KAAS68C,EAAQ;AAAA,OACdI,IAAiB;AAAA,IAAO,OACvBtqC,EAAM;AAAA,QACJA,EAAM,cAAcvQ,GAAMy6C,EAAQ,QAAO,CAAE;AAAA,QAC3CI,IAAiBE,KAASC;AAAA,MACtC;AAAA,IACA,IAGIvgC,EAAI,GAEG7c;AAAA,EACT;AACF;AAGA,SAASo9C,GAAe94C,GAAMiH,GAAO8xC,GAAO;AAC1C,SAAO9xC,MAAU,IAAIjH,IAAO64C,GAAO74C,GAAMiH,GAAO8xC,CAAK;AACvD;AAGA,SAASF,GAAO74C,GAAMiH,GAAO8xC,GAAO;AAClC,UAAQA,IAAQ,KAAK,UAAU/4C;AACjC;AC7LA,MAAMg5C,KAAiC;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEAC,GAAa,OAAOC;AASb,SAASC,KAA+B;AAC7C,SAAO;AAAA,IACL,gBAAgB,CAAC,QAAQ;AAAA,IACzB,OAAO,EAAC,eAAeC,GAAkB;AAAA,IACzC,MAAM,EAAC,eAAeC,GAAiB;AAAA,EAC3C;AACA;AASO,SAASC,KAA6B;AAC3C,SAAO;AAAA,IACL,QAAQ;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,aAAa;AAAA,QACb,gBAAgBN;AAAA,MACxB;AAAA,IACA;AAAA,IACI,UAAU,EAAC,QAAQC,GAAY;AAAA,EACnC;AACA;AAMA,SAASG,GAAmB1kC,GAAO;AACjC,OAAK,MAAM,EAAC,MAAM,UAAU,UAAU,CAAA,EAAE,GAAGA,CAAK;AAClD;AAMA,SAAS2kC,GAAkB3kC,GAAO;AAChC,OAAK,KAAKA,CAAK;AACjB;AAMA,SAASukC,GAAan7C,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC1C,QAAMixC,IAAUlqC,EAAM,cAAc/G,CAAI,GAClCiR,IAAOlK,EAAM,MAAM,eAAe;AACxC,MAAI3S,IAAQ68C,EAAQ,KAAK,IAAI;AAC7B,SAAA78C,KAAS2S,EAAM,kBAAkBvQ,GAAM;AAAA,IACrC,GAAGy6C,EAAQ,QAAO;AAAA,IAClB,QAAQ78C;AAAA,IACR,OAAO;AAAA,EACX,CAAG,GACDA,KAAS68C,EAAQ,KAAK,IAAI,GAC1BhgC,EAAI,GACG7c;AACT;AAGA,SAASw9C,KAAa;AACpB,SAAO;AACT;ACgDA,SAASK,GAAoB79C,GAAO;AAClC,SAAOA,EAAM;AACf;AAcO,SAAS89C,GAAcjnB,GAAOvvB,GAAS;AAC5C,QAAMkC,IAAWlC,KAAW,CAAA,GAEtB6vB,KAAS3tB,EAAS,SAAS,CAAA,GAAI,OAAM,GACrCu0C,IAAev0C,EAAS,gBAAgBq0C,IAExCG,IAAa,CAAA,GAEbC,IAAa,CAAA,GAEbC,IAAa,CAAA,GAEbC,IAAsB,CAAA;AAC5B,MAAIC,IAAkB,GAClBC,IAAW;AAIf,SAAO,EAAEA,IAAWxnB,EAAM,UAAQ;AAEhC,UAAMynB,IAAM,CAAA,GAENC,IAAQ,CAAA;AACd,QAAIC,IAAc;AAMlB,SAJI3nB,EAAMwnB,CAAQ,EAAE,SAASD,MAC3BA,IAAkBvnB,EAAMwnB,CAAQ,EAAE,SAG7B,EAAEG,IAAc3nB,EAAMwnB,CAAQ,EAAE,UAAQ;AAC7C,YAAM/mB,IAAOuC,GAAUhD,EAAMwnB,CAAQ,EAAEG,CAAW,CAAC;AAEnD,UAAIh1C,EAAS,oBAAoB,IAAO;AACtC,cAAMkP,IAAOqlC,EAAazmB,CAAI;AAC9B,QAAAinB,EAAMC,CAAW,IAAI9lC,IAGnBylC,EAAoBK,CAAW,MAAM,UACrC9lC,IAAOylC,EAAoBK,CAAW,OAEtCL,EAAoBK,CAAW,IAAI9lC;AAAA,MAEvC;AAEA,MAAA4lC,EAAI,KAAKhnB,CAAI;AAAA,IACf;AAEA,IAAA2mB,EAAWI,CAAQ,IAAIC,GACvBJ,EAAWG,CAAQ,IAAIE;AAAA,EACzB;AAGA,MAAIC,IAAc;AAElB,MAAI,OAAOrnB,KAAU,YAAY,YAAYA;AAC3C,WAAO,EAAEqnB,IAAcJ;AACrB,MAAAJ,EAAWQ,CAAW,IAAIC,GAAYtnB,EAAMqnB,CAAW,CAAC;AAAA,OAErD;AACL,UAAM5nC,IAAO6nC,GAAYtnB,CAAK;AAE9B,WAAO,EAAEqnB,IAAcJ;AACrB,MAAAJ,EAAWQ,CAAW,IAAI5nC;AAAA,EAE9B;AAGA,EAAA4nC,IAAc;AAEd,QAAMF,IAAM,CAAA,GAENC,IAAQ,CAAA;AAEd,SAAO,EAAEC,IAAcJ,KAAiB;AACtC,UAAMxnC,IAAOonC,EAAWQ,CAAW;AACnC,QAAIznC,IAAS,IACTgF,IAAQ;AAEZ,IAAInF,MAAS,MACXG,IAAS,KACTgF,IAAQ,OACCnF,MAAS,MAClBG,IAAS,MACAH,MAAS,QAClBmF,IAAQ;AAIV,QAAIrD,IACFlP,EAAS,oBAAoB,KACzB,IACA,KAAK;AAAA,MACH;AAAA,MACA20C,EAAoBK,CAAW,IAAIznC,EAAO,SAASgF,EAAM;AAAA,IACrE;AAEI,UAAMub,IAAOvgB,IAAS,IAAI,OAAO2B,CAAI,IAAIqD;AAEzC,IAAIvS,EAAS,oBAAoB,OAC/BkP,IAAO3B,EAAO,SAAS2B,IAAOqD,EAAM,QAEhCrD,IAAOylC,EAAoBK,CAAW,MACxCL,EAAoBK,CAAW,IAAI9lC,IAGrC6lC,EAAMC,CAAW,IAAI9lC,IAGvB4lC,EAAIE,CAAW,IAAIlnB;AAAA,EACrB;AAGA,EAAA2mB,EAAW,OAAO,GAAG,GAAGK,CAAG,GAC3BJ,EAAW,OAAO,GAAG,GAAGK,CAAK,GAE7BF,IAAW;AAEX,QAAM7vC,IAAQ,CAAA;AAEd,SAAO,EAAE6vC,IAAWJ,EAAW,UAAQ;AACrC,UAAMK,IAAML,EAAWI,CAAQ,GACzBE,IAAQL,EAAWG,CAAQ;AACjC,IAAAG,IAAc;AAEd,UAAMl6C,IAAO,CAAA;AAEb,WAAO,EAAEk6C,IAAcJ,KAAiB;AACtC,YAAM9mB,IAAOgnB,EAAIE,CAAW,KAAK;AACjC,UAAIznC,IAAS,IACTgF,IAAQ;AAEZ,UAAIvS,EAAS,oBAAoB,IAAO;AACtC,cAAMkP,IACJylC,EAAoBK,CAAW,KAAKD,EAAMC,CAAW,KAAK,IACtD5nC,IAAOonC,EAAWQ,CAAW;AAEnC,QAAI5nC,MAAS,MACXG,IAAS,IAAI,OAAO2B,CAAI,IACf9B,MAAS,KACd8B,IAAO,KACT3B,IAAS,IAAI,OAAO2B,IAAO,IAAI,GAAG,GAClCqD,IAAQ,IAAI,OAAOrD,IAAO,IAAI,GAAG,MAEjC3B,IAAS,IAAI,OAAO2B,IAAO,CAAC,GAC5BqD,IAAQhF,KAGVgF,IAAQ,IAAI,OAAOrD,CAAI;AAAA,MAE3B;AAEA,MAAIlP,EAAS,mBAAmB,MAAS,CAACg1C,KACxCl6C,EAAK,KAAK,GAAG,GAIbkF,EAAS,YAAY;AAAA;AAAA,MAGrB,EAAEA,EAAS,oBAAoB,MAAS8tB,MAAS,QAChD9tB,EAAS,mBAAmB,MAASg1C,MAEtCl6C,EAAK,KAAK,GAAG,GAGXkF,EAAS,oBAAoB,MAC/BlF,EAAK,KAAKyS,CAAM,GAGlBzS,EAAK,KAAKgzB,CAAI,GAEV9tB,EAAS,oBAAoB,MAC/BlF,EAAK,KAAKyX,CAAK,GAGbvS,EAAS,YAAY,MACvBlF,EAAK,KAAK,GAAG,IAIbkF,EAAS,iBAAiB,MAC1Bg1C,MAAgBJ,IAAkB,MAElC95C,EAAK,KAAK,GAAG;AAAA,IAEjB;AAEA,IAAAkK,EAAM;AAAA,MACJhF,EAAS,iBAAiB,KACtBlF,EAAK,KAAK,EAAE,EAAE,QAAQ,OAAO,EAAE,IAC/BA,EAAK,KAAK,EAAE;AAAA,IACtB;AAAA,EACE;AAEA,SAAOkK,EAAM,KAAK;AAAA,CAAI;AACxB;AAQA,SAASqrB,GAAU75B,GAAO;AACxB,SAAOA,KAAU,OAA8B,KAAK,OAAOA,CAAK;AAClE;AAQA,SAASy+C,GAAYz+C,GAAO;AAC1B,QAAM4W,IAAO,OAAO5W,KAAU,WAAWA,EAAM,YAAY,CAAC,IAAI;AAEhE,SAAO4W,MAAS,MAAgBA,MAAS,KACrC,KACAA,MAAS,MAAgBA,MAAS,MAChC,MACAA,MAAS,MAAgBA,MAAS,MAChC,MACA;AACV;AC5XO,SAAS6e,GAAWrzB,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC/C,QAAMiR,IAAOlK,EAAM,MAAM,YAAY,GAC/BkqC,IAAUlqC,EAAM,cAAc/G,CAAI;AACxC,EAAAixC,EAAQ,KAAK,IAAI,GACjBA,EAAQ,MAAM,CAAC;AACf,QAAM78C,IAAQ2S,EAAM;AAAA,IAClBA,EAAM,cAAcvQ,GAAMy6C,EAAQ,QAAO,CAAE;AAAA,IAC3C3tB;AAAAA,EACJ;AACE,SAAArS,EAAI,GACG7c;AACT;AAGA,SAASkvB,GAAI5qB,GAAMwH,GAAGuxC,GAAO;AAC3B,SAAO,OAAOA,IAAQ,KAAK,OAAO/4C;AACpC;ACnBO,SAASo6C,GAAerlC,GAAOslC,GAAS;AAC7C,SACEC,GAAYvlC,GAAOslC,EAAQ,aAAa,EAAI,KAC5C,CAACC,GAAYvlC,GAAOslC,EAAQ,gBAAgB,EAAK;AAErD;AAQA,SAASC,GAAYvlC,GAAOtD,GAAM8oC,GAAM;AAKtC,MAJI,OAAO9oC,KAAS,aAClBA,IAAO,CAACA,CAAI,IAGV,CAACA,KAAQA,EAAK,WAAW;AAC3B,WAAO8oC;AAGT,MAAItzC,IAAQ;AAEZ,SAAO,EAAEA,IAAQwK,EAAK;AACpB,QAAIsD,EAAM,SAAStD,EAAKxK,CAAK,CAAC;AAC5B,aAAO;AAIX,SAAO;AACT;AC1BO,SAASkmB,GAAU3lB,GAAGgzC,GAAInsC,GAAO/G,GAAM;AAC5C,MAAIL,IAAQ;AAEZ,SAAO,EAAEA,IAAQoH,EAAM,OAAO;AAG5B,QACEA,EAAM,OAAOpH,CAAK,EAAE,cAAc;AAAA,KAClCmzC,GAAe/rC,EAAM,OAAOA,EAAM,OAAOpH,CAAK,CAAC;AAE/C,aAAO,QAAQ,KAAKK,EAAK,MAAM,IAAI,KAAK;AAI5C,SAAO;AAAA;AACT;ACnBO,SAASmzC,GAAc/+C,GAAOg/C,GAAW;AAC9C,QAAMx9C,IAAS,OAAOxB,CAAK;AAC3B,MAAIuL,IAAQ/J,EAAO,QAAQw9C,CAAS,GAChCC,IAAW1zC,GACX+I,IAAQ,GACRkE,IAAM;AAEV,MAAI,OAAOwmC,KAAc;AACvB,UAAM,IAAI,UAAU,oBAAoB;AAG1C,SAAOzzC,MAAU;AACf,IAAIA,MAAU0zC,IACR,EAAE3qC,IAAQkE,MACZA,IAAMlE,KAGRA,IAAQ,GAGV2qC,IAAW1zC,IAAQyzC,EAAU,QAC7BzzC,IAAQ/J,EAAO,QAAQw9C,GAAWC,CAAQ;AAG5C,SAAOzmC;AACT;ACzBO,SAAS0mC,GAAqB98C,GAAMuQ,GAAO;AAChD,SAAO,GACLA,EAAM,QAAQ,WAAW,MACvBvQ,EAAK;AAAA,EAEL,CAACA,EAAK;AAAA,EAEN,WAAW,KAAKA,EAAK,KAAK;AAAA,EAE1B,CAAC,0CAA0C,KAAKA,EAAK,KAAK;AAEhE;ACbO,SAAS+8C,GAAWxsC,GAAO;AAChC,QAAMkJ,IAASlJ,EAAM,QAAQ,SAAS;AAEtC,MAAIkJ,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,iCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACJO,SAASjF,GAAKxU,GAAM0J,GAAG6G,GAAO/G,GAAM;AACzC,QAAMiQ,IAASsjC,GAAWxsC,CAAK,GACzBwP,IAAM/f,EAAK,SAAS,IACpB+zB,IAASta,MAAW,MAAM,gBAAgB;AAEhD,MAAIqjC,GAAqB98C,GAAMuQ,CAAK,GAAG;AACrC,UAAMkK,IAAOlK,EAAM,MAAM,cAAc,GACjC3S,IAAQ2S,EAAM,YAAYwP,GAAK+M,EAAG;AACxC,WAAArS,EAAI,GACG7c;AAAA,EACT;AAEA,QAAM68C,IAAUlqC,EAAM,cAAc/G,CAAI,GAClC0e,IAAWzO,EAAO,OAAO,KAAK,IAAIkjC,GAAc58B,GAAKtG,CAAM,IAAI,GAAG,CAAC,CAAC,GACpEgB,IAAOlK,EAAM,MAAM,YAAY;AACrC,MAAI3S,IAAQ68C,EAAQ,KAAKvyB,CAAQ;AAEjC,MAAIloB,EAAK,MAAM;AACb,UAAM06C,IAAUnqC,EAAM,MAAM,iBAAiBwjB,CAAM,EAAE;AACrD,IAAAn2B,KAAS68C,EAAQ;AAAA,MACflqC,EAAM,KAAKvQ,EAAK,MAAM;AAAA,QACpB,QAAQpC;AAAA,QACR,OAAO;AAAA,QACP,QAAQ,CAAC,GAAG;AAAA,QACZ,GAAG68C,EAAQ,QAAO;AAAA,MAC1B,CAAO;AAAA,IACP,GACIC,EAAO;AAAA,EACT;AAEA,MAAI16C,EAAK,QAAQA,EAAK,MAAM;AAC1B,UAAM06C,IAAUnqC,EAAM,MAAM,iBAAiBwjB,CAAM,EAAE;AACrD,IAAAn2B,KAAS68C,EAAQ,KAAK,GAAG,GACzB78C,KAAS68C,EAAQ;AAAA,MACflqC,EAAM,KAAKvQ,EAAK,MAAM;AAAA,QACpB,QAAQpC;AAAA,QACR,OAAO;AAAA;AAAA,QACP,QAAQ,CAAC,GAAG;AAAA,QACZ,GAAG68C,EAAQ,QAAO;AAAA,MAC1B,CAAO;AAAA,IACP,GACIC,EAAO;AAAA,EACT;AAEA,SAAA98C,KAAS68C,EAAQ,KAAK;AAAA,CAAI,GAEtB16B,MACFniB,KAAS68C,EAAQ,KAAK16B,IAAM;AAAA,CAAI,IAGlCniB,KAAS68C,EAAQ,KAAKvyB,CAAQ,GAC9BzN,EAAI,GACG7c;AACT;AAGA,SAASkvB,GAAI5qB,GAAMwH,GAAGuxC,GAAO;AAC3B,UAAQA,IAAQ,KAAK,UAAU/4C;AACjC;AClEO,SAAS86C,GAAWzsC,GAAO;AAChC,QAAMkJ,IAASlJ,EAAM,QAAQ,SAAS;AAEtC,MAAIkJ,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACNO,SAASvR,GAAWlI,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC/C,QAAMyzC,IAAQD,GAAWzsC,CAAK,GACxBwjB,IAASkpB,MAAU,MAAM,UAAU,cACnCxiC,IAAOlK,EAAM,MAAM,YAAY;AACrC,MAAImqC,IAAUnqC,EAAM,MAAM,OAAO;AACjC,QAAMkqC,IAAUlqC,EAAM,cAAc/G,CAAI;AACxC,MAAI5L,IAAQ68C,EAAQ,KAAK,GAAG;AAC5B,SAAA78C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKA,EAAM,cAAcvQ,CAAI,GAAG;AAAA,MACpC,QAAQpC;AAAA,MACR,OAAO;AAAA,MACP,GAAG68C,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL,GACE78C,KAAS68C,EAAQ,KAAK,KAAK,GAE3BC,EAAO;AAAA,EAIL,CAAC16C,EAAK;AAAA,EAEN,eAAe,KAAKA,EAAK,GAAG,KAE5B06C,IAAUnqC,EAAM,MAAM,oBAAoB,GAC1C3S,KAAS68C,EAAQ,KAAK,GAAG,GACzB78C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,KAAK,EAAC,QAAQpC,GAAO,OAAO,KAAK,GAAG68C,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC5E,GACI78C,KAAS68C,EAAQ,KAAK,GAAG,MAGzBC,IAAUnqC,EAAM,MAAM,gBAAgB,GACtC3S,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,KAAK;AAAA,MACnB,QAAQpC;AAAA,MACR,OAAOoC,EAAK,QAAQ,MAAM;AAAA;AAAA,MAC1B,GAAGy6C,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,IAGEC,EAAO,GAEH16C,EAAK,UACP06C,IAAUnqC,EAAM,MAAM,QAAQwjB,CAAM,EAAE,GACtCn2B,KAAS68C,EAAQ,KAAK,MAAMwC,CAAK,GACjCr/C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,OAAO;AAAA,MACrB,QAAQpC;AAAA,MACR,OAAOq/C;AAAA,MACP,GAAGxC,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,GACI78C,KAAS68C,EAAQ,KAAKwC,CAAK,GAC3BvC,EAAO,IAGTjgC,EAAI,GAEG7c;AACT;ACnEO,SAASs/C,GAAc3sC,GAAO;AACnC,QAAMkJ,IAASlJ,EAAM,QAAQ,YAAY;AAEzC,MAAIkJ,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,qCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACZO,SAAS0jC,GAAyB3oC,GAAM;AAC7C,SAAO,QAAQA,EAAK,SAAS,EAAE,EAAE,YAAW,IAAK;AACnD;AC8BO,SAAS4oC,GAAWC,GAAS3jC,GAAQD,GAAQ;AAClD,QAAM6jC,IAAc9kC,GAAkB6kC,CAAO,GACvCE,IAAa/kC,GAAkBkB,CAAM;AAG3C,SAAI4jC,MAAgB,SACXC,MAAe;AAAA;AAAA;AAAA;AAAA,IAIlB9jC,MAAW,MACT,EAAC,QAAQ,IAAM,SAAS,GAAI,IAC5B,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA,MAChC8jC,MAAe;AAAA;AAAA,IAEb,EAAC,QAAQ,IAAM,SAAS,GAAI;AAAA;AAAA;AAAA,IAE5B,EAAC,QAAQ,IAAO,SAAS,GAAI;AAAA,MAIjCD,MAAgB,IACXC,MAAe;AAAA;AAAA,IAElB,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA,MAC9BA,MAAe;AAAA;AAAA,IAEb,EAAC,QAAQ,IAAM,SAAS,GAAI;AAAA;AAAA;AAAA,IAE5B,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA,MAI/BA,MAAe;AAAA;AAAA,IAElB,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA,MAC9BA,MAAe;AAAA;AAAA,IAEb,EAAC,QAAQ,IAAM,SAAS,GAAK;AAAA;AAAA;AAAA,IAE7B,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA;AACtC;ACxEAnuB,GAAS,OAAOouB;AAST,SAASpuB,GAASpvB,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC7C,QAAMiQ,IAASyjC,GAAc3sC,CAAK,GAC5BkK,IAAOlK,EAAM,MAAM,UAAU,GAC7BkqC,IAAUlqC,EAAM,cAAc/G,CAAI,GAClCmL,IAAS8lC,EAAQ,KAAKhhC,CAAM;AAElC,MAAI2D,IAAUq9B,EAAQ;AAAA,IACpBlqC,EAAM,kBAAkBvQ,GAAM;AAAA,MAC5B,OAAOyZ;AAAA,MACP,QAAA9E;AAAA,MACA,GAAG8lC,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL;AACE,QAAMgD,IAAcrgC,EAAQ,WAAW,CAAC,GAClCpE,IAAOokC;AAAA,IACX5zC,EAAK,OAAO,WAAWA,EAAK,OAAO,SAAS,CAAC;AAAA,IAC7Ci0C;AAAA,IACAhkC;AAAA,EACJ;AAEE,EAAIT,EAAK,WACPoE,IAAU+/B,GAAyBM,CAAW,IAAIrgC,EAAQ,MAAM,CAAC;AAGnE,QAAMsgC,IAActgC,EAAQ,WAAWA,EAAQ,SAAS,CAAC,GACnD1W,IAAQ02C,GAAW5zC,EAAK,MAAM,WAAW,CAAC,GAAGk0C,GAAajkC,CAAM;AAEtE,EAAI/S,EAAM,WACR0W,IAAUA,EAAQ,MAAM,GAAG,EAAE,IAAI+/B,GAAyBO,CAAW;AAGvE,QAAM/jC,IAAQ8gC,EAAQ,KAAKhhC,CAAM;AAEjC,SAAAgB,EAAI,GAEJlK,EAAM,iCAAiC;AAAA,IACrC,OAAO7J,EAAM;AAAA,IACb,QAAQsS,EAAK;AAAA,EACjB,GACSrE,IAASyI,IAAUzD;AAC5B;AAQA,SAAS6jC,GAAa9zC,GAAGgzC,GAAInsC,GAAO;AAClC,SAAOA,EAAM,QAAQ,YAAY;AACnC;ACvDO,SAASotC,GAAsB39C,GAAMuQ,GAAO;AACjD,MAAIqtC,IAAmB;AAIvB,SAAA5jB,GAAMh6B,GAAM,SAAUA,GAAM;AAC1B,QACG,WAAWA,KAAQ,WAAW,KAAKA,EAAK,KAAK,KAC9CA,EAAK,SAAS;AAEd,aAAA49C,IAAmB,IACZrkB;AAAA,EAEX,CAAC,GAEM,IACJ,CAACv5B,EAAK,SAASA,EAAK,QAAQ,MAC3BoT,GAASpT,CAAI,MACZuQ,EAAM,QAAQ,UAAUqtC;AAE/B;AClBO,SAASv0B,GAAQrpB,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC5C,QAAMq0C,IAAO,KAAK,IAAI,KAAK,IAAI,GAAG79C,EAAK,SAAS,CAAC,GAAG,CAAC,GAC/Cy6C,IAAUlqC,EAAM,cAAc/G,CAAI;AAExC,MAAIm0C,GAAsB39C,GAAMuQ,CAAK,GAAG;AACtC,UAAMkK,IAAOlK,EAAM,MAAM,eAAe,GAClCmqC,IAAUnqC,EAAM,MAAM,UAAU,GAChC3S,IAAQ2S,EAAM,kBAAkBvQ,GAAM;AAAA,MAC1C,GAAGy6C,EAAQ,QAAO;AAAA,MAClB,QAAQ;AAAA;AAAA,MACR,OAAO;AAAA;AAAA,IACb,CAAK;AACD,WAAAC,EAAO,GACPjgC,EAAI,GAGF7c,IACA;AAAA,KACCigD,MAAS,IAAI,MAAM,KAAK;AAAA;AAAA,MAEvBjgD,EAAM;AAAA;AAAA,OAGH,KAAK,IAAIA,EAAM,YAAY,IAAI,GAAGA,EAAM,YAAY;AAAA,CAAI,CAAC,IAAI;AAAA,IACxE;AAAA,EAEE;AAEA,QAAMsqB,IAAW,IAAI,OAAO21B,CAAI,GAC1BpjC,IAAOlK,EAAM,MAAM,YAAY,GAC/BmqC,IAAUnqC,EAAM,MAAM,UAAU;AAMtC,EAAAkqC,EAAQ,KAAKvyB,IAAW,GAAG;AAE3B,MAAItqB,IAAQ2S,EAAM,kBAAkBvQ,GAAM;AAAA,IACxC,QAAQ;AAAA,IACR,OAAO;AAAA;AAAA,IACP,GAAGy6C,EAAQ,QAAO;AAAA,EACtB,CAAG;AAED,SAAI,SAAS,KAAK78C,CAAK,MAErBA,IAAQu/C,GAAyBv/C,EAAM,WAAW,CAAC,CAAC,IAAIA,EAAM,MAAM,CAAC,IAGvEA,IAAQA,IAAQsqB,IAAW,MAAMtqB,IAAQsqB,GAErC3X,EAAM,QAAQ,aAChB3S,KAAS,MAAMsqB,IAGjBwyB,EAAO,GACPjgC,EAAI,GAEG7c;AACT;ACtEAkM,GAAK,OAAOg0C;AAML,SAASh0C,GAAK9J,GAAM;AACzB,SAAOA,EAAK,SAAS;AACvB;AAKA,SAAS89C,KAAW;AAClB,SAAO;AACT;ACZAxuB,GAAM,OAAOyuB;AASN,SAASzuB,GAAMtvB,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC1C,QAAMyzC,IAAQD,GAAWzsC,CAAK,GACxBwjB,IAASkpB,MAAU,MAAM,UAAU,cACnCxiC,IAAOlK,EAAM,MAAM,OAAO;AAChC,MAAImqC,IAAUnqC,EAAM,MAAM,OAAO;AACjC,QAAMkqC,IAAUlqC,EAAM,cAAc/G,CAAI;AACxC,MAAI5L,IAAQ68C,EAAQ,KAAK,IAAI;AAC7B,SAAA78C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,KAAK,EAAC,QAAQpC,GAAO,OAAO,KAAK,GAAG68C,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC1E,GACE78C,KAAS68C,EAAQ,KAAK,IAAI,GAE1BC,EAAO;AAAA,EAIJ,CAAC16C,EAAK,OAAOA,EAAK;AAAA,EAEnB,eAAe,KAAKA,EAAK,GAAG,KAE5B06C,IAAUnqC,EAAM,MAAM,oBAAoB,GAC1C3S,KAAS68C,EAAQ,KAAK,GAAG,GACzB78C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,KAAK,EAAC,QAAQpC,GAAO,OAAO,KAAK,GAAG68C,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC5E,GACI78C,KAAS68C,EAAQ,KAAK,GAAG,MAGzBC,IAAUnqC,EAAM,MAAM,gBAAgB,GACtC3S,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,KAAK;AAAA,MACnB,QAAQpC;AAAA,MACR,OAAOoC,EAAK,QAAQ,MAAM;AAAA,MAC1B,GAAGy6C,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,IAGEC,EAAO,GAEH16C,EAAK,UACP06C,IAAUnqC,EAAM,MAAM,QAAQwjB,CAAM,EAAE,GACtCn2B,KAAS68C,EAAQ,KAAK,MAAMwC,CAAK,GACjCr/C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,OAAO;AAAA,MACrB,QAAQpC;AAAA,MACR,OAAOq/C;AAAA,MACP,GAAGxC,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,GACI78C,KAAS68C,EAAQ,KAAKwC,CAAK,GAC3BvC,EAAO,IAGT98C,KAAS68C,EAAQ,KAAK,GAAG,GACzBhgC,EAAI,GAEG7c;AACT;AAKA,SAASmgD,KAAY;AACnB,SAAO;AACT;AC5EA9pB,GAAe,OAAO+pB;AASf,SAAS/pB,GAAej0B,GAAM0J,GAAG6G,GAAO/G,GAAM;AACnD,QAAMjN,IAAOyD,EAAK,eACZya,IAAOlK,EAAM,MAAM,gBAAgB;AACzC,MAAImqC,IAAUnqC,EAAM,MAAM,OAAO;AACjC,QAAMkqC,IAAUlqC,EAAM,cAAc/G,CAAI;AACxC,MAAI5L,IAAQ68C,EAAQ,KAAK,IAAI;AAC7B,QAAMwD,IAAM1tC,EAAM,KAAKvQ,EAAK,KAAK;AAAA,IAC/B,QAAQpC;AAAA,IACR,OAAO;AAAA,IACP,GAAG68C,EAAQ,QAAO;AAAA,EACtB,CAAG;AACD,EAAA78C,KAAS68C,EAAQ,KAAKwD,IAAM,IAAI,GAEhCvD,EAAO;AAEP,QAAMzjC,IAAQ1G,EAAM;AACpB,EAAAA,EAAM,QAAQ,CAAA,GACdmqC,IAAUnqC,EAAM,MAAM,WAAW;AAKjC,QAAM2tC,IAAY3tC,EAAM,KAAKA,EAAM,cAAcvQ,CAAI,GAAG;AAAA,IACtD,QAAQpC;AAAA,IACR,OAAO;AAAA,IACP,GAAG68C,EAAQ,QAAO;AAAA,EACtB,CAAG;AACD,SAAAC,EAAO,GACPnqC,EAAM,QAAQ0G,GACdwD,EAAI,GAEAle,MAAS,UAAU,CAAC0hD,KAAOA,MAAQC,IACrCtgD,KAAS68C,EAAQ,KAAKyD,IAAY,GAAG,IAC5B3hD,MAAS,aAElBqB,IAAQA,EAAM,MAAM,GAAG,EAAE,IAEzBA,KAAS68C,EAAQ,KAAK,GAAG,GAGpB78C;AACT;AAKA,SAASogD,KAAqB;AAC5B,SAAO;AACT;ACzDA9pB,GAAW,OAAOiqB;AAQX,SAASjqB,GAAWl0B,GAAM0J,GAAG6G,GAAO;AACzC,MAAI3S,IAAQoC,EAAK,SAAS,IACtBkoB,IAAW,KACX/e,IAAQ;AAKZ,SAAO,IAAI,OAAO,aAAa+e,IAAW,UAAU,EAAE,KAAKtqB,CAAK;AAC9D,IAAAsqB,KAAY;AAmBd,OAbE,WAAW,KAAKtqB,CAAK,MACnB,WAAW,KAAKA,CAAK,KAAK,WAAW,KAAKA,CAAK,KAAM,QAAQ,KAAKA,CAAK,OAEzEA,IAAQ,MAAMA,IAAQ,MAUjB,EAAEuL,IAAQoH,EAAM,OAAO,UAAQ;AACpC,UAAMgsC,IAAUhsC,EAAM,OAAOpH,CAAK,GAC5BmI,IAAaf,EAAM,eAAegsC,CAAO;AAE/C,QAAI9vC;AAKJ,QAAK8vC,EAAQ;AAEb,aAAQ9vC,IAAQ6E,EAAW,KAAK1T,CAAK,KAAI;AACvC,YAAIuD,IAAWsL,EAAM;AAGrB,QACE7O,EAAM,WAAWuD,CAAQ,MAAM,MAC/BvD,EAAM,WAAWuD,IAAW,CAAC,MAAM,MAEnCA,KAGFvD,IAAQA,EAAM,MAAM,GAAGuD,CAAQ,IAAI,MAAMvD,EAAM,MAAM6O,EAAM,QAAQ,CAAC;AAAA,MACtE;AAAA,EACF;AAEA,SAAOyb,IAAWtqB,IAAQsqB;AAC5B;AAKA,SAASi2B,KAAiB;AACxB,SAAO;AACT;AC/DO,SAASC,GAAqBp+C,GAAMuQ,GAAO;AAChD,QAAMwP,IAAM3M,GAASpT,CAAI;AAEzB,SAAO,GACL,CAACuQ,EAAM,QAAQ;AAAA,EAEbvQ,EAAK;AAAA,EAEL,CAACA,EAAK;AAAA,EAENA,EAAK,YACLA,EAAK,SAAS,WAAW,KACzBA,EAAK,SAAS,CAAC,EAAE,SAAS;AAAA,GAEzB+f,MAAQ/f,EAAK,OAAO,YAAY+f,MAAQ/f,EAAK;AAAA,EAE9C,oBAAoB,KAAKA,EAAK,GAAG;AAAA;AAAA,EAGjC,CAAC,iBAAiB,KAAKA,EAAK,GAAG;AAErC;ACxBAivB,GAAK,OAAOovB;AASL,SAASpvB,GAAKjvB,GAAM0J,GAAG6G,GAAO/G,GAAM;AACzC,QAAMyzC,IAAQD,GAAWzsC,CAAK,GACxBwjB,IAASkpB,MAAU,MAAM,UAAU,cACnCxC,IAAUlqC,EAAM,cAAc/G,CAAI;AAExC,MAAIiR,GAEAigC;AAEJ,MAAI0D,GAAqBp+C,GAAMuQ,CAAK,GAAG;AAErC,UAAM0G,IAAQ1G,EAAM;AACpB,IAAAA,EAAM,QAAQ,CAAA,GACdkK,IAAOlK,EAAM,MAAM,UAAU;AAC7B,QAAI3S,IAAQ68C,EAAQ,KAAK,GAAG;AAC5B,WAAA78C,KAAS68C,EAAQ;AAAA,MACflqC,EAAM,kBAAkBvQ,GAAM;AAAA,QAC5B,QAAQpC;AAAA,QACR,OAAO;AAAA,QACP,GAAG68C,EAAQ,QAAO;AAAA,MAC1B,CAAO;AAAA,IACP,GACI78C,KAAS68C,EAAQ,KAAK,GAAG,GACzBhgC,EAAI,GACJlK,EAAM,QAAQ0G,GACPrZ;AAAA,EACT;AAEA,EAAA6c,IAAOlK,EAAM,MAAM,MAAM,GACzBmqC,IAAUnqC,EAAM,MAAM,OAAO;AAC7B,MAAI3S,IAAQ68C,EAAQ,KAAK,GAAG;AAC5B,SAAA78C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,kBAAkBvQ,GAAM;AAAA,MAC5B,QAAQpC;AAAA,MACR,OAAO;AAAA,MACP,GAAG68C,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL,GACE78C,KAAS68C,EAAQ,KAAK,IAAI,GAC1BC,EAAO;AAAA,EAIJ,CAAC16C,EAAK,OAAOA,EAAK;AAAA,EAEnB,eAAe,KAAKA,EAAK,GAAG,KAE5B06C,IAAUnqC,EAAM,MAAM,oBAAoB,GAC1C3S,KAAS68C,EAAQ,KAAK,GAAG,GACzB78C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,KAAK,EAAC,QAAQpC,GAAO,OAAO,KAAK,GAAG68C,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC5E,GACI78C,KAAS68C,EAAQ,KAAK,GAAG,MAGzBC,IAAUnqC,EAAM,MAAM,gBAAgB,GACtC3S,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,KAAK;AAAA,MACnB,QAAQpC;AAAA,MACR,OAAOoC,EAAK,QAAQ,MAAM;AAAA,MAC1B,GAAGy6C,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,IAGEC,EAAO,GAEH16C,EAAK,UACP06C,IAAUnqC,EAAM,MAAM,QAAQwjB,CAAM,EAAE,GACtCn2B,KAAS68C,EAAQ,KAAK,MAAMwC,CAAK,GACjCr/C,KAAS68C,EAAQ;AAAA,IACflqC,EAAM,KAAKvQ,EAAK,OAAO;AAAA,MACrB,QAAQpC;AAAA,MACR,OAAOq/C;AAAA,MACP,GAAGxC,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,GACI78C,KAAS68C,EAAQ,KAAKwC,CAAK,GAC3BvC,EAAO,IAGT98C,KAAS68C,EAAQ,KAAK,GAAG,GAEzBhgC,EAAI,GACG7c;AACT;AAQA,SAASygD,GAASr+C,GAAM0J,GAAG6G,GAAO;AAChC,SAAO6tC,GAAqBp+C,GAAMuQ,CAAK,IAAI,MAAM;AACnD;AC5GA4jB,GAAc,OAAOmqB;AASd,SAASnqB,GAAcn0B,GAAM0J,GAAG6G,GAAO/G,GAAM;AAClD,QAAMjN,IAAOyD,EAAK,eACZya,IAAOlK,EAAM,MAAM,eAAe;AACxC,MAAImqC,IAAUnqC,EAAM,MAAM,OAAO;AACjC,QAAMkqC,IAAUlqC,EAAM,cAAc/G,CAAI;AACxC,MAAI5L,IAAQ68C,EAAQ,KAAK,GAAG;AAC5B,QAAM3pC,IAAOP,EAAM,kBAAkBvQ,GAAM;AAAA,IACzC,QAAQpC;AAAA,IACR,OAAO;AAAA,IACP,GAAG68C,EAAQ,QAAO;AAAA,EACtB,CAAG;AACD,EAAA78C,KAAS68C,EAAQ,KAAK3pC,IAAO,IAAI,GAEjC4pC,EAAO;AAEP,QAAMzjC,IAAQ1G,EAAM;AACpB,EAAAA,EAAM,QAAQ,CAAA,GACdmqC,IAAUnqC,EAAM,MAAM,WAAW;AAKjC,QAAM2tC,IAAY3tC,EAAM,KAAKA,EAAM,cAAcvQ,CAAI,GAAG;AAAA,IACtD,QAAQpC;AAAA,IACR,OAAO;AAAA,IACP,GAAG68C,EAAQ,QAAO;AAAA,EACtB,CAAG;AACD,SAAAC,EAAO,GACPnqC,EAAM,QAAQ0G,GACdwD,EAAI,GAEAle,MAAS,UAAU,CAACuU,KAAQA,MAASotC,IACvCtgD,KAAS68C,EAAQ,KAAKyD,IAAY,GAAG,IAC5B3hD,MAAS,aAElBqB,IAAQA,EAAM,MAAM,GAAG,EAAE,IAEzBA,KAAS68C,EAAQ,KAAK,GAAG,GAGpB78C;AACT;AAKA,SAAS0gD,KAAoB;AAC3B,SAAO;AACT;ACtDO,SAASC,GAAYhuC,GAAO;AACjC,QAAMkJ,IAASlJ,EAAM,QAAQ,UAAU;AAEvC,MAAIkJ,MAAW,OAAOA,MAAW,OAAOA,MAAW;AACjD,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACVO,SAAS+kC,GAAiBjuC,GAAO;AACtC,QAAMkuC,IAASF,GAAYhuC,CAAK,GAC1BmuC,IAAcnuC,EAAM,QAAQ;AAElC,MAAI,CAACmuC;AACH,WAAOD,MAAW,MAAM,MAAM;AAGhC,MAAIC,MAAgB,OAAOA,MAAgB,OAAOA,MAAgB;AAChE,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,MAAIA,MAAgBD;AAClB,UAAM,IAAI;AAAA,MACR,yBACEA,IACA,4BACAC,IACA;AAAA,IACR;AAGE,SAAOA;AACT;AC7BO,SAASC,GAAmBpuC,GAAO;AACxC,QAAMkJ,IAASlJ,EAAM,QAAQ,iBAAiB;AAE9C,MAAIkJ,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACZO,SAASmlC,GAAUruC,GAAO;AAC/B,QAAMkJ,IAASlJ,EAAM,QAAQ,QAAQ;AAErC,MAAIkJ,MAAW,OAAOA,MAAW,OAAOA,MAAW;AACjD,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACHO,SAAS9F,GAAK3T,GAAM4P,GAAQW,GAAO/G,GAAM;AAC9C,QAAMiR,IAAOlK,EAAM,MAAM,MAAM,GACzBsuC,IAAgBtuC,EAAM;AAE5B,MAAIkuC,IAASz+C,EAAK,UAAU2+C,GAAmBpuC,CAAK,IAAIguC,GAAYhuC,CAAK;AAEzE,QAAMmuC,IAAc1+C,EAAK,UACrBy+C,MAAW,MACT,MACA,MACFD,GAAiBjuC,CAAK;AAC1B,MAAIuuC,IACFlvC,KAAUW,EAAM,iBAAiBkuC,MAAWluC,EAAM,iBAAiB;AAErE,MAAI,CAACvQ,EAAK,SAAS;AACjB,UAAM++C,IAAgB/+C,EAAK,WAAWA,EAAK,SAAS,CAAC,IAAI;AAqCzD;AAAA;AAAA,OAzBGy+C,MAAW,OAAOA,MAAW;AAAA,MAE9BM,MACC,CAACA,EAAc,YAAY,CAACA,EAAc,SAAS,CAAC;AAAA,MAErDxuC,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,UACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,cACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,UACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM;AAAA,MAExCA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,KAClDA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,KAClDA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,MAElDuuC,IAAqB,KAWnBF,GAAUruC,CAAK,MAAMkuC,KAAUM;AAAA,MAAe;AAChD,UAAI51C,IAAQ;AAEZ,aAAO,EAAEA,IAAQnJ,EAAK,SAAS,UAAQ;AACrC,cAAMsX,IAAOtX,EAAK,SAASmJ,CAAK;AAEhC,YACEmO,KACAA,EAAK,SAAS,cACdA,EAAK,YACLA,EAAK,SAAS,CAAC,KACfA,EAAK,SAAS,CAAC,EAAE,SAAS,iBAC1B;AACA,UAAAwnC,IAAqB;AACrB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,EAAIA,MACFL,IAASC,IAGXnuC,EAAM,gBAAgBkuC;AACtB,QAAM7gD,IAAQ2S,EAAM,cAAcvQ,GAAMwJ,CAAI;AAC5C,SAAA+G,EAAM,iBAAiBkuC,GACvBluC,EAAM,gBAAgBsuC,GACtBpkC,EAAI,GACG7c;AACT;AC3FO,SAASohD,GAAoBzuC,GAAO;AACzC,QAAMxE,IAAQwE,EAAM,QAAQ,kBAAkB;AAE9C,MAAIxE,MAAU,SAASA,MAAU,SAASA,MAAU;AAClD,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACLO,SAASwjB,GAASvvB,GAAM4P,GAAQW,GAAO/G,GAAM;AAClD,QAAMy1C,IAAiBD,GAAoBzuC,CAAK;AAChD,MAAIkuC,IAASluC,EAAM,iBAAiBguC,GAAYhuC,CAAK;AAGrD,EAAIX,KAAUA,EAAO,SAAS,UAAUA,EAAO,YAC7C6uC,KACG,OAAO7uC,EAAO,SAAU,YAAYA,EAAO,QAAQ,KAChDA,EAAO,QACP,MACHW,EAAM,QAAQ,wBAAwB,KACnC,IACAX,EAAO,SAAS,QAAQ5P,CAAI,KAChCy+C;AAGJ,MAAInoC,IAAOmoC,EAAO,SAAS;AAE3B,GACEQ,MAAmB,SAClBA,MAAmB,YAChBrvC,KAAUA,EAAO,SAAS,UAAUA,EAAO,UAAW5P,EAAK,aAE/DsW,IAAO,KAAK,KAAKA,IAAO,CAAC,IAAI;AAG/B,QAAMmkC,IAAUlqC,EAAM,cAAc/G,CAAI;AACxC,EAAAixC,EAAQ,KAAKgE,IAAS,IAAI,OAAOnoC,IAAOmoC,EAAO,MAAM,CAAC,GACtDhE,EAAQ,MAAMnkC,CAAI;AAClB,QAAMmE,IAAOlK,EAAM,MAAM,UAAU,GAC7B3S,IAAQ2S,EAAM;AAAA,IAClBA,EAAM,cAAcvQ,GAAMy6C,EAAQ,QAAO,CAAE;AAAA,IAC3C3tB;AAAA,EACJ;AACE,SAAArS,EAAI,GAEG7c;AAGP,WAASkvB,EAAI5qB,GAAMiH,GAAO8xC,GAAO;AAC/B,WAAI9xC,KACM8xC,IAAQ,KAAK,IAAI,OAAO3kC,CAAI,KAAKpU,KAGnC+4C,IAAQwD,IAASA,IAAS,IAAI,OAAOnoC,IAAOmoC,EAAO,MAAM,KAAKv8C;AAAA,EACxE;AACF;ACjDO,SAASonB,GAAUtpB,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC9C,QAAMiR,IAAOlK,EAAM,MAAM,WAAW,GAC9BmqC,IAAUnqC,EAAM,MAAM,UAAU,GAChC3S,IAAQ2S,EAAM,kBAAkBvQ,GAAMwJ,CAAI;AAChD,SAAAkxC,EAAO,GACPjgC,EAAI,GACG7c;AACT;ACDO,MAAMshD;AAAA;AAAA,EAGTtmB,GAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA,EACN,CAAK;AAAA;AC7BE,SAAS/nB,GAAK7Q,GAAM0J,GAAG6G,GAAO/G,GAAM;AAOzC,UALoBxJ,EAAK,SAAS,KAAK,SAAUizB,GAAG;AAClD,WAAOisB,GAASjsB,CAAC;AAAA,EACnB,CAAC,IAE+B1iB,EAAM,oBAAoBA,EAAM,eAC/C,KAAKA,GAAOvQ,GAAMwJ,CAAI;AACzC;ACdO,SAAS21C,GAAY5uC,GAAO;AACjC,QAAMkJ,IAASlJ,EAAM,QAAQ,UAAU;AAEvC,MAAIkJ,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,mCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACXAkW,GAAO,OAAOyvB;AASP,SAASzvB,GAAO3vB,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC3C,QAAMiQ,IAAS0lC,GAAY5uC,CAAK,GAC1BkK,IAAOlK,EAAM,MAAM,QAAQ,GAC3BkqC,IAAUlqC,EAAM,cAAc/G,CAAI,GAClCmL,IAAS8lC,EAAQ,KAAKhhC,IAASA,CAAM;AAE3C,MAAI2D,IAAUq9B,EAAQ;AAAA,IACpBlqC,EAAM,kBAAkBvQ,GAAM;AAAA,MAC5B,OAAOyZ;AAAA,MACP,QAAA9E;AAAA,MACA,GAAG8lC,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL;AACE,QAAMgD,IAAcrgC,EAAQ,WAAW,CAAC,GAClCpE,IAAOokC;AAAA,IACX5zC,EAAK,OAAO,WAAWA,EAAK,OAAO,SAAS,CAAC;AAAA,IAC7Ci0C;AAAA,IACAhkC;AAAA,EACJ;AAEE,EAAIT,EAAK,WACPoE,IAAU+/B,GAAyBM,CAAW,IAAIrgC,EAAQ,MAAM,CAAC;AAGnE,QAAMsgC,IAActgC,EAAQ,WAAWA,EAAQ,SAAS,CAAC,GACnD1W,IAAQ02C,GAAW5zC,EAAK,MAAM,WAAW,CAAC,GAAGk0C,GAAajkC,CAAM;AAEtE,EAAI/S,EAAM,WACR0W,IAAUA,EAAQ,MAAM,GAAG,EAAE,IAAI+/B,GAAyBO,CAAW;AAGvE,QAAM/jC,IAAQ8gC,EAAQ,KAAKhhC,IAASA,CAAM;AAE1C,SAAAgB,EAAI,GAEJlK,EAAM,iCAAiC;AAAA,IACrC,OAAO7J,EAAM;AAAA,IACb,QAAQsS,EAAK;AAAA,EACjB,GACSrE,IAASyI,IAAUzD;AAC5B;AAQA,SAASylC,GAAW11C,GAAGgzC,GAAInsC,GAAO;AAChC,SAAOA,EAAM,QAAQ,UAAU;AACjC;ACxDO,SAASO,GAAK9Q,GAAM0J,GAAG6G,GAAO/G,GAAM;AACzC,SAAO+G,EAAM,KAAKvQ,EAAK,OAAOwJ,CAAI;AACpC;ACNO,SAAS61C,GAAoB9uC,GAAO;AACzC,QAAM+uC,IAAa/uC,EAAM,QAAQ,kBAAkB;AAEnD,MAAI+uC,IAAa;AACf,UAAM,IAAI;AAAA,MACR,6CACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACNO,SAASt3B,GAActe,GAAGgzC,GAAInsC,GAAO;AAC1C,QAAM3S,KACJghD,GAAUruC,CAAK,KAAKA,EAAM,QAAQ,aAAa,MAAM,KACrD,OAAO8uC,GAAoB9uC,CAAK,CAAC;AAEnC,SAAOA,EAAM,QAAQ,aAAa3S,EAAM,MAAM,GAAG,EAAE,IAAIA;AACzD;ACGO,MAAMq9B,KAAS;AAAA,EACpB,YAAA5H;AAAA,EACA,OAAOhE;AAAA,EACT,MAAE7a;AAAAA,EACA,YAAAtM;AAAA,EACA,UAAAknB;AAAA,EACA,WAAAC;AAAA,EACA,SAAAhG;AAAA,EACA,MAAAvf;AAAA,EACA,OAAAwlB;AAAA,EACA,gBAAA2E;AAAA,EACA,YAAAC;AAAA,EACA,MAAAjF;AAAA,EACA,eAAAkF;AAAA,EACA,MAAAxgB;AAAA,EACA,UAAA4b;AAAA,EACA,WAAAjG;AAAA,EACA,MAAAzY;AAAA,EACA,QAAA8e;AAAA,EACF,MAAE7e;AAAAA,EACA,eAAAkX;AACF;ACFO,SAASu3B,KAAuB;AACrC,SAAO;AAAA,IACL,OAAO;AAAA,MACL,OAAOC;AAAA,MACP,WAAWC;AAAA,MACX,aAAaA;AAAA,MACb,UAAUC;AAAA,IAChB;AAAA,IACI,MAAM;AAAA,MACJ,UAAUC;AAAA,MACV,OAAOC;AAAA,MACP,WAAWnlC;AAAA,MACX,aAAaA;AAAA,MACb,UAAUA;AAAA,IAChB;AAAA,EACA;AACA;AAMA,SAAS+kC,GAAW5oC,GAAO;AACzB,QAAMme,IAAQne,EAAM;AAEpB,OAAK;AAAA,IACH;AAAA,MACE,MAAM;AAAA,MACN,OAAOme,EAAM,IAAI,SAAU9B,GAAG;AAC5B,eAAOA,MAAM,SAAS,OAAOA;AAAA,MAC/B,CAAC;AAAA,MACD,UAAU,CAAA;AAAA,IAChB;AAAA,IACIrc;AAAA,EACJ,GACE,KAAK,KAAK,UAAU;AACtB;AAMA,SAASgpC,GAAUhpC,GAAO;AACxB,OAAK,KAAKA,CAAK,GACf,KAAK,KAAK,UAAU;AACtB;AAMA,SAAS8oC,GAAS9oC,GAAO;AACvB,OAAK,MAAM,EAAC,MAAM,YAAY,UAAU,CAAA,EAAE,GAAGA,CAAK;AACpD;AAMA,SAAS6D,GAAK7D,GAAO;AACnB,OAAK,KAAKA,CAAK;AACjB;AAMA,SAAS6oC,GAAU7oC,GAAO;AACxB,OAAK,MAAM,EAAC,MAAM,aAAa,UAAU,CAAA,EAAE,GAAGA,CAAK;AACrD;AAQA,SAAS+oC,GAAa/oC,GAAO;AAC3B,MAAIhZ,IAAQ,KAAK,OAAM;AAEvB,EAAI,KAAK,KAAK,YACZA,IAAQA,EAAM,QAAQ,cAAcmY,EAAO;AAG7C,QAAM/V,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CuR,EAAOvR,EAAK,MACZA,EAAK,QAAQpC,GACb,KAAK,KAAKgZ,CAAK;AACjB;AAOA,SAASb,GAAQlL,GAAI8jB,GAAI;AAEvB,SAAOA,MAAO,MAAMA,IAAK9jB;AAC3B;AAWO,SAASg1C,GAAmB36C,GAAS;AAC1C,QAAMkC,IAAWlC,KAAW,CAAA,GACtB46C,IAAU14C,EAAS,kBACnB24C,IAAkB34C,EAAS,gBAC3Bu0C,IAAev0C,EAAS,cACxB44C,IAASF,IAAU,MAAM;AAE/B,SAAO;AAAA,IACL,QAAQ;AAAA,MACN,EAAC,WAAW,MAAM,aAAa,YAAW;AAAA,MAC1C,EAAC,WAAW;AAAA,GAAM,aAAa,YAAW;AAAA;AAAA;AAAA,MAG1C,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,SAAS;AAAA;AAAA,MAEhD,EAAC,WAAW,KAAK,aAAa,YAAW;AAAA;AAAA;AAAA,MAGzC,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,IAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1C,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,QAAO;AAAA,IACpD;AAAA,IACI,UAAU;AAAA,MACR,YAAYG;AAAA,MACZ,OAAOC;AAAA,MACP,WAAWC;AAAA,MACX,UAAUC;AAAA,IAChB;AAAA,EACA;AAME,WAASF,EAAYlgD,GAAM0J,GAAG6G,GAAO/G,GAAM;AACzC,WAAO62C,EAAcC,EAAkBtgD,GAAMuQ,GAAO/G,CAAI,GAAGxJ,EAAK,KAAK;AAAA,EACvE;AAUA,WAASogD,EAAepgD,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC5C,UAAM0yC,IAAMqE,EAAqBvgD,GAAMuQ,GAAO/G,CAAI,GAC5C5L,IAAQyiD,EAAc,CAACnE,CAAG,CAAC;AAEjC,WAAOt+C,EAAM,MAAM,GAAGA,EAAM,QAAQ;AAAA,CAAI,CAAC;AAAA,EAC3C;AAMA,WAASuiD,EAAgBngD,GAAM0J,GAAG6G,GAAO/G,GAAM;AAC7C,UAAMiR,IAAOlK,EAAM,MAAM,WAAW,GAC9BmqC,IAAUnqC,EAAM,MAAM,UAAU,GAChC3S,IAAQ2S,EAAM,kBAAkBvQ,GAAM;AAAA,MAC1C,GAAGwJ;AAAA,MACH,QAAQw2C;AAAA,MACR,OAAOA;AAAA,IACb,CAAK;AACD,WAAAtF,EAAO,GACPjgC,EAAI,GACG7c;AAAA,EACT;AAMA,WAASyiD,EAAcG,GAAQzrB,GAAO;AACpC,WAAO2mB,GAAc8E,GAAQ;AAAA,MAC3B,OAAAzrB;AAAA;AAAA,MAEA,iBAAAgrB;AAAA;AAAA,MAEA,SAAAD;AAAA;AAAA,MAEA,cAAAnE;AAAA,IACN,CAAK;AAAA,EACH;AAOA,WAAS2E,EAAkBtgD,GAAMuQ,GAAO/G,GAAM;AAC5C,UAAM9J,IAAWM,EAAK;AACtB,QAAImJ,IAAQ;AAEZ,UAAMpI,IAAS,CAAA,GACT25C,IAAUnqC,EAAM,MAAM,OAAO;AAEnC,WAAO,EAAEpH,IAAQzJ,EAAS;AACxB,MAAAqB,EAAOoI,CAAK,IAAIo3C,EAAqB7gD,EAASyJ,CAAK,GAAGoH,GAAO/G,CAAI;AAGnE,WAAAkxC,EAAO,GAEA35C;AAAA,EACT;AAOA,WAASw/C,EAAqBvgD,GAAMuQ,GAAO/G,GAAM;AAC/C,UAAM9J,IAAWM,EAAK;AACtB,QAAImJ,IAAQ;AAEZ,UAAMpI,IAAS,CAAA,GACT25C,IAAUnqC,EAAM,MAAM,UAAU;AAEtC,WAAO,EAAEpH,IAAQzJ,EAAS;AAIxB,MAAAqB,EAAOoI,CAAK,IAAIg3C,EAAgBzgD,EAASyJ,CAAK,GAAGnJ,GAAMuQ,GAAO/G,CAAI;AAGpE,WAAAkxC,EAAO,GAEA35C;AAAA,EACT;AAMA,WAASk/C,EAAoBjgD,GAAM4P,GAAQW,GAAO;AAChD,QAAI3S,IAAQi9B,GAAgB,WAAW76B,GAAM4P,GAAQW,CAAK;AAE1D,WAAIA,EAAM,MAAM,SAAS,WAAW,MAClC3S,IAAQA,EAAM,QAAQ,OAAO,MAAM,IAG9BA;AAAA,EACT;AACF;ACvRO,SAAS6iD,KAA8B;AAC5C,SAAO;AAAA,IACL,MAAM;AAAA,MACJ,2BAA2BC;AAAA,MAC3B,6BAA6BA;AAAA,MAC7B,WAAWC;AAAA,IACjB;AAAA,EACA;AACA;AASO,SAASC,KAA4B;AAC1C,SAAO;AAAA,IACL,QAAQ,CAAC,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,QAAO,CAAC;AAAA,IACxD,UAAU,EAAC,UAAUC,GAAwB;AAAA,EACjD;AACA;AAMA,SAASH,GAAU9pC,GAAO;AAExB,QAAM5W,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CuR,EAAOvR,EAAK,MACZA,EAAK,UAAU4W,EAAM,SAAS;AAChC;AAMA,SAAS+pC,GAA8B/pC,GAAO;AAC5C,QAAMhH,IAAS,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAE/C,MACEA,KACAA,EAAO,SAAS,cAChB,OAAOA,EAAO,WAAY,WAC1B;AACA,UAAM5P,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CuR,IAAOvR,EAAK;AACZ,UAAM4tB,IAAO5tB,EAAK,SAAS,CAAC;AAE5B,QAAI4tB,KAAQA,EAAK,SAAS,QAAQ;AAChC,YAAMkF,IAAWljB,EAAO;AACxB,UAAIzG,IAAQ,IAER23C;AAEJ,aAAO,EAAE33C,IAAQ2pB,EAAS,UAAQ;AAChC,cAAMiuB,IAAUjuB,EAAS3pB,CAAK;AAC9B,YAAI43C,EAAQ,SAAS,aAAa;AAChC,UAAAD,IAAkBC;AAClB;AAAA,QACF;AAAA,MACF;AAEA,MAAID,MAAoB9gD,MAEtB4tB,EAAK,QAAQA,EAAK,MAAM,MAAM,CAAC,GAE3BA,EAAK,MAAM,WAAW,IACxB5tB,EAAK,SAAS,MAAK,IAEnBA,EAAK,YACL4tB,EAAK,YACL,OAAOA,EAAK,SAAS,MAAM,UAAW,aAEtCA,EAAK,SAAS,MAAM,UACpBA,EAAK,SAAS,MAAM,UACpB5tB,EAAK,SAAS,QAAQ,OAAO,OAAO,IAAI4tB,EAAK,SAAS,KAAK;AAAA,IAGjE;AAAA,EACF;AAEA,OAAK,KAAKhX,CAAK;AACjB;AAMA,SAASiqC,GAAyB7gD,GAAM4P,GAAQW,GAAO/G,GAAM;AAC3D,QAAMokB,IAAO5tB,EAAK,SAAS,CAAC,GACtBghD,IACJ,OAAOhhD,EAAK,WAAY,aAAa4tB,KAAQA,EAAK,SAAS,aACvDqzB,IAAW,OAAOjhD,EAAK,UAAU,MAAM,OAAO,MAC9Cy6C,IAAUlqC,EAAM,cAAc/G,CAAI;AAExC,EAAIw3C,KACFvG,EAAQ,KAAKwG,CAAQ;AAGvB,MAAIrjD,IAAQi9B,GAAgB,SAAS76B,GAAM4P,GAAQW,GAAO;AAAA,IACxD,GAAG/G;AAAA,IACH,GAAGixC,EAAQ,QAAO;AAAA,EACtB,CAAG;AAED,SAAIuG,MACFpjD,IAAQA,EAAM,QAAQ,mCAAmCyL,CAAK,IAGzDzL;AAMP,WAASyL,EAAMwB,GAAI;AACjB,WAAOA,IAAKo2C;AAAA,EACd;AACF;AC5GO,SAASC,KAAkB;AAChC,SAAO;AAAA,IACLzI,GAA8B;AAAA,IAC9BkC,GAAuB;AAAA,IACvBU,GAA4B;AAAA,IAC5BkE,GAAoB;AAAA,IACpBkB,GAA2B;AAAA,EAC/B;AACA;AAYO,SAASU,GAAcj8C,GAAS;AACrC,SAAO;AAAA,IACL,YAAY;AAAA,MACV+zC,GAA4B;AAAA,MAC5B2B,GAAsB11C,CAAO;AAAA,MAC7Bs2C,GAA0B;AAAA,MAC1BqE,GAAmB36C,CAAO;AAAA,MAC1B07C,GAAyB;AAAA,IAC/B;AAAA,EACA;AACA;ACzDA,MAAMQ,KAAY;AAAA,EAChB,UAAUC;AAAA,EACV,SAAS;AACX,GACMhI,KAAS;AAAA,EACb,UAAUiI;AAAA,EACV,SAAS;AACX,GACMjjB,KAAO;AAAA,EACX,UAAUkjB;AAAA,EACV,SAAS;AACX,GACM5H,KAAQ;AAAA,EACZ,UAAU6H;AAAA,EACV,SAAS;AACX,GACMC,KAAsB;AAAA,EAC1B,UAAUC;AAAA,EACV,SAAS;AACX,GACMC,KAAc;AAAA,EAClB,MAAM;AAAA,EACN,UAAUC;AAAA,EACV,UAAUC;AACZ,GACMC,KAAmB;AAAA,EACvB,MAAM;AAAA,EACN,UAAUC;AAAA,EACV,UAAUC;AACZ,GACMC,KAAgB;AAAA,EACpB,MAAM;AAAA,EACN,UAAUC;AAAA,EACV,UAAUC;AACZ,GAGMrxC,KAAO,CAAA;AAUN,SAASsxC,KAAqB;AACnC,SAAO;AAAA,IACL,MAAAtxC;AAAA,EACJ;AACA;AAGA,IAAI0D,KAAO;AAGX,OAAOA,KAAO;AACZ,EAAA1D,GAAK0D,EAAI,IAAIytC,IACbztC,MACIA,OAAS,KAAIA,KAAO,KAAYA,OAAS,OAAIA,KAAO;AAE1D1D,GAAK,EAAE,IAAImxC;AACXnxC,GAAK,EAAE,IAAImxC;AACXnxC,GAAK,EAAE,IAAImxC;AACXnxC,GAAK,EAAE,IAAImxC;AACXnxC,GAAK,EAAE,IAAI,CAACmxC,IAAeH,EAAgB;AAC3ChxC,GAAK,GAAG,IAAI,CAACmxC,IAAeH,EAAgB;AAC5ChxC,GAAK,EAAE,IAAI,CAACmxC,IAAeN,EAAW;AACtC7wC,GAAK,GAAG,IAAI,CAACmxC,IAAeN,EAAW;AAmBvC,SAASO,GAAsBhsC,GAASC,GAAIoC,GAAK;AAC/C,QAAMpZ,IAAO;AAEb,MAAIkjD,GAEAl9C;AACJ,SAAOmH;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAI,CAAC8tC,GAAS9tC,CAAI,KAAK,CAAC2tC,GAAc,KAAKhjD,GAAMA,EAAK,QAAQ,KAAKojD,GAAmBpjD,EAAK,MAAM,IACxFoZ,EAAI/D,CAAI,KAEjB0B,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,sBAAsB,GAC7BujC,EAAMjlC,CAAI;AAAA,EACnB;AAYA,WAASilC,EAAMjlC,GAAM;AACnB,WAAI8tC,GAAS9tC,CAAI,KACf0B,EAAQ,QAAQ1B,CAAI,GACbilC,KAELjlC,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbguC,KAEFjqC,EAAI/D,CAAI;AAAA,EACjB;AAgBA,WAASguC,EAAYhuC,GAAM;AAEzB,WAAIA,MAAS,KACJ0B,EAAQ,MAAMurC,IAAqBgB,GAAkBC,CAAc,EAAEluC,CAAI,IAI9EA,MAAS,MAAMA,MAAS,MAAMS,GAAkBT,CAAI,KACtDrP,IAAO,IACP+Q,EAAQ,QAAQ1B,CAAI,GACbguC,KASFC,EAAiBjuC,CAAI;AAAA,EAC9B;AAYA,WAASkuC,EAAeluC,GAAM;AAC5B,WAAA0B,EAAQ,QAAQ1B,CAAI,GACpB6tC,IAAM,IACCG;AAAA,EACT;AAYA,WAASC,EAAiBjuC,GAAM;AAG9B,WAAIrP,KAAQk9C,KAAOttC,GAAW5V,EAAK,QAAQ,KACzC+W,EAAQ,KAAK,sBAAsB,GACnCA,EAAQ,KAAK,iBAAiB,GACvBC,EAAG3B,CAAI,KAET+D,EAAI/D,CAAI;AAAA,EACjB;AACF;AAaA,SAASotC,GAAoB1rC,GAASC,GAAIoC,GAAK;AAC7C,QAAMpZ,IAAO;AACb,SAAOwjD;AAYP,WAASA,EAASnuC,GAAM;AACtB,WAAIA,MAAS,MAAMA,MAAS,OAAO,CAACqtC,GAAY,KAAK1iD,GAAMA,EAAK,QAAQ,KAAKojD,GAAmBpjD,EAAK,MAAM,IAClGoZ,EAAI/D,CAAI,KAEjB0B,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,oBAAoB,GAG3BA,EAAQ,MAAMkrC,IAAWlrC,EAAQ,QAAQmjC,IAAQnjC,EAAQ,QAAQmoB,IAAMukB,CAAQ,GAAGrqC,CAAG,GAAGA,CAAG,EAAE/D,CAAI;AAAA,EAC1G;AAYA,WAASouC,EAASpuC,GAAM;AACtB,WAAA0B,EAAQ,KAAK,oBAAoB,GACjCA,EAAQ,KAAK,iBAAiB,GACvBC,EAAG3B,CAAI;AAAA,EAChB;AACF;AAaA,SAASutC,GAAyB7rC,GAASC,GAAIoC,GAAK;AAClD,QAAMpZ,IAAO;AACb,MAAI+B,IAAS,IACTmX,IAAO;AACX,SAAOwqC;AAYP,WAASA,EAAcruC,GAAM;AAC3B,YAAKA,MAAS,MAAMA,MAAS,QAAQwtC,GAAiB,KAAK7iD,GAAMA,EAAK,QAAQ,KAAK,CAACojD,GAAmBpjD,EAAK,MAAM,KAChH+W,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,qBAAqB,GACnChV,KAAU,OAAO,cAAcsT,CAAI,GACnC0B,EAAQ,QAAQ1B,CAAI,GACbsuC,KAEFvqC,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASsuC,EAAqBtuC,GAAM;AAElC,QAAIO,GAAWP,CAAI,KAAKtT,EAAO,SAAS;AAEtC,aAAAA,KAAU,OAAO,cAAcsT,CAAI,GACnC0B,EAAQ,QAAQ1B,CAAI,GACbsuC;AAET,QAAItuC,MAAS,IAAI;AACf,YAAM4kC,IAAWl4C,EAAO,YAAW;AACnC,UAAIk4C,MAAa,UAAUA,MAAa;AACtC,eAAAljC,EAAQ,QAAQ1B,CAAI,GACbuuC;AAAA,IAEX;AACA,WAAOxqC,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASuuC,EAAsBvuC,GAAM;AACnC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GAChB6D,IACK2qC,KAET3qC,IAAO,IACA0qC,MAEFxqC,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASwuC,EAAcxuC,GAAM;AAG3B,WAAOA,MAAS,QAAQW,GAAaX,CAAI,KAAKgB,GAA0BhB,CAAI,KAAKmB,GAAkBnB,CAAI,KAAKkB,GAAmBlB,CAAI,IAAI+D,EAAI/D,CAAI,IAAI0B,EAAQ,QAAQmjC,IAAQnjC,EAAQ,QAAQmoB,IAAM4kB,CAAa,GAAG1qC,CAAG,EAAE/D,CAAI;AAAA,EAC5N;AAYA,WAASyuC,EAAczuC,GAAM;AAC3B,WAAA0B,EAAQ,KAAK,qBAAqB,GAClCA,EAAQ,KAAK,iBAAiB,GACvBC,EAAG3B,CAAI;AAAA,EAChB;AACF;AAaA,SAAS6sC,GAAkBnrC,GAASC,GAAIoC,GAAK;AAC3C,MAAIjC,IAAO;AACX,SAAO4sC;AAYP,WAASA,EAAgB1uC,GAAM;AAC7B,YAAKA,MAAS,MAAMA,MAAS,QAAQ8B,IAAO,KAC1CA,KACAJ,EAAQ,QAAQ1B,CAAI,GACb0uC,KAEL1uC,MAAS,MAAM8B,MAAS,KAC1BJ,EAAQ,QAAQ1B,CAAI,GACb2uC,KAEF5qC,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAAS2uC,EAAe3uC,GAAM;AAE5B,WAAOA,MAAS,OAAO+D,EAAI/D,CAAI,IAAI2B,EAAG3B,CAAI;AAAA,EAC5C;AACF;AAaA,SAAS8sC,GAAeprC,GAASC,GAAIoC,GAAK;AAExC,MAAI6qC,GAEAC,GAEAhrC;AACJ,SAAOirC;AAYP,WAASA,EAAa9uC,GAAM;AAI1B,WAAIA,MAAS,MAAMA,MAAS,KACnB0B,EAAQ,MAAMyjC,IAAO4J,GAAaC,CAAmB,EAAEhvC,CAAI,IAShEA,MAAS,QAAQgB,GAA0BhB,CAAI,KAAKmB,GAAkBnB,CAAI,KAAKA,MAAS,MAAMkB,GAAmBlB,CAAI,IAChH+uC,EAAY/uC,CAAI,KAEzB6D,IAAO,IACPnC,EAAQ,QAAQ1B,CAAI,GACb8uC;AAAA,EACT;AAYA,WAASE,EAAoBhvC,GAAM;AAEjC,WAAIA,MAAS,KACX4uC,IAA0B,MAK1BC,IAA8BD,GAC9BA,IAA0B,SAE5BltC,EAAQ,QAAQ1B,CAAI,GACb8uC;AAAA,EACT;AAWA,WAASC,EAAY/uC,GAAM;AAGzB,WAAI6uC,KAA+BD,KAA2B,CAAC/qC,IACtDE,EAAI/D,CAAI,IAEV2B,EAAG3B,CAAI;AAAA,EAChB;AACF;AAaA,SAAS+sC,GAAarrC,GAASC,GAAI;AACjC,MAAIsF,IAAW,GACXgoC,IAAY;AAChB,SAAOC;AAYP,WAASA,EAAWlvC,GAAM;AACxB,WAAIA,MAAS,MACXiH,KACAvF,EAAQ,QAAQ1B,CAAI,GACbkvC,KAMLlvC,MAAS,MAAMivC,IAAYhoC,IACtBkoC,EAAkBnvC,CAAI,IAM3BA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACtN0B,EAAQ,MAAMyjC,IAAOxjC,GAAIwtC,CAAiB,EAAEnvC,CAAI,IAErDA,MAAS,QAAQgB,GAA0BhB,CAAI,KAAKmB,GAAkBnB,CAAI,IACrE2B,EAAG3B,CAAI,KAEhB0B,EAAQ,QAAQ1B,CAAI,GACbkvC;AAAA,EACT;AAYA,WAASC,EAAkBnvC,GAAM;AAE/B,WAAIA,MAAS,MACXivC,KAEFvtC,EAAQ,QAAQ1B,CAAI,GACbkvC;AAAA,EACT;AACF;AAiBA,SAASlC,GAActrC,GAASC,GAAIoC,GAAK;AACvC,SAAOohC;AAYP,WAASA,EAAMnlC,GAAM;AAEnB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,OAChL0B,EAAQ,QAAQ1B,CAAI,GACbmlC,KAMLnlC,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbovC,KAMLpvC,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbqvC;AAAA;AAAA,MAITrvC,MAAS;AAAA,MAETA,MAAS,QAAQgB,GAA0BhB,CAAI,KAAKmB,GAAkBnB,CAAI,IACjE2B,EAAG3B,CAAI,IAET+D,EAAI/D,CAAI;AAAA;AAAA,EACjB;AAeA,WAASqvC,EAAkBrvC,GAAM;AAG/B,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMgB,GAA0BhB,CAAI,KAAKmB,GAAkBnB,CAAI,IACnG2B,EAAG3B,CAAI,IAETmlC,EAAMnlC,CAAI;AAAA,EACnB;AAYA,WAASovC,EAA6BpvC,GAAM;AAE1C,WAAOO,GAAWP,CAAI,IAAIsvC,EAA8BtvC,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EAC1E;AAYA,WAASsvC,EAA8BtvC,GAAM;AAE3C,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbmlC,KAEL5kC,GAAWP,CAAI,KACjB0B,EAAQ,QAAQ1B,CAAI,GACbsvC,KAIFvrC,EAAI/D,CAAI;AAAA,EACjB;AACF;AAiBA,SAASktC,GAA4BxrC,GAASC,GAAIoC,GAAK;AACrD,SAAOjM;AAYP,WAASA,EAAMkI,GAAM;AAEnB,WAAA0B,EAAQ,QAAQ1B,CAAI,GACbmF;AAAA,EACT;AAYA,WAASA,EAAMnF,GAAM;AAEnB,WAAOS,GAAkBT,CAAI,IAAI+D,EAAI/D,CAAI,IAAI2B,EAAG3B,CAAI;AAAA,EACtD;AACF;AAQA,SAASqtC,GAAYrtC,GAAM;AACzB,SAAOA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,OAAOgB,GAA0BhB,CAAI;AACnJ;AAQA,SAASwtC,GAAiBxtC,GAAM;AAC9B,SAAO,CAACO,GAAWP,CAAI;AACzB;AAMA,SAAS2tC,GAAc3tC,GAAM;AAK3B,SAAO,EAAEA,MAAS,MAAM8tC,GAAS9tC,CAAI;AACvC;AAMA,SAAS8tC,GAAS9tC,GAAM;AACtB,SAAOA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMS,GAAkBT,CAAI;AAC3F;AAMA,SAAS+tC,GAAmB7pC,GAAQ;AAClC,MAAIvP,IAAQuP,EAAO,QACf3X,IAAS;AACb,SAAOoI,OAAS;AACd,UAAMyN,IAAQ8B,EAAOvP,CAAK,EAAE,CAAC;AAC7B,SAAKyN,EAAM,SAAS,eAAeA,EAAM,SAAS,iBAAiB,CAACA,EAAM,WAAW;AACnF,MAAA7V,IAAS;AACT;AAAA,IACF;AAIA,QAAI6V,EAAM,+BAA+B;AACvC,MAAA7V,IAAS;AACT;AAAA,IACF;AAAA,EACF;AACA,SAAI2X,EAAO,SAAS,KAAK,CAAC3X,MAGxB2X,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,gCAAgC,KAExD3X;AACT;AC70BA,MAAMgjD,KAAS;AAAA,EACb,UAAUt7B;AAAA,EACV,SAAS;AACX;AAeO,SAASu7B,KAAc;AAE5B,SAAO;AAAA,IACL,UAAU;AAAA,MACP,IAAK;AAAA,QACJ,MAAM;AAAA,QACN,UAAUC;AAAA,QACV,cAAc;AAAA,UACZ,UAAUC;AAAA,QACpB;AAAA,QACQ,MAAMC;AAAA,MACd;AAAA,IACA;AAAA,IACI,MAAM;AAAA,MACH,IAAK;AAAA,QACJ,MAAM;AAAA,QACN,UAAUC;AAAA,MAClB;AAAA,MACO,IAAK;AAAA,QACJ,MAAM;AAAA,QACN,KAAK;AAAA,QACL,UAAUC;AAAA,QACV,WAAWC;AAAA,MACnB;AAAA,IACA;AAAA,EACA;AACA;AAOA,SAASD,GAAiCnuC,GAASC,GAAIoC,GAAK;AAC1D,QAAMpZ,IAAO;AACb,MAAIgK,IAAQhK,EAAK,OAAO;AACxB,QAAMsnB,IAAUtnB,EAAK,OAAO,iBAAiBA,EAAK,OAAO,eAAe;AAExE,MAAIqnB;AAGJ,SAAOrd,OAAS;AACd,UAAMyN,IAAQzX,EAAK,OAAOgK,CAAK,EAAE,CAAC;AAClC,QAAIyN,EAAM,SAAS,cAAc;AAC/B,MAAA4P,IAAa5P;AACb;AAAA,IACF;AAGA,QAAIA,EAAM,SAAS,qBAAqBA,EAAM,SAAS,eAAeA,EAAM,SAAS,WAAWA,EAAM,SAAS,WAAWA,EAAM,SAAS;AACvI;AAAA,EAEJ;AACA,SAAOtK;AAKP,WAASA,EAAMkI,GAAM;AACnB,QAAI,CAACgS,KAAc,CAACA,EAAW;AAC7B,aAAOjO,EAAI/D,CAAI;AAEjB,UAAM9P,IAAKoQ,GAAoB3V,EAAK,eAAe;AAAA,MACjD,OAAOqnB,EAAW;AAAA,MAClB,KAAKrnB,EAAK,IAAG;AAAA,IACnB,CAAK,CAAC;AACF,WAAIuF,EAAG,YAAY,CAAC,MAAM,MAAM,CAAC+hB,EAAQ,SAAS/hB,EAAG,MAAM,CAAC,CAAC,IACpD6T,EAAI/D,CAAI,KAEjB0B,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,4BAA4B,GAClCC,EAAG3B,CAAI;AAAA,EAChB;AACF;AAIA,SAAS8vC,GAAkC5rC,GAAQC,GAAS;AAC1D,MAAIxP,IAAQuP,EAAO;AAKnB,SAAOvP;AACL,QAAIuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgBuP,EAAOvP,CAAK,EAAE,CAAC,MAAM,SAAS;AAC7D,MAAAuP,EAAOvP,CAAK,EAAE,CAAC;AAC5B;AAAA,IACF;AAGF,EAAAuP,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,OAAO,QAC5BuP,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,OAAO;AAI5B,QAAMo7C,IAAO;AAAA,IACX,MAAM;AAAA,IACN,OAAO,OAAO,OAAO,IAAI7rC,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,KAAK;AAAA,IACnD,KAAK,OAAO,OAAO,CAAA,GAAIuP,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG;AAAA,EAC3D,GAGQe,IAAS;AAAA,IACb,MAAM;AAAA,IACN,OAAO,OAAO,OAAO,IAAIf,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,GAAG;AAAA,IACjD,KAAK,OAAO,OAAO,IAAIuP,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,GAAG;AAAA,EACnD;AAEE,EAAAsQ,EAAO,IAAI,UACXA,EAAO,IAAI,UACXA,EAAO,IAAI;AAEX,QAAMoQ,IAAS;AAAA,IACb,MAAM;AAAA,IACN,OAAO,OAAO,OAAO,CAAA,GAAIpQ,EAAO,GAAG;AAAA,IACnC,KAAK,OAAO,OAAO,CAAA,GAAIf,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,KAAK;AAAA,EAC7D,GAEQ6R,IAAQ;AAAA,IACZ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO,OAAO,OAAO,CAAA,GAAIV,EAAO,KAAK;AAAA,IACrC,KAAK,OAAO,OAAO,CAAA,GAAIA,EAAO,GAAG;AAAA,EACrC,GAGQ26B,IAAc;AAAA;AAAA,IAEpB9rC,EAAOvP,IAAQ,CAAC;AAAA,IAAGuP,EAAOvP,IAAQ,CAAC;AAAA,IAAG,CAAC,SAASo7C,GAAM5rC,CAAO;AAAA;AAAA,IAE7DD,EAAOvP,IAAQ,CAAC;AAAA,IAAGuP,EAAOvP,IAAQ,CAAC;AAAA;AAAA,IAEnC,CAAC,SAASsQ,GAAQd,CAAO;AAAA,IAAG,CAAC,QAAQc,GAAQd,CAAO;AAAA;AAAA,IAEpD,CAAC,SAASkR,GAAQlR,CAAO;AAAA,IAAG,CAAC,SAAS4R,GAAO5R,CAAO;AAAA,IAAG,CAAC,QAAQ4R,GAAO5R,CAAO;AAAA,IAAG,CAAC,QAAQkR,GAAQlR,CAAO;AAAA;AAAA,IAEzGD,EAAOA,EAAO,SAAS,CAAC;AAAA,IAAGA,EAAOA,EAAO,SAAS,CAAC;AAAA,IAAG,CAAC,QAAQ6rC,GAAM5rC,CAAO;AAAA,EAAC;AAC7E,SAAAD,EAAO,OAAOvP,GAAOuP,EAAO,SAASvP,IAAQ,GAAG,GAAGq7C,CAAW,GACvD9rC;AACT;AAMA,SAAS0rC,GAAwBluC,GAASC,GAAIoC,GAAK;AACjD,QAAMpZ,IAAO,MACPsnB,IAAUtnB,EAAK,OAAO,iBAAiBA,EAAK,OAAO,eAAe;AACxE,MAAImX,IAAO,GAEPnR;AAOJ,SAAOmH;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,4BAA4B,GAClCuuC;AAAA,EACT;AAYA,WAASA,EAAUjwC,GAAM;AACvB,WAAIA,MAAS,KAAW+D,EAAI/D,CAAI,KAChC0B,EAAQ,MAAM,uBAAuB,GACrCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,uBAAuB,GACpCA,EAAQ,MAAM,uBAAuB,GACrCA,EAAQ,MAAM,aAAa,EAAE,cAAc,UACpCwuC;AAAA,EACT;AAYA,WAASA,EAASlwC,GAAM;AACtB;AAAA;AAAA,MAEA8B,IAAO;AAAA,MAEP9B,MAAS,MAAM,CAACrP;AAAA;AAAA,MAGhBqP,MAAS,QAAQA,MAAS,MAAMgB,GAA0BhB,CAAI;AAAA;AAC5D,aAAO+D,EAAI/D,CAAI;AAEjB,QAAIA,MAAS,IAAI;AACf,MAAA0B,EAAQ,KAAK,aAAa;AAC1B,YAAMU,IAAQV,EAAQ,KAAK,uBAAuB;AAClD,aAAKuQ,EAAQ,SAAS3R,GAAoB3V,EAAK,eAAeyX,CAAK,CAAC,CAAC,KAGrEV,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,4BAA4B,GACzCA,EAAQ,KAAK,iBAAiB,GACvBC,KANEoC,EAAI/D,CAAI;AAAA,IAOnB;AACA,WAAKgB,GAA0BhB,CAAI,MACjCrP,IAAO,KAETmR,KACAJ,EAAQ,QAAQ1B,CAAI,GACbA,MAAS,KAAKmwC,IAAaD;AAAA,EACpC;AAYA,WAASC,EAAWnwC,GAAM;AACxB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzC0B,EAAQ,QAAQ1B,CAAI,GACpB8B,KACOouC,KAEFA,EAASlwC,CAAI;AAAA,EACtB;AACF;AAMA,SAASyvC,GAAwB/tC,GAASC,GAAIoC,GAAK;AACjD,QAAMpZ,IAAO,MACPsnB,IAAUtnB,EAAK,OAAO,iBAAiBA,EAAK,OAAO,eAAe;AAExE,MAAI2hB,GACAxK,IAAO,GAEPnR;AACJ,SAAOmH;AAYP,WAASA,EAAMkI,GAAM;AACnB,WAAA0B,EAAQ,MAAM,uBAAuB,EAAE,aAAa,IACpDA,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,MAAM,kCAAkC,GAChDA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kCAAkC,GACxC0uC;AAAA,EACT;AAYA,WAASA,EAAcpwC,GAAM;AAC3B,WAAIA,MAAS,MACX0B,EAAQ,MAAM,6BAA6B,GAC3CA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,6BAA6B,GAC1CA,EAAQ,MAAM,kCAAkC,GAChDA,EAAQ,MAAM,aAAa,EAAE,cAAc,UACpCmK,KAEF9H,EAAI/D,CAAI;AAAA,EACjB;AAeA,WAAS6L,EAAY7L,GAAM;AACzB;AAAA;AAAA,MAEA8B,IAAO;AAAA,MAEP9B,MAAS,MAAM,CAACrP;AAAA;AAAA,MAGhBqP,MAAS,QAAQA,MAAS,MAAMgB,GAA0BhB,CAAI;AAAA;AAC5D,aAAO+D,EAAI/D,CAAI;AAEjB,QAAIA,MAAS,IAAI;AACf,MAAA0B,EAAQ,KAAK,aAAa;AAC1B,YAAMU,IAAQV,EAAQ,KAAK,kCAAkC;AAC7D,aAAA4K,IAAahM,GAAoB3V,EAAK,eAAeyX,CAAK,CAAC,GAC3DV,EAAQ,MAAM,kCAAkC,GAChDA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kCAAkC,GAC/CA,EAAQ,KAAK,4BAA4B,GAClC6K;AAAA,IACT;AACA,WAAKvL,GAA0BhB,CAAI,MACjCrP,IAAO,KAETmR,KACAJ,EAAQ,QAAQ1B,CAAI,GACbA,MAAS,KAAK8L,IAAcD;AAAA,EACrC;AAeA,WAASC,EAAY9L,GAAM;AACzB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzC0B,EAAQ,QAAQ1B,CAAI,GACpB8B,KACO+J,KAEFA,EAAY7L,CAAI;AAAA,EACzB;AAYA,WAASuM,EAAWvM,GAAM;AACxB,WAAIA,MAAS,MACX0B,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kBAAkB,GAC1BuQ,EAAQ,SAAS3F,CAAU,KAC9B2F,EAAQ,KAAK3F,CAAU,GAMlB7K,GAAaC,GAAS2uC,GAAiB,iCAAiC,KAE1EtsC,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAASqwC,EAAgBrwC,GAAM;AAE7B,WAAO2B,EAAG3B,CAAI;AAAA,EAChB;AACF;AAMA,SAAS0vC,GAA+BhuC,GAASC,GAAIoC,GAAK;AAUxD,SAAOrC,EAAQ,MAAMmE,IAAWlE,GAAID,EAAQ,QAAQ6tC,IAAQ5tC,GAAIoC,CAAG,CAAC;AACtE;AAGA,SAAS4rC,GAAyBjuC,GAAS;AACzC,EAAAA,EAAQ,KAAK,uBAAuB;AACtC;AAMA,SAASuS,GAAevS,GAASC,GAAIoC,GAAK;AACxC,QAAMpZ,IAAO;AACb,SAAO8W,GAAaC,GAAS0G,GAAa,+BAA+B,CAAK;AAK9E,WAASA,EAAYpI,GAAM;AACzB,UAAMmH,IAAOxc,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAOwc,KAAQA,EAAK,CAAC,EAAE,SAAS,iCAAiCA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,WAAW,IAAIxF,EAAG3B,CAAI,IAAI+D,EAAI/D,CAAI;AAAA,EAC3I;AACF;ACndO,SAASswC,GAAiB5/C,GAAS;AAExC,MAAI6/C,KADa7/C,KAAW,CAAA,GACN;AACtB,QAAMsZ,IAAY;AAAA,IAChB,MAAM;AAAA,IACN,UAAUwmC;AAAA,IACV,YAAYC;AAAA,EAChB;AACE,SAAIF,KAAW,SACbA,IAAS,KAEJ;AAAA,IACL,MAAM;AAAA,MACH,KAAMvmC;AAAA,IACb;AAAA,IACI,YAAY;AAAA,MACV,MAAM,CAACA,CAAS;AAAA,IACtB;AAAA,IACI,kBAAkB;AAAA,MAChB,MAAM,CAAC,GAAG;AAAA,IAChB;AAAA,EACA;AAOE,WAASymC,EAAwBvsC,GAAQC,GAAS;AAChD,QAAIxP,IAAQ;AAGZ,WAAO,EAAEA,IAAQuP,EAAO;AAEtB,UAAIA,EAAOvP,CAAK,EAAE,CAAC,MAAM,WAAWuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,oCAAoCuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,QAAQ;AACzH,YAAI6P,IAAO7P;AAGX,eAAO6P;AAEL,cAAIN,EAAOM,CAAI,EAAE,CAAC,MAAM,UAAUN,EAAOM,CAAI,EAAE,CAAC,EAAE,SAAS,oCAAoCN,EAAOM,CAAI,EAAE,CAAC,EAAE;AAAA,UAE/GN,EAAOvP,CAAK,EAAE,CAAC,EAAE,IAAI,SAASuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,MAAM,WAAWuP,EAAOM,CAAI,EAAE,CAAC,EAAE,IAAI,SAASN,EAAOM,CAAI,EAAE,CAAC,EAAE,MAAM,QAAQ;AACzH,YAAAN,EAAOvP,CAAK,EAAE,CAAC,EAAE,OAAO,yBACxBuP,EAAOM,CAAI,EAAE,CAAC,EAAE,OAAO;AAGvB,kBAAMsa,IAAgB;AAAA,cACpB,MAAM;AAAA,cACN,OAAO,OAAO,OAAO,CAAA,GAAI5a,EAAOM,CAAI,EAAE,CAAC,EAAE,KAAK;AAAA,cAC9C,KAAK,OAAO,OAAO,CAAA,GAAIN,EAAOvP,CAAK,EAAE,CAAC,EAAE,GAAG;AAAA,YACzD,GAGkB2H,IAAO;AAAA,cACX,MAAM;AAAA,cACN,OAAO,OAAO,OAAO,CAAA,GAAI4H,EAAOM,CAAI,EAAE,CAAC,EAAE,GAAG;AAAA,cAC5C,KAAK,OAAO,OAAO,CAAA,GAAIN,EAAOvP,CAAK,EAAE,CAAC,EAAE,KAAK;AAAA,YAC3D,GAIkBkQ,IAAa,CAAC,CAAC,SAASia,GAAe3a,CAAO,GAAG,CAAC,SAASD,EAAOM,CAAI,EAAE,CAAC,GAAGL,CAAO,GAAG,CAAC,QAAQD,EAAOM,CAAI,EAAE,CAAC,GAAGL,CAAO,GAAG,CAAC,SAAS7H,GAAM6H,CAAO,CAAC,GAClJ+R,IAAa/R,EAAQ,OAAO,WAAW,WAAW;AACxD,YAAI+R,KAEFhX,GAAO2F,GAAYA,EAAW,QAAQ,GAAGZ,GAAWiS,GAAYhS,EAAO,MAAMM,IAAO,GAAG7P,CAAK,GAAGwP,CAAO,CAAC,GAIzGjF,GAAO2F,GAAYA,EAAW,QAAQ,GAAG,CAAC,CAAC,QAAQvI,GAAM6H,CAAO,GAAG,CAAC,SAASD,EAAOvP,CAAK,EAAE,CAAC,GAAGwP,CAAO,GAAG,CAAC,QAAQD,EAAOvP,CAAK,EAAE,CAAC,GAAGwP,CAAO,GAAG,CAAC,QAAQ2a,GAAe3a,CAAO,CAAC,CAAC,GAC/KjF,GAAOgF,GAAQM,IAAO,GAAG7P,IAAQ6P,IAAO,GAAGK,CAAU,GACrDlQ,IAAQ6P,IAAOK,EAAW,SAAS;AACnC;AAAA,UACF;AAAA,MAEJ;AAGF,SADAlQ,IAAQ,IACD,EAAEA,IAAQuP,EAAO;AACtB,MAAIA,EAAOvP,CAAK,EAAE,CAAC,EAAE,SAAS,qCAC5BuP,EAAOvP,CAAK,EAAE,CAAC,EAAE,OAAO;AAG5B,WAAOuP;AAAA,EACT;AAMA,WAASssC,EAAsB9uC,GAASC,GAAIoC,GAAK;AAC/C,UAAM5B,IAAW,KAAK,UAChB+B,IAAS,KAAK;AACpB,QAAIpC,IAAO;AACX,WAAOhK;AAGP,aAASA,EAAMkI,GAAM;AACnB,aAAImC,MAAa,OAAO+B,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,SAAS,oBACrDH,EAAI/D,CAAI,KAEjB0B,EAAQ,MAAM,gCAAgC,GACvCiI,EAAK3J,CAAI;AAAA,IAClB;AAGA,aAAS2J,EAAK3J,GAAM;AAClB,YAAMG,IAAS6D,GAAkB7B,CAAQ;AACzC,UAAInC,MAAS;AAEX,eAAI8B,IAAO,IAAUiC,EAAI/D,CAAI,KAC7B0B,EAAQ,QAAQ1B,CAAI,GACpB8B,KACO6H;AAET,UAAI7H,IAAO,KAAK,CAACyuC,EAAQ,QAAOxsC,EAAI/D,CAAI;AACxC,YAAMoC,IAAQV,EAAQ,KAAK,gCAAgC,GACrDyD,IAAQnB,GAAkBhE,CAAI;AACpC,aAAAoC,EAAM,QAAQ,CAAC+C,KAASA,MAAU,KAAK,EAAQhF,GAC/CiC,EAAM,SAAS,CAACjC,KAAUA,MAAW,KAAK,EAAQgF,GAC3CxD,EAAG3B,CAAI;AAAA,IAChB;AAAA,EACF;AACF;ACpHO,MAAM0wC,GAAQ;AAAA;AAAA;AAAA;AAAA,EAInB,cAAc;AAMZ,SAAK,MAAM,CAAA;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,IAAI/7C,GAAOyK,GAAQsuB,GAAK;AACtB,IAAAijB,GAAkB,MAAMh8C,GAAOyK,GAAQsuB,CAAG;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBA,QAAQxpB,GAAQ;AAMd,QALA,KAAK,IAAI,KAAK,SAAU,GAAGnW,GAAG;AAC5B,aAAO,EAAE,CAAC,IAAIA,EAAE,CAAC;AAAA,IACnB,CAAC,GAGG,KAAK,IAAI,WAAW;AACtB;AAqBF,QAAI4G,IAAQ,KAAK,IAAI;AAErB,UAAMi8C,IAAO,CAAA;AACb,WAAOj8C,IAAQ;AACb,MAAAA,KAAS,GACTi8C,EAAK,KAAK1sC,EAAO,MAAM,KAAK,IAAIvP,CAAK,EAAE,CAAC,IAAI,KAAK,IAAIA,CAAK,EAAE,CAAC,CAAC,GAAG,KAAK,IAAIA,CAAK,EAAE,CAAC,CAAC,GAGnFuP,EAAO,SAAS,KAAK,IAAIvP,CAAK,EAAE,CAAC;AAEnC,IAAAi8C,EAAK,KAAK1sC,EAAO,OAAO,GACxBA,EAAO,SAAS;AAChB,QAAIoG,IAAQsmC,EAAK,IAAG;AACpB,WAAOtmC,KAAO;AACZ,iBAAWrO,KAAWqO;AACpB,QAAApG,EAAO,KAAKjI,CAAO;AAErB,MAAAqO,IAAQsmC,EAAK,IAAG;AAAA,IAClB;AAGA,SAAK,IAAI,SAAS;AAAA,EACpB;AACF;AAWA,SAASD,GAAkBE,GAASC,GAAI1xC,GAAQsuB,GAAK;AACnD,MAAI/4B,IAAQ;AAGZ,MAAI,EAAAyK,MAAW,KAAKsuB,EAAI,WAAW,IAGnC;AAAA,WAAO/4B,IAAQk8C,EAAQ,IAAI,UAAQ;AACjC,UAAIA,EAAQ,IAAIl8C,CAAK,EAAE,CAAC,MAAMm8C,GAAI;AAChC,QAAAD,EAAQ,IAAIl8C,CAAK,EAAE,CAAC,KAAKyK,GAOzByxC,EAAQ,IAAIl8C,CAAK,EAAE,CAAC,EAAE,KAAK,GAAG+4B,CAAG;AAGjC;AAAA,MACF;AACA,MAAA/4B,KAAS;AAAA,IACX;AACA,IAAAk8C,EAAQ,IAAI,KAAK,CAACC,GAAI1xC,GAAQsuB,CAAG,CAAC;AAAA;AACpC;ACzIO,SAASqjB,GAAc7sC,GAAQvP,GAAO;AAC3C,MAAIq8C,IAAiB;AAErB,QAAMzwB,IAAQ,CAAA;AACd,SAAO5rB,IAAQuP,EAAO,UAAQ;AAC5B,UAAMjS,IAAQiS,EAAOvP,CAAK;AAC1B,QAAIq8C;AACF,UAAI/+C,EAAM,CAAC,MAAM;AAGf,QAAIA,EAAM,CAAC,EAAE,SAAS,kBACpBsuB,EAAM,KAAKrc,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,yBAAyB,SAAS,MAAM;AAAA,eAM5E1C,EAAM,CAAC,EAAE,SAAS;AACzB,YAAIiS,EAAOvP,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,wBAAwB;AACxD,gBAAMs8C,IAAa1wB,EAAM,SAAS;AAClC,UAAAA,EAAM0wB,CAAU,IAAI1wB,EAAM0wB,CAAU,MAAM,SAAS,WAAW;AAAA,QAChE;AAAA,iBAGOh/C,EAAM,CAAC,EAAE,SAAS;AACzB;AAAA,UAEG,CAAIA,EAAM,CAAC,MAAM,WAAWA,EAAM,CAAC,EAAE,SAAS,wBACnD++C,IAAiB;AAEnB,IAAAr8C,KAAS;AAAA,EACX;AACA,SAAO4rB;AACT;AC3BO,SAAS2wB,KAAW;AACzB,SAAO;AAAA,IACL,MAAM;AAAA,MACJ,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,UAAUC;AAAA,QACV,YAAYC;AAAA,MACpB;AAAA,IACA;AAAA,EACA;AACA;AAMA,SAASD,GAAczvC,GAASC,GAAIoC,GAAK;AACvC,QAAMpZ,IAAO;AACb,MAAImX,IAAO,GACPuvC,IAAQ,GAERxtC;AACJ,SAAO/L;AAkBP,WAASA,EAAMkI,GAAM;AACnB,QAAIrL,IAAQhK,EAAK,OAAO,SAAS;AACjC,WAAOgK,IAAQ,MAAI;AACjB,YAAM5M,IAAO4C,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE;AACnC,UAAI5M,MAAS;AAAA,MAEbA,MAAS,aAAc,CAAA4M;AAAA,UAAa;AAAA,IACtC;AACA,UAAMwS,IAAOxS,IAAQ,KAAKhK,EAAK,OAAOgK,CAAK,EAAE,CAAC,EAAE,OAAO,MACjD6M,IAAO2F,MAAS,eAAeA,MAAS,aAAamqC,IAAeC;AAG1E,WAAI/vC,MAAS8vC,KAAgB3mD,EAAK,OAAO,KAAKA,EAAK,MAAM,IAAI,IACpDoZ,EAAI/D,CAAI,IAEVwB,EAAKxB,CAAI;AAAA,EAClB;AAcA,WAASuxC,EAAcvxC,GAAM;AAC3B,WAAA0B,EAAQ,MAAM,WAAW,GACzBA,EAAQ,MAAM,UAAU,GACjB8vC,EAAaxxC,CAAI;AAAA,EAC1B;AAcA,WAASwxC,EAAaxxC,GAAM;AAC1B,WAAIA,MAAS,QAcb6D,IAAO,IAEPwtC,KAAS,IACFI,EAAazxC,CAAI;AAAA,EAC1B;AAgBA,WAASyxC,EAAazxC,GAAM;AAC1B,WAAIA,MAAS,OAEJ+D,EAAI/D,CAAI,IAEbe,EAAmBf,CAAI,IAErBqxC,IAAQ,KACVA,IAAQ,GAGR1mD,EAAK,YAAY,IACjB+W,EAAQ,KAAK,UAAU,GACvBA,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,YAAY,GAClBgwC,KAIF3tC,EAAI/D,CAAI,IAEbiB,GAAcjB,CAAI,IAIbyB,GAAaC,GAAS+vC,GAAc,YAAY,EAAEzxC,CAAI,KAE/DqxC,KAAS,GACLxtC,MACFA,IAAO,IAEP/B,KAAQ,IAEN9B,MAAS,OACX0B,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kBAAkB,GAE/BmC,IAAO,IACA4tC,MAIT/vC,EAAQ,MAAM,MAAM,GACbiwC,EAAY3xC,CAAI;AAAA,EACzB;AAcA,WAAS2xC,EAAY3xC,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,OAAOgB,GAA0BhB,CAAI,KACjE0B,EAAQ,KAAK,MAAM,GACZ+vC,EAAazxC,CAAI,MAE1B0B,EAAQ,QAAQ1B,CAAI,GACbA,MAAS,KAAK4xC,IAAgBD;AAAA,EACvC;AAcA,WAASC,EAAc5xC,GAAM;AAC3B,WAAIA,MAAS,MAAMA,MAAS,OAC1B0B,EAAQ,QAAQ1B,CAAI,GACb2xC,KAEFA,EAAY3xC,CAAI;AAAA,EACzB;AAcA,WAAS0xC,EAAmB1xC,GAAM;AAKhC,WAHArV,EAAK,YAAY,IAGbA,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAC3BoZ,EAAI/D,CAAI,KAEjB0B,EAAQ,MAAM,mBAAmB,GAEjCmC,IAAO,IACH5C,GAAcjB,CAAI,IACbyB,GAAaC,GAASmwC,GAAqB,cAAclnD,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAEqV,CAAI,IAE7I6xC,EAAoB7xC,CAAI;AAAA,EACjC;AAgBA,WAAS6xC,EAAoB7xC,GAAM;AACjC,WAAIA,MAAS,MAAMA,MAAS,KACnB8xC,EAAyB9xC,CAAI,IAElCA,MAAS,OACX6D,IAAO,IAEPnC,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kBAAkB,GACxBqwC,KAIFC,EAAiBhyC,CAAI;AAAA,EAC9B;AAaA,WAAS+xC,EAAwB/xC,GAAM;AACrC,WAAIiB,GAAcjB,CAAI,IACbyB,GAAaC,GAASowC,GAA0B,YAAY,EAAE9xC,CAAI,IAEpE8xC,EAAyB9xC,CAAI;AAAA,EACtC;AAaA,WAAS8xC,EAAyB9xC,GAAM;AAEtC,WAAIA,MAAS,MACXqxC,KAAS,GACTxtC,IAAO,IACPnC,EAAQ,MAAM,sBAAsB,GACpCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,sBAAsB,GAC5BuwC,KAILjyC,MAAS,MACXqxC,KAAS,GAEFY,EAAgCjyC,CAAI,KAEzCA,MAAS,QAAQe,EAAmBf,CAAI,IACnCkyC,EAAuBlyC,CAAI,IAE7BgyC,EAAiBhyC,CAAI;AAAA,EAC9B;AAaA,WAASiyC,EAAgCjyC,GAAM;AAC7C,WAAIA,MAAS,MACX0B,EAAQ,MAAM,sBAAsB,GAC7BywC,EAAoBnyC,CAAI,KAI1BgyC,EAAiBhyC,CAAI;AAAA,EAC9B;AAaA,WAASmyC,EAAoBnyC,GAAM;AACjC,WAAIA,MAAS,MACX0B,EAAQ,QAAQ1B,CAAI,GACbmyC,KAILnyC,MAAS,MACX6D,IAAO,IACPnC,EAAQ,KAAK,sBAAsB,GACnCA,EAAQ,MAAM,sBAAsB,GACpCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,sBAAsB,GAC5B0wC,MAET1wC,EAAQ,KAAK,sBAAsB,GAC5B0wC,EAAiCpyC,CAAI;AAAA,EAC9C;AAaA,WAASoyC,EAAiCpyC,GAAM;AAC9C,WAAIiB,GAAcjB,CAAI,IACbyB,GAAaC,GAASwwC,GAAwB,YAAY,EAAElyC,CAAI,IAElEkyC,EAAuBlyC,CAAI;AAAA,EACpC;AAaA,WAASkyC,EAAuBlyC,GAAM;AACpC,WAAIA,MAAS,MACJ6xC,EAAoB7xC,CAAI,IAE7BA,MAAS,QAAQe,EAAmBf,CAAI,IAKtC,CAAC6D,KAAQ/B,MAASuvC,IACbW,EAAiBhyC,CAAI,KAI9B0B,EAAQ,KAAK,mBAAmB,GAChCA,EAAQ,KAAK,WAAW,GAGjBC,EAAG3B,CAAI,KAETgyC,EAAiBhyC,CAAI;AAAA,EAC9B;AAaA,WAASgyC,EAAiBhyC,GAAM;AAE9B,WAAO+D,EAAI/D,CAAI;AAAA,EACjB;AAcA,WAASsxC,EAAatxC,GAAM;AAI1B,WAAA0B,EAAQ,MAAM,UAAU,GACjB2wC,EAAaryC,CAAI;AAAA,EAC1B;AAgBA,WAASqyC,EAAaryC,GAAM;AAC1B,WAAIA,MAAS,OACX0B,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,kBAAkB,GACxB2wC,KAELryC,MAAS,QAAQe,EAAmBf,CAAI,KAC1C0B,EAAQ,KAAK,UAAU,GAChBC,EAAG3B,CAAI,KAEZiB,GAAcjB,CAAI,IACbyB,GAAaC,GAAS2wC,GAAc,YAAY,EAAEryC,CAAI,KAI/D0B,EAAQ,MAAM,MAAM,GACb4wC,EAAYtyC,CAAI;AAAA,EACzB;AAcA,WAASsyC,EAAYtyC,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,OAAOgB,GAA0BhB,CAAI,KACjE0B,EAAQ,KAAK,MAAM,GACZ2wC,EAAaryC,CAAI,MAE1B0B,EAAQ,QAAQ1B,CAAI,GACbA,MAAS,KAAKuyC,IAAgBD;AAAA,EACvC;AAcA,WAASC,EAAcvyC,GAAM;AAC3B,WAAIA,MAAS,MAAMA,MAAS,OAC1B0B,EAAQ,QAAQ1B,CAAI,GACbsyC,KAEFA,EAAYtyC,CAAI;AAAA,EACzB;AACF;AAIA,SAASoxC,GAAaltC,GAAQC,GAAS;AACrC,MAAIxP,IAAQ,IACR69C,IAA0B,IAE1BC,IAAU,GAEVC,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,GAEtBhyB,IAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAClBiyB,IAAgC,IAChCC,IAAe,GAEfC,GAEAC,GAEAC;AACJ,QAAMz6B,IAAM,IAAIo4B,GAAO;AACvB,SAAO,EAAE/7C,IAAQuP,EAAO,UAAQ;AAC9B,UAAMjS,IAAQiS,EAAOvP,CAAK,GACpByN,IAAQnQ,EAAM,CAAC;AACrB,IAAIA,EAAM,CAAC,MAAM,UAEXmQ,EAAM,SAAS,eACjBuwC,IAAgC,IAG5BC,MAAiB,MACnBI,GAAc16B,GAAKnU,GAASyuC,GAAcC,GAAcC,CAAW,GACnEA,IAAc,QACdF,IAAe,IAIjBC,IAAe;AAAA,MACb,MAAM;AAAA,MACN,OAAO,OAAO,OAAO,CAAA,GAAIzwC,EAAM,KAAK;AAAA;AAAA,MAEpC,KAAK,OAAO,OAAO,CAAA,GAAIA,EAAM,GAAG;AAAA,IAC1C,GACQkW,EAAI,IAAI3jB,GAAO,GAAG,CAAC,CAAC,SAASk+C,GAAc1uC,CAAO,CAAC,CAAC,KAC3C/B,EAAM,SAAS,cAAcA,EAAM,SAAS,uBACrDowC,IAA0B,IAC1BO,IAAc,QACdL,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,GACtBhyB,IAAO,CAAC,GAAG/rB,IAAQ,GAAG,GAAG,CAAC,GAGtBg+C,MACFA,IAAgC,IAChCG,IAAc;AAAA,MACZ,MAAM;AAAA,MACN,OAAO,OAAO,OAAO,CAAA,GAAI1wC,EAAM,KAAK;AAAA;AAAA,MAEpC,KAAK,OAAO,OAAO,CAAA,GAAIA,EAAM,GAAG;AAAA,IAC5C,GACUkW,EAAI,IAAI3jB,GAAO,GAAG,CAAC,CAAC,SAASm+C,GAAa3uC,CAAO,CAAC,CAAC,IAErDsuC,IAAUrwC,EAAM,SAAS,sBAAsB,IAAI0wC,IAAc,IAAI,KAG9DL,MAAYrwC,EAAM,SAAS,UAAUA,EAAM,SAAS,0BAA0BA,EAAM,SAAS,2BACpGowC,IAA0B,IAGtB9xB,EAAK,CAAC,MAAM,MACVgyB,EAAS,CAAC,MAAM,MAClBhyB,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChBqyB,IAAcE,GAAU36B,GAAKnU,GAASuuC,GAAUD,GAAS,QAAWM,CAAW,GAC/EL,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,IAExBhyB,EAAK,CAAC,IAAI/rB,MAEHyN,EAAM,SAAS,uBACpBowC,IACFA,IAA0B,MAEtBE,EAAS,CAAC,MAAM,MAClBhyB,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChBqyB,IAAcE,GAAU36B,GAAKnU,GAASuuC,GAAUD,GAAS,QAAWM,CAAW,IAEjFL,IAAWhyB,GACXA,IAAO,CAACgyB,EAAS,CAAC,GAAG/9C,GAAO,GAAG,CAAC,MAK7ByN,EAAM,SAAS,eACtBuwC,IAAgC,IAChCC,IAAej+C,KACNyN,EAAM,SAAS,cAAcA,EAAM,SAAS,uBACrDwwC,IAAej+C,GACX+9C,EAAS,CAAC,MAAM,KAClBhyB,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChBqyB,IAAcE,GAAU36B,GAAKnU,GAASuuC,GAAUD,GAAS99C,GAAOo+C,CAAW,KAClEryB,EAAK,CAAC,MAAM,MACrBqyB,IAAcE,GAAU36B,GAAKnU,GAASuc,GAAM+xB,GAAS99C,GAAOo+C,CAAW,IAEzEN,IAAU,KACDA,MAAYrwC,EAAM,SAAS,UAAUA,EAAM,SAAS,0BAA0BA,EAAM,SAAS,4BACtGse,EAAK,CAAC,IAAI/rB;AAAA,EAEd;AAUA,OATIi+C,MAAiB,KACnBI,GAAc16B,GAAKnU,GAASyuC,GAAcC,GAAcC,CAAW,GAErEx6B,EAAI,QAAQnU,EAAQ,MAAM,GAK1BxP,IAAQ,IACD,EAAEA,IAAQwP,EAAQ,OAAO,UAAQ;AACtC,UAAMlS,IAAQkS,EAAQ,OAAOxP,CAAK;AAClC,IAAI1C,EAAM,CAAC,MAAM,WAAWA,EAAM,CAAC,EAAE,SAAS,YAC5CA,EAAM,CAAC,EAAE,SAAS8+C,GAAc5sC,EAAQ,QAAQxP,CAAK;AAAA,EAEzD;AACA,SAAOuP;AACT;AAcA,SAAS+uC,GAAU36B,GAAKnU,GAAS+uC,GAAOT,GAASU,GAAQC,GAAc;AAGrE,QAAMC,IAAYZ,MAAY,IAAI,gBAAgBA,MAAY,IAAI,mBAAmB,aAG/Ea,IAAY;AASlB,EAAIJ,EAAM,CAAC,MAAM,MACfE,EAAa,MAAM,OAAO,OAAO,CAAA,GAAIG,GAASpvC,EAAQ,QAAQ+uC,EAAM,CAAC,CAAC,CAAC,GACvE56B,EAAI,IAAI46B,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQE,GAAcjvC,CAAO,CAAC,CAAC;AAUxD,QAAM4S,IAAMw8B,GAASpvC,EAAQ,QAAQ+uC,EAAM,CAAC,CAAC;AAkB7C,MAjBAE,IAAe;AAAA,IACb,MAAMC;AAAA,IACN,OAAO,OAAO,OAAO,CAAA,GAAIt8B,CAAG;AAAA;AAAA,IAE5B,KAAK,OAAO,OAAO,CAAA,GAAIA,CAAG;AAAA,EAC9B,GACEuB,EAAI,IAAI46B,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,SAASE,GAAcjvC,CAAO,CAAC,CAAC,GAWnD+uC,EAAM,CAAC,MAAM,GAAG;AAClB,UAAMM,IAAeD,GAASpvC,EAAQ,QAAQ+uC,EAAM,CAAC,CAAC,GAChDO,IAAaF,GAASpvC,EAAQ,QAAQ+uC,EAAM,CAAC,CAAC,GAE9CQ,IAAa;AAAA,MACjB,MAAMJ;AAAA,MACN,OAAO,OAAO,OAAO,CAAA,GAAIE,CAAY;AAAA,MACrC,KAAK,OAAO,OAAO,CAAA,GAAIC,CAAU;AAAA,IACvC;AAEI,QADAn7B,EAAI,IAAI46B,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,SAASQ,GAAYvvC,CAAO,CAAC,CAAC,GACjDsuC,MAAY,GAAG;AAEjB,YAAM36C,IAAQqM,EAAQ,OAAO+uC,EAAM,CAAC,CAAC,GAC/Bt4C,IAAMuJ,EAAQ,OAAO+uC,EAAM,CAAC,CAAC;AAMnC,UALAp7C,EAAM,CAAC,EAAE,MAAM,OAAO,OAAO,CAAA,GAAI8C,EAAI,CAAC,EAAE,GAAG,GAC3C9C,EAAM,CAAC,EAAE,OAAO,aAChBA,EAAM,CAAC,EAAE,cAAc,QAGnBo7C,EAAM,CAAC,IAAIA,EAAM,CAAC,IAAI,GAAG;AAC3B,cAAMplD,IAAIolD,EAAM,CAAC,IAAI,GACfnlD,IAAImlD,EAAM,CAAC,IAAIA,EAAM,CAAC,IAAI;AAChC,QAAA56B,EAAI,IAAIxqB,GAAGC,GAAG,CAAA,CAAE;AAAA,MAClB;AAAA,IACF;AACA,IAAAuqB,EAAI,IAAI46B,EAAM,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQQ,GAAYvvC,CAAO,CAAC,CAAC;AAAA,EAC1D;AASA,SAAIgvC,MAAW,WACbC,EAAa,MAAM,OAAO,OAAO,CAAA,GAAIG,GAASpvC,EAAQ,QAAQgvC,CAAM,CAAC,GACrE76B,EAAI,IAAI66B,GAAQ,GAAG,CAAC,CAAC,QAAQC,GAAcjvC,CAAO,CAAC,CAAC,GACpDivC,IAAe,SAEVA;AACT;AAYA,SAASJ,GAAc16B,GAAKnU,GAASxP,GAAOsrB,GAAO0zB,GAAW;AAE5D,QAAMC,IAAQ,CAAA,GACRC,IAAUN,GAASpvC,EAAQ,QAAQxP,CAAK;AAC9C,EAAIg/C,MACFA,EAAU,MAAM,OAAO,OAAO,CAAA,GAAIE,CAAO,GACzCD,EAAM,KAAK,CAAC,QAAQD,GAAWxvC,CAAO,CAAC,IAEzC8b,EAAM,MAAM,OAAO,OAAO,CAAA,GAAI4zB,CAAO,GACrCD,EAAM,KAAK,CAAC,QAAQ3zB,GAAO9b,CAAO,CAAC,GACnCmU,EAAI,IAAI3jB,IAAQ,GAAG,GAAGi/C,CAAK;AAC7B;AAOA,SAASL,GAASrvC,GAAQvP,GAAO;AAC/B,QAAM1C,IAAQiS,EAAOvP,CAAK,GACpBm/C,IAAO7hD,EAAM,CAAC,MAAM,UAAU,UAAU;AAC9C,SAAOA,EAAM,CAAC,EAAE6hD,CAAI;AACtB;AC5yBA,MAAMC,KAAgB;AAAA,EACpB,MAAM;AAAA,EACN,UAAUC;AACZ;AAUO,SAASC,KAAkB;AAChC,SAAO;AAAA,IACL,MAAM;AAAA,MACH,IAAKF;AAAA,IACZ;AAAA,EACA;AACA;AAMA,SAASC,GAAsBtyC,GAASC,GAAIoC,GAAK;AAC/C,QAAMpZ,IAAO;AACb,SAAO6Z;AAYP,WAASA,EAAKxE,GAAM;AAClB;AAAA;AAAA,MAEArV,EAAK,aAAa;AAAA;AAAA,MAGlB,CAACA,EAAK,qCACGoZ,EAAI/D,CAAI,KAEjB0B,EAAQ,MAAM,eAAe,GAC7BA,EAAQ,MAAM,qBAAqB,GACnCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,qBAAqB,GAC3BwD;AAAA;AAAA,EACT;AAYA,WAASA,EAAOlF,GAAM;AAIpB,WAAIgB,GAA0BhB,CAAI,KAChC0B,EAAQ,MAAM,6BAA6B,GAC3CA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,6BAA6B,GACnCxP,KAEL8N,MAAS,MAAMA,MAAS,OAC1B0B,EAAQ,MAAM,2BAA2B,GACzCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,2BAA2B,GACjCxP,KAEF6R,EAAI/D,CAAI;AAAA,EACjB;AAYA,WAAS9N,EAAM8N,GAAM;AACnB,WAAIA,MAAS,MACX0B,EAAQ,MAAM,qBAAqB,GACnCA,EAAQ,QAAQ1B,CAAI,GACpB0B,EAAQ,KAAK,qBAAqB,GAClCA,EAAQ,KAAK,eAAe,GACrByD,KAEFpB,EAAI/D,CAAI;AAAA,EACjB;AAKA,WAASmF,EAAMnF,GAAM;AAEnB,WAAIe,EAAmBf,CAAI,IAClB2B,EAAG3B,CAAI,IAKZiB,GAAcjB,CAAI,IACb0B,EAAQ,MAAM;AAAA,MACnB,UAAUwyC;AAAA,IAClB,GAASvyC,GAAIoC,CAAG,EAAE/D,CAAI,IAIX+D,EAAI/D,CAAI;AAAA,EACjB;AACF;AAMA,SAASk0C,GAAkBxyC,GAASC,GAAIoC,GAAK;AAC3C,SAAOtC,GAAaC,GAASyD,GAAO,YAAY;AAYhD,WAASA,EAAMnF,GAAM;AAKnB,WAAOA,MAAS,OAAO+D,EAAI/D,CAAI,IAAI2B,EAAG3B,CAAI;AAAA,EAC5C;AACF;ACvHO,SAASm0C,GAAIzjD,GAAS;AAC3B,SAAO+O,GAAkB;AAAA,IACvBmuC,GAAkB;AAAA,IAClB4B,GAAW;AAAA,IACXc,GAAiB5/C,CAAO;AAAA,IACxBwgD,GAAQ;AAAA,IACR+C,GAAe;AAAA,EACnB,CAAG;AACH;AClCA,MAAMlhD,KAAe,CAAA;AAWN,SAASqhD,GAAU1jD,GAAS;AAGzC,QAAM/F;AAAA;AAAA,IAAuC;AAAA,KACvCiI,IAAWlC,KAAWqC,IACtBpC,IAAOhG,EAAK,KAAI,GAEhB0pD,IACJ1jD,EAAK,wBAAwBA,EAAK,sBAAsB,CAAA,IACpD2jD,IACJ3jD,EAAK,2BAA2BA,EAAK,yBAAyB,CAAA,IAC1D4jD,IACJ5jD,EAAK,yBAAyBA,EAAK,uBAAuB,CAAA;AAE5D,EAAA0jD,EAAoB,KAAKF,GAAIvhD,CAAQ,CAAC,GACtC0hD,EAAuB,KAAK5H,GAAe,CAAE,GAC7C6H,EAAqB,KAAK5H,GAAc/5C,CAAQ,CAAC;AACnD;AC+CO,MAAM4hD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeT,SAAUp5C,GAAQzG,GAAO6R,GAAM;AAC7B,UAAM4e,IAAKhB,GAAQ5d,CAAI;AAEvB,QAAI,CAACpL,KAAU,CAACA,EAAO,QAAQ,CAACA,EAAO;AACrC,YAAM,IAAI,MAAM,sBAAsB;AAGxC,QAAI,OAAOzG,KAAU;AACnB,UAAIA,IAAQ,KAAKA,MAAU,OAAO;AAChC,cAAM,IAAI,MAAM,0CAA0C;AAAA,eAG5DA,IAAQyG,EAAO,SAAS,QAAQzG,CAAK,GAEjCA,IAAQ;AACV,YAAM,IAAI,MAAM,8BAA8B;AAIlD,WAAO,EAAEA,IAAQyG,EAAO,SAAS;AAC/B,UAAIgqB,EAAGhqB,EAAO,SAASzG,CAAK,GAAGA,GAAOyG,CAAM;AAC1C,eAAOA,EAAO,SAASzG,CAAK;AAAA,EAKlC;AAAA,GCQS8/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeT,SAAUjuC,GAAM;AACd,QAAIA,KAAS;AACX,aAAOvK;AAGT,QAAI,OAAOuK,KAAS;AAClB,aAAOkuC,GAAeluC,CAAI;AAI5B,QAAI,OAAOA,KAAS;AAClB,aAAO8d,GAAW9d,CAAI;AAGxB,QAAI,OAAOA,KAAS;AAClB,aAAO6d,GAAY7d,CAAI;AAGzB,UAAM,IAAI,MAAM,+CAA+C;AAAA,EACjE;AAAA;AASJ,SAAS8d,GAAWG,GAAO;AAEzB,QAAMlwB,IAAS,CAAA;AACf,MAAII,IAAQ;AAEZ,SAAO,EAAEA,IAAQ8vB,EAAM;AACrB,IAAAlwB,EAAOI,CAAK,IAAI8/C,GAAehwB,EAAM9vB,CAAK,CAAC;AAG7C,SAAO0vB,GAAYjB,CAAG;AAMtB,WAASA,KAAO7jB,GAAY;AAC1B,QAAI5K,IAAQ;AAEZ,WAAO,EAAEA,IAAQJ,EAAO;AACtB,UAAIA,EAAOI,CAAK,EAAE,MAAM,MAAM4K,CAAU,EAAG,QAAO;AAGpD,WAAO;AAAA,EACT;AACF;AAQA,SAASm1C,GAAe7/C,GAAO;AAC7B,SAAOwvB,GAAYlW,CAAO;AAM1B,WAASA,EAAQlS,GAAS;AACxB,WAAOA,EAAQ,YAAYpH;AAAA,EAC7B;AACF;AAQA,SAASwvB,GAAYO,GAAc;AACjC,SAAO/vB;AAMP,WAASA,EAAMzL,GAAOuL,GAAOyG,GAAQ;AACnC,WAAO,GACLu5C,GAAmBvrD,CAAK,KACtBw7B,EAAa;AAAA,MACX;AAAA,MACAx7B;AAAA,MACA,OAAOuL,KAAU,WAAWA,IAAQ;AAAA,MACpCyG,KAAU;AAAA,IACpB;AAAA,EAEE;AACF;AAQA,SAASa,GAAQA,GAAS;AACxB,SAAO,GACLA,KACE,OAAOA,KAAY,YACnB,UAAUA,KACVA,EAAQ,SAAS,aACjB,aAAaA,KACb,OAAOA,EAAQ,WAAY;AAEjC;AAMA,SAAS04C,GAAmBvrD,GAAO;AACjC,SACEA,MAAU,QACV,OAAOA,KAAU,YACjB,UAAUA,KACV,aAAaA;AAEjB;ACnOA,MAAMwrD,KAAkB,OAClBC,KAAoB,WAEpBC,KAAKL,GAAe,IAAI,GACxB/zB,KAAO+zB,GAAeM,EAAM,GAC5B1mD,KAAIomD,GAAe,GAAG,GACtB/M,KAAM+M,GAAe,IAAI,GAIzBO,KAAcP,GAAe;AAAA;AAAA,EAEjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEAQ;AAAA;AAAA,EAEAC;AACF,CAAC,GAGKC,KAAiBV,GAAe;AAAA,EACpmCM,SAASW,GAAOz5C,GAAMjL,GAAS;AACpC,QAAM2kD,IAAW3kD,KAAW,CAAA,GACtBxF,IAAW,cAAcyQ,IAAOA,EAAK,WAAW,CAAA,GAChD25C,IAAQH,GAAex5C,CAAI,GAC3B1I,IAAasiD,GAAgB55C,GAAM;AAAA,IACvC,YAAY05C,EAAS,cAAc;AAAA,EAGrC,CAAC,GAGKz1B,IAAU,CAAA;AAUhB,GAAIjkB,EAAK,SAAS,UAAUA,EAAK,SAAS,cACxCikB,EAAQ;AAAA,IACN,GAAG41B,GAAY75C,GAAM;AAAA,MAEnB,aAAa;AAAA,MACb,YAAY;AAAA,IACpB,CAAO;AAAA,EACP;AAcE,MAAIhH,IAAQ;AAGZ,SAAO,EAAEA,IAAQzJ,EAAS;AAMxB,IAAA00B,EAAQ;AAAA,MACN,GAAG61B;AAAA,QACDvqD,EAASyJ,CAAK;AAAA;AAAA,QAEdgH;AAAA,QACA;AAAA,UACE,YAAA1I;AAAA,UACA,aAAa0B,IAAQ,SAAY2gD;AAAA,UACjC,YACE3gD,IAAQzJ,EAAS,SAAS,IAAI4pD,GAAG5pD,EAASyJ,IAAQ,CAAC,CAAC,IAAI2gD;AAAA,QACpE;AAAA,MACA;AAAA,IACA;AAWE,QAAM/oD,IAAS,CAAA;AAEf,MAAImR;AAIJ,OAFA/I,IAAQ,IAED,EAAEA,IAAQirB,EAAQ,UAAQ;AAC/B,UAAMx2B,IAAQw2B,EAAQjrB,CAAK;AAE3B,IAAI,OAAOvL,KAAU,WACfsU,MAAU,UAAatU,IAAQsU,MAAOA,IAAQtU,KACzCA,MACLsU,MAAU,UAAaA,IAAQ,MACjCnR,EAAO,KAAK;AAAA,EAAK,OAAOmR,CAAK,KAAK,GAAG,GAGvCA,IAAQ,IACRnR,EAAO,KAAKnD,CAAK;AAAA,EAErB;AAGA,SAAOmD,EAAO,KAAK,EAAE;AACvB;AAUA,SAASkpD,GAAuBjqD,GAAM4P,GAAQpG,GAAM;AAClD,SAAIxJ,EAAK,SAAS,YACTkqD,GAAelqD,GAAM4P,GAAQpG,CAAI,IAGtCxJ,EAAK,SAAS,SACTwJ,EAAK,eAAe,WACvBwgD,GAAYhqD,GAAMwJ,CAAI,IACtB2gD,GAAenqD,CAAI,IAGlB,CAAA;AACT;AAYA,SAASkqD,GAAelqD,GAAM4P,GAAQpG,GAAM;AAE1C,QAAM/B,IAAasiD,GAAgB/pD,GAAMwJ,CAAI,GACvC9J,IAAWM,EAAK,YAAY,CAAA;AAClC,MAAImJ,IAAQ,IAER0K,IAAQ,CAAA;AAIZ,MAAI21C,GAAYxpD,CAAI;AAClB,WAAO6T;AAIT,MAAIlF,GAEAolB;AAuDJ,OAtCIu1B,GAAGtpD,CAAI,KAaTk8C,GAAIl8C,CAAI;AAAA,EAERgpD,GAAUp5C,GAAQ5P,GAAMk8C,EAAG,IAd3BnoB,IAAS;AAAA,IAqBFlxB,GAAE7C,CAAI,KACb2O,IAAS,GACTolB,IAAS,KAMF41B,GAAe3pD,CAAI,MAC1B2O,IAAS,GACTolB,IAAS,IAMJ,EAAE5qB,IAAQzJ,EAAS;AACxB,IAAAmU,IAAQA,EAAM;AAAA,MACZo2C,GAAuBvqD,EAASyJ,CAAK,GAAGnJ,GAAM;AAAA,QAC5C,YAAAyH;AAAA,QACA,aAAa0B,IAAQ,SAAYwF;AAAA,QACjC,YACExF,IAAQzJ,EAAS,SAAS,IAAI4pD,GAAG5pD,EAASyJ,IAAQ,CAAC,CAAC,IAAI4qB;AAAA,MAClE,CAAO;AAAA,IACP;AASE,SACEmB,GAAKl1B,CAAI;AAAA,EAETgpD,GAAUp5C,GAAQ5P,GAAMk1B,EAAI,KAE5BrhB,EAAM,KAAK,GAAI,GAIblF,KAAQkF,EAAM,QAAQlF,CAAM,GAC5BolB,KAAQlgB,EAAM,KAAKkgB,CAAM,GAEtBlgB;AACT;AA0BA,SAASm2C,GAAYhqD,GAAMwJ,GAAM;AAC/B,QAAM5L,IAAQ,OAAOoC,EAAK,KAAK,GAEzBoM,IAAQ,CAAA,GAERrL,IAAS,CAAA;AACf,MAAIuL,IAAQ;AAEZ,SAAOA,KAAS1O,EAAM,UAAQ;AAC5B,IAAAwrD,GAAgB,YAAY98C;AAE5B,UAAMG,IAAQ28C,GAAgB,KAAKxrD,CAAK,GAClCwR,IAAM3C,KAAS,WAAWA,IAAQA,EAAM,QAAQ7O,EAAM;AAE5D,IAAAwO,EAAM;AAAA;AAAA;AAAA,MAGJg+C;AAAA;AAAA;AAAA;AAAA,QAIExsD,EACG,MAAM0O,GAAO8C,CAAG,EAChB,QAAQ,mDAAmD,EAAE;AAAA,QAChE9C,MAAU,IAAI9C,EAAK,cAAc;AAAA,QACjC4F,MAAQxR,EAAM,SAAS4L,EAAK,aAAa;AAAA,MACjD;AAAA,IACA,GAEI8C,IAAQ8C,IAAM;AAAA,EAChB;AAOA,MAAIjG,IAAQ,IAERi1B;AAEJ,SAAO,EAAEj1B,IAAQiD,EAAM;AAIrB,IACEA,EAAMjD,CAAK,EAAE,WAAWiD,EAAMjD,CAAK,EAAE,SAAS,CAAC,MAAM,QACpDA,IAAQiD,EAAM,SAAS,KACtBA,EAAMjD,IAAQ,CAAC,EAAE,WAAW,CAAC,MAAM,QAErCpI,EAAO,KAAKqL,EAAMjD,CAAK,CAAC,GACxBi1B,IAAO,UAmBAhyB,EAAMjD,CAAK,KACd,OAAOi1B,KAAS,YAAUr9B,EAAO,KAAKq9B,CAAI,GAC9Cr9B,EAAO,KAAKqL,EAAMjD,CAAK,CAAC,GACxBi1B,IAAO,MACEj1B,MAAU,KAAKA,MAAUiD,EAAM,SAAS,MAIjDrL,EAAO,KAAK,CAAC;AAIjB,SAAOA;AACT;AAUA,SAASopD,GAAenqD,GAAM;AAC5B,SAAO,CAAC,OAAOA,EAAK,KAAK,CAAC;AAC5B;AAmBA,SAASoqD,GAA6BxsD,GAAOysD,GAAaC,GAAY;AAEpE,QAAMvpD,IAAS,CAAA;AACf,MAAIuL,IAAQ,GAER8C;AAEJ,SAAO9C,IAAQ1O,EAAM,UAAQ;AAC3B,IAAAyrD,GAAkB,YAAY/8C;AAC9B,UAAMG,IAAQ48C,GAAkB,KAAKzrD,CAAK;AAC1C,IAAAwR,IAAM3C,IAAQA,EAAM,QAAQ7O,EAAM,QAI9B,CAAC0O,KAAS,CAAC8C,KAAO3C,KAAS,CAAC49C,KAC9BtpD,EAAO,KAAK,EAAE,GAGZuL,MAAU8C,KACZrO,EAAO,KAAKnD,EAAM,MAAM0O,GAAO8C,CAAG,CAAC,GAGrC9C,IAAQG,IAAQ2C,IAAM3C,EAAM,CAAC,EAAE,SAAS2C;AAAA,EAC1C;AAKA,SAAI9C,MAAU8C,KAAO,CAACk7C,KACpBvpD,EAAO,KAAK,EAAE,GAGTA,EAAO,KAAK,GAAG;AACxB;AAcA,SAASgpD,GAAgB/pD,GAAMwJ,GAAM;AACnC,MAAIxJ,EAAK,SAAS,WAAW;AAC3B,UAAMsJ,IAAatJ,EAAK,cAAc,CAAA;AACtC,YAAQA,EAAK,SAAO;AAAA,MAClB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MAGT,KAAK;AACH,eAAO;AAAA,MAGT,KAAK;AACH,eAAOsJ,EAAW,OAAO,aAAa;AAAA,MAGxC,KAAK;AAAA,MACL,KAAK;AACH,eAAOA,EAAW,SAAS,WAAWE,EAAK;AAAA,MAG7C,KAAK;AACH,eAAO;AAAA,IAIf;AAAA,EACE;AAEA,SAAOA,EAAK;AACd;AAOA,SAASigD,GAAOzpD,GAAM;AACpB,SAAO,GAASA,EAAK,cAAc,CAAA,GAAI;AACzC;AAOA,SAASupD,GAAOvpD,GAAM;AACpB,SAAOA,EAAK,YAAY,QAAQA,EAAK,YAAY;AACnD;AAKA,SAAS0pD,GAAa1pD,GAAM;AAC1B,SAAOA,EAAK,YAAY,YAAY,EAAEA,EAAK,cAAc,IAAI;AAC/D;ACjnBA,SAASuqD,GAAUC,GAAM;AACvB,QAAM50C,IAAQ40C,EAAK,OAIbC,IAAsBD,EAAK,QAAQ,MAAM,KAAK,EAAE,UAAU,CAAE,EAAE,OAAO,OAAM,CAAE,EAAE,CAAE,GACjFE,IAAmB,sBACnBC,IAAe,mBAEfC,IAAmB,gBACrBF,IAAmB,MACnB90C,EAAM,SAAS+0C,CAAY,IAC3B,kBAAkB/0C,EAAM,SAJC,UAI4B,IACvD,KAEIi1C,IAAsB;AAAA,IAC1B,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GAKQC,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU,CAAEN,EAAK,gBAAgB;AAAA,MACzC;AAAA,MACM;AAAA,QACE,OAAO,iBAXa,yDAWyB;AAAA,QAC7C,KAAK;AAAA,QACL,SAAS;AAAA,MACjB;AAAA,MACMA,EAAK,kBAAkB;AAAA,QACrB,OAAO;AAAA,QACP,KAAK;AAAA,MACb,CAAO;AAAA,IACP;AAAA,EACA,GAEQO,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER;AAAA,QAAE,OACA;AAAA,MAkBR;AAAA;AAAA,MAEM;AAAA,QAAE,OACA;AAAA;AAAA;AAAA,MAcR;AAAA,IACA;AAAA,IACI,WAAW;AAAA,EACf,GAEQC,IAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,EAAE,SACR,yFACuC;AAAA,IAC3C,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACMR,EAAK,QAAQM,GAAS,EAAE,WAAW,SAAQ,CAAE;AAAA,MAC7C;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,MACML;AAAA,MACAD,EAAK;AAAA,IACX;AAAA,EACA,GAEQS,IAAa;AAAA,IACjB,WAAW;AAAA,IACX,OAAOr1C,EAAM,SAAS+0C,CAAY,IAAIH,EAAK;AAAA,IAC3C,WAAW;AAAA,EACf,GAEQU,IAAiBt1C,EAAM,SAAS+0C,CAAY,IAAIH,EAAK,WAAW,WAGhEW,IAAoB;AAAA,IACxiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQC,IAAa;AAAA,IACjiB;AAAA,IACraQC,IAAe;AAAA,IACnB,MAAMH;AAAA,IACN,SAASD;AAAA,IACT,SAde;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IASI,UANe,CAAE,SAAS;AAAA,IAO1B,aAAaE;AAAA,EACjB,GAEQG,IAAoB;AAAA,IACxB,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER,OAAOF;AAAA,IAAc;AAAA,IACvB,OAAO11C,EAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA40C,EAAK;AAAA,MACL50C,EAAM,UAAU,kBAAkB;AAAA,IAAC;AAAA,EACzC,GAEQ61C,IAAsB;AAAA,IAC1BD;AAAA,IACAR;AAAA,IACAH;AAAA,IACAJ;AAAA,IACAD,EAAK;AAAA,IACLO;AAAA,IACAD;AAAA,EACJ,GAEQY,IAAqB;AAAA;AAAA;AAAA;AAAA,IAIzB,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,eAAe;AAAA,QACf,KAAK;AAAA,MACb;AAAA,IACA;AAAA,IACI,UAAUH;AAAA,IACV,UAAUE,EAAoB,OAAO;AAAA,MACnC;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAUF;AAAA,QACV,UAAUE,EAAoB,OAAO,CAAE,MAAM,CAAE;AAAA,QAC/C,WAAW;AAAA,MACnB;AAAA,IACA,CAAK;AAAA,IACD,WAAW;AAAA,EACf,GAEQE,IAAuB;AAAA,IAC3B,WAAW;AAAA,IACX,OAAO,MAAMf,IAAmB,iBAAiBM;AAAA,IACjD,aAAa;AAAA,IACb,KAAK;AAAA,IACL,YAAY;AAAA,IACZ,UAAUK;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MACR;AAAA;AAAA,QACE,OAAOb;AAAA,QACP,UAAUa;AAAA,QACV,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAOL;AAAA,QACP,aAAa;AAAA,QACb,UAAU,CAAED,CAAU;AAAA,QACtB,WAAW;AAAA,MACnB;AAAA;AAAA;AAAA,MAGM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,gBAAgB;AAAA,QAChB,UAAU;AAAA,UACRH;AAAA,UACAC;AAAA,QACV;AAAA,MACA;AAAA;AAAA;AAAA,MAGM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAUQ;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,UACRd;AAAA,UACAD,EAAK;AAAA,UACLM;AAAA,UACAC;AAAA,UACAF;AAAA;AAAA,UAEA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAUU;AAAA,YACV,WAAW;AAAA,YACX,UAAU;AAAA,cACR;AAAA,cACAd;AAAA,cACAD,EAAK;AAAA,cACLM;AAAA,cACAC;AAAA,cACAF;AAAA,YACd;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACMA;AAAA,MACAJ;AAAA,MACAD,EAAK;AAAA,MACLQ;AAAA,IACN;AAAA,EACA;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAUO;AAAA,IACV,SAAS;AAAA,IACT,kBAAkB,EAAE,qBAAqB,WAAU;AAAA,IACnD,UAAU,CAAA,EAAG;AAAA,MACXG;AAAA,MACAC;AAAA,MACAH;AAAA,MACAC;AAAA,MACA;AAAA,QACET;AAAA,QACA;AAAA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,UAAUO;AAAA,UACV,UAAU;AAAA,YACR;AAAA,YACAV;AAAA,UACZ;AAAA,QACA;AAAA,QACQ;AAAA,UACE,OAAOL,EAAK,WAAW;AAAA,UACvB,UAAUe;AAAA,QACpB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA;AAAA,YAEL;AAAA,YACA;AAAA,YACA;AAAA,UACZ;AAAA,UACU,WAAW;AAAA,YACT,GAAG;AAAA,YACH,GAAG;AAAA,UACf;AAAA,QACA;AAAA,MACA;AAAA,IAAO;AAAA,EACP;AACA;AAYA,SAASK,GAAQpB,GAAM;AACrB,QAAMqB,IAAa;AAAA,IACjvB,GAAUC,CAAI,GAExBuB;AAAA;AAAA,IAAyCD,EAAQ;AAAA;AAEvD,SAAAC,EAAI,OAAO;AAAA,IACT,GAAGA,EAAI;AAAA,IACP,GAAGF,EAAW;AAAA,EAClB,GACEE,EAAI,UAAU;AAAA,IACZ,GAAGA,EAAI;AAAA,IACP,GAAGF,EAAW;AAAA,EAClB,GACEE,EAAI,WAAW;AAAA,IACb,GAAGA,EAAI;AAAA,IACP,GAAGF,EAAW;AAAA,EAClB,GACEE,EAAI,SAASF,EAAW,QAExBC,EAAQ,OAAO,WACfA,EAAQ,UAAU,CAAE,KAAK,GACzBA,EAAQ,aAAa,OAEdA;AACT;ACp+BA,SAASE,GAAKxB,GAAM;AAClB,QAAM50C,IAAQ40C,EAAK,OACbyB,IAAM,CAAA,GACNC,IAAa;AAAA,IACjB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,UAAU,CAAED,CAAG;AAAA,MACvB;AAAA;AAAA,IACA;AAAA,EACA;AACE,SAAO,OAAOA,GAAK;AAAA,IACjB,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAOr2C,EAAM;AAAA,QAAO;AAAA;AAAA;AAAA,QAGpB;AAAA,MAAqB,EAAC;AAAA,MACxBs2C;AAAA,IACN;AAAA,EACA,CAAG;AAED,QAAMC,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,CAAE3B,EAAK,gBAAgB;AAAA,EACrC,GACQ4B,IAAU5B,EAAK;AAAA,IACnBA,EAAK,QAAO;AAAA,IACZ;AAAA,MACE,OAAO;AAAA,QACL;AAAA,QACA;AAAA,MACR;AAAA,MACM,OAAO;AAAA,QACL,GAAG;AAAA,MACX;AAAA,IACA;AAAA,EACA,GACQ6B,IAAW;AAAA,IACf,OAAO;AAAA,IACP,QAAQ,EAAE,UAAU;AAAA,MAClB7B,EAAK,kBAAkB;AAAA,QACrB,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,MACnB,CAAO;AAAA,IACP,EAAK;AAAA,EACL,GACQ8B,IAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR9B,EAAK;AAAA,MACLyB;AAAA,MACAE;AAAA,IACN;AAAA,EACA;AACE,EAAAA,EAAM,SAAS,KAAKG,CAAY;AAChC,QAAMC,IAAgB;AAAA,IACpB,OAAO;AAAA,EACX,GACQC,IAAc;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,EACT,GACQC,IAAe;AAAA,IACnB,OAAO;AAAA,EACX,GACQC,IAAa;AAAA,IACjB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACMlC,EAAK;AAAA,MACLyB;AAAA,IACN;AAAA,EACA,GACQU,IAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GACQC,IAAgBpC,EAAK,QAAQ;AAAA,IACjC,QAAQ,IAAImC,EAAe,KAAK,GAAG,CAAC;AAAA,IACpC,WAAW;AAAA,EACf,CAAG,GACKE,IAAW;AAAA,IACf,WAAW;AAAA,IACX,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU,CAAErC,EAAK,QAAQA,EAAK,YAAY,EAAE,OAAO,aAAY,CAAE,CAAC;AAAA,IAClE,WAAW;AAAA,EACf,GAEQsC,IAAW;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQC,IAAW;AAAA,IACf;AAAA,IACA;AAAA,EACJ,GAGQC,IAAY,EAAE,OAAO,iBAAgB,GAGrCC,IAAkB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQC,IAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQC,IAAgB;AAAA,IACpiB;AAAA,IACrpC,EAAK,QAAO;AAAA;AAAA,MACZqC;AAAA,MACAH;AAAA,MACAN;AAAA,MACAC;AAAA,MACAW;AAAA,MACAV;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,MACAR;AAAA,IACN;AAAA,EACA;AACA;AC/YA,SAASp/C,GAAE29C,GAAM;AACf,QAAM50C,IAAQ40C,EAAK,OAIbC,IAAsBD,EAAK,QAAQ,MAAM,KAAK,EAAE,UAAU,CAAE,EAAE,OAAO,OAAM,CAAE,EAAE,CAAE,GACjFE,IAAmB,sBACnBC,IAAe,mBAEfC,IAAmB,MACrBF,IAAmB,MACnB90C,EAAM,SAAS+0C,CAAY,IAC3B,kBAAkB/0C,EAAM,SAJC,UAI4B,IACvD,KAGIy3C,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAO,qBAAoB;AAAA,MAC7B,EAAE,OAAO,wBAAuB;AAAA,IACtC;AAAA,EAEA,GAKQvC,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU,CAAEN,EAAK,gBAAgB;AAAA,MACzC;AAAA,MACM;AAAA,QACE,OAAO,iBAXa,yDAWyB;AAAA,QAC7C,KAAK;AAAA,QACL,SAAS;AAAA,MACjB;AAAA,MACMA,EAAK,kBAAkB;AAAA,QACrB,OAAO;AAAA,QACP,KAAK;AAAA,MACb,CAAO;AAAA,IACP;AAAA,EACA,GAEQO,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAO,eAAc;AAAA,MACvB,EAAE,OAAO,kFAAiF;AAAA,MAC1F,EAAE,OAAO,mHAAkH;AAAA,MAC3H,EAAE,OAAO,yDAAwD;AAAA,IACvE;AAAA,IACI,WAAW;AAAA,EACf,GAEQC,IAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,EAAE,SACR,0GACwD;AAAA,IAC5D,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACMR,EAAK,QAAQM,GAAS,EAAE,WAAW,SAAQ,CAAE;AAAA,MAC7C;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,MACML;AAAA,MACAD,EAAK;AAAA,IACX;AAAA,EACA,GAEQS,IAAa;AAAA,IACjB,WAAW;AAAA,IACX,OAAOr1C,EAAM,SAAS+0C,CAAY,IAAIH,EAAK;AAAA,IAC3C,WAAW;AAAA,EACf,GAEQU,IAAiBt1C,EAAM,SAAS+0C,CAAY,IAAIH,EAAK,WAAW,WAoFhEsC,IAAW;AAAA,IACf,SAnFiB;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,IACJ;AAAA,IAyCI,MAvCc;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IAKI,SAAS;AAAA;AAAA,IAET,UAAU;AAAA,EASd,GAEQrB,IAAsB;AAAA,IAC1BT;AAAA,IACAqC;AAAA,IACA5C;AAAA,IACAD,EAAK;AAAA,IACLO;AAAA,IACAD;AAAA,EACJ,GAEQY,IAAqB;AAAA;AAAA;AAAA;AAAA,IAIzB,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,eAAe;AAAA,QACf,KAAK;AAAA,MACb;AAAA,IACA;AAAA,IACI,UAAUoB;AAAA,IACV,UAAUrB,EAAoB,OAAO;AAAA,MACnC;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAUqB;AAAA,QACV,UAAUrB,EAAoB,OAAO,CAAE,MAAM,CAAE;AAAA,QAC/C,WAAW;AAAA,MACnB;AAAA,IACA,CAAK;AAAA,IACD,WAAW;AAAA,EACf,GAEQE,IAAuB;AAAA,IAC3B,OAAO,MAAMf,IAAmB,iBAAiBM;AAAA,IACjD,aAAa;AAAA,IACb,KAAK;AAAA,IACL,YAAY;AAAA,IACZ,UAAU4B;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MACR;AAAA;AAAA,QACE,OAAOpC;AAAA,QACP,UAAUoC;AAAA,QACV,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO5B;AAAA,QACP,aAAa;AAAA,QACb,UAAU,CAAEV,EAAK,QAAQS,GAAY,EAAE,WAAW,iBAAgB,CAAE,CAAC;AAAA,QACrE,WAAW;AAAA,MACnB;AAAA;AAAA;AAAA,MAGM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU6B;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,UACRrC;AAAA,UACAD,EAAK;AAAA,UACLM;AAAA,UACAC;AAAA,UACAsC;AAAA;AAAA,UAEA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAUP;AAAA,YACV,WAAW;AAAA,YACX,UAAU;AAAA,cACR;AAAA,cACArC;AAAA,cACAD,EAAK;AAAA,cACLM;AAAA,cACAC;AAAA,cACAsC;AAAA,YACd;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACMA;AAAA,MACA5C;AAAA,MACAD,EAAK;AAAA,MACLQ;AAAA,IACN;AAAA,EACA;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,GAAG;AAAA,IACd,UAAU8B;AAAA;AAAA;AAAA,IAGV,mBAAmB;AAAA,IACnB,SAAS;AAAA,IACT,UAAU,CAAA,EAAG;AAAA,MACXpB;AAAA,MACAC;AAAA,MACAF;AAAA,MACA;AAAA,QACET;AAAA,QACA;AAAA,UACE,OAAOR,EAAK,WAAW;AAAA,UACvB,UAAUsC;AAAA,QACpB;AAAA,QACQ;AAAA,UACE,WAAW;AAAA,UACX,eAAe;AAAA,UACf,KAAK;AAAA,UACL,UAAU;AAAA,YACR,EAAE,eAAe,qBAAoB;AAAA,YACrCtC,EAAK;AAAA,UACjB;AAAA,QACA;AAAA,MACA;AAAA,IAAO;AAAA,IACH,SAAS;AAAA,MACP,cAAcQ;AAAA,MACd,SAASF;AAAA,MACT,UAAUgC;AAAA,IAChB;AAAA,EACA;AACA;ACnUA,SAASQ,GAAI9C,GAAM;AACjB,QAAM50C,IAAQ40C,EAAK,OAIbC,IAAsBD,EAAK,QAAQ,MAAM,KAAK,EAAE,UAAU,CAAE,EAAE,OAAO,OAAM,CAAE,EAAE,CAAE,GACjFE,IAAmB,sBACnBC,IAAe,mBAEfC,IAAmB,gBACrBF,IAAmB,MACnB90C,EAAM,SAAS+0C,CAAY,IAC3B,kBAAkB/0C,EAAM,SAJC,UAI4B,IACvD,KAEIi1C,IAAsB;AAAA,IAC1B,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GAKQC,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU,CAAEN,EAAK,gBAAgB;AAAA,MACzC;AAAA,MACM;AAAA,QACE,OAAO,iBAXa,yDAWyB;AAAA,QAC7C,KAAK;AAAA,QACL,SAAS;AAAA,MACjB;AAAA,MACMA,EAAK,kBAAkB;AAAA,QACrB,OAAO;AAAA,QACP,KAAK;AAAA,MACb,CAAO;AAAA,IACP;AAAA,EACA,GAEQO,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER;AAAA,QAAE,OACA;AAAA,MAkBR;AAAA;AAAA,MAEM;AAAA,QAAE,OACA;AAAA;AAAA;AAAA,MAcR;AAAA,IACA;AAAA,IACI,WAAW;AAAA,EACf,GAEQC,IAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,EAAE,SACR,yFACuC;AAAA,IAC3C,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACMR,EAAK,QAAQM,GAAS,EAAE,WAAW,SAAQ,CAAE;AAAA,MAC7C;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,MACML;AAAA,MACAD,EAAK;AAAA,IACX;AAAA,EACA,GAEQS,IAAa;AAAA,IACjB,WAAW;AAAA,IACX,OAAOr1C,EAAM,SAAS+0C,CAAY,IAAIH,EAAK;AAAA,IAC3C,WAAW;AAAA,EACf,GAEQU,IAAiBt1C,EAAM,SAAS+0C,CAAY,IAAIH,EAAK,WAAW,WAGhEW,IAAoB;AAAA,IACxiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQC,IAAa;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQC,IAAiB;AAAA,IACraQC,IAAe;AAAA,IACnB,MAAMH;AAAA,IACN,SAASD;AAAA,IACT,SAde;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IASI,UANe,CAAE,SAAS;AAAA,IAO1B,aAAaE;AAAA,EACjB,GAEQG,IAAoB;AAAA,IACxB,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER,OAAOF;AAAA,IAAc;AAAA,IACvB,OAAO11C,EAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA40C,EAAK;AAAA,MACL50C,EAAM,UAAU,kBAAkB;AAAA,IAAC;AAAA,EACzC,GAEQ61C,IAAsB;AAAA,IAC1BD;AAAA,IACAR;AAAA,IACAH;AAAA,IACAJ;AAAA,IACAD,EAAK;AAAA,IACLO;AAAA,IACAD;AAAA,EACJ,GAEQY,IAAqB;AAAA;AAAA;AAAA;AAAA,IAIzB,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,eAAe;AAAA,QACf,KAAK;AAAA,MACb;AAAA,IACA;AAAA,IACI,UAAUH;AAAA,IACV,UAAUE,EAAoB,OAAO;AAAA,MACnC;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAUF;AAAA,QACV,UAAUE,EAAoB,OAAO,CAAE,MAAM,CAAE;AAAA,QAC/C,WAAW;AAAA,MACnB;AAAA,IACA,CAAK;AAAA,IACD,WAAW;AAAA,EACf,GAEQE,IAAuB;AAAA,IAC3B,WAAW;AAAA,IACX,OAAO,MAAMf,IAAmB,iBAAiBM;AAAA,IACjD,aAAa;AAAA,IACb,KAAK;AAAA,IACL,YAAY;AAAA,IACZ,UAAUK;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MACR;AAAA;AAAA,QACE,OAAOb;AAAA,QACP,UAAUa;AAAA,QACV,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAOL;AAAA,QACP,aAAa;AAAA,QACb,UAAU,CAAED,CAAU;AAAA,QACtB,WAAW;AAAA,MACnB;AAAA;AAAA;AAAA,MAGM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,gBAAgB;AAAA,QAChB,UAAU;AAAA,UACRH;AAAA,UACAC;AAAA,QACV;AAAA,MACA;AAAA;AAAA;AAAA,MAGM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAUQ;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,UACRd;AAAA,UACAD,EAAK;AAAA,UACLM;AAAA,UACAC;AAAA,UACAF;AAAA;AAAA,UAEA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAUU;AAAA,YACV,WAAW;AAAA,YACX,UAAU;AAAA,cACR;AAAA,cACAd;AAAA,cACAD,EAAK;AAAA,cACLM;AAAA,cACAC;AAAA,cACAF;AAAA,YACd;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACMA;AAAA,MACAJ;AAAA,MACAD,EAAK;AAAA,MACLQ;AAAA,IACN;AAAA,EACA;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAUO;AAAA,IACV,SAAS;AAAA,IACT,kBAAkB,EAAE,qBAAqB,WAAU;AAAA,IACnD,UAAU,CAAA,EAAG;AAAA,MACXG;AAAA,MACAC;AAAA,MACAH;AAAA,MACAC;AAAA,MACA;AAAA,QACET;AAAA,QACA;AAAA;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,UAAUO;AAAA,UACV,UAAU;AAAA,YACR;AAAA,YACAV;AAAA,UACZ;AAAA,QACA;AAAA,QACQ;AAAA,UACE,OAAOL,EAAK,WAAW;AAAA,UACvB,UAAUe;AAAA,QACpB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA;AAAA,YAEL;AAAA,YACA;AAAA,YACA;AAAA,UACZ;AAAA,UACU,WAAW;AAAA,YACT,GAAG;AAAA,YACH,GAAG;AAAA,UACf;AAAA,QACA;AAAA,MACA;AAAA,IAAO;AAAA,EACP;AACA;ACjlBA,SAASgC,GAAO/C,GAAM;AACpB,QAAMgD,IAAoB;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GACQC,IAAqB;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GACQC,IAAmB;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GACQC,IAAkB;AAAA,IACtsB;AAAA,IAC1B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQd,IAAW;AAAA,IACf,SAASa,EAAgB,OAAOC,CAAmB;AAAA,IACnD,UAAUJ;AAAA,IACV,SAASE;AAAA,EACb,GACQzC,IAAaT,EAAK,QAAQA,EAAK,YAAY,EAAE,OAAO,sBAAsB,GAC1EO,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAO,gBAAgB;AAAA,MACzB,EAAE,OAAO,kEAAoE;AAAA,MAC7E,EAAE,OAAO,sFAA0F;AAAA,IACzG;AAAA,IACI,WAAW;AAAA,EACf,GACQ8C,IAAa;AAAA,IACjB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,WAAW;AAAA,EACf,GACQC,IAAkB;AAAA,IACtB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,CAAE,EAAE,OAAO,KAAI,CAAE;AAAA,EAC/B,GACQC,IAAwBvD,EAAK,QAAQsD,GAAiB,EAAE,SAAS,MAAM,GACvE3B,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUW;AAAA,EACd,GACQkB,IAAcxD,EAAK,QAAQ2B,GAAO,EAAE,SAAS,MAAM,GACnD8B,IAAsB;AAAA,IAC1B,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,MACR,EAAE,OAAO,OAAM;AAAA,MACf,EAAE,OAAO,OAAM;AAAA,MACfzD,EAAK;AAAA,MACLwD;AAAA,IACN;AAAA,EACA,GACQE,IAA+B;AAAA,IACnC,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR,EAAE,OAAO,OAAM;AAAA,MACf,EAAE,OAAO,OAAM;AAAA,MACf,EAAE,OAAO,KAAI;AAAA,MACb/B;AAAA,IACN;AAAA,EACA,GACQgC,IAAqC3D,EAAK,QAAQ0D,GAA8B;AAAA,IACpF,SAAS;AAAA,IACT,UAAU;AAAA,MACR,EAAE,OAAO,OAAM;AAAA,MACf,EAAE,OAAO,OAAM;AAAA,MACf,EAAE,OAAO,KAAI;AAAA,MACbF;AAAA,IACN;AAAA,EACA,CAAG;AACD,EAAA7B,EAAM,WAAW;AAAA,IACf+B;AAAA,IACAD;AAAA,IACAH;AAAA,IACAtD,EAAK;AAAA,IACLA,EAAK;AAAA,IACLO;AAAA,IACAP,EAAK;AAAA,EACT,GACEwD,EAAY,WAAW;AAAA,IACrBG;AAAA,IACAF;AAAA,IACAF;AAAA,IACAvD,EAAK;AAAA,IACLA,EAAK;AAAA,IACLO;AAAA,IACAP,EAAK,QAAQA,EAAK,sBAAsB,EAAE,SAAS,KAAI,CAAE;AAAA,EAC7D;AACE,QAAM4D,IAAS,EAAE,UAAU;AAAA,IACzBP;AAAA,IACAK;AAAA,IACAD;AAAA,IACAH;AAAA,IACAtD,EAAK;AAAA,IACLA,EAAK;AAAA,EACT,EAAG,GAEK6D,IAAmB;AAAA,IACvB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR,EAAE,eAAe,SAAQ;AAAA,MACzBpD;AAAA,IACN;AAAA,EACA,GACQqD,IAAgB9D,EAAK,WAAW,OAAOA,EAAK,WAAW,eAAeA,EAAK,WAAW,kBACtF+D,IAAgB;AAAA;AAAA;AAAA,IAGpB,OAAO,MAAM/D,EAAK;AAAA,IAClB,WAAW;AAAA,EACf;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAUsC;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MACRtC,EAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,UAAU;AAAA,YACR;AAAA,cACE,WAAW;AAAA,cACX,UAAU;AAAA,gBACR;AAAA,kBACE,OAAO;AAAA,kBACP,WAAW;AAAA,gBAC7B;AAAA,gBACgB,EAAE,OAAO,WAAU;AAAA,gBACnB;AAAA,kBACE,OAAO;AAAA,kBACP,KAAK;AAAA,gBACvB;AAAA,cACA;AAAA,YACA;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACMA,EAAK;AAAA,MACLA,EAAK;AAAA,MACL;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,EAAE,SAAS,sFAAqF;AAAA,MAClH;AAAA,MACM4D;AAAA,MACArD;AAAA,MACA;AAAA,QACE,eAAe;AAAA,QACf,WAAW;AAAA,QACX,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,UACR,EAAE,eAAe,cAAa;AAAA,UAC9BE;AAAA,UACAoD;AAAA,UACA7D,EAAK;AAAA,UACLA,EAAK;AAAA,QACf;AAAA,MACA;AAAA,MACM;AAAA,QACE,eAAe;AAAA,QACf,WAAW;AAAA,QACX,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,UACRS;AAAA,UACAT,EAAK;AAAA,UACLA,EAAK;AAAA,QACf;AAAA,MACA;AAAA,MACM;AAAA,QACE,eAAe;AAAA,QACf,WAAW;AAAA,QACX,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,UACRS;AAAA,UACAoD;AAAA,UACA7D,EAAK;AAAA,UACLA,EAAK;AAAA,QACf;AAAA,MACA;AAAA,MACM;AAAA;AAAA,QAEE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,cAAc;AAAA,QACd,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,UACjB;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA;AAAA;AAAA,QAGE,eAAe;AAAA,QACf,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO,MAAM8D,IAAgB,WAAW9D,EAAK,WAAW;AAAA,QACxD,aAAa;AAAA,QACb,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,UAAUsC;AAAA,QACV,UAAU;AAAA;AAAA,UAER;AAAA,YACE,eAAeW,EAAmB,KAAK,GAAG;AAAA,YAC1C,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAOjD,EAAK,WAAW;AAAA,YACvB,aAAa;AAAA,YACb,UAAU;AAAA,cACRA,EAAK;AAAA,cACL6D;AAAA,YACd;AAAA,YACY,WAAW;AAAA,UACvB;AAAA,UACU,EAAE,OAAO,OAAM;AAAA,UACf;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA,YACZ,UAAUvB;AAAA,YACV,WAAW;AAAA,YACX,UAAU;AAAA,cACRsB;AAAA,cACArD;AAAA,cACAP,EAAK;AAAA,YACnB;AAAA,UACA;AAAA,UACUA,EAAK;AAAA,UACLA,EAAK;AAAA,QACf;AAAA,MACA;AAAA,MACM+D;AAAA,IACN;AAAA,EACA;AACA;ACzZA,MAAMC,KAAQ,CAAChE,OACN;AAAA,EACL,WAAW;AAAA,IACT,OAAO;AAAA,IACP,OAAO;AAAA,EACb;AAAA,EACI,eAAeA,EAAK;AAAA,EACpB,UAAU;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,EACb;AAAA,EACI,mBAAmB;AAAA,IACjB,WAAW;AAAA,IACX,OAAO;AAAA,EACb;AAAA,EACI,yBAAyB;AAAA,IACvB,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,MACRA,EAAK;AAAA,MACLA,EAAK;AAAA,IACb;AAAA,EACA;AAAA,EACI,iBAAiB;AAAA,IACf,OAAO;AAAA,IACP,OAAOA,EAAK,YAAY;AAAA,IASxB,WAAW;AAAA,EACjB;AAAA,EACI,cAAc;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,EACb;AACA,IAGMiE,KAAY;AAAA,EAChf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEMC,KAAO;AAAA,EACX,GAAGF;AAAAA,EACH,GAAGC;AACL,GAKME,KAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE,KAAI,EAAG,QAAO,GAGVC,KAAiB;AAAA,EACrkB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE,KAAI,EAAG,QAAO,GAEVC,KAAa;AAAA,EACjhB,SAASC,GAAIxE,GAAM;AACjB,QAAM50C,IAAQ40C,EAAK,OACbyE,IAAQT,GAAMhE,CAAI,GAClB0E,IAAgB,EAAE,OAAO,+BAA8B,GACvDC,IAAe,mBACfC,IAAiB,qBACjBC,IAAW,2BACXvE,IAAU;AAAA,IACdN,EAAK;AAAA,IACLA,EAAK;AAAA,EACT;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,UAAU,EAAE,kBAAkB,UAAS;AAAA,IACvC,kBAAkB;AAAA;AAAA;AAAA,MAGhB,kBAAkB;AAAA,IAAc;AAAA,IAClC,UAAU;AAAA,MACRyE,EAAM;AAAA,MACNC;AAAA;AAAA;AAAA,MAGAD,EAAM;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO,QAAQI;AAAA,QACf,WAAW;AAAA,MACnB;AAAA,MACMJ,EAAM;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,UAAU;AAAA,UACR,EAAE,OAAO,OAAOJ,GAAe,KAAK,GAAG,IAAI,IAAG;AAAA,UAC9C,EAAE,OAAO,WAAWC,GAAgB,KAAK,GAAG,IAAI,IAAG;AAAA,QAC7D;AAAA,MACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOMG,EAAM;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,OAAO,SAASF,GAAW,KAAK,GAAG,IAAI;AAAA,MAC/C;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACRE,EAAM;AAAA,UACNA,EAAM;AAAA,UACNA,EAAM;AAAA,UACNA,EAAM;AAAA,UACN,GAAGnE;AAAA;AAAA;AAAA;AAAA,UAIH;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,WAAW;AAAA;AAAA,YACX,UAAU,EAAE,UAAU,eAAc;AAAA,YACpC,UAAU;AAAA,cACR,GAAGA;AAAA,cACH;AAAA,gBACE,WAAW;AAAA;AAAA;AAAA,gBAGX,OAAO;AAAA,gBACP,gBAAgB;AAAA,gBAChB,YAAY;AAAA,cAC5B;AAAA,YACA;AAAA,UACA;AAAA,UACUmE,EAAM;AAAA,QAChB;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAOr5C,EAAM,UAAU,GAAG;AAAA,QAC1B,KAAK;AAAA,QACL,WAAW;AAAA,QACX,SAAS;AAAA;AAAA,QACT,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAOw5C;AAAA,UACnB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,gBAAgB;AAAA,YAChB,YAAY;AAAA,YACZ,WAAW;AAAA,YACX,UAAU;AAAA,cACR,UAAU;AAAA,cACV,SAASD;AAAA,cACT,WAAWP,GAAe,KAAK,GAAG;AAAA,YAChD;AAAA,YACY,UAAU;AAAA,cACR;AAAA,gBACE,OAAO;AAAA,gBACP,WAAW;AAAA,cAC3B;AAAA,cACc,GAAG9D;AAAA,cACHmE,EAAM;AAAA,YACpB;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO,SAASN,GAAK,KAAK,GAAG,IAAI;AAAA,MACzC;AAAA,IACA;AAAA,EACA;AACA;ACz6BA,SAASW,GAAK9E,GAAM;AAClB,QAAM50C,IAAQ40C,EAAK;AACnB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,OAAO;AAAA,IAClB,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,WAAW;AAAA,QACX,OAAO50C,EAAM;AAAA,UACX;AAAA,UACA;AAAA,UACA;AAAA,QACV;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAOA,EAAM;AAAA,cACX;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACd;AAAA,YACY,KAAK;AAAA,UACjB;AAAA,UACU,EAAE,OAAO,WAAU;AAAA,QAC7B;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,IACA;AAAA,EACA;AACA;AClDA,SAASwW,GAAGo+B,GAAM;AAyEhB,QAAMsC,IAAW;AAAA,IACf,SA5BU;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IAGI,MAnDY;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IA+BI,SA3Ee;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IAuEI,UAtEgB;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EAuDA;AACE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,QAAQ;AAAA,IACnB,UAAUA;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MACRtC,EAAK;AAAA,MACLA,EAAK;AAAA,MACL;AAAA,QACE,WAAW;AAAA,QACX,UAAU;AAAA,UACRA,EAAK;AAAA,UACLA,EAAK;AAAA,UACL;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,UACjB;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA,QAAE,OAAO;AAAA;AAAA,MACf;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,eAAe;AAAA,QACf,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,UAAU;AAAA,UACRA,EAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,YAAY;AAAA,YACZ,UAAUsC;AAAA,YACV,SAAS;AAAA,UACrB;AAAA,QACA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA;ACjJA,SAASyC,GAAQ/E,GAAM;AACrB,QAAM50C,IAAQ40C,EAAK,OACbgF,IAAW;AACjB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,KAAK;AAAA,IAChB,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,UAAU;AAAA,MACR,SAAS;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACR;AAAA,MACM,SAAS;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,MACR;AAAA,IACA;AAAA,IACI,UAAU;AAAA,MACRhF,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACL;AAAA,QACE,OAAO;AAAA,QACP,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,OAAO;AAAA,QACP,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,OAAO;AAAA,QACP,YAAY;AAAA,MACpB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,OAAO50C,EAAM,OAAO45C,GAAU55C,EAAM,UAAU,MAAM,CAAC;AAAA,QACrD,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,IACI,SAAS;AAAA,MACP;AAAA,MACA;AAAA,IACN;AAAA,EACA;AACA;ACnEA,SAAS65C,GAAIjF,GAAM;AACjB,QAAM50C,IAAQ40C,EAAK,OACbO,IAAU;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAO,uBAAsB;AAAA,MAC/B,EAAE,OAAOP,EAAK,UAAS;AAAA,IAC7B;AAAA,EACA,GACQkF,IAAWlF,EAAK,QAAO;AAC7B,EAAAkF,EAAS,WAAW;AAAA,IAClB;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,IACX;AAAA,IACI;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,IACX;AAAA,EACA;AACE,QAAMC,IAAY;AAAA,IAChB,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAO,oBAAmB;AAAA,MAC5B,EAAE,OAAO,cAAa;AAAA,IAC5B;AAAA,EACA,GACQ5C,IAAW;AAAA,IACf,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GACQjC,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU,CAAEN,EAAK,gBAAgB;AAAA,IACjC,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,IACA;AAAA,EACA,GACQ50B,IAAQ;AAAA,IACZ,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR85B;AAAA,MACA3C;AAAA,MACA4C;AAAA,MACA7E;AAAA,MACAC;AAAA,MACA;AAAA,IACN;AAAA,IACI,WAAW;AAAA,EACf,GAEQ6E,IAAW,kBACXC,IAA0B,iBAC1BC,IAA0B,WAC1BC,IAAUn6C,EAAM;AAAA,IACpBg6C;AAAA,IAAUC;AAAA,IAAyBC;AAAA,EACvC,GACQE,IAAap6C,EAAM;AAAA,IACvBm6C;AAAA,IAAS;AAAA,IAAgBA;AAAA,IAAS;AAAA,IAClCn6C,EAAM,UAAU,eAAe;AAAA,EACnC;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,MAAM;AAAA,IACjB,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,UAAU;AAAA,MACR85C;AAAA,MACA;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAOM;AAAA,QACP,WAAW;AAAA,QACX,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,UAAU;AAAA,YACRN;AAAA,YACA95B;AAAA,YACAm3B;AAAA,YACA4C;AAAA,YACA7E;AAAA,YACAC;AAAA,UACZ;AAAA,QACA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA;ACrHA,IAAIkF,KAAgB,mBAChBC,KAAO,OAAOD,EAAa,KAC3BE,KAAY,+BACZC,KAAU;AAAA,EACZ,WAAW;AAAA,EACX,UAAU;AAAA;AAAA;AAAA,IAGR,EAAE,OAAO,QAAQH,EAAa,MAAMC,EAAI,YAAYA,EAAI,eACzCD,EAAa,cAAa;AAAA;AAAA,IAEzC,EAAE,OAAO,OAAOA,EAAa,MAAMC,EAAI,+BAA8B;AAAA,IACrE,EAAE,OAAO,IAAIA,EAAI,cAAa;AAAA,IAC9B,EAAE,OAAO,OAAOD,EAAa,aAAY;AAAA;AAAA,IAGzC,EAAE,OAAO,aAAaE,EAAS,UAAUA,EAAS,SAASA,EAAS,eACrDF,EAAa,cAAa;AAAA;AAAA,IAGzC,EAAE,OAAO,iCAAgC;AAAA;AAAA,IAGzC,EAAE,OAAO,YAAYE,EAAS,YAAW;AAAA;AAAA,IAGzC,EAAE,OAAO,yBAAwB;AAAA;AAAA,IAGjC,EAAE,OAAO,gCAA+B;AAAA,EAC5C;AAAA,EACE,WAAW;AACb;AAqBA,SAASE,GAAW7oD,GAAI8oD,GAAcz9B,GAAO;AAC3C,SAAIA,MAAU,KAAW,KAElBrrB,EAAG,QAAQ8oD,GAAc,CAAA5mD,MACvB2mD,GAAW7oD,GAAI8oD,GAAcz9B,IAAQ,CAAC,CAC9C;AACH;AAGA,SAAS09B,GAAK/F,GAAM;AAClB,QAAM50C,IAAQ40C,EAAK,OACbgG,IAAgB,kCAChBC,IAAmBD,IACrBH,GAAW,SAASG,IAAgB,oBAAoBA,IAAgB,YAAY,QAAQ,CAAC,GAsE3F1D,IAAW;AAAA,IACf,SAtEoB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IA0BI,SAnBe;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IAgBI,MAdY;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IAMI,UA1BgB;AAAA,MAChB;AAAA,MACA;AAAA,IACJ;AAAA,EAwBA,GAEQ4D,IAAa;AAAA,IACjB,WAAW;AAAA,IACX,OAAO,MAAMF;AAAA,IACb,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,CAAE,MAAM;AAAA;AAAA,MAC1B;AAAA,IACA;AAAA,EACA,GACQG,IAAS;AAAA,IACb,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU7D;AAAA,IACV,WAAW;AAAA,IACX,UAAU,CAAEtC,EAAK,oBAAoB;AAAA,IACrC,YAAY;AAAA,EAChB;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,KAAK;AAAA,IAChB,UAAUsC;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MACRtC,EAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,UACE,WAAW;AAAA,UACX,UAAU;AAAA,YACR;AAAA;AAAA,cAEE,OAAO;AAAA,cACP,WAAW;AAAA,YACzB;AAAA,YACY;AAAA,cACE,WAAW;AAAA,cACX,OAAO;AAAA,YACrB;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,QACV,WAAW;AAAA,MACnB;AAAA,MACMA,EAAK;AAAA,MACLA,EAAK;AAAA,MACL;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,QACX,UAAU,CAAEA,EAAK,gBAAgB;AAAA,MACzC;AAAA,MACMA,EAAK;AAAA,MACLA,EAAK;AAAA,MACL;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAgG;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,MACM;AAAA;AAAA,QAEE,OAAO;AAAA,QACP,OAAO;AAAA,MACf;AAAA,MACM;AAAA,QACE,OAAO;AAAA,UACL56C,EAAM,OAAO,YAAY46C,CAAa;AAAA,UACtC;AAAA,UACAA;AAAA,UACA;AAAA,UACA;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAA;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,QACQ,UAAU;AAAA,UACRG;AAAA,UACAnG,EAAK;AAAA,UACLA,EAAK;AAAA,QACf;AAAA,MACA;AAAA,MACM;AAAA;AAAA;AAAA,QAGE,eAAe;AAAA,QACf,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,UACL,QAAQiG,IAAmB;AAAA,UAC3BjG,EAAK;AAAA,UACL;AAAA,QACV;AAAA,QACQ,WAAW,EAAE,GAAG,iBAAgB;AAAA,QAChC,UAAUsC;AAAA,QACV,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAUA;AAAA,YACV,WAAW;AAAA,YACX,UAAU;AAAA,cACR4D;AAAA,cACAlG,EAAK;AAAA,cACLA,EAAK;AAAA,cACL4F;AAAAA,cACA5F,EAAK;AAAA,YACnB;AAAA,UACA;AAAA,UACUA,EAAK;AAAA,UACLA,EAAK;AAAA,QACf;AAAA,MACA;AAAA,MACM4F;AAAAA,MACAM;AAAA,IACN;AAAA,EACA;AACA;AChSA,MAAMrB,KAAW,4BACXvC,KAAW;AAAA,EACf;AAAA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AACF,GACMC,KAAW;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAGMM,KAAQ;AAAA;AAAA,EAEZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AACF,GAEMuD,KAAc;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEMC,KAAmB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEMC,KAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AACF,GAEMC,KAAY,CAAA,EAAG;AAAA,EACnBF;AAAAA,EACAxD;AAAAA,EACAuD;AACF;AAWA,SAASI,GAAWxG,GAAM;AACxB,QAAM50C,IAAQ40C,EAAK,OAQbyG,IAAgB,CAACxkD,GAAO,EAAE,OAAAkN,GAAK,MAAO;AAC1C,UAAM88B,IAAM,OAAOhqC,EAAM,CAAC,EAAE,MAAM,CAAC;AAEnC,WADYA,EAAM,MAAM,QAAQgqC,GAAK98B,EAAK,MAC3B;AAAA,EACjB,GAEMu3C,IAAa7B,IACb8B,IAAW;AAAA,IACf,OAAO;AAAA,IACP,KAAK;AAAA,EACT,GAEQC,IAAmB,6BACnBC,IAAU;AAAA,IACd,OAAO;AAAA,IACP,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,IAKL,mBAAmB,CAAC5kD,GAAOhI,OAAa;AACtC,YAAM6sD,IAAkB7kD,EAAM,CAAC,EAAE,SAASA,EAAM,OAC1C8kD,IAAW9kD,EAAM,MAAM6kD,CAAe;AAC5C;AAAA;AAAA;AAAA;AAAA,QAIEC,MAAa;AAAA;AAAA,QAGbA,MAAa;AAAA,QACX;AACF,QAAA9sD,GAAS,YAAW;AACpB;AAAA,MACF;AAIA,MAAI8sD,MAAa,QAGVN,EAAcxkD,GAAO,EAAE,OAAO6kD,EAAe,CAAE,KAClD7sD,GAAS,YAAW;AAOxB,UAAIiI;AACJ,YAAM8kD,IAAa/kD,EAAM,MAAM,UAAU6kD,CAAe;AAIxD,UAAK5kD,IAAI8kD,EAAW,MAAM,OAAO,GAAI;AACnC,QAAA/sD,GAAS,YAAW;AACpB;AAAA,MACF;AAKA,WAAKiI,IAAI8kD,EAAW,MAAM,gBAAgB,MACpC9kD,EAAE,UAAU,GAAG;AACjB,QAAAjI,GAAS,YAAW;AAEpB;AAAA,MACF;AAAA,IAEJ;AAAA,EACJ,GACQgtD,IAAa;AAAA,IACjB,UAAUpC;AAAAA,IACV,SAASvC;AAAAA,IACT,SAASC;AAAAA,IACT,UAAUgE;AAAAA,IACV,qBAAqBD;AAAAA,EACzB,GAGQb,IAAgB,mBAChBC,IAAO,OAAOD,CAAa,KAG3ByB,IAAiB,uCACjBC,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER,EAAE,OAAO,QAAQD,CAAc,MAAMxB,CAAI,YAAYA,CAAI,eAC1CD,CAAa,OAAM;AAAA,MAClC,EAAE,OAAO,OAAOyB,CAAc,SAASxB,CAAI,eAAeA,CAAI,OAAM;AAAA;AAAA,MAGpE,EAAE,OAAO,6BAA4B;AAAA;AAAA,MAGrC,EAAE,OAAO,2CAA0C;AAAA,MACnD,EAAE,OAAO,+BAA8B;AAAA,MACvC,EAAE,OAAO,+BAA8B;AAAA;AAAA;AAAA,MAIvC,EAAE,OAAO,kBAAiB;AAAA,IAChC;AAAA,IACI,WAAW;AAAA,EACf,GAEQ/D,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUsF;AAAAA,IACV,UAAU,CAAA;AAAA;AAAA,EACd,GACQG,IAAgB;AAAA,IACpB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,WAAW;AAAA,MACX,UAAU;AAAA,QACRpH,EAAK;AAAA,QACL2B;AAAA,MACR;AAAA,MACM,aAAa;AAAA,IACnB;AAAA,EACA,GACQ0F,IAAe;AAAA,IACnB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,WAAW;AAAA,MACX,UAAU;AAAA,QACRrH,EAAK;AAAA,QACL2B;AAAA,MACR;AAAA,MACM,aAAa;AAAA,IACnB;AAAA,EACA,GACQ2F,IAAmB;AAAA,IACvB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,WAAW;AAAA,MACX,UAAU;AAAA,QACRtH,EAAK;AAAA,QACL2B;AAAA,MACR;AAAA,MACM,aAAa;AAAA,IACnB;AAAA,EACA,GACQ4F,IAAkB;AAAA,IACtB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACRvH,EAAK;AAAA,MACL2B;AAAA,IACN;AAAA,EACA,GAwCQC,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,MAzCU5B,EAAK;AAAA,QACzB;AAAA,QACA;AAAA,QACA;AAAA,UACE,WAAW;AAAA,UACX,UAAU;AAAA,YACR;AAAA,cACE,OAAO;AAAA,cACP,WAAW;AAAA,cACX,UAAU;AAAA,gBACR;AAAA,kBACE,WAAW;AAAA,kBACX,OAAO;AAAA,gBACrB;AAAA,gBACY;AAAA,kBACE,WAAW;AAAA,kBACX,OAAO;AAAA,kBACP,KAAK;AAAA,kBACL,YAAY;AAAA,kBACZ,cAAc;AAAA,kBACd,WAAW;AAAA,gBACzB;AAAA,gBACY;AAAA,kBACE,WAAW;AAAA,kBACX,OAAO0G,IAAa;AAAA,kBACpB,YAAY;AAAA,kBACZ,WAAW;AAAA,gBACzB;AAAA;AAAA;AAAA,gBAGY;AAAA,kBACE,OAAO;AAAA,kBACP,WAAW;AAAA,gBACzB;AAAA,cACA;AAAA,YACA;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MAKM1G,EAAK;AAAA,MACLA,EAAK;AAAA,IACX;AAAA,EACA,GACQwH,IAAkB;AAAA,IACtBxH,EAAK;AAAA,IACLA,EAAK;AAAA,IACLoH;AAAA,IACAC;AAAA,IACAC;AAAA,IACAC;AAAA;AAAA,IAEA,EAAE,OAAO,QAAO;AAAA,IAChBJ;AAAA;AAAA;AAAA;AAAA,EAIJ;AACE,EAAAxF,EAAM,WAAW6F,EACd,OAAO;AAAA;AAAA;AAAA,IAGN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUP;AAAAA,IACV,UAAU;AAAA,MACR;AAAA,IACR,EAAQ,OAAOO,CAAe;AAAA,EAC9B,CAAK;AACH,QAAMC,IAAqB,CAAA,EAAG,OAAO7F,GAASD,EAAM,QAAQ,GACtD+F,IAAkBD,EAAmB,OAAO;AAAA;AAAA,IAEhD;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAUR;AAAAA,MACV,UAAU,CAAC,MAAM,EAAE,OAAOQ,CAAkB;AAAA,IAClD;AAAA,EACA,CAAG,GACKtB,IAAS;AAAA,IACb,WAAW;AAAA;AAAA,IAEX,OAAO;AAAA;AAAA,IACP,KAAK;AAAA,IACL,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAUc;AAAAA,IACV,UAAUS;AAAA,EACd,GAGQC,IAAmB;AAAA,IACvB,UAAU;AAAA;AAAA,MAER;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAjB;AAAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACAt7C,EAAM,OAAOs7C,GAAY,KAAKt7C,EAAM,OAAO,MAAMs7C,CAAU,GAAG,IAAI;AAAA,QAC5E;AAAA,QACQ,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAA;AAAAA,QACV;AAAA,QACQ,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,IAEA;AAAA,EACA,GAEQkB,IAAkB;AAAA,IACtB,WAAW;AAAA,IACX,OACAx8C,EAAM;AAAA;AAAA,MAEJ;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKN;AAAA,IACI,WAAW;AAAA,IACX,UAAU;AAAA,MACR,GAAG;AAAA;AAAA,QAED,GAAGy3C;AAAAA,QACH,GAAGuD;AAAAA,MACX;AAAA,IACA;AAAA,EACA,GAEQyB,IAAa;AAAA,IACjB,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GAEQC,IAAsB;AAAA,IAC1B,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACApB;AAAAA,UACA;AAAA,QACV;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,QACV;AAAA,MACA;AAAA,IACA;AAAA,IACI,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,OAAO;AAAA,IACP,UAAU,CAAEP,CAAM;AAAA,IAClB,SAAS;AAAA,EACb,GAEQ4B,IAAsB;AAAA,IAC1B,WAAW;AAAA,IACX,OAAO;AAAA,IACP,WAAW;AAAA,EACf;AAEE,WAASC,EAAO7+C,GAAM;AACpB,WAAOiC,EAAM,OAAO,OAAOjC,EAAK,KAAK,GAAG,GAAG,GAAG;AAAA,EAChD;AAEA,QAAM8+C,IAAgB;AAAA,IACpB,OAAO78C,EAAM;AAAA,MACX;AAAA,MACA48C,EAAO;AAAA,QACL,GAAG3B;AAAAA,QACH;AAAA,QACA;AAAA,MACR,EAAQ,IAAI,CAAA6B,MAAK,GAAGA,CAAC,SAAS,CAAC;AAAA,MACzBxB;AAAAA,MAAYt7C,EAAM,UAAU,OAAO;AAAA,IAAC;AAAA,IACtC,WAAW;AAAA,IACX,WAAW;AAAA,EACf,GAEQ+8C,IAAkB;AAAA,IACtB,OAAO/8C,EAAM,OAAO,MAAMA,EAAM;AAAA,MAC9BA,EAAM,OAAOs7C,GAAY,oBAAoB;AAAA,IACnD,CAAK;AAAA,IACD,KAAKA;AAAAA,IACL,cAAc;AAAA,IACd,UAAU;AAAA,IACV,WAAW;AAAA,IACX,WAAW;AAAA,EACf,GAEQ0B,IAAmB;AAAA,IACvB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA1B;AAAAA,MACA;AAAA,IACN;AAAA,IACI,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,UAAU;AAAA,MACR;AAAA;AAAA,QACE,OAAO;AAAA,MACf;AAAA,MACMP;AAAA,IACN;AAAA,EACA,GAEQkC,IAAkB,6DAMbrI,EAAK,sBAAsB,WAEhCsI,KAAoB;AAAA,IACxB,OAAO;AAAA,MACL;AAAA,MAAiB;AAAA,MACjB5B;AAAAA,MAAY;AAAA,MACZ;AAAA,MACA;AAAA;AAAA,MACAt7C,EAAM,UAAUi9C,CAAe;AAAA,IACrC;AAAA,IACI,UAAU;AAAA,IACV,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,UAAU;AAAA,MACRlC;AAAA,IACN;AAAA,EACA;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,MAAM,OAAO,OAAO,KAAK;AAAA,IACnC,UAAUc;AAAAA;AAAAA,IAEV,SAAS,EAAE,iBAAAS,GAAiB,iBAAAE,EAAe;AAAA,IAC3C,SAAS;AAAA,IACT,UAAU;AAAA,MACR5H,EAAK,QAAQ;AAAA,QACX,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,WAAW;AAAA,MACnB,CAAO;AAAA,MACD6H;AAAA,MACA7H,EAAK;AAAA,MACLA,EAAK;AAAA,MACLoH;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,MACA3F;AAAA;AAAA,MAEA,EAAE,OAAO,QAAO;AAAA,MAChBuF;AAAA,MACAS;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,OAAOlB,IAAat7C,EAAM,UAAU,GAAG;AAAA,QACvC,WAAW;AAAA,MACnB;AAAA,MACMk9C;AAAA,MACA;AAAA;AAAA,QACE,OAAO,MAAMtI,EAAK,iBAAiB;AAAA,QACnC,UAAU;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,UACR4B;AAAA,UACA5B,EAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA;AAAA;AAAA;AAAA,YAIX,OAAOqI;AAAA,YACP,aAAa;AAAA,YACb,KAAK;AAAA,YACL,UAAU;AAAA,cACR;AAAA,gBACE,WAAW;AAAA,gBACX,UAAU;AAAA,kBACR;AAAA,oBACE,OAAOrI,EAAK;AAAA,oBACZ,WAAW;AAAA,kBAC/B;AAAA,kBACkB;AAAA,oBACE,WAAW;AAAA,oBACX,OAAO;AAAA,oBACP,MAAM;AAAA,kBAC1B;AAAA,kBACkB;AAAA,oBACE,OAAO;AAAA,oBACP,KAAK;AAAA,oBACL,cAAc;AAAA,oBACd,YAAY;AAAA,oBACZ,UAAUiH;AAAAA,oBACV,UAAUS;AAAA,kBAC9B;AAAA,gBACA;AAAA,cACA;AAAA,YACA;AAAA,UACA;AAAA,UACU;AAAA;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA;AAAA,YACE,UAAU;AAAA,cACR,EAAE,OAAOf,EAAS,OAAO,KAAKA,EAAS,IAAG;AAAA,cAC1C,EAAE,OAAOC,EAAgB;AAAA,cACzB;AAAA,gBACE,OAAOC,EAAQ;AAAA;AAAA;AAAA,gBAGf,YAAYA,EAAQ;AAAA,gBACpB,KAAKA,EAAQ;AAAA,cAC7B;AAAA,YACA;AAAA,YACY,aAAa;AAAA,YACb,UAAU;AAAA,cACR;AAAA,gBACE,OAAOA,EAAQ;AAAA,gBACf,KAAKA,EAAQ;AAAA,gBACb,MAAM;AAAA,gBACN,UAAU,CAAC,MAAM;AAAA,cACjC;AAAA,YACA;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACMiB;AAAA,MACA;AAAA;AAAA;AAAA,QAGE,eAAe;AAAA,MACvB;AAAA,MACM;AAAA;AAAA;AAAA;AAAA,QAIE,OAAO,oBAAoB9H,EAAK,sBAC9B;AAAA;AAAA,QAOF,aAAY;AAAA,QACZ,OAAO;AAAA,QACP,UAAU;AAAA,UACRmG;AAAA,UACAnG,EAAK,QAAQA,EAAK,YAAY,EAAE,OAAO0G,GAAY,WAAW,iBAAgB,CAAE;AAAA,QAC1F;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACMyB;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,QACE,OAAO,QAAQzB;AAAAA,QACf,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO,CAAE,wBAAwB;AAAA,QACjC,WAAW,EAAE,GAAG,iBAAgB;AAAA,QAChC,UAAU,CAAEP,CAAM;AAAA,MAC1B;AAAA,MACM8B;AAAA,MACAF;AAAA,MACAJ;AAAA,MACAS;AAAA,MACA;AAAA,QACE,OAAO;AAAA;AAAA,MACf;AAAA,IACA;AAAA,EACA;AACA;ACtvBA,SAASt7B,GAAKkzB,GAAM;AAClB,QAAMuI,IAAY;AAAA,IAChB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,WAAW;AAAA,EACf,GACQC,IAAc;AAAA,IAClB,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,EACf,GACQjG,IAAW;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAMQkG,IAAgB;AAAA,IACpB,OAAO;AAAA,IACP,eAAelG,EAAS,KAAK,GAAG;AAAA,EACpC;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,OAAO;AAAA,IACjB,UAAS;AAAA,MACP,SAASA;AAAA,IACf;AAAA,IACI,UAAU;AAAA,MACRgG;AAAA,MACAC;AAAA,MACAxI,EAAK;AAAA,MACLyI;AAAA,MACAzI,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,IACX;AAAA,IACI,SAAS;AAAA,EACb;AACA;AClDA,IAAIyF,KAAgB,mBAChBC,KAAO,OAAOD,EAAa,KAC3BE,KAAY,+BACZC,KAAU;AAAA,EACZ,WAAW;AAAA,EACX,UAAU;AAAA;AAAA;AAAA,IAGR,EAAE,OAAO,QAAQH,EAAa,MAAMC,EAAI,YAAYA,EAAI,eACzCD,EAAa,cAAa;AAAA;AAAA,IAEzC,EAAE,OAAO,OAAOA,EAAa,MAAMC,EAAI,+BAA8B;AAAA,IACrE,EAAE,OAAO,IAAIA,EAAI,cAAa;AAAA,IAC9B,EAAE,OAAO,OAAOD,EAAa,aAAY;AAAA;AAAA,IAGzC,EAAE,OAAO,aAAaE,EAAS,UAAUA,EAAS,SAASA,EAAS,eACrDF,EAAa,cAAa;AAAA;AAAA,IAGzC,EAAE,OAAO,iCAAgC;AAAA;AAAA,IAGzC,EAAE,OAAO,YAAYE,EAAS,YAAW;AAAA;AAAA,IAGzC,EAAE,OAAO,yBAAwB;AAAA;AAAA,IAGjC,EAAE,OAAO,gCAA+B;AAAA,EAC5C;AAAA,EACE,WAAW;AACb;AAWA,SAAS+C,GAAO1I,GAAM;AACpB,QAAMsC,IAAW;AAAA,IACf,SACE;AAAA,IAKF,UACE;AAAA,IACF,SACE;AAAA,EACN,GACQqG,IAAsB;AAAA,IAC1B,WAAW;AAAA,IACX,OAAO;AAAA,IACP,QAAQ,EAAE,UAAU;AAAA,MAClB;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,IACA,EAAK;AAAA,EACL,GACQC,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO5I,EAAK,sBAAsB;AAAA,EACtC,GAGQ2B,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,CAAE3B,EAAK,aAAa;AAAA,EAClC,GACQ6I,IAAW;AAAA,IACf,WAAW;AAAA,IACX,OAAO,QAAQ7I,EAAK;AAAA,EACxB,GACQ4D,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACRiF;AAAA,UACAlH;AAAA,QACV;AAAA,MACA;AAAA;AAAA;AAAA;AAAA,MAIM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU,CAAE3B,EAAK,gBAAgB;AAAA,MACzC;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,UACRA,EAAK;AAAA,UACL6I;AAAA,UACAlH;AAAA,QACV;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACE,EAAAA,EAAM,SAAS,KAAKiC,CAAM;AAE1B,QAAMkF,IAAsB;AAAA,IAC1B,WAAW;AAAA,IACX,OAAO,kFAAkF9I,EAAK,sBAAsB;AAAA,EACxH,GACQkG,IAAa;AAAA,IACjB,WAAW;AAAA,IACX,OAAO,MAAMlG,EAAK;AAAA,IAClB,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACRA,EAAK,QAAQ4D,GAAQ,EAAE,WAAW,SAAQ,CAAE;AAAA,UAC5C;AAAA,QACV;AAAA,MACA;AAAA,IACA;AAAA,EACA,GAKQmF,IAAqBnD,IACrBoD,IAAwBhJ,EAAK;AAAA,IACjC;AAAA,IAAQ;AAAA,IACR,EAAE,UAAU,CAAEA,EAAK,oBAAoB,EAAE;AAAA,EAC7C,GACQiJ,IAAoB,EAAE,UAAU;AAAA,IACpC;AAAA,MACE,WAAW;AAAA,MACX,OAAOjJ,EAAK;AAAA,IAClB;AAAA,IACI;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAU,CAAA;AAAA;AAAA,IAChB;AAAA,EACA,EAAG,GACKkJ,IAAqBD;AAC3B,SAAAC,EAAmB,SAAS,CAAC,EAAE,WAAW,CAAED,CAAiB,GAC7DA,EAAkB,SAAS,CAAC,EAAE,WAAW,CAAEC,CAAkB,GAEtD;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAU5G;AAAA,IACV,UAAU;AAAA,MACRtC,EAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,UACE,WAAW;AAAA,UACX,UAAU;AAAA,YACR;AAAA,cACE,WAAW;AAAA,cACX,OAAO;AAAA,YACrB;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACMA,EAAK;AAAA,MACLgJ;AAAA,MACAL;AAAA,MACAC;AAAA,MACAE;AAAA,MACA5C;AAAA,MACA;AAAA,QACE,WAAW;AAAA,QACX,eAAe;AAAA,QACf,KAAK;AAAA,QACL,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,UAAU5D;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAOtC,EAAK,sBAAsB;AAAA,YAClC,aAAa;AAAA,YACb,WAAW;AAAA,YACX,UAAU,CAAEA,EAAK,qBAAqB;AAAA,UAClD;AAAA,UACU;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,YACV,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,YAAY;AAAA,YACZ,UAAUsC;AAAA,YACV,WAAW;AAAA,YACX,UAAU;AAAA,cACR;AAAA,gBACE,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,gBAAgB;AAAA,gBAChB,UAAU;AAAA,kBACR2G;AAAA,kBACAjJ,EAAK;AAAA,kBACLgJ;AAAA,gBAClB;AAAA,gBACgB,WAAW;AAAA,cAC3B;AAAA,cACchJ,EAAK;AAAA,cACLgJ;AAAA,cACAF;AAAA,cACA5C;AAAA,cACAtC;AAAA,cACA5D,EAAK;AAAA,YACnB;AAAA,UACA;AAAA,UACUgJ;AAAA,QACV;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAhJ,EAAK;AAAA,QACf;AAAA,QACQ,YAAY;AAAA,UACV,GAAG;AAAA,QACb;AAAA,QACQ,UAAU;AAAA,QACV,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,UAAU;AAAA,UACR,EAAE,eAAe,gDAA+C;AAAA,UAChEA,EAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA,YACZ,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,WAAW;AAAA,UACvB;AAAA,UACU8I;AAAA,UACA5C;AAAA,QACV;AAAA,MACA;AAAA,MACMtC;AAAA,MACA;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA;AAAA,MACjB;AAAA,MACMmF;AAAA,IACN;AAAA,EACA;AACA;AC3RA,MAAM/E,KAAQ,CAAChE,OACN;AAAA,EACL,WAAW;AAAA,IACT,OAAO;AAAA,IACP,OAAO;AAAA,EACb;AAAA,EACI,eAAeA,EAAK;AAAA,EACpB,UAAU;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,EACb;AAAA,EACI,mBAAmB;AAAA,IACjB,WAAW;AAAA,IACX,OAAO;AAAA,EACb;AAAA,EACI,yBAAyB;AAAA,IACvB,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,MACRA,EAAK;AAAA,MACLA,EAAK;AAAA,IACb;AAAA,EACA;AAAA,EACI,iBAAiB;AAAA,IACf,OAAO;AAAA,IACP,OAAOA,EAAK,YAAY;AAAA,IASxB,WAAW;AAAA,EACjB;AAAA,EACI,cAAc;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,EACb;AACA,IAGMiE,KAAY;AAAA,EAChf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEMC,KAAO;AAAA,EACX,GAAGF;AAAAA,EACH,GAAGC;AACL,GAKME,KAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE,KAAI,EAAG,QAAO,GAGVC,KAAiB;AAAA,EACrkB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE,KAAI,EAAG,QAAO,GAEVC,KAAa;AAAA,EACjmB9E,GAAe,OAAOC,EAAe,EAAE,KAAI,EAAG,QAAO;AAY9E,SAAS8E,GAAKpJ,GAAM;AAClB,QAAMyE,IAAQT,GAAMhE,CAAI,GAClBqJ,IAAqBF,IAErBxE,IAAe,mBACfE,IAAW,WACXyE,IAAkB,MAAMzE,IAAW,UAAUA,IAAW,QAIxD0E,IAAQ,CAAA,GAAUC,IAAc,CAAA,GAEhCC,IAAc,SAASpnD,GAAG;AAC9B,WAAO;AAAA;AAAA,MAEL,WAAW;AAAA,MACX,OAAO,OAAOA,IAAI,QAAQA;AAAA,IAChC;AAAA,EACE,GAEMqnD,IAAa,SAASh2D,GAAMsiB,GAAO2zC,GAAW;AAClD,WAAO;AAAA,MACL,WAAWj2D;AAAA,MACX,OAAOsiB;AAAA,MACP,WAAW2zC;AAAA,IACjB;AAAA,EACE,GAEMC,IAAc;AAAA,IAClB,UAAU;AAAA,IACV,SAASjF;AAAA,IACT,WAAWP,GAAe,KAAK,GAAG;AAAA,EACtC,GAEQyF,IAAc;AAAA;AAAA,IAElB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUL;AAAA,IACV,UAAUI;AAAA,IACV,WAAW;AAAA,EACf;AAGE,EAAAJ,EAAY;AAAA,IACVxJ,EAAK;AAAA,IACLA,EAAK;AAAA,IACLyJ,EAAY,GAAG;AAAA,IACfA,EAAY,GAAG;AAAA,IACfhF,EAAM;AAAA;AAAA,IACN;AAAA,MACE,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,WAAW;AAAA,QACX,KAAK;AAAA,QACL,YAAY;AAAA,MACpB;AAAA,IACA;AAAA,IACIA,EAAM;AAAA,IACNoF;AAAA,IACAH,EAAW,YAAY,QAAQ7E,GAAU,EAAE;AAAA,IAC3C6E,EAAW,YAAY,SAAS7E,IAAW,KAAK;AAAA,IAChD6E,EAAW,YAAY,YAAY;AAAA;AAAA,IACnC;AAAA;AAAA,MACE,WAAW;AAAA,MACX,OAAO7E,IAAW;AAAA,MAClB,KAAK;AAAA,MACL,aAAa;AAAA,MACb,YAAY;AAAA,IAClB;AAAA,IACIJ,EAAM;AAAA,IACN,EAAE,eAAe,UAAS;AAAA,IAC1BA,EAAM;AAAA,EACV;AAEE,QAAMqF,IAAsBN,EAAY,OAAO;AAAA,IAC7C,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUD;AAAA,EACd,CAAG,GAEKQ,IAAmB;AAAA,IACvB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,UAAU,CAAE,EAAE,eAAe,UAAS,CAAE,EAAG,OAAOP,CAAW;AAAA;AAAA,EACjE,GAIQQ,IAAY;AAAA,IAChB,OAAOV,IAAkB;AAAA,IACzB,aAAa;AAAA,IACb,KAAK;AAAA,IACL,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAO,sBAAqB;AAAA,MAC9B7E,EAAM;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,OAAO,SAASF,GAAW,KAAK,GAAG,IAAI;AAAA,QACvC,KAAK;AAAA,QACL,QAAQ;AAAA,UACN,gBAAgB;AAAA,UAChB,SAAS;AAAA,UACT,WAAW;AAAA,UACX,UAAUiF;AAAA,QACpB;AAAA,MACA;AAAA,IACA;AAAA,EACA,GAEQS,IAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,UAAUL;AAAA,MACV,WAAW;AAAA,MACX,UAAUJ;AAAA,MACV,WAAW;AAAA,IACjB;AAAA,EACA,GAGQU,IAAgB;AAAA,IACpB,WAAW;AAAA,IACX,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAKR;AAAA,QACE,OAAO,MAAMrF,IAAW;AAAA,QACxB,WAAW;AAAA,MACnB;AAAA,MACM,EAAE,OAAO,MAAMA,EAAQ;AAAA,IAC7B;AAAA,IACI,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,WAAW;AAAA,MACX,UAAUiF;AAAA,IAChB;AAAA,EACA,GAEQK,IAAgB;AAAA;AAAA;AAAA;AAAA,IAIpB,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAOb;AAAA,QACP,KAAK;AAAA,MACb;AAAA,IACA;AAAA,IACI,aAAa;AAAA,IACb,WAAW;AAAA,IACX,SAAS;AAAA,IACT,WAAW;AAAA,IACX,UAAU;AAAA,MACRtJ,EAAK;AAAA,MACLA,EAAK;AAAA,MACL+J;AAAA,MACAL,EAAW,WAAW,QAAQ;AAAA,MAC9BA,EAAW,YAAY,SAAS7E,IAAW,KAAK;AAAA;AAAA,MAEhD;AAAA,QACE,OAAO,SAASV,GAAK,KAAK,GAAG,IAAI;AAAA,QACjC,WAAW;AAAA,MACnB;AAAA,MACMM,EAAM;AAAA,MACNiF,EAAW,gBAAgBJ,GAAiB,CAAC;AAAA,MAC7CI,EAAW,eAAe,MAAMJ,CAAe;AAAA,MAC/CI,EAAW,kBAAkB,QAAQJ,GAAiB,CAAC;AAAA,MACvDI,EAAW,gBAAgB,KAAK,CAAC;AAAA,MACjCjF,EAAM;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,OAAO,OAAOJ,GAAe,KAAK,GAAG,IAAI;AAAA,MACjD;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO,WAAWC,GAAgB,KAAK,GAAG,IAAI;AAAA,MACtD;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,QACX,UAAUwF;AAAA,MAClB;AAAA;AAAA,MACM,EAAE,OAAO,aAAY;AAAA;AAAA,MACrBrF,EAAM;AAAA,IACZ;AAAA,EACA,GAEQ2F,IAAuB;AAAA,IAC3B,OAAOvF,IAAW,SAAcwE,EAAmB,KAAK,GAAG,CAAC;AAAA,IAC5D,aAAa;AAAA,IACb,UAAU,CAAEc,CAAa;AAAA,EAC7B;AAEE,SAAAZ,EAAM;AAAA,IACJvJ,EAAK;AAAA,IACLA,EAAK;AAAA,IACLiK;AAAA,IACAC;AAAA,IACAE;AAAA,IACAJ;AAAA,IACAG;AAAA,IACAJ;AAAA,IACAtF,EAAM;AAAA,EACV,GAES;AAAA,IACL,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,UAAU8E;AAAA,EACd;AACA;AC/gCA,SAASc,GAAIrK,GAAM;AACjB,QAAMsK,IAAuB,YACvBC,IAAuB,YACvBC,IAAgB;AAAA,IACpB,OAAOF;AAAA,IACP,KAAKC;AAAA,IACL,UAAU,CAAE,MAAM;AAAA,EACtB,GACQrF,IAAW;AAAA,IACflF,EAAK,QAAQ,UAAUsK,IAAuB,KAAK,GAAG;AAAA,IACtDtK,EAAK;AAAA,MACH,OAAOsK;AAAA,MACPC;AAAA,MACA;AAAA,QACE,UAAU,CAAEC,CAAa;AAAA,QACzB,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,EACA;AACE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,OAAO;AAAA,IACjB,UAAU;AAAA,MACR,UAAUxK,EAAK;AAAA,MACf,SAAS;AAAA,MACT,SAAS;AAAA,MACT;AAAA;AAAA,QAEE;AAAA;AAAA,IAcR;AAAA,IACI,UAAUkF,EAAS,OAAO;AAAA,MACxB;AAAA,QACE,WAAW;AAAA,QACX,eAAe;AAAA,QACf,KAAK;AAAA,QACL,UAAU;AAAA,UACRlF,EAAK,QAAQA,EAAK,YAAY,EAAE,OAAO,qDAAqD;AAAA,UAC5F;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,gBAAgB;AAAA,YAChB,UAAUkF;AAAA,UACtB;AAAA,QACA,EAAU,OAAOA,CAAQ;AAAA,MACzB;AAAA,MACMlF,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACL;AAAA,QACE,WAAW;AAAA,QACX,OAAOsK;AAAA,QACP,KAAKC;AAAA,QACL,UAAU,CAAEC,CAAa;AAAA,QACzB,WAAW;AAAA,MACnB;AAAA,IACA,CAAK;AAAA,EACL;AACA;ACtEA,SAASC,GAASzK,GAAM;AAEtB,QAAM6I,IAAW;AAAA,IACf,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,OAAO,WAAW7I,EAAK,sBAAsB;AAAA,QAC7C,UAAU,CAAEA,EAAK,gBAAgB;AAAA,MACzC;AAAA,MACM,EAAE,OAAO,iBAAgB;AAAA,IAC/B;AAAA,EACA,GAEQ8B,IAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR9B,EAAK;AAAA,MACL6I;AAAA,IACN;AAAA,EACA,GAEQ6B,IAAO;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,EAAE,UACR,iPAG8D;AAAA,IAClE,UAAU;AAAA,MACR7B;AAAA,MACA/G;AAAA;AAAA,IACN;AAAA,EACA,GAEQ6I,IAAa,EAAE,OAAO,MAAM3K,EAAK,sBAAsB,kBAAiB,GAExE4K,IAAO;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,IACf;AAAA,EACA,GAEQC,IAAS;AAAA,IACb,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,CAAEhC,CAAQ;AAAA,EACxB;AACE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAU;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,IAEf;AAAA,IACI,UAAU;AAAA,MACR7I,EAAK;AAAA,MACL6I;AAAA,MACA/G;AAAA,MACA4I;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,IACN;AAAA,EACA;AACA;AC9EA,SAASC,GAAS9K,GAAM;AACtB,QAAM50C,IAAQ40C,EAAK,OACb+K,IAAc;AAAA,IAClB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,aAAa;AAAA,IACb,WAAW;AAAA,EACf,GACQC,IAAkB;AAAA,IACtB,OAAO;AAAA,IACP,KAAK;AAAA,EACT,GACQC,IAAO;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER,EAAE,OAAO,gCAA+B;AAAA,MACxC,EAAE,OAAO,gCAA+B;AAAA;AAAA,MAExC;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM,EAAE,OAAO,QAAO;AAAA,MAChB;AAAA,QACE,OAAO;AAAA;AAAA;AAAA,QAGP,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,UACjB;AAAA,QACA;AAAA,QACQ,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,EACA,GACQC,IAAO;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,YAAY;AAAA,EAChB,GACQC,IAAiB;AAAA,IACrB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,YAAY;AAAA,MACpB;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,MACtB;AAAA,IACA;AAAA,EACA,GACQC,IAAa,2BACbC,IAAO;AAAA,IACX,UAAU;AAAA;AAAA;AAAA,MAGR;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAOjgD,EAAM,OAAO,aAAaggD,GAAY,YAAY;AAAA,QACzD,WAAW;AAAA,MACnB;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,IACI,aAAa;AAAA,IACb,UAAU;AAAA,MACR;AAAA;AAAA,QAEE,OAAO;AAAA,MAAU;AAAA,MACnB;AAAA,QACE,WAAW;AAAA,QACX,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,YAAY;AAAA,MACpB;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,YAAY;AAAA,MACpB;AAAA,IACA;AAAA,EACA,GACQE,IAAO;AAAA,IACX,WAAW;AAAA,IACX,UAAU,CAAA;AAAA;AAAA,IACV,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,IACA;AAAA,EACA,GACQC,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU,CAAA;AAAA;AAAA,IACV,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,EACA,GAKQC,IAAsBxL,EAAK,QAAQsL,GAAM,EAAE,UAAU,CAAA,GAAI,GACzDG,IAAsBzL,EAAK,QAAQuL,GAAQ,EAAE,UAAU,CAAA,GAAI;AACjE,EAAAD,EAAK,SAAS,KAAKG,CAAmB,GACtCF,EAAO,SAAS,KAAKC,CAAmB;AAExC,MAAIE,IAAc;AAAA,IAChBX;AAAA,IACAM;AAAA,EACJ;AAEE;AAAA,IACEC;AAAA,IACAC;AAAA,IACAC;AAAA,IACAC;AAAA,EACJ,EAAI,QAAQ,CAAAvpD,MAAK;AACb,IAAAA,EAAE,WAAWA,EAAE,SAAS,OAAOwpD,CAAW;AAAA,EAC5C,CAAC,GAEDA,IAAcA,EAAY,OAAOJ,GAAMC,CAAM,GAqCtC;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAU;AAAA,MA1CG;AAAA,QACb,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAUG;AAAA,UAClB;AAAA,UACM;AAAA,YACE,OAAO;AAAA,YACP,UAAU;AAAA,cACR,EAAE,OAAO,UAAS;AAAA,cAClB;AAAA,gBACE,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,UAAUA;AAAA,cACtB;AAAA,YACA;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MAwBMX;AAAA,MACAG;AAAA,MACAI;AAAA,MACAC;AAAA,MAzBe;AAAA,QACjB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,UAAUG;AAAA,QACV,KAAK;AAAA,MACT;AAAA,MAsBMT;AAAA,MACAD;AAAA,MACAK;AAAA,MACAF;AAAA,MAvBW;AAAA;AAAA,QAEb,OAAO;AAAA,QACP,OAAO;AAAA,MACX;AAAA,IAqBA;AAAA,EACA;AACA;AC7OA,SAASQ,GAAW3L,GAAM;AACxB,QAAM4L,IAAY;AAAA,IAChB,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GACQC,IAAgB,0BAuJhBvJ,IAAW;AAAA,IACf,qBAAqB;AAAA,MACnB;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAUuyBI,SAxBe;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IAgBI,UAfgB;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IAUI,MA/JY;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EAgJA,GACQC,IAAiB;AAAA,IACrB,UAAUD;AAAA,IACV,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,EACA;AACE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAUvJ;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MACRsJ;AAAA,MACA5L,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACL;AAAA,QACE,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,SAAS;AAAA,YACT,UAAU,CAAEA,EAAK,gBAAgB;AAAA,UAC7C;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,EAAE,SACR,iFAC+B;AAAA,QACnC,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACUA,EAAK,QAAQA,EAAK,mBAAmB,EAAE,WAAW,UAAU;AAAA,UAC5D;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,SAAS;AAAA,UACrB;AAAA,UACUA,EAAK;AAAA,UACLA,EAAK;AAAA,QACf;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO,MAAM8L,EAAe,QAAQ,KAAK,GAAG,IAAI;AAAA,QAChD,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,UAAUA;AAAA,QACV,UAAU,CAAE9L,EAAK,qBAAqB;AAAA,MAC9C;AAAA,MACM;AAAA,QACE,OAAO,QAAQA,EAAK;AAAA,QACpB,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,EACA;AACA;AClPA,SAAS+L,GAAK/L,GAAM;AAClB,QAAM50C,IAAQ40C,EAAK,OACbsC,IAAW;AAAA,IACfkB,wBAClBC,IAAgB;AAAA,IACpB,UAAU;AAAA,IACV,SAAS3J,EAAS,KAAK,GAAG;AAAA,EAC9B,GACQX,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUsK;AAAA,EACd,GACQC,IAAS;AAAA,IACb,OAAO;AAAA,IACP,KAAK;AAAA;AAAA,EAET,GACQC,IAAO;AAAA,IACX,OAAO;AAAA,IACP,OAAO;AAAA,EACX,GACQ1K,IAAM;AAAA,IACV,OAAO;AAAA,IACP,UAAU;AAAA,MACR,EAAE,OAAO,OAAM;AAAA,MACf;AAAA,QAAE,OAAOr2C,EAAM;AAAA,UACb;AAAA;AAAA;AAAA,UAGA;AAAA,QACR;AAAA,MACA;AAAA,MACM;AAAA;AAAA,QAEE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,IACI,UAAU,CAAE+gD,CAAI;AAAA,EACpB,GACQhF,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA;AAAA;AAAA;AAAA,MAIR,EAAE,OAAO,qBAAoB;AAAA;AAAA,MAE7B,EAAE,OAAO,kDAAiD;AAAA;AAAA,MAE1D,EAAE,OAAO,oBAAmB;AAAA,MAC5B,EAAE,OAAO,iCAAgC;AAAA,MACzC,EAAE,OAAO,qBAAoB;AAAA,IACnC;AAAA,IACI,WAAW;AAAA,EACf,GACQiF,IAAkB;AAAA,IACtBpM,EAAK;AAAA,IACL2B;AAAA,IACAF;AAAA,EACJ,GACQ4K,IAAe;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,EACJ,GAMQC,IAAmB,CAACnoD,GAAQqK,GAAMtS,IAAQ,UAAU;AACxD,UAAMqwD,IAAUrwD,MAAU,QACtBA,IACAkP,EAAM,OAAOlP,GAAOsS,CAAI;AAC5B,WAAOpD,EAAM;AAAA,MACXA,EAAM,OAAO,OAAOjH,GAAQ,GAAG;AAAA,MAC/BqK;AAAA,MACA;AAAA,MACA+9C;AAAA,MACA;AAAA,MACArwD;AAAA,MACA8vD;AAAA,IACN;AAAA,EACE,GAMMQ,IAAY,CAACroD,GAAQqK,GAAMtS,MACxBkP,EAAM;AAAA,IACXA,EAAM,OAAO,OAAOjH,GAAQ,GAAG;AAAA,IAC/BqK;AAAA,IACA;AAAA,IACAtS;AAAA,IACA8vD;AAAA,EACN,GAEQS,IAAwB;AAAA,IAC5BhL;AAAA,IACAzB,EAAK;AAAA,IACLA,EAAK;AAAA,MACH;AAAA,MACA;AAAA,MACA,EAAE,gBAAgB,GAAI;AAAA,IAC5B;AAAA,IACIkM;AAAA,IACA;AAAA,MACE,WAAW;AAAA,MACX,UAAUE;AAAA,MACV,UAAU;AAAA,QACR;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACrB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACrB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACrB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACrB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACrB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACrB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,UAAU,CAAEpM,EAAK,gBAAgB;AAAA,QAC3C;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,QACf;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,UAAU,CAAEA,EAAK,gBAAgB;AAAA,QAC3C;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,WAAW;AAAA,QACrB;AAAA,QACQ;AAAA,UACE,OAAO;AAAA,UACP,WAAW;AAAA,QACrB;AAAA,MACA;AAAA,IACA;AAAA,IACImH;AAAA,IACA;AAAA;AAAA,MACE,OAAO,aAAanH,EAAK,iBAAiB;AAAA,MAC1C,UAAU;AAAA,MACV,WAAW;AAAA,MACX,UAAU;AAAA,QACRA,EAAK;AAAA,QACL;AAAA,UACE,WAAW;AAAA,UACX,UAAU;AAAA;AAAA,YAER,EAAE,OAAOsM,EAAiB,UAAUlhD,EAAM,OAAO,GAAGihD,GAAc,EAAE,SAAS,GAAI,CAAE,CAAC,EAAC;AAAA;AAAA,YAErF,EAAE,OAAOC,EAAiB,UAAU,OAAO,KAAK,EAAC;AAAA,YACjD,EAAE,OAAOA,EAAiB,UAAU,OAAO,KAAK,EAAC;AAAA,YACjD,EAAE,OAAOA,EAAiB,UAAU,OAAO,KAAK,EAAC;AAAA,UAC7D;AAAA,UACU,WAAW;AAAA,QACrB;AAAA,QACQ;AAAA,UACE,WAAW;AAAA,UACX,UAAU;AAAA,YACR;AAAA;AAAA;AAAA,cAGE,OAAO;AAAA,cACP,WAAW;AAAA,YACzB;AAAA;AAAA,YAEY,EAAE,OAAOE,EAAU,aAAa,MAAM,IAAI,EAAC;AAAA;AAAA,YAE3C,EAAE,OAAOA,EAAU,QAAQphD,EAAM,OAAO,GAAGihD,GAAc,EAAE,SAAS,IAAM,GAAG,IAAI,EAAC;AAAA;AAAA,YAElF,EAAE,OAAOG,EAAU,QAAQ,MAAM,IAAI,EAAC;AAAA,YACtC,EAAE,OAAOA,EAAU,QAAQ,MAAM,IAAI,EAAC;AAAA,YACtC,EAAE,OAAOA,EAAU,QAAQ,MAAM,IAAI,EAAC;AAAA,UAClD;AAAA,QACA;AAAA,MACA;AAAA,IACA;AAAA,IACI;AAAA,MACE,WAAW;AAAA,MACX,eAAe;AAAA,MACf,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,UAAU,CAAExM,EAAK,YAAYmM,CAAI;AAAA,IACvC;AAAA,IACI;AAAA,MACE,WAAW;AAAA,MACX,eAAe;AAAA,MACf,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,UAAU,CAAEnM,EAAK,YAAYmM,GAAMhF,CAAM;AAAA,IAC/C;AAAA,IACI;AAAA,MACE,OAAO;AAAA,MACP,WAAW;AAAA,IACjB;AAAA,IACI;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,aAAa;AAAA,MACb,UAAU;AAAA,QACR;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACrB;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACE,SAAAxF,EAAM,WAAW8K,GACjBP,EAAO,WAAWO,GAEX;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAUR;AAAA,IACV,UAAUQ;AAAA,EACd;AACA;ACzeA,SAASC,GAAI1M,GAAM;AACjB,QAAM50C,IAAQ40C,EAAK,OAGb2M,IAAe,0BACf9H,IAAWz5C,EAAM;AAAA,IACrB;AAAA,IACAuhD;AAAA,EAAY,GAERC,IAA4BxhD,EAAM;AAAA,IACtC;AAAA,IACAuhD;AAAA,EAAY,GACRE,IAAiBzhD,EAAM;AAAA,IAC3B;AAAA,IACAuhD;AAAA,EAAY,GACR9D,IAAW;AAAA,IACf,OAAO;AAAA,IACP,OAAO,SAAShE;AAAA,EACpB,GACQrE,IAAe;AAAA,IACnB,OAAO;AAAA,IACP,UAAU;AAAA,MACR,EAAE,OAAO,UAAU,WAAW,GAAE;AAAA;AAAA,MAChC,EAAE,OAAO,OAAM;AAAA;AAAA,MAEf,EAAE,OAAO,OAAO,WAAW,IAAG;AAAA,MAC9B,EAAE,OAAO,MAAK;AAAA;AAAA,IACpB;AAAA,EACA,GACQmB,IAAQ;AAAA,IACZ,OAAO;AAAA,IACP,UAAU;AAAA,MACR,EAAE,OAAO,QAAO;AAAA,MAChB;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,IACA;AAAA,EACA,GACQmL,IAAgB9M,EAAK,QAAQA,EAAK,kBAAkB,EAAE,SAAS,MAAO,GACtE+M,IAAgB/M,EAAK,QAAQA,EAAK,mBAAmB;AAAA,IACzD,SAAS;AAAA,IACT,UAAUA,EAAK,kBAAkB,SAAS,OAAO2B,CAAK;AAAA,EAC1D,CAAG,GAEKqL,IAAU;AAAA,IACd,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUhN,EAAK,kBAAkB,SAAS,OAAO2B,CAAK;AAAA,IACtD,YAAY,CAACz/C,GAAG+qD,MAAS;AAAE,MAAAA,EAAK,KAAK,cAAc/qD,EAAE,CAAC,KAAKA,EAAE,CAAC;AAAA,IAAG;AAAA,IACjE,UAAU,CAACA,GAAG+qD,MAAS;AAAE,MAAIA,EAAK,KAAK,gBAAgB/qD,EAAE,CAAC,KAAG+qD,EAAK,YAAW;AAAA,IAAI;AAAA,EACrF,GAEQC,IAASlN,EAAK,kBAAkB;AAAA,IACpC,OAAO;AAAA,IACP,KAAK;AAAA,EACT,CAAG,GAEKmN,IAAa;AAAA,IACbvJ,IAAS;AAAA,IACb,OAAO;AAAA,IACP,UAAU;AAAA,MACRmJ;AAAA,MACAD;AAAA,MACAE;AAAA,MACAE;AAAA,IACN;AAAA,EACA,GACQ/F,IAAS;AAAA,IACb,OAAO;AAAA,IACP,UAAU;AAAA,MACR,EAAE,OAAO,8BAA6B;AAAA;AAAA,MACtC,EAAE,OAAO,gCAA+B;AAAA;AAAA,MACxC,EAAE,OAAO,4CAA2C;AAAA;AAAA;AAAA,MAEpD,EAAE,OAAO,6EAA4E;AAAA,IAC3F;AAAA,IACI,WAAW;AAAA,EACf,GACQ5E,IAAW;AAAA,IACfhsBQjE,IAAW;AAAA,IACf,SAAS8K;AAAA,IACT,UAhBe,CAAC/jD,MAAU;AAE1B,YAAM9S,IAAS,CAAA;AACf,aAAA8S,EAAM,QAAQ,CAAAyD,MAAQ;AACpB,QAAAvW,EAAO,KAAKuW,CAAI,GACZA,EAAK,YAAW,MAAOA,IACzBvW,EAAO,KAAKuW,EAAK,aAAa,IAE9BvW,EAAO,KAAKuW,EAAK,aAAa;AAAA,MAElC,CAAC,GACMvW;AAAA,IACT,GAIoBgsD,CAAQ;AAAA,IAC1B,UAAUgE;AAAA,EACd,GAIQ8G,IAAoB,CAAChkD,MAClBA,EAAM,IAAI,CAAAyD,MACRA,EAAK,QAAQ,UAAU,EAAE,CACjC,GAGGwgD,IAAmB,EAAE,UAAU;AAAA,IACnC;AAAA,MACE,OAAO;AAAA,QACL;AAAA,QACAliD,EAAM,OAAO+hD,GAAY,GAAG;AAAA;AAAA,QAE5B/hD,EAAM,OAAO,OAAOiiD,EAAkB9G,CAAS,EAAE,KAAK,MAAM,GAAG,MAAM;AAAA,QACrEqG;AAAA,MACR;AAAA,MACM,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACX;AAAA,IACA;AAAA,EACA,EAAG,GAEKW,IAAqBniD,EAAM,OAAOy5C,GAAU,YAAY,GAExD2I,IAAsC,EAAE,UAAU;AAAA,IACtD;AAAA,MACE,OAAO;AAAA,QACLpiD,EAAM;AAAA,UACJ;AAAA,UACAA,EAAM,UAAU,aAAa;AAAA,QACvC;AAAA,QACQmiD;AAAA,MACR;AAAA,MACM,OAAO,EAAE,GAAG,oBAAmB;AAAA,IACrC;AAAA,IACI;AAAA,MACE,OAAO;AAAA,QACL;AAAA,QACA;AAAA,MACR;AAAA,MACM,OAAO,EAAE,GAAG,oBAAmB;AAAA,IACrC;AAAA,IACI;AAAA,MACE,OAAO;AAAA,QACLX;AAAA,QACAxhD,EAAM;AAAA,UACJ;AAAA,UACAA,EAAM,UAAU,aAAa;AAAA,QACvC;AAAA,QACQmiD;AAAA,MACR;AAAA,MACM,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACX;AAAA,IACA;AAAA,IACI;AAAA,MACE,OAAO;AAAA,QACLX;AAAA,QACAxhD,EAAM;AAAA,UACJ;AAAA,UACAA,EAAM,UAAU,aAAa;AAAA,QACvC;AAAA,MACA;AAAA,MACM,OAAO,EAAE,GAAG,cAAa;AAAA,IAC/B;AAAA,IACI;AAAA,MACE,OAAO;AAAA,QACLwhD;AAAA,QACA;AAAA,QACA;AAAA,MACR;AAAA,MACM,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACX;AAAA,IACA;AAAA,EACA,EAAG,GAEKa,IAAiB;AAAA,IACrB,OAAO;AAAA,IACP,OAAOriD,EAAM,OAAOy5C,GAAUz5C,EAAM,UAAU,GAAG,GAAGA,EAAM,UAAU,QAAQ,CAAC;AAAA,EACjF,GACQsiD,IAAc;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUpL;AAAA,IACV,UAAU;AAAA,MACRmL;AAAA,MACA5E;AAAA,MACA2E;AAAA,MACAxN,EAAK;AAAA,MACL4D;AAAA,MACAuD;AAAA,MACAmG;AAAA,IACN;AAAA,EACA,GACQK,IAAkB;AAAA,IACtB,WAAW;AAAA,IACX,OAAO;AAAA,MACL;AAAA;AAAA,MAEAviD,EAAM,OAAO,yBAAyBiiD,EAAkBD,CAAG,EAAE,KAAK,MAAM,GAAG,KAAKC,EAAkB9G,CAAS,EAAE,KAAK,MAAM,GAAG,MAAM;AAAA,MACjI1B;AAAA,MACAz5C,EAAM,OAAO+hD,GAAY,GAAG;AAAA,MAC5B/hD,EAAM,UAAU,QAAQ;AAAA,IAC9B;AAAA,IACI,OAAO,EAAE,GAAG,wBAAuB;AAAA,IACnC,UAAU,CAAEsiD,CAAW;AAAA,EAC3B;AACE,EAAAA,EAAY,SAAS,KAAKC,CAAe;AAEzC,QAAMC,IAAqB;AAAA,IACzBH;AAAA,IACAD;AAAA,IACAxN,EAAK;AAAA,IACL4D;AAAA,IACAuD;AAAA,IACAmG;AAAA,EACJ,GAEQ/I,IAAa;AAAA,IACjB,OAAOn5C,EAAM;AAAA,MAAO;AAAA,MAClBA,EAAM;AAAA,QACJwhD;AAAA,QACAC;AAAA,MACR;AAAA,IACA;AAAA,IACI,YAAY;AAAA,IACZ,KAAK;AAAA,IACL,UAAU;AAAA,IACV,UAAU;AAAA,MACR,SAAStK;AAAA,MACT,SAAS;AAAA,QACP;AAAA,QACA;AAAA,MACR;AAAA,IACA;AAAA,IACI,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR,SAASA;AAAA,UACT,SAAS;AAAA,YACP;AAAA,YACA;AAAA,UACZ;AAAA,QACA;AAAA,QACQ,UAAU;AAAA,UACR;AAAA,UACA,GAAGqL;AAAA,QACb;AAAA,MACA;AAAA,MACM,GAAGA;AAAA,MACH;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,UACR,EAAE,OAAOhB,EAAyB;AAAA,UAClC,EAAE,OAAOC,EAAc;AAAA,QACjC;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAEE,SAAO;AAAA,IACL,kBAAkB;AAAA,IAClB,UAAUvK;AAAA,IACV,UAAU;AAAA,MACRiC;AAAA,MACAvE,EAAK;AAAA,MACLA,EAAK,QAAQ,MAAM,GAAG;AAAA,MACtBA,EAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,EAAE,UAAU;AAAA,UACV;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,UACnB;AAAA,QACA,EAAS;AAAA,MACT;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,QACV,QAAQ;AAAA,UACN,OAAO;AAAA,UACP,KAAKA,EAAK;AAAA,UACV,UAAU;AAAA,YACR;AAAA,cACE,OAAO;AAAA,cACP,OAAO;AAAA,cACP,YAAY;AAAA,YAC1B;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACMQ;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,OAAO;AAAA,MACf;AAAA,MACMqI;AAAA,MACA8E;AAAA,MACAH;AAAA,MACA;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA3I;AAAA,QACV;AAAA,QACQ,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,MACMyI;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,QACX,eAAe;AAAA,QACf,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,UAAU;AAAA,UACR,EAAE,eAAe,MAAK;AAAA,UACtBtN,EAAK;AAAA,UACL;AAAA,YACE,OAAO;AAAA;AAAA,YACP,YAAY;AAAA,UACxB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA,YACZ,UAAUsC;AAAA,YACV,UAAU;AAAA,cACR;AAAA,cACAiC;AAAA,cACAsE;AAAA,cACA2E;AAAA,cACAxN,EAAK;AAAA,cACL4D;AAAA,cACAuD;AAAA,YACd;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,UACR;AAAA,YACE,eAAe;AAAA,YACf,SAAS;AAAA,UACrB;AAAA,UACU;AAAA,YACE,eAAe;AAAA,YACf,SAAS;AAAA,UACrB;AAAA,QACA;AAAA,QACQ,WAAW;AAAA,QACX,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,UAAU;AAAA,UACR,EAAE,eAAe,qBAAoB;AAAA,UACrCnH,EAAK;AAAA,QACf;AAAA,MACA;AAAA;AAAA;AAAA;AAAA,MAIM;AAAA,QACE,eAAe;AAAA,QACf,WAAW;AAAA,QACX,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU,CAAEA,EAAK,QAAQA,EAAK,uBAAuB,EAAE,OAAO,eAAe,CAAC;AAAA,MACtF;AAAA,MACM;AAAA,QACE,eAAe;AAAA,QACf,WAAW;AAAA,QACX,KAAK;AAAA,QACL,UAAU;AAAA;AAAA,UAER;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,UACnB;AAAA;AAAA,UAEUA,EAAK;AAAA,QACf;AAAA,MACA;AAAA,MACM4D;AAAA,MACAuD;AAAA,IACN;AAAA,EACA;AACA;ACtmBA,SAAS0G,GAAY7N,GAAM;AACzB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,aAAa;AAAA,QACb,UAAU;AAAA;AAAA;AAAA,UAGR;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UAClB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UAClB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UAClB;AAAA,UACUA,EAAK,QAAQA,EAAK,kBAAkB;AAAA,YAClC,SAAS;AAAA,YACT,WAAW;AAAA,YACX,UAAU;AAAA,YACV,MAAM;AAAA,UAClB,CAAW;AAAA,UACDA,EAAK,QAAQA,EAAK,mBAAmB;AAAA,YACnC,SAAS;AAAA,YACT,WAAW;AAAA,YACX,UAAU;AAAA,YACV,MAAM;AAAA,UAClB,CAAW;AAAA,QACX;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA;AC5CA,SAAS8N,GAAU9N,GAAM;AACvB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,IACN;AAAA,IACI,mBAAmB;AAAA,EACvB;AACA;ACTA,SAAS+N,GAAO/N,GAAM;AACpB,QAAM50C,IAAQ40C,EAAK,OACb6E,IAAW,WAAA,uCAAA,GAAoC,GAC/CmJ,IAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAsGQ1L,IAAW;AAAA,IACf,UAAU;AAAA,IACV,SAAS0L;AAAA,IACT,UAvGgB;AAAA,MAChkCI,SAhCe;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,IA0BI,MArBY;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EAQA,GAEQC,IAAS;AAAA,IACb,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GAEQtM,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUW;AAAA,IACV,SAAS;AAAA,EACb,GAEQ4L,IAAkB;AAAA,IACtB,OAAO;AAAA,IACP,WAAW;AAAA,EACf,GAEQtK,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU,CAAE5D,EAAK,gBAAgB;AAAA,IACjC,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACRA,EAAK;AAAA,UACLiO;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACRjO,EAAK;AAAA,UACLiO;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACRjO,EAAK;AAAA,UACLiO;AAAA,UACAC;AAAA,UACAvM;AAAA,QACV;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR3B,EAAK;AAAA,UACLiO;AAAA,UACAC;AAAA,UACAvM;AAAA,QACV;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR3B,EAAK;AAAA,UACLkO;AAAA,UACAvM;AAAA,QACV;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR3B,EAAK;AAAA,UACLkO;AAAA,UACAvM;AAAA,QACV;AAAA,MACA;AAAA,MACM3B,EAAK;AAAA,MACLA,EAAK;AAAA,IACX;AAAA,EACA,GAGQmO,IAAY,mBACZC,IAAa,QAAQD,CAAS,UAAUA,CAAS,SAASA,CAAS,QAMnEE,IAAY,OAAOL,EAAe,KAAK,GAAG,CAAC,IAC3C7G,IAAS;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWR;AAAA,QACE,OAAO,QAAQgH,CAAS,MAAMC,CAAU,eAAeD,CAAS,YAAYE,CAAS;AAAA,MAC7F;AAAA,MACM;AAAA,QACE,OAAO,IAAID,CAAU;AAAA,MAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQM;AAAA,QACE,OAAO,0CAA0CC,CAAS;AAAA,MAClE;AAAA,MACM;AAAA,QACE,OAAO,4BAA4BA,CAAS;AAAA,MACpD;AAAA,MACM;AAAA,QACE,OAAO,6BAA6BA,CAAS;AAAA,MACrD;AAAA,MACM;AAAA,QACE,OAAO,mCAAmCA,CAAS;AAAA,MAC3D;AAAA;AAAA;AAAA,MAIM;AAAA,QACE,OAAO,OAAOF,CAAS,WAAWE,CAAS;AAAA,MACnD;AAAA,IACA;AAAA,EACA,GACQC,IAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAOljD,EAAM,UAAU,SAAS;AAAA,IAChC,KAAK;AAAA,IACL,UAAUk3C;AAAA,IACV,UAAU;AAAA,MACR;AAAA;AAAA,QACE,OAAO;AAAA,MACf;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,gBAAgB;AAAA,MACxB;AAAA,IACA;AAAA,EACA,GACQ6D,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,MAAM;AAAA,MACd;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,UAAU7D;AAAA,QACV,UAAU;AAAA,UACR;AAAA,UACA2L;AAAA,UACA9G;AAAA,UACAvD;AAAA,UACA5D,EAAK;AAAA,QACf;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACE,SAAA2B,EAAM,WAAW;AAAA,IACfiC;AAAA,IACAuD;AAAA,IACA8G;AAAA,EACJ,GAES;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,cAAc;AAAA,IACd,UAAU3L;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MACR2L;AAAA,MACA9G;AAAA,MACA;AAAA;AAAA,QAEE,OAAO;AAAA,QACP,OAAO;AAAA,MACf;AAAA,MACM;AAAA;AAAA;AAAA,QAGE,eAAe;AAAA,QACf,WAAW;AAAA,MACnB;AAAA,MACM,EAAE,OAAO,UAAU,OAAO,UAAS;AAAA,MACnCvD;AAAA,MACA0K;AAAA,MACAtO,EAAK;AAAA,MACL;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UAAS;AAAA,UACT6E;AAAA,QACV;AAAA,QACQ,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,QACQ,UAAU,CAAEsB,CAAM;AAAA,MAC1B;AAAA,MACM;AAAA,QACE,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,cACL;AAAA,cAAW;AAAA,cACXtB;AAAA,cAAU;AAAA,cACV;AAAA,cAASA;AAAA,cAAS;AAAA,YAChC;AAAA,UACA;AAAA,UACU;AAAA,YACE,OAAO;AAAA,cACL;AAAA,cAAW;AAAA,cACXA;AAAA,YACd;AAAA,UACA;AAAA,QACA;AAAA,QACQ,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACRsC;AAAA,UACAhB;AAAA,UACAvC;AAAA,QACV;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA;AC1aA,SAAS2K,GAAWvO,GAAM;AACxB,SAAO;AAAA,IACL,SAAS,CAAE,OAAO;AAAA,IAClB,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,QAAQ;AAAA;AAAA;AAAA,UAGN,KAAK;AAAA,UACL,QAAQ;AAAA,YACN,KAAK;AAAA,YACL,aAAa;AAAA,UACzB;AAAA,QACA;AAAA,QACQ,UAAU;AAAA,UACR,EAAE,OAAO,gBAAe;AAAA,UACxB,EAAE,OAAO,mBAAkB;AAAA,QACrC;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA;ACnBA,SAAS/jB,GAAE+jB,GAAM;AACf,QAAM50C,IAAQ40C,EAAK,OAOb6E,IAAW,wDACX2J,IAAkBpjD,EAAM;AAAA;AAAA,IAE5B;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,EACJ,GACQqjD,IAAe,oEACfC,IAAiBtjD,EAAM;AAAA,IAC3B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IAEN,UAAU;AAAA,MACR,UAAUy5C;AAAA,MACV,SACE;AAAA,MACF,SACE;AAAA,MAEF;AAAA;AAAA,QAEE;AAAA;AAAA,IAqBR;AAAA,IAEI,UAAU;AAAA;AAAA,MAER7E,EAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,EAAE,UAAU;AAAA,UACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAME,OAAO;AAAA,YACP,OAAO;AAAA,YACP,QAAQ;AAAA,cACN,KAAK50C,EAAM,UAAUA,EAAM;AAAA;AAAA,gBAEzB;AAAA;AAAA,gBAEA;AAAA,cAChB,CAAe;AAAA,cACD,YAAY;AAAA,YAC1B;AAAA,UACA;AAAA,UACU;AAAA;AAAA;AAAA,YAGE,OAAO;AAAA,YACP,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,cACR;AAAA,gBACE,OAAO;AAAA,gBACP,UAAU;AAAA,kBACR,EAAE,OAAOy5C,EAAQ;AAAA,kBACjB,EAAE,OAAO,oBAAmB;AAAA,gBAC9C;AAAA,gBACgB,YAAY;AAAA,cAC5B;AAAA,YACA;AAAA,UACA;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,UACnB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,UACnB;AAAA,QACA,EAAS;AAAA,MACT;AAAA,MAEM7E,EAAK;AAAA,MAEL;AAAA,QACE,OAAO;AAAA,QACP,UAAU,CAAEA,EAAK,gBAAgB;AAAA,QACjC,UAAU;AAAA,UACRA,EAAK,kBAAkB;AAAA,YACrB,OAAO;AAAA,YACP,KAAK;AAAA,UACjB,CAAW;AAAA,UACDA,EAAK,kBAAkB;AAAA,YACrB,OAAO;AAAA,YACP,KAAK;AAAA,UACjB,CAAW;AAAA,UACDA,EAAK,kBAAkB;AAAA,YACrB,OAAO;AAAA,YACP,KAAK;AAAA,UACjB,CAAW;AAAA,UACDA,EAAK,kBAAkB;AAAA,YACrB,OAAO;AAAA,YACP,KAAK;AAAA,UACjB,CAAW;AAAA,UACDA,EAAK,kBAAkB;AAAA,YACrB,OAAO;AAAA,YACP,KAAK;AAAA,UACjB,CAAW;AAAA,UACDA,EAAK,kBAAkB;AAAA,YACrB,OAAO;AAAA,YACP,KAAK;AAAA,UACjB,CAAW;AAAA,UACD;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,WAAW;AAAA,UACvB;AAAA,QACA;AAAA,MACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWM;AAAA,QACE,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,cACL,GAAG;AAAA,cACH,GAAG;AAAA,YACjB;AAAA,YACY,OAAO;AAAA,cACLyO;AAAA,cACAD;AAAA,YACd;AAAA,UACA;AAAA,UACU;AAAA,YACE,OAAO;AAAA,cACL,GAAG;AAAA,cACH,GAAG;AAAA,YACjB;AAAA,YACY,OAAO;AAAA,cACL;AAAA,cACAA;AAAA,YACd;AAAA,UACA;AAAA,UACU;AAAA,YACE,OAAO;AAAA,cACL,GAAG;AAAA,cACH,GAAG;AAAA,YACjB;AAAA,YACY,OAAO;AAAA,cACLE;AAAA,cACAF;AAAA,YACd;AAAA,UACA;AAAA,UACU;AAAA,YACE,OAAO,EAAE,GAAG,SAAQ;AAAA,YACpB,OAAO;AAAA,cACL;AAAA;AAAA,cACAA;AAAA,YACd;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA;AAAA,MAGM;AAAA;AAAA,QAEE,OAAO,EAAE,GAAG,WAAU;AAAA,QACtB,OAAO;AAAA,UACL3J;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACV;AAAA,MACA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,QACX,UAAU;AAAA,UACR,EAAE,OAAO4J,EAAY;AAAA,UACrB,EAAE,OAAO,UAAS;AAAA,QAC5B;AAAA,MACA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,QACX,OAAOC;AAAA,MACf;AAAA,MAEM;AAAA;AAAA,QAEE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,CAAE,EAAE,OAAO,MAAK,CAAE;AAAA,MACpC;AAAA,IACA;AAAA,EACA;AACA;ACrPA,SAASC,GAAK3O,GAAM;AAClB,QAAM50C,IAAQ40C,EAAK,OACb4O,IAAiB,sFAEjBC,IAAgBzjD,EAAM;AAAA,IAC1B;AAAA;AAAA,IAEA;AAAA,EACJ,GAEQ0jD,IAA+B1jD,EAAM,OAAOyjD,GAAe,UAAU,GAarEE,IAAgB;AAAA,IACpB,qBAAqB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,qBAAqB;AAAA,MACnB;AAAA,MACA;AAAA,IACN;AAAA,IACI,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAtDe;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IA8CA;AAAA,IACI,UAAU;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,EACA,GACQC,IAAY;AAAA,IAChB,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GACQC,IAAa;AAAA,IACjB,OAAO;AAAA,IACP,KAAK;AAAA,EACT,GACQC,IAAgB;AAAA,IACpBlP,EAAK;AAAA,MACH;AAAA,MACA;AAAA,MACA,EAAE,UAAU,CAAEgP,CAAS,EAAE;AAAA,IAC/B;AAAA,IACIhP,EAAK;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,QACE,UAAU,CAAEgP,CAAS;AAAA,QACrB,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,IACIhP,EAAK,QAAQ,YAAYA,EAAK,gBAAgB;AAAA,EAClD,GACQ2B,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUoN;AAAA,EACd,GACQnL,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA,MACR5D,EAAK;AAAA,MACL2B;AAAA,IACN;AAAA,IACI,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA;AAAA;AAAA,MAGM,EAAE,OAAO,kBAAiB;AAAA,MAC1B,EAAE,OAAO,4BAA2B;AAAA,MACpC,EAAE,OAAO,kCAAiC;AAAA,MAC1C,EAAE,OAAO,0DAAyD;AAAA,MAClE,EAAE,OAAO,0BAAyB;AAAA,MAClC,EAAE,OAAO,YAAW;AAAA;AAAA,MAEpB;AAAA;AAAA;AAAA,QAGE,OAAOv2C,EAAM;AAAA,UACX;AAAA,UACAA,EAAM,UAAU,0CAA0C;AAAA,QACpE;AAAA,QACQ,UAAU;AAAA,UACR40C,EAAK,kBAAkB;AAAA,YACrB,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,cACRA,EAAK;AAAA,cACL2B;AAAA,YACd;AAAA,UACA,CAAW;AAAA,QACX;AAAA,MACA;AAAA,IACA;AAAA,EACA,GAKQwN,IAAU,qBACVC,IAAS,mBACTjI,IAAS;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER,EAAE,OAAO,OAAOgI,CAAO,SAASC,CAAM,iBAAiBA,CAAM,aAAY;AAAA;AAAA;AAAA,MAIzE,EAAE,OAAO,iCAAgC;AAAA,MACzC,EAAE,OAAO,iCAAgC;AAAA,MACzC,EAAE,OAAO,iCAAgC;AAAA,MACzC,EAAE,OAAO,6CAA4C;AAAA;AAAA,MAGrD,EAAE,OAAO,wBAAuB;AAAA,IACtC;AAAA,EACA,GAEQjJ,IAAS;AAAA,IACb,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,MACf;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,UAAU4I;AAAA,MAClB;AAAA,IACA;AAAA,EACA,GA2EQM,IAAwB;AAAA,IAC5BzL;AAAA,IA/DuB;AAAA,MACvB,UAAU;AAAA,QACR;AAAA,UACE,OAAO;AAAA,YACL;AAAA,YACAkL;AAAA,YACA;AAAA,YACAA;AAAA,UACV;AAAA,QACA;AAAA,QACM;AAAA,UACE,OAAO;AAAA,YACL;AAAA,YACAA;AAAA,UACV;AAAA,QACA;AAAA,MACA;AAAA,MACI,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACT;AAAA,MACI,UAAUC;AAAA,IACd;AAAA,IAjCyB;AAAA,MACrB,OAAO;AAAA,QACL;AAAA,QACAD;AAAA,MACN;AAAA,MACI,OAAO;AAAA,QACL,GAAG;AAAA,MACT;AAAA,MACI,UAAUC;AAAA,IACd;AAAA,IA8C0B;AAAA,MACtB,WAAW;AAAA,MACX,OAAO;AAAA,QACLD;AAAA,QACA;AAAA,MACN;AAAA,MACI,OAAO;AAAA,QACL,GAAG;AAAA,MACT;AAAA,IACA;AAAA,IA7B8B;AAAA,MAC1B,WAAW;AAAA,MACX,OAAO;AAAA,MACP,WAAW;AAAA,IACf;AAAA,IA4B0B;AAAA,MACtB,WAAW;AAAA,MACX,OAAOD;AAAA,MACP,OAAO;AAAA,IACX;AAAA,IA9B4B;AAAA,MACxB,OAAO;AAAA,QACL;AAAA,QAAO;AAAA,QACPD;AAAA,MACN;AAAA,MACI,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACT;AAAA,MACI,UAAU;AAAA,QACRzI;AAAA,MACN;AAAA,IACA;AAAA,IA4BI;AAAA;AAAA,MAEE,OAAOnG,EAAK,WAAW;AAAA,IAAI;AAAA,IAC7B;AAAA,MACE,WAAW;AAAA,MACX,OAAOA,EAAK,sBAAsB;AAAA,MAClC,WAAW;AAAA,IACjB;AAAA,IACI;AAAA,MACE,WAAW;AAAA,MACX,OAAO;AAAA,MACP,UAAU;AAAA,QACR4D;AAAA,QACA,EAAE,OAAOgL,EAAc;AAAA,MAC/B;AAAA,MACM,WAAW;AAAA,IACjB;AAAA,IACIzH;AAAA,IACA;AAAA;AAAA;AAAA,MAGE,WAAW;AAAA,MACX,OAAO;AAAA,IACb;AAAA,IACI;AAAA,MACE,WAAW;AAAA,MACX,OAAO;AAAA,MACP,KAAK;AAAA,MACL,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,WAAW;AAAA;AAAA,MACX,UAAU4H;AAAA,IAChB;AAAA,IACI;AAAA;AAAA,MACE,OAAO,MAAM/O,EAAK,iBAAiB;AAAA,MACnC,UAAU;AAAA,MACV,UAAU;AAAA,QACR;AAAA,UACE,WAAW;AAAA,UACX,UAAU;AAAA,YACRA,EAAK;AAAA,YACL2B;AAAA,UACZ;AAAA,UACU,SAAS;AAAA,UACT,UAAU;AAAA,YACR;AAAA,cACE,OAAO;AAAA,cACP,KAAK;AAAA,YACnB;AAAA,YACY;AAAA,cACE,OAAO;AAAA,cACP,KAAK;AAAA,YACnB;AAAA,YACY;AAAA,cACE,OAAO;AAAA,cACP,KAAK;AAAA,YACnB;AAAA,YACY;AAAA,cACE,OAAO;AAAA,cACP,KAAK;AAAA,YACnB;AAAA,YACY;AAAA,cACE,OAAO;AAAA,cACP,KAAK;AAAA,YACnB;AAAA,UACA;AAAA,QACA;AAAA,MACA,EAAQ,OAAOsN,GAAYC,CAAa;AAAA,MAClC,WAAW;AAAA,IACjB;AAAA,EACA,EAAI,OAAOD,GAAYC,CAAa;AAElC,EAAAvN,EAAM,WAAW0N,GACjBlJ,EAAO,WAAWkJ;AASlB,QAAMC,IAAc;AAAA,IAClB;AAAA,MACE,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,KAAK;AAAA,QACL,UAAUD;AAAA,MAClB;AAAA,IACA;AAAA,IACI;AAAA,MACE,WAAW;AAAA,MACX,OAAO,OAfW,UAeY,MAbX,oCAakC,MAZtC,mDAYyD;AAAA,MACxE,QAAQ;AAAA,QACN,KAAK;AAAA,QACL,UAAUN;AAAA,QACV,UAAUM;AAAA,MAClB;AAAA,IACA;AAAA,EACA;AAEE,SAAAH,EAAc,QAAQD,CAAU,GAEzB;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAUF;AAAA,IACV,SAAS;AAAA,IACT,UAAU,CAAE/O,EAAK,QAAQ,EAAE,QAAQ,OAAM,CAAE,CAAC,EACzC,OAAOsP,CAAW,EAClB,OAAOJ,CAAa,EACpB,OAAOG,CAAqB;AAAA,EACnC;AACA;ACnbA,SAASE,GAAKvP,GAAM;AAClB,QAAM50C,IAAQ40C,EAAK,OAGbwP,IAAiB,SACjBC,IAAsBrkD,EAAM,OAAOokD,GAAgBxP,EAAK,mBAAmB,GAC3E6E,IAAWz5C,EAAM,OAAOokD,GAAgBxP,EAAK,QAAQ,GAErD2N,IAAkB;AAAA,IACtB,WAAW;AAAA,IACX,WAAW;AAAA,IACX,OAAOviD,EAAM;AAAA,MACX;AAAA,MACA;AAAA,MACAy5C;AAAA,MACAz5C,EAAM,UAAU,OAAO;AAAA,IAAC;AAAA,EAC9B,GACQskD,IAAgB,yCAChBpN,IAAW;AAAA,IACff;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GACQoN,IAAW;AAAA;AAAA,IAEff,UAAU;AAAA,MACR,UAAU7C,EAAK,WAAW;AAAA,MAC1B,MAAM6C;AAAA,MACN,SAASP;AAAA,MACT,SAASC;AAAA,MACT,UAAUoN;AAAA,IAChB;AAAA,IACI,SAAS;AAAA,IACT,UAAU;AAAA,MACR3P,EAAK;AAAA,MACLA,EAAK,QAAQ,QAAQ,QAAQ,EAAE,UAAU,CAAE,MAAM,GAAI;AAAA,MACrDA,EAAK,QAAQA,EAAK,mBAAmB;AAAA,QACnC,OAAO;AAAA,QACP,SAAS;AAAA,MACjB,CAAO;AAAA,MACD;AAAA,QACE,WAAW;AAAA;AAAA,QAEX,OAAO;AAAA,MACf;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,UACR,EAAE,OAAO,2BAA0B;AAAA,UACnC;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,cACR;AAAA,gBACE,OAAO;AAAA,gBACP,OAAO;AAAA,cACvB;AAAA,YACA;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,UAAU;AAAA,UACR,EAAE,OAAO,kBAAkB0P,EAAa;AAAA,UACxC,EAAE,OAAO,mBAAmBA,EAAa;AAAA,UACzC,EAAE,OAAO,yBAAyBA,EAAa;AAAA,UAC/C,EAAE,OAAO,oDACEA,EAAa;AAAA,QAClC;AAAA,QACQ,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAD;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,cACRzP,EAAK;AAAA,YACnB;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACAyP;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAA;AAAA,UACA;AAAA,UACA;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAA;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAA;AAAA,QACV;AAAA,QACQ,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAOzP,EAAK,WAAW;AAAA,QACvB,UAAU;AAAA,UACR,SAAS;AAAA,UACT,UAAU2P;AAAA,UACV,MAAM9M;AAAA,QAChB;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,MACM8K;AAAA,IACN;AAAA,EACA;AACA;ACnUA,MAAM3J,KAAQ,CAAChE,OACN;AAAA,EACL,WAAW;AAAA,IACT,OAAO;AAAA,IACP,OAAO;AAAA,EACb;AAAA,EACI,eAAeA,EAAK;AAAA,EACpB,UAAU;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,EACb;AAAA,EACI,mBAAmB;AAAA,IACjB,WAAW;AAAA,IACX,OAAO;AAAA,EACb;AAAA,EACI,yBAAyB;AAAA,IACvB,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,MACRA,EAAK;AAAA,MACLA,EAAK;AAAA,IACb;AAAA,EACA;AAAA,EACI,iBAAiB;AAAA,IACf,OAAO;AAAA,IACP,OAAOA,EAAK,YAAY;AAAA,IASxB,WAAW;AAAA,EACjB;AAAA,EACI,cAAc;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,EACb;AACA,IAGMiE,KAAY;AAAA,EAChf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEMC,KAAO;AAAA,EACX,GAAGF;AAAA,EACH,GAAGC;AACL,GAKME,KAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE,KAAI,EAAG,QAAO,GAGVC,KAAiB;AAAA,EACrkB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE,KAAI,EAAG,QAAO,GAEVC,KAAa;AAAA,EACjhB,SAASqL,GAAK5P,GAAM;AAClB,QAAMyE,IAAQT,GAAMhE,CAAI,GAClB6P,IAAoBvL,IACpBwL,IAAmBzL,IAEnBN,IAAgB,YAChBY,IAAe,mBAEfkE,IAAW;AAAA,IACf,WAAW;AAAA,IACX,OAAO,SAHQ,4BAGY;AAAA,IAC3B,WAAW;AAAA,EACf;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,UAAU;AAAA,MACR7I,EAAK;AAAA,MACLA,EAAK;AAAA;AAAA;AAAA,MAGLyE,EAAM;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACMA,EAAM;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,OAAO,SAASN,GAAK,KAAK,GAAG,IAAI;AAAA;AAAA,QAEjC,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO,OAAO2L,EAAiB,KAAK,GAAG,IAAI;AAAA,MACnD;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAO,WAAWD,EAAkB,KAAK,GAAG,IAAI;AAAA,MACxD;AAAA,MACMhH;AAAA,MACA;AAAA;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,CAAEpE,EAAM,eAAe;AAAA,MACzC;AAAA,MACMA,EAAM;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,OAAO,SAASF,GAAW,KAAK,GAAG,IAAI;AAAA,MAC/C;AAAA,MACM,EAAE,OAAO,6oCAA4oC;AAAA,MACrpC;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,QACX,UAAU;AAAA,UACRE,EAAM;AAAA,UACNoE;AAAA,UACApE,EAAM;AAAA,UACNA,EAAM;AAAA,UACNzE,EAAK;AAAA,UACLA,EAAK;AAAA,UACLyE,EAAM;AAAA,UACNA,EAAM;AAAA,QAChB;AAAA,MACA;AAAA;AAAA;AAAA;AAAA,MAIM;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,UACR,UAAUV;AAAA,UACV,SAAS;AAAA,QACnB;AAAA,MACA;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,aAAa;AAAA,QACb,UAAU;AAAA,UACR,UAAU;AAAA,UACV,SAASY;AAAA,UACT,WAAWP,GAAe,KAAK,GAAG;AAAA,QAC5C;AAAA,QACQ,UAAU;AAAA,UACR;AAAA,YACE,OAAOL;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU8E;AAAA,UACA7I,EAAK;AAAA,UACLA,EAAK;AAAA,UACLyE,EAAM;AAAA,UACNA,EAAM;AAAA,QAChB;AAAA,MACA;AAAA,MACMA,EAAM;AAAA,IACZ;AAAA,EACA;AACA;AC/5BA,SAASsL,GAAM/P,GAAM;AACnB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,IACN;AAAA,IACI,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA;AAAA;AAAA;AAAA,QAIX,OAAO;AAAA,QACP,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,aAAa;AAAA,QACvB;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA;ACRA,SAASgQ,GAAIhQ,GAAM;AACjB,QAAM50C,IAAQ40C,EAAK,OACbiQ,IAAejQ,EAAK,QAAQ,MAAM,GAAG,GACrC4D,IAAS;AAAA,IACb,OAAO;AAAA,IACP,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,CAAE,EAAE,OAAO,KAAI,CAAE;AAAA,MACnC;AAAA,IACA;AAAA,EACA,GACQsM,IAAoB;AAAA,IACxB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,CAAE,EAAE,OAAO,KAAI,CAAE;AAAA,EAC/B,GAEQ3N,IAAW;AAAA,IACf;AAAA,IACA;AAAA;AAAA;AAAA,IAGA;AAAA,EACJ,GAEQ4N,IAAmB;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQtN,IAAQ;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IACA;AAAA,EACJ,GAEQuN,IAAqB;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAGQpC,IAAiB;AAAA,IACrqC,IAAqB;AAAA,IACzb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQC,IAAYH,GAEZ/N,IAAW;AAAA,IACf,GAAG0L;AAAA,IACH,GAAGoC;AAAA,EACP,EAAI,OAAO,CAACK,MACD,CAACJ,EAAmB,SAASI,CAAO,CAC5C,GAEK5H,IAAW;AAAA,IACf,OAAO;AAAA,IACP,OAAO;AAAA,EACX,GAEQ6H,IAAW;AAAA,IACf,OAAO;AAAA,IACP,OAAO;AAAA,IACP,WAAW;AAAA,EACf,GAEQzI,IAAgB;AAAA,IACpB,OAAO78C,EAAM,OAAO,MAAMA,EAAM,OAAO,GAAGolD,CAAS,GAAG,OAAO;AAAA,IAC7D,WAAW;AAAA,IACX,UAAU,EAAE,UAAUA,EAAS;AAAA,EACnC;AAME,WAASG,EAAaxnD,GAAM;AAC1B,WAAOiC,EAAM;AAAA,MACX;AAAA,MACAA,EAAM,OAAO,GAAGjC,EAAK,IAAI,CAACynD,MACjBA,EAAG,QAAQ,OAAO,MAAM,CAChC,CAAC;AAAA,MACF;AAAA,IACN;AAAA,EACE;AAEA,QAAMC,IAAsB;AAAA,IAC1B,OAAO;AAAA,IACP,OAAOF,EAAaJ,CAAM;AAAA,IAC1B,WAAW;AAAA,EACf;AAGE,WAASO,EAAgB3nD,GAAM;AAAA,IAC7B,YAAA4nD;AAAA,IAAY,MAAAC;AAAA,EAChB,IAAM,IAAI;AACN,UAAMC,IAAYD;AAClB,WAAAD,IAAaA,KAAc,CAAA,GACpB5nD,EAAK,IAAI,CAAC2D,MACXA,EAAK,MAAM,QAAQ,KAAKikD,EAAW,SAASjkD,CAAI,IAC3CA,IACEmkD,EAAUnkD,CAAI,IAChB,GAAGA,CAAI,OAEPA,CAEV;AAAA,EACH;AAEA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,kBAAkB;AAAA;AAAA,IAElB,SAAS;AAAA,IACT,UAAU;AAAA,MACR,UAAU;AAAA,MACV,SACEgkD,EAAgBxO,GAAU,EAAE,MAAM,CAAC4F,MAAMA,EAAE,SAAS,GAAG;AAAA,MACzD,SAAS3F;AAAA,MACT,MAAMM;AAAA,MACN,UAAUyN;AAAA,IAChB;AAAA,IACI,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,OAAOK,EAAaR,CAAgB;AAAA,MAC5C;AAAA,MACMU;AAAA,MACA5I;AAAA,MACAY;AAAA,MACAjF;AAAA,MACAsM;AAAA,MACAlQ,EAAK;AAAA,MACLA,EAAK;AAAA,MACLiQ;AAAA,MACAS;AAAA,IACN;AAAA,EACA;AACA;ACzqBA,SAAS97D,GAAOoI,GAAI;AAClB,SAAKA,IACD,OAAOA,KAAO,WAAiBA,IAE5BA,EAAG,SAHM;AAIlB;AAMA,SAASqxD,GAAUrxD,GAAI;AACrB,SAAOjG,GAAO,OAAOiG,GAAI,GAAG;AAC9B;AAMA,SAASjG,MAAUglC,GAAM;AAEvB,SADeA,EAAK,IAAI,CAACmsB,MAAMtzD,GAAOszD,CAAC,CAAC,EAAE,KAAK,EAAE;AAEnD;AAMA,SAASgJ,GAAqBn1B,GAAM;AAClC,QAAMo1B,IAAOp1B,EAAKA,EAAK,SAAS,CAAC;AAEjC,SAAI,OAAOo1B,KAAS,YAAYA,EAAK,gBAAgB,UACnDp1B,EAAK,OAAOA,EAAK,SAAS,GAAG,CAAC,GACvBo1B,KAEA,CAAA;AAEX;AAWA,SAASC,MAAUr1B,GAAM;AAMvB,SAHe,OADFm1B,GAAqBn1B,CAAI,EAE5B,UAAU,KAAK,QACrBA,EAAK,IAAI,CAACmsB,MAAMtzD,GAAOszD,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI;AAE7C;AAEA,MAAMmJ,KAAiB,CAAAZ,MAAW15D;AAAA,EAChC;AAAA,EACA05D;AAAA,EACA,MAAM,KAAKA,CAAO,IAAI,OAAO;AAC/B,GAGMa,KAAc;AAAA,EAClB;AAAA;AAAA,EACA;AAAA;AACF,EAAE,IAAID,EAAc,GAGdE,KAAsB;AAAA,EAC1B;AAAA,EACA;AACF,EAAE,IAAIF,EAAc,GAGdG,KAAe;AAAA,EACnB;AAAA,EACA;AACF,GAGMC,KAAW;AAAA;AAAA;AAAA;AAAA,EAIff;AAAA,EACA;AAAA,EACA;AACF,GAGMC,KAA0B;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAIMC,KAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAGMC,KAAW;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAGMC,KAAeV;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAGMW,KAAoBX;AAAA,EACxBU;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAGF,GAGME,KAAWj7D,GAAO+6D,IAAcC,IAAmB,GAAG,GAGtDE,KAAiBb;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMF,GAGMc,KAAsBd;AAAA,EAC1Ba;AAAA,EACA;AAAA,EACA;AACF,GAGM37C,KAAavf,GAAOk7D,IAAgBC,IAAqB,GAAG,GAG5DC,KAAiBp7D,GAAO,SAASm7D,IAAqB,GAAG,GAKzDE,KAAoB;AAAA,EACxB;AAAA,EACA;AAAA,EACAr7D,GAAO,gBAAgBq6D,GAAO,SAAS,SAAS,GAAG,GAAG,IAAI;AAAA,EAC1D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACAr6D,GAAO,UAAUuf,IAAY,IAAI;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAGM+7C,KAAuB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAaA,SAASC,GAAMtS,GAAM;AACnB,QAAMmN,IAAa;AAAA,IACjB,OAAO;AAAA,IACP,WAAW;AAAA,EACf,GAEQoF,IAAgBvS,EAAK;AAAA,IACzB;AAAA,IACA;AAAA,IACA,EAAE,UAAU,CAAE,MAAM,EAAE;AAAA,EAC1B,GACQkF,IAAW;AAAA,IACflF,EAAK;AAAA,IACLuS;AAAA,EACJ,GAIQC,IAAc;AAAA,IAClB,OAAO;AAAA,MACL;AAAA,MACApB,GAAO,GAAGE,IAAa,GAAGC,EAAmB;AAAA,IACnD;AAAA,IACI,WAAW,EAAE,GAAG,UAAS;AAAA,EAC7B,GACQkB,IAAgB;AAAA;AAAA,IAEpB,OAAO17D,GAAO,MAAMq6D,GAAO,GAAGK,EAAQ,CAAC;AAAA,IACvC,WAAW;AAAA,EACf,GACQiB,IAAiBjB,GACpB,OAAO,CAAAb,OAAM,OAAOA,MAAO,QAAQ,EACnC,OAAO,CAAE,KAAK,CAAE,GACb+B,IAAiBlB,GACpB,OAAO,CAAAb,OAAM,OAAOA,MAAO,QAAQ,EACnC,OAAOY,EAAY,EACnB,IAAIH,EAAc,GACfuB,IAAU,EAAE,UAAU;AAAA,IAC1B;AAAA,MACE,WAAW;AAAA,MACX,OAAOxB,GAAO,GAAGuB,GAAgB,GAAGpB,EAAmB;AAAA,IAC7D;AAAA,EACA,EAAG,GAEKjP,IAAW;AAAA,IACf,UAAU8O;AAAA,MACR;AAAA;AAAA,MACA;AAAA;AAAA,IACN;AAAA,IACI,SAASsB,EACN,OAAOd,EAAkB;AAAA,IAC5B,SAASF;AAAA,EACb,GACQmB,IAAgB;AAAA,IACpBL;AAAA,IACAC;AAAA,IACAG;AAAA,EACJ,GAGQE,IAAiB;AAAA;AAAA,IAErB,OAAO/7D,GAAO,MAAMq6D,GAAO,GAAGS,EAAQ,CAAC;AAAA,IACvC,WAAW;AAAA,EACf,GACQkB,IAAW;AAAA,IACf,WAAW;AAAA,IACX,OAAOh8D,GAAO,MAAMq6D,GAAO,GAAGS,EAAQ,GAAG,QAAQ;AAAA,EACrD,GACQtL,IAAY;AAAA,IAChBuM;AAAA,IACAC;AAAA,EACJ,GAGQC,IAAiB;AAAA;AAAA,IAErB,OAAO;AAAA,IACP,WAAW;AAAA,EACf,GACQtC,IAAW;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAOsB,GAAQ;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA,QAIE,OAAO,WAAWD,EAAiB;AAAA,MAAI;AAAA,IAC/C;AAAA,EACA,GACQkB,IAAY;AAAA,IAChBD;AAAA,IACAtC;AAAA,EACJ,GAIQjL,IAAgB,cAChBE,IAAY,oBACZwB,IAAS;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER,EAAE,OAAO,OAAO1B,CAAa,SAASA,CAAa,iBAAsBA,CAAa,SAAQ;AAAA;AAAA,MAE9F,EAAE,OAAO,SAASE,CAAS,SAASA,CAAS,iBAAsBF,CAAa,SAAQ;AAAA;AAAA,MAExF,EAAE,OAAO,mBAAkB;AAAA;AAAA,MAE3B,EAAE,OAAO,kBAAiB;AAAA,IAChC;AAAA,EACA,GAGQyN,IAAoB,CAACC,KAAe,QAAQ;AAAA,IAChD,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAE,OAAOp8D,GAAO,MAAMo8D,IAAc,YAAY,EAAC;AAAA,MACjD,EAAE,OAAOp8D,GAAO,MAAMo8D,IAAc,uBAAuB,EAAC;AAAA,IAClE;AAAA,EACA,IACQC,IAAkB,CAACD,KAAe,QAAQ;AAAA,IAC9C,WAAW;AAAA,IACX,OAAOp8D,GAAO,MAAMo8D,IAAc,uBAAuB;AAAA,EAC7D,IACQE,IAAgB,CAACF,KAAe,QAAQ;AAAA,IAC5C,WAAW;AAAA,IACX,OAAO;AAAA,IACP,OAAOp8D,GAAO,MAAMo8D,IAAc,IAAI;AAAA,IACtC,KAAK;AAAA,EACT,IACQG,IAAmB,CAACH,KAAe,QAAQ;AAAA,IAC/C,OAAOp8D,GAAOo8D,IAAc,KAAK;AAAA,IACjC,KAAKp8D,GAAO,OAAOo8D,EAAY;AAAA,IAC/B,UAAU;AAAA,MACRD,EAAkBC,EAAY;AAAA,MAC9BC,EAAgBD,EAAY;AAAA,MAC5BE,EAAcF,EAAY;AAAA,IAChC;AAAA,EACA,IACQI,IAAqB,CAACJ,KAAe,QAAQ;AAAA,IACjD,OAAOp8D,GAAOo8D,IAAc,GAAG;AAAA,IAC/B,KAAKp8D,GAAO,KAAKo8D,EAAY;AAAA,IAC7B,UAAU;AAAA,MACRD,EAAkBC,EAAY;AAAA,MAC9BE,EAAcF,EAAY;AAAA,IAChC;AAAA,EACA,IACQvP,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA,MACR0P,EAAgB;AAAA,MAChBA,EAAiB,GAAG;AAAA,MACpBA,EAAiB,IAAI;AAAA,MACrBA,EAAiB,KAAK;AAAA,MACtBC,EAAkB;AAAA,MAClBA,EAAmB,GAAG;AAAA,MACtBA,EAAmB,IAAI;AAAA,MACvBA,EAAmB,KAAK;AAAA,IAC9B;AAAA,EACA,GAEQC,IAAkB;AAAA,IACtBxT,EAAK;AAAA,IACL;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,WAAW;AAAA,MACX,UAAU,CAAEA,EAAK,gBAAgB;AAAA,IACvC;AAAA,EACA,GAEQyT,IAAsB;AAAA,IAC1B,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUD;AAAA,EACd,GAEQE,IAA0B,CAACP,OAAiB;AAChD,UAAMn9C,KAAQjf,GAAOo8D,IAAc,IAAI,GACjCvuD,KAAM7N,GAAO,MAAMo8D,EAAY;AACrC,WAAO;AAAA,MACL,OAAAn9C;AAAA,MACA,KAAApR;AAAA,MACA,UAAU;AAAA,QACR,GAAG4uD;AAAA,QACH;AAAA,UACE,OAAO;AAAA,UACP,OAAO,SAAS5uD,EAAG;AAAA,UACnB,KAAK;AAAA,QACf;AAAA,MACA;AAAA,IACA;AAAA,EACE,GAGM2mB,IAAS;AAAA,IACb,OAAO;AAAA,IACP,UAAU;AAAA,MACRmoC,EAAwB,KAAK;AAAA,MAC7BA,EAAwB,IAAI;AAAA,MAC5BA,EAAwB,GAAG;AAAA,MAC3BD;AAAA,IACN;AAAA,EACA,GAGQvD,IAAoB,EAAE,OAAOn5D,GAAO,KAAKuf,IAAY,GAAG,EAAC,GACzDq9C,IAAqB;AAAA,IACzB,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GACQC,IAA8B;AAAA,IAClC,WAAW;AAAA,IACX,OAAO,MAAM1B,EAAmB;AAAA,EACpC,GACQ2B,KAAc;AAAA,IAClB3D;AAAA,IACAyD;AAAA,IACAC;AAAA,EACJ,GAGQE,IAAsB;AAAA,IAC1B,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ,EAAE,UAAU;AAAA,MAClB;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAUzB;AAAA,QACV,UAAU;AAAA,UACR,GAAGY;AAAA,UACH9L;AAAA,UACAvD;AAAA,QACV;AAAA,MACA;AAAA,IACA,EAAK;AAAA,EACL,GAEQmQ,KAAoB;AAAA,IACxB,OAAO;AAAA,IACP,OAAOh9D,GAAO,KAAKq6D,GAAO,GAAGgB,EAAiB,GAAG/D,GAAU+C,GAAO,MAAM,KAAK,CAAC,CAAC;AAAA,EACnF,GAEQ4C,IAAyB;AAAA,IAC7B,OAAO;AAAA,IACP,OAAOj9D,GAAO,KAAKuf,EAAU;AAAA,EACjC,GAEQiuC,IAAa;AAAA,IACjBuP;AAAA,IACAC;AAAA,IACAC;AAAA,EACJ,GAGQrnC,IAAO;AAAA,IACX,OAAO0hC,GAAU,SAAS;AAAA,IAC1B,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA;AAAA,QACE,WAAW;AAAA,QACX,OAAOt3D,GAAO,iEAAiEm7D,IAAqB,GAAG;AAAA,MAC/G;AAAA,MACM;AAAA;AAAA,QACE,WAAW;AAAA,QACX,OAAOC;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA;AAAA,QACE,OAAOp7D,GAAO,WAAWs3D,GAAU8D,EAAc,CAAC;AAAA,QAClD,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,EACA,GACQ8B,IAAoB;AAAA,IACxB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU3R;AAAA,IACV,UAAU;AAAA,MACR,GAAG4C;AAAA,MACH,GAAG2N;AAAA,MACH,GAAGtO;AAAA,MACHyO;AAAA,MACArmC;AAAA,IACN;AAAA,EACA;AACE,EAAAA,EAAK,SAAS,KAAKsnC,CAAiB;AAIpC,QAAMC,KAAqB;AAAA,IACzB,OAAOn9D,GAAOuf,IAAY,MAAM;AAAA,IAChC,UAAU;AAAA,IACV,WAAW;AAAA,EACf,GAEQ69C,KAAQ;AAAA,IACZ,OAAO;AAAA,IACP,KAAK;AAAA,IACL,WAAW;AAAA,IACX,UAAU7R;AAAA,IACV,UAAU;AAAA,MACR;AAAA,MACA4R;AAAA,MACA,GAAGhP;AAAA,MACH35B;AAAA,MACA,GAAGsnC;AAAA,MACH,GAAGtM;AAAA,MACH,GAAG0M;AAAA,MACH9L;AAAA,MACAvD;AAAA,MACA,GAAGiQ;AAAA,MACH,GAAGtP;AAAA,MACH53B;AAAA,IACN;AAAA,EACA,GAEQynC,KAAqB;AAAA,IACzB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,IACV,UAAU;AAAA,MACR,GAAGlP;AAAA,MACHv4B;AAAA,IACN;AAAA,EACA,GACQ0nC,KAA0B;AAAA,IAC9B,OAAOjD;AAAA,MACL/C,GAAUt3D,GAAOuf,IAAY,MAAM,CAAC;AAAA,MACpC+3C,GAAUt3D,GAAOuf,IAAY,OAAOA,IAAY,MAAM,CAAC;AAAA,IAC7D;AAAA,IACI,KAAK;AAAA,IACL,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,OAAOA;AAAA,MACf;AAAA,IACA;AAAA,EACA,GACQg+C,KAAsB;AAAA,IAC1B,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUhS;AAAA,IACV,UAAU;AAAA,MACR+R;AAAA,MACA,GAAGnP;AAAA,MACH,GAAG2N;AAAA,MACH,GAAGI;AAAA,MACH9L;AAAA,MACAvD;AAAA,MACA,GAAGW;AAAA,MACH53B;AAAA,MACAwnC;AAAA,IACN;AAAA,IACI,YAAY;AAAA,IACZ,SAAS;AAAA,EACb,GAGQI,KAAoB;AAAA,IACxB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACAnD,GAAOlB,EAAkB,OAAO55C,IAAY07C,EAAQ;AAAA,IAC1D;AAAA,IACI,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,UAAU;AAAA,MACRoC;AAAA,MACAE;AAAA,MACAnH;AAAA,IACN;AAAA,IACI,SAAS;AAAA,MACP;AAAA,MACA;AAAA,IACN;AAAA,EACA,GAIQqH,KAAiB;AAAA,IACrB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,IACN;AAAA,IACI,WAAW,EAAE,GAAG,UAAS;AAAA,IACzB,UAAU;AAAA,MACRJ;AAAA,MACAE;AAAA,MACAnH;AAAA,IACN;AAAA,IACI,SAAS;AAAA,EACb,GAEQsH,KAAuB;AAAA,IAC3B,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACAzC;AAAA,IACN;AAAA,IACI,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,EACA,GAGQ0C,KAAkB;AAAA,IACtB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACAvC;AAAA,IACN;AAAA,IACI,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,UAAU,CAAExlC,CAAI;AAAA,IAChB,UAAU;AAAA,MACR,GAAGglC;AAAA,MACH,GAAGD;AAAA,IACT;AAAA,IACI,KAAK;AAAA,EACT,GAEQiD,KAAyB;AAAA,IAC7B,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,OAAO;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,EACA,GAEQC,KAAwB;AAAA,IAC5B,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,OAAO;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,EACA,GAEQvzD,KAAmB;AAAA,IACvB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACAiV;AAAA,MACA;AAAA,IACN;AAAA,IACI,YAAY;AAAA,MACV,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,UAAUgsC;AAAA,IACV,UAAU;AAAA,MACR8R;AAAA,MACA,GAAGvB;AAAA,MACH;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAUvQ;AAAA,QACV,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,YACP,OAAO6P;AAAA,UACnB;AAAA,UACU,GAAGU;AAAA,QACb;AAAA,QACQ,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,EACA;AAGE,aAAWj2B,MAAWgnB,EAAO,UAAU;AACrC,UAAMiR,KAAgBj4B,GAAQ,SAAS,KAAK,CAAAk4B,OAAQA,GAAK,UAAU,UAAU;AAE7E,IAAAD,GAAc,WAAWvS;AACzB,UAAMyS,KAAW;AAAA,MACf,GAAGlC;AAAA,MACH,GAAGtM;AAAA,MACH,GAAG0M;AAAA,MACH9L;AAAA,MACAvD;AAAA,MACA,GAAGiQ;AAAA,IACT;AACI,IAAAgB,GAAc,WAAW;AAAA,MACvB,GAAGE;AAAA,MACH;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,UACA,GAAGA;AAAA,QACb;AAAA,MACA;AAAA,IACA;AAAA,EACE;AAEA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,UAAUzS;AAAA,IACV,UAAU;AAAA,MACR,GAAG4C;AAAA,MACHqP;AAAA,MACAC;AAAA,MACAG;AAAA,MACAC;AAAA,MACAvzD;AAAA,MACAozD;AAAA,MACAC;AAAA,MACA;AAAA,QACE,eAAe;AAAA,QACf,KAAK;AAAA,QACL,UAAU,CAAE,GAAGxP,CAAQ;AAAA,QACvB,WAAW;AAAA,MACnB;AAAA,MACM35B;AAAA,MACA,GAAGsnC;AAAA,MACH,GAAGtM;AAAA,MACH,GAAG0M;AAAA,MACH9L;AAAA,MACAvD;AAAA,MACA,GAAGiQ;AAAA,MACH,GAAGtP;AAAA,MACH53B;AAAA,MACAwnC;AAAA,IACN;AAAA,EACA;AACA;ACz8BA,MAAMtP,KAAW,4BACXvC,KAAW;AAAA,EACf;AAAA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AACF,GACMC,KAAW;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAGMM,KAAQ;AAAA;AAAA,EAEZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AACF,GAEMuD,KAAc;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEMC,KAAmB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEMC,KAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AACF,GAEMC,KAAY,CAAA,EAAG;AAAA,EACnBF;AAAA,EACAxD;AAAA,EACAuD;AACF;AAWA,SAASI,GAAWxG,GAAM;AACxB,QAAM50C,IAAQ40C,EAAK,OAQbyG,IAAgB,CAACxkD,GAAO,EAAE,OAAAkN,GAAK,MAAO;AAC1C,UAAM88B,IAAM,OAAOhqC,EAAM,CAAC,EAAE,MAAM,CAAC;AAEnC,WADYA,EAAM,MAAM,QAAQgqC,GAAK98B,EAAK,MAC3B;AAAA,EACjB,GAEMu3C,IAAa7B,IACb8B,IAAW;AAAA,IACf,OAAO;AAAA,IACP,KAAK;AAAA,EACT,GAEQC,IAAmB,6BACnBC,IAAU;AAAA,IACd,OAAO;AAAA,IACP,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,IAKL,mBAAmB,CAAC5kD,GAAOhI,OAAa;AACtC,YAAM6sD,IAAkB7kD,EAAM,CAAC,EAAE,SAASA,EAAM,OAC1C8kD,IAAW9kD,EAAM,MAAM6kD,CAAe;AAC5C;AAAA;AAAA;AAAA;AAAA,QAIEC,MAAa;AAAA;AAAA,QAGbA,MAAa;AAAA,QACX;AACF,QAAA9sD,GAAS,YAAW;AACpB;AAAA,MACF;AAIA,MAAI8sD,MAAa,QAGVN,EAAcxkD,GAAO,EAAE,OAAO6kD,EAAe,CAAE,KAClD7sD,GAAS,YAAW;AAOxB,UAAIiI;AACJ,YAAM8kD,IAAa/kD,EAAM,MAAM,UAAU6kD,CAAe;AAIxD,UAAK5kD,IAAI8kD,EAAW,MAAM,OAAO,GAAI;AACnC,QAAA/sD,GAAS,YAAW;AACpB;AAAA,MACF;AAKA,WAAKiI,IAAI8kD,EAAW,MAAM,gBAAgB,MACpC9kD,EAAE,UAAU,GAAG;AACjB,QAAAjI,GAAS,YAAW;AAEpB;AAAA,MACF;AAAA,IAEJ;AAAA,EACJ,GACQgtD,IAAa;AAAA,IACjB,UAAUpC;AAAA,IACV,SAASvC;AAAA,IACT,SAASC;AAAA,IACT,UAAUgE;AAAA,IACV,qBAAqBD;AAAA,EACzB,GAGQb,IAAgB,mBAChBC,IAAO,OAAOD,CAAa,KAG3ByB,IAAiB,uCACjBC,IAAS;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER,EAAE,OAAO,QAAQD,CAAc,MAAMxB,CAAI,YAAYA,CAAI,eAC1CD,CAAa,OAAM;AAAA,MAClC,EAAE,OAAO,OAAOyB,CAAc,SAASxB,CAAI,eAAeA,CAAI,OAAM;AAAA;AAAA,MAGpE,EAAE,OAAO,6BAA4B;AAAA;AAAA,MAGrC,EAAE,OAAO,2CAA0C;AAAA,MACnD,EAAE,OAAO,+BAA8B;AAAA,MACvC,EAAE,OAAO,+BAA8B;AAAA;AAAA;AAAA,MAIvC,EAAE,OAAO,kBAAiB;AAAA,IAChC;AAAA,IACI,WAAW;AAAA,EACf,GAEQ/D,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUsF;AAAA,IACV,UAAU,CAAA;AAAA;AAAA,EACd,GACQG,IAAgB;AAAA,IACpB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,WAAW;AAAA,MACX,UAAU;AAAA,QACRpH,EAAK;AAAA,QACL2B;AAAA,MACR;AAAA,MACM,aAAa;AAAA,IACnB;AAAA,EACA,GACQ0F,IAAe;AAAA,IACnB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,WAAW;AAAA,MACX,UAAU;AAAA,QACRrH,EAAK;AAAA,QACL2B;AAAA,MACR;AAAA,MACM,aAAa;AAAA,IACnB;AAAA,EACA,GACQ2F,IAAmB;AAAA,IACvB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,WAAW;AAAA,MACX,UAAU;AAAA,QACRtH,EAAK;AAAA,QACL2B;AAAA,MACR;AAAA,MACM,aAAa;AAAA,IACnB;AAAA,EACA,GACQ4F,IAAkB;AAAA,IACtB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACRvH,EAAK;AAAA,MACL2B;AAAA,IACN;AAAA,EACA,GAwCQC,IAAU;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,MAzCU5B,EAAK;AAAA,QACzB;AAAA,QACA;AAAA,QACA;AAAA,UACE,WAAW;AAAA,UACX,UAAU;AAAA,YACR;AAAA,cACE,OAAO;AAAA,cACP,WAAW;AAAA,cACX,UAAU;AAAA,gBACR;AAAA,kBACE,WAAW;AAAA,kBACX,OAAO;AAAA,gBACrB;AAAA,gBACY;AAAA,kBACE,WAAW;AAAA,kBACX,OAAO;AAAA,kBACP,KAAK;AAAA,kBACL,YAAY;AAAA,kBACZ,cAAc;AAAA,kBACd,WAAW;AAAA,gBACzB;AAAA,gBACY;AAAA,kBACE,WAAW;AAAA,kBACX,OAAO0G,IAAa;AAAA,kBACpB,YAAY;AAAA,kBACZ,WAAW;AAAA,gBACzB;AAAA;AAAA;AAAA,gBAGY;AAAA,kBACE,OAAO;AAAA,kBACP,WAAW;AAAA,gBACzB;AAAA,cACA;AAAA,YACA;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MAKM1G,EAAK;AAAA,MACLA,EAAK;AAAA,IACX;AAAA,EACA,GACQwH,IAAkB;AAAA,IACtBxH,EAAK;AAAA,IACLA,EAAK;AAAA,IACLoH;AAAA,IACAC;AAAA,IACAC;AAAA,IACAC;AAAA;AAAA,IAEA,EAAE,OAAO,QAAO;AAAA,IAChBJ;AAAA;AAAA;AAAA;AAAA,EAIJ;AACE,EAAAxF,EAAM,WAAW6F,EACd,OAAO;AAAA;AAAA;AAAA,IAGN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAUP;AAAA,IACV,UAAU;AAAA,MACR;AAAA,IACR,EAAQ,OAAOO,CAAe;AAAA,EAC9B,CAAK;AACH,QAAMC,IAAqB,CAAA,EAAG,OAAO7F,GAASD,EAAM,QAAQ,GACtD+F,IAAkBD,EAAmB,OAAO;AAAA;AAAA,IAEhD;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAUR;AAAA,MACV,UAAU,CAAC,MAAM,EAAE,OAAOQ,CAAkB;AAAA,IAClD;AAAA,EACA,CAAG,GACKtB,IAAS;AAAA,IACb,WAAW;AAAA;AAAA,IAEX,OAAO;AAAA;AAAA,IACP,KAAK;AAAA,IACL,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAUc;AAAA,IACV,UAAUS;AAAA,EACd,GAGQC,IAAmB;AAAA,IACvB,UAAU;AAAA;AAAA,MAER;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAjB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACAt7C,EAAM,OAAOs7C,GAAY,KAAKt7C,EAAM,OAAO,MAAMs7C,CAAU,GAAG,IAAI;AAAA,QAC5E;AAAA,QACQ,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACAA;AAAA,QACV;AAAA,QACQ,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,QACb;AAAA,MACA;AAAA,IAEA;AAAA,EACA,GAEQkB,IAAkB;AAAA,IACtB,WAAW;AAAA,IACX,OACAx8C,EAAM;AAAA;AAAA,MAEJ;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKN;AAAA,IACI,WAAW;AAAA,IACX,UAAU;AAAA,MACR,GAAG;AAAA;AAAA,QAED,GAAGy3C;AAAA,QACH,GAAGuD;AAAA,MACX;AAAA,IACA;AAAA,EACA,GAEQyB,IAAa;AAAA,IACjB,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GAEQC,IAAsB;AAAA,IAC1B,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACApB;AAAA,UACA;AAAA,QACV;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,UACL;AAAA,UACA;AAAA,QACV;AAAA,MACA;AAAA,IACA;AAAA,IACI,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,OAAO;AAAA,IACP,UAAU,CAAEP,CAAM;AAAA,IAClB,SAAS;AAAA,EACb,GAEQ4B,IAAsB;AAAA,IAC1B,WAAW;AAAA,IACX,OAAO;AAAA,IACP,WAAW;AAAA,EACf;AAEE,WAASC,EAAO7+C,GAAM;AACpB,WAAOiC,EAAM,OAAO,OAAOjC,EAAK,KAAK,GAAG,GAAG,GAAG;AAAA,EAChD;AAEA,QAAM8+C,IAAgB;AAAA,IACpB,OAAO78C,EAAM;AAAA,MACX;AAAA,MACA48C,EAAO;AAAA,QACL,GAAG3B;AAAA,QACH;AAAA,QACA;AAAA,MACR,EAAQ,IAAI,CAAA6B,MAAK,GAAGA,CAAC,SAAS,CAAC;AAAA,MACzBxB;AAAA,MAAYt7C,EAAM,UAAU,OAAO;AAAA,IAAC;AAAA,IACtC,WAAW;AAAA,IACX,WAAW;AAAA,EACf,GAEQ+8C,IAAkB;AAAA,IACtB,OAAO/8C,EAAM,OAAO,MAAMA,EAAM;AAAA,MAC9BA,EAAM,OAAOs7C,GAAY,oBAAoB;AAAA,IACnD,CAAK;AAAA,IACD,KAAKA;AAAA,IACL,cAAc;AAAA,IACd,UAAU;AAAA,IACV,WAAW;AAAA,IACX,WAAW;AAAA,EACf,GAEQ0B,IAAmB;AAAA,IACvB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA1B;AAAA,MACA;AAAA,IACN;AAAA,IACI,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,UAAU;AAAA,MACR;AAAA;AAAA,QACE,OAAO;AAAA,MACf;AAAA,MACMP;AAAA,IACN;AAAA,EACA,GAEQkC,IAAkB,6DAMbrI,EAAK,sBAAsB,WAEhCsI,KAAoB;AAAA,IACxB,OAAO;AAAA,MACL;AAAA,MAAiB;AAAA,MACjB5B;AAAA,MAAY;AAAA,MACZ;AAAA,MACA;AAAA;AAAA,MACAt7C,EAAM,UAAUi9C,CAAe;AAAA,IACrC;AAAA,IACI,UAAU;AAAA,IACV,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,IACI,UAAU;AAAA,MACRlC;AAAA,IACN;AAAA,EACA;AAEE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,MAAM,OAAO,OAAO,KAAK;AAAA,IACnC,UAAUc;AAAA;AAAA,IAEV,SAAS,EAAE,iBAAAS,GAAiB,iBAAAE,EAAe;AAAA,IAC3C,SAAS;AAAA,IACT,UAAU;AAAA,MACR5H,EAAK,QAAQ;AAAA,QACX,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,WAAW;AAAA,MACnB,CAAO;AAAA,MACD6H;AAAA,MACA7H,EAAK;AAAA,MACLA,EAAK;AAAA,MACLoH;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,MACA3F;AAAA;AAAA,MAEA,EAAE,OAAO,QAAO;AAAA,MAChBuF;AAAA,MACAS;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,OAAOlB,IAAat7C,EAAM,UAAU,GAAG;AAAA,QACvC,WAAW;AAAA,MACnB;AAAA,MACMk9C;AAAA,MACA;AAAA;AAAA,QACE,OAAO,MAAMtI,EAAK,iBAAiB;AAAA,QACnC,UAAU;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,UACR4B;AAAA,UACA5B,EAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA;AAAA;AAAA;AAAA,YAIX,OAAOqI;AAAA,YACP,aAAa;AAAA,YACb,KAAK;AAAA,YACL,UAAU;AAAA,cACR;AAAA,gBACE,WAAW;AAAA,gBACX,UAAU;AAAA,kBACR;AAAA,oBACE,OAAOrI,EAAK;AAAA,oBACZ,WAAW;AAAA,kBAC/B;AAAA,kBACkB;AAAA,oBACE,WAAW;AAAA,oBACX,OAAO;AAAA,oBACP,MAAM;AAAA,kBAC1B;AAAA,kBACkB;AAAA,oBACE,OAAO;AAAA,oBACP,KAAK;AAAA,oBACL,cAAc;AAAA,oBACd,YAAY;AAAA,oBACZ,UAAUiH;AAAA,oBACV,UAAUS;AAAA,kBAC9B;AAAA,gBACA;AAAA,cACA;AAAA,YACA;AAAA,UACA;AAAA,UACU;AAAA;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA;AAAA,YACE,UAAU;AAAA,cACR,EAAE,OAAOf,EAAS,OAAO,KAAKA,EAAS,IAAG;AAAA,cAC1C,EAAE,OAAOC,EAAgB;AAAA,cACzB;AAAA,gBACE,OAAOC,EAAQ;AAAA;AAAA;AAAA,gBAGf,YAAYA,EAAQ;AAAA,gBACpB,KAAKA,EAAQ;AAAA,cAC7B;AAAA,YACA;AAAA,YACY,aAAa;AAAA,YACb,UAAU;AAAA,cACR;AAAA,gBACE,OAAOA,EAAQ;AAAA,gBACf,KAAKA,EAAQ;AAAA,gBACb,MAAM;AAAA,gBACN,UAAU,CAAC,MAAM;AAAA,cACjC;AAAA,YACA;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACMiB;AAAA,MACA;AAAA;AAAA;AAAA,QAGE,eAAe;AAAA,MACvB;AAAA,MACM;AAAA;AAAA;AAAA;AAAA,QAIE,OAAO,oBAAoB9H,EAAK,sBAC9B;AAAA;AAAA,QAOF,aAAY;AAAA,QACZ,OAAO;AAAA,QACP,UAAU;AAAA,UACRmG;AAAA,UACAnG,EAAK,QAAQA,EAAK,YAAY,EAAE,OAAO0G,GAAY,WAAW,iBAAgB,CAAE;AAAA,QAC1F;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACMyB;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,QACE,OAAO,QAAQzB;AAAA,QACf,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO,CAAE,wBAAwB;AAAA,QACjC,WAAW,EAAE,GAAG,iBAAgB;AAAA,QAChC,UAAU,CAAEP,CAAM;AAAA,MAC1B;AAAA,MACM8B;AAAA,MACAF;AAAA,MACAJ;AAAA,MACAS;AAAA,MACA;AAAA,QACE,OAAO;AAAA;AAAA,MACf;AAAA,IACA;AAAA,EACA;AACA;AAaA,SAAS4M,GAAWhV,GAAM;AACxB,QAAM50C,IAAQ40C,EAAK,OACbiV,IAAazO,GAAWxG,CAAI,GAE5B0G,IAAa7B,IACbhC,IAAQ;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GACQqS,IAAY;AAAA,IAChB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACAlV,EAAK;AAAA,IACX;AAAA,IACI,YAAY;AAAA,MACV,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,EACA,GACQmV,IAAY;AAAA,IAChB,eAAe;AAAA,IACf,KAAK;AAAA,IACL,YAAY;AAAA,IACZ,UAAU;AAAA,MACR,SAAS;AAAA,MACT,UAAUtS;AAAA,IAChB;AAAA,IACI,UAAU,CAAEoS,EAAW,QAAQ,eAAe;AAAA,EAClD,GACQpN,IAAa;AAAA,IACjB,WAAW;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GACQuN,IAAuB;AAAA,IAC3B;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAMQnO,IAAa;AAAA,IACjB,UAAUpC;AAAA,IACV,SAASvC,GAAS,OAAO8S,CAAoB;AAAA,IAC7C,SAAS7S;AAAA,IACT,UAAUgE,GAAU,OAAO1D,CAAK;AAAA,IAChC,qBAAqByD;AAAA,EACzB,GAEQ+O,IAAY;AAAA,IAChB,WAAW;AAAA,IACX,OAAO,MAAM3O;AAAA,EACjB,GAEQ4O,IAAW,CAACR,GAAM/4C,GAAOi+B,MAAgB;AAC7C,UAAMub,IAAOT,EAAK,SAAS,UAAU,CAAA5yD,MAAKA,EAAE,UAAU6Z,CAAK;AAC3D,QAAIw5C,MAAS;AAAM,YAAM,IAAI,MAAM,8BAA8B;AAEjE,IAAAT,EAAK,SAAS,OAAOS,GAAM,GAAGvb,CAAW;AAAA,EAC3C;AAKA,SAAO,OAAOib,EAAW,UAAUhO,CAAU,GAE7CgO,EAAW,QAAQ,gBAAgB,KAAKI,CAAS;AAGjD,QAAMG,IAAsBP,EAAW,SAAS,KAAK,CAAA5yD,MAAKA,EAAE,UAAU,MAAM,GAGtEozD,IAA2B,OAAO;AAAA,IAAO,CAAA;AAAA,IAC7CD;AAAA,IACA,EAAE,OAAOpqD,EAAM,OAAOs7C,GAAYt7C,EAAM,UAAU,QAAQ,CAAC,EAAC;AAAA,EAChE;AACE,EAAA6pD,EAAW,QAAQ,gBAAgB,KAAK;AAAA,IACtCA,EAAW,QAAQ;AAAA;AAAA,IACnBO;AAAA;AAAA,IACAC;AAAA;AAAA,EACJ,CAAG,GAGDR,EAAW,WAAWA,EAAW,SAAS,OAAO;AAAA,IAC/CI;AAAA,IACAH;AAAA,IACAC;AAAA,IACAM;AAAA;AAAA,EACJ,CAAG,GAGDH,EAASL,GAAY,WAAWjV,EAAK,QAAO,CAAE,GAE9CsV,EAASL,GAAY,cAAcpN,CAAU;AAE7C,QAAM6N,IAAsBT,EAAW,SAAS,KAAK,CAAA/yD,MAAKA,EAAE,UAAU,UAAU;AAChF,SAAAwzD,EAAoB,YAAY,GAEhC,OAAO,OAAOT,GAAY;AAAA,IACxB,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,EACA,CAAG,GAEMA;AACT;ACr4BA,SAASU,GAAM3V,GAAM;AACnB,QAAM50C,IAAQ40C,EAAK,OAKb4V,IAAY;AAAA,IAChB,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GAEQhS,IAAS;AAAA,IACb,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,MACR;AAAA;AAAA,QAEE,OAAO;AAAA,MAAI;AAAA,IACnB;AAAA,EACA,GAGQiS,IAAa,2BACbC,IAAa,yBACbC,IAAW,mCACXC,IAAW,0BACX1qC,IAAO;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA;AAAA,QAEE,OAAOlgB,EAAM,OAAO,OAAOA,EAAM,OAAO0qD,GAAYD,CAAU,GAAG,KAAK;AAAA,MAAC;AAAA,MACzE;AAAA;AAAA,QAEE,OAAOzqD,EAAM,OAAO,OAAO4qD,GAAU,KAAK;AAAA,MAAC;AAAA,MAC7C;AAAA;AAAA,QAEE,OAAO5qD,EAAM,OAAO,OAAO2qD,GAAU,KAAK;AAAA,MAAC;AAAA,MAC7C;AAAA;AAAA,QAEE,OAAO3qD,EAAM;AAAA,UACX;AAAA,UACAA,EAAM,OAAO0qD,GAAYD,CAAU;AAAA,UACnC;AAAA,UACAzqD,EAAM,OAAO2qD,GAAUC,CAAQ;AAAA,UAC/B;AAAA,QACV;AAAA,MAAS;AAAA,IACT;AAAA,EACA,GAEQ7O,IAAS;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA;AAAA,QAEE,OAAO;AAAA,MAA+D;AAAA,MACxE;AAAA;AAAA,QAEE,OAAO;AAAA,MAA6B;AAAA,MACtC;AAAA;AAAA,QAEE,OAAO;AAAA,MAA8B;AAAA,MACvC;AAAA;AAAA,QAEE,OAAO;AAAA,MAA4B;AAAA,MACrC;AAAA;AAAA,QAEE,OAAO;AAAA,MAA2B;AAAA,IAC1C;AAAA,EACA,GAEQyB,IAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GAEQqN,IAAcjW,EAAK,QAAQ,OAAO,KAAK,EAAE,UAAU;AAAA,IACvD;AAAA,MACE,WAAW;AAAA,MACX,OAAO;AAAA,MACP,KAAK;AAAA,IACX;AAAA,EACA,GAAK,GAEG4B,IAAU5B,EAAK,QAAQ,MAAM,KAAK,EAAE,UAAU;AAAA,IAClD,EAAE,OAAO,IAAG;AAAA,IACZ;AAAA;AAAA,MAEE,OAAO;AAAA,IAAoB;AAAA,EACjC,GAAK;AAYH,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAE,IAAI;AAAA,IACf,kBAAkB;AAAA,IAClB,kBAAkB,EAAE,OAAO,SAAQ;AAAA,IACnC,UAAU;AAAA,MACR,SACE;AAAA,MAWF;AAAA;AAAA,QAEE;AAAA;AAAA,MAGF;AAAA;AAAA,QAEE;AAAA;AAAA,MACF,SAAS;AAAA,IACf;AAAA,IACI,SACE;AAAA,IACF,UAAU;AAAA,MACR4V;AAAA,MACAhS;AAAA,MACAt4B;AAAA,MACA67B;AAAA,MACAyB;AAAA,MACAqN;AAAA,MACArU;AAAA,MA/Ce;AAAA,QACjB,WAAW;AAAA;AAAA,QAEX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,EAAE,SACR,qEAAoE;AAAA,QACxE,UAAU,CAAEA,CAAO;AAAA,MACvB;AAAA,IAyCA;AAAA,EACA;AACA;ACjJA,SAASsU,GAAKlW,GAAM;AAClB,EAAAA,EAAK;AACL,QAAMuS,IAAgBvS,EAAK,QAAQ,OAAO,KAAK;AAC/C,EAAAuS,EAAc,SAAS,KAAK,MAAM;AAClC,QAAM4D,IAAenW,EAAK,QAAQ,MAAM,GAAG,GAErCoN,IAAM;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAEQgJ,IAAqB;AAAA,IACzB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,WAAW;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACT;AAAA,EACA,GAEQC,IAAW;AAAA,IACf,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GAEQC,IAAS;AAAA,IACb,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,EACf,GAEQnP,IAAS;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA;AAAA,IAEX,OAAO;AAAA,EACX,GAEQx6B,IAAO;AAAA;AAAA,IAEX,OAAO;AAAA,IACP,WAAW;AAAA,EACf,GAEQ4pC,IAAkB;AAAA,IACtB,WAAW;AAAA;AAAA,IAEX,OAAO;AAAA,EACX;AAcE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,UAAU;AAAA,MACR,UAAU;AAAA,MACV,SAASnJ;AAAA,IACf;AAAA,IACI,UAAU;AAAA,MACR+I;AAAA,MACA5D;AAAA,MApBiB;AAAA,QACnB,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,QACN;AAAA,QACI,WAAW;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACT;AAAA,MACA;AAAA,MAYM8D;AAAA,MACAC;AAAA,MACAF;AAAA,MACApW,EAAK;AAAA,MACLrzB;AAAA,MACA4pC;AAAA,MACApP;AAAA,IACN;AAAA,EACA;AACA;AChIA,SAASznD,GAAIsgD,GAAM;AACjB,QAAM50C,IAAQ40C,EAAK,OAQbwW,IAAcprD,EAAM,OAAO,aAAaA,EAAM,SAAS,kBAAkB,GAAG,iBAAiB,GAC7FqrD,IAAe,oBACfC,IAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAO;AAAA,EACX,GACQC,IAAoB;AAAA,IACxB,OAAO;AAAA,IACP,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,SAAS;AAAA,MACjB;AAAA,IACA;AAAA,EACA,GACQC,IAAwB5W,EAAK,QAAQ2W,GAAmB;AAAA,IAC5D,OAAO;AAAA,IACP,KAAK;AAAA,EACT,CAAG,GACKE,IAAwB7W,EAAK,QAAQA,EAAK,kBAAkB,EAAE,WAAW,UAAU,GACnF8W,IAAyB9W,EAAK,QAAQA,EAAK,mBAAmB,EAAE,WAAW,UAAU,GACrF+W,IAAgB;AAAA,IACpB,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,OAAON;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,YAAY;AAAA,YACZ,UAAU;AAAA,cACR;AAAA,gBACE,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,UAAU,CAAEC,CAAY;AAAA,cACxC;AAAA,cACc;AAAA,gBACE,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,UAAU,CAAEA,CAAY;AAAA,cACxC;AAAA,cACc,EAAE,OAAO,eAAc;AAAA,YACrC;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,IACI,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,QACX,UAAU;AAAA,UACRC;AAAA,UACAG;AAAA,UACAD;AAAA,UACAD;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,cACR;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,UAAU;AAAA,kBACRD;AAAA,kBACAC;AAAA,kBACAE;AAAA,kBACAD;AAAA,gBAClB;AAAA,cACA;AAAA,YACA;AAAA,UACA;AAAA,QACA;AAAA,MACA;AAAA,MACM7W,EAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,EAAE,WAAW,GAAE;AAAA,MACvB;AAAA,MACM;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,MACnB;AAAA,MACM0W;AAAA;AAAA,MAEA;AAAA,QACE,WAAW;AAAA,QACX,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,YACX,UAAU;AAAA,cACRI;AAAA,YACd;AAAA,UACA;AAAA,UACU;AAAA,YACE,OAAO;AAAA,UACnB;AAAA,QACA;AAAA,MAEA;AAAA,MACM;AAAA,QACE,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,EAAE,MAAM,QAAO;AAAA,QACzB,UAAU,CAAEC,CAAa;AAAA,QACzB,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,WAAW;AAAA,UACX,aAAa;AAAA,YACX;AAAA,YACA;AAAA,UACZ;AAAA,QACA;AAAA,MACA;AAAA,MACM;AAAA,QACE,WAAW;AAAA;AAAA,QAEX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU,EAAE,MAAM,SAAQ;AAAA,QAC1B,UAAU,CAAEA,CAAa;AAAA,QACzB,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,WAAW;AAAA,UACX,aAAa;AAAA,YACX;AAAA,YACA;AAAA,YACA;AAAA,UACZ;AAAA,QACA;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,MACf;AAAA;AAAA,MAEM;AAAA,QACE,WAAW;AAAA,QACX,OAAO3rD,EAAM;AAAA,UACX;AAAA,UACAA,EAAM,UAAUA,EAAM;AAAA,YACpBorD;AAAA;AAAA;AAAA;AAAA,YAIAprD,EAAM,OAAO,OAAO,KAAK,IAAI;AAAA,UACzC,CAAW;AAAA,QACX;AAAA,QACQ,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAOorD;AAAA,YACP,WAAW;AAAA,YACX,QAAQO;AAAA,UACpB;AAAA,QACA;AAAA,MACA;AAAA;AAAA,MAEM;AAAA,QACE,WAAW;AAAA,QACX,OAAO3rD,EAAM;AAAA,UACX;AAAA,UACAA,EAAM,UAAUA,EAAM;AAAA,YACpBorD;AAAA,YAAa;AAAA,UACzB,CAAW;AAAA,QACX;AAAA,QACQ,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAOA;AAAA,YACP,WAAW;AAAA,UACvB;AAAA,UACU;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,YACX,YAAY;AAAA,UACxB;AAAA,QACA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA;ACrOA,SAASQ,GAAKhX,GAAM;AAClB,QAAMuC,IAAW,0BAGX0U,IAAiB,+BAMjBC,IAAM;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA;AAAA,MAER,EAAE,OAAO,oCAAmC;AAAA,MAC5C;AAAA;AAAA,QACE,OAAO;AAAA,MAAqC;AAAA,MAC9C;AAAA;AAAA,QACE,OAAO;AAAA,MAAqC;AAAA,IACpD;AAAA,EACA,GAEQC,IAAqB;AAAA,IACzB,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM;AAAA;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,IACA;AAAA,EACA,GAEQC,IAAsB;AAAA,IAC1B,WAAW;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,OAAO;AAAA,QACP,WAAW;AAAA,MACnB;AAAA,IACA;AAAA,EACA,GAEQxT,IAAS;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACb;AAAA,MACM,EAAE,OAAO,MAAK;AAAA,IACpB;AAAA,IACI,UAAU;AAAA,MACR5D,EAAK;AAAA,MACLmX;AAAA,IACN;AAAA,EACA,GAIQE,IAAmBrX,EAAK,QAAQ4D,GAAQ,EAAE,UAAU;AAAA,IACxD;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAU;AAAA,QACR;AAAA,UACE,OAAO;AAAA,UACP,WAAW;AAAA,QACrB;AAAA,MACA;AAAA,IACA;AAAA,IACI;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,IACX;AAAA,IACI,EAAE,OAAO,eAAc;AAAA,EAC3B,GAAK,GAMG0T,IAAY;AAAA,IAChB,WAAW;AAAA,IACX,OAAO,QANO,+BACA,2CACI,iBACJ,gDAG6C;AAAA,EAC/D,GAEQC,IAAkB;AAAA,IACtB,KAAK;AAAA,IACL,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,UAAUhV;AAAA,IACV,WAAW;AAAA,EACf,GACQl3B,IAAS;AAAA,IACb,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,CAAEksC,CAAe;AAAA,IAC3B,SAAS;AAAA,IACT,WAAW;AAAA,EACf,GACQnsC,IAAQ;AAAA,IACZ,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU,CAAEmsC,CAAe;AAAA,IAC3B,SAAS;AAAA,IACT,WAAW;AAAA,EACf,GAEQvT,IAAQ;AAAA,IACZkT;AAAA,IACA;AAAA,MACE,WAAW;AAAA,MACX,OAAO;AAAA,MACP,WAAW;AAAA,IACjB;AAAA,IACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,WAAW;AAAA,MACX,OAAO;AAAA,IACb;AAAA,IACI;AAAA;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,aAAa;AAAA,MACb,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,WAAW;AAAA,IACjB;AAAA,IACI;AAAA;AAAA,MACE,WAAW;AAAA,MACX,OAAO,WAAWD;AAAA,IACxB;AAAA;AAAA,IAEI;AAAA;AAAA,MACE,WAAW;AAAA,MACX,OAAO,OAAOA,IAAiB;AAAA,IACrC;AAAA,IACI;AAAA;AAAA,MACE,WAAW;AAAA,MACX,OAAO,MAAMA;AAAA,IACnB;AAAA,IACI;AAAA;AAAA,MACE,WAAW;AAAA,MACX,OAAO,OAAOA;AAAA,IACpB;AAAA,IACI;AAAA;AAAA,MACE,WAAW;AAAA,MACX,OAAO,MAAMjX,EAAK,sBAAsB;AAAA,IAC9C;AAAA,IACI;AAAA;AAAA,MACE,WAAW;AAAA,MACX,OAAO,QAAQA,EAAK,sBAAsB;AAAA,IAChD;AAAA,IACI;AAAA;AAAA,MACE,WAAW;AAAA;AAAA,MAEX,OAAO;AAAA,MACP,WAAW;AAAA,IACjB;AAAA,IACIA,EAAK;AAAA,IACL;AAAA,MACE,eAAeuC;AAAA,MACf,UAAU,EAAE,SAASA,EAAQ;AAAA,IACnC;AAAA,IACI+U;AAAA;AAAA;AAAA,IAGA;AAAA,MACE,WAAW;AAAA,MACX,OAAOtX,EAAK,cAAc;AAAA,MAC1B,WAAW;AAAA,IACjB;AAAA,IACI30B;AAAA,IACAD;AAAA,IACAgsC;AAAA,IACAxT;AAAA,EACJ,GAEQ4F,IAAc,CAAE,GAAGxF,CAAK;AAC9B,SAAAwF,EAAY,IAAG,GACfA,EAAY,KAAK6N,CAAgB,GACjCE,EAAgB,WAAW/N,GAEpB;AAAA,IACL,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,SAAS,CAAE,KAAK;AAAA,IAChB,UAAUxF;AAAA,EACd;AACA;ACnKO,MAAMwT,KAAW;AAAA,EACtB,SAAApW;AAAA,EACA,MAAAI;AAAA,EACA,GAAAn/C;AAAA,EACA,KAAAygD;AAAA,EACA,QAAAC;AAAA,EACA,KAAAyB;AAAA,EACA,MAAAM;AAAA,EACA,IAAAljC;AAAA,EACA,SAAAmjC;AAAA,EACA,KAAAE;AAAA,EACA,MAAAc;AAAA,EACF,YAAES;AAAAA,EACA,MAAA15B;AAAA,EACA,QAAA47B;AAAA,EACA,MAAAU;AAAA,EACA,KAAAiB;AAAA,EACA,UAAAI;AAAA,EACA,UAAAK;AAAA,EACA,YAAAa;AAAA,EACA,MAAAI;AAAA,EACA,KAAAW;AAAA,EACA,gBAAgBmB;AAAA,EAChB,WAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAeQ;AAAA,EACf,GAAAtyB;AAAA,EACA,MAAA0yB;AAAA,EACA,MAAAY;AAAA,EACA,MAAAK;AAAA,EACA,OAAAG;AAAA,EACA,KAAAC;AAAA,EACA,OAAAsC;AAAA,EACA,YAAA0C;AAAA,EACA,OAAAW;AAAA,EACA,MAAAO;AAAA,EACA,KAAAx2D;AAAA,EACA,MAAAs3D;AACF;;;;;ACnFA,WAASS,EAAW3lC,GAAK;AACvB,WAAIA,aAAe,MACjBA,EAAI,QACFA,EAAI,SACJA,EAAI,MACF,WAAY;AACV,YAAM,IAAI,MAAM,kBAAkB;AAAA,IAC5C,IACaA,aAAe,QACxBA,EAAI,MACFA,EAAI,QACJA,EAAI,SACF,WAAY;AACV,YAAM,IAAI,MAAM,kBAAkB;AAAA,IAC5C,IAIE,OAAO,OAAOA,CAAG,GAEjB,OAAO,oBAAoBA,CAAG,EAAE,QAAQ,CAACp+B,MAAS;AAChD,YAAM+O,IAAOqvB,EAAIp+B,CAAI,GACf3B,KAAO,OAAO0Q;AAGpB,OAAK1Q,OAAS,YAAYA,OAAS,eAAe,CAAC,OAAO,SAAS0Q,CAAI,KACrEg1D,EAAWh1D,CAAI;AAAA,IAErB,CAAG,GAEMqvB;AAAA,EACT;AAAA,EAMA,MAAM4lC,EAAS;AAAA;AAAA;AAAA;AAAA,IAIb,YAAY5C,GAAM;AAEhB,MAAIA,EAAK,SAAS,WAAWA,EAAK,OAAO,CAAA,IAEzC,KAAK,OAAOA,EAAK,MACjB,KAAK,iBAAiB;AAAA,IAC1B;AAAA,IAEE,cAAc;AACZ,WAAK,iBAAiB;AAAA,IAC1B;AAAA,EACA;AAMA,WAAS6C,EAAWvkE,GAAO;AACzB,WAAOA,EACJ,QAAQ,MAAM,OAAO,EACrB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,QAAQ,EACtB,QAAQ,MAAM,QAAQ;AAAA,EAC3B;AAUA,WAASwkE,EAAUC,MAAaC,GAAS;AAEvC,UAAMvhE,IAAS,uBAAO,OAAO,IAAI;AAEjC,eAAWrE,MAAO2lE;AAChB,MAAAthE,EAAOrE,EAAG,IAAI2lE,EAAS3lE,EAAG;AAE5B,WAAA4lE,EAAQ,QAAQ,SAAShmC,IAAK;AAC5B,iBAAW5/B,MAAO4/B;AAChB,QAAAv7B,EAAOrE,EAAG,IAAI4/B,GAAI5/B,EAAG;AAAA,IAE3B,CAAG;AAAA,IACwBqE;AAAA,EAC3B;AAcA,QAAMwhE,IAAa,WAMbC,IAAoB,CAACxiE,MAGlB,CAAC,CAACA,EAAK,OAQVyiE,IAAkB,CAACvkE,GAAM,EAAE,QAAAyQ,EAAM,MAAO;AAE5C,QAAIzQ,EAAK,WAAW,WAAW;AAC7B,aAAOA,EAAK,QAAQ,aAAa,WAAW;AAG9C,QAAIA,EAAK,SAAS,GAAG,GAAG;AACtB,YAAMwkE,IAASxkE,EAAK,MAAM,GAAG;AAC7B,aAAO;AAAA,QACL,GAAGyQ,CAAM,GAAG+zD,EAAO,MAAK,CAAE;AAAA,QAC1B,GAAIA,EAAO,IAAI,CAAChQ,IAAGrmD,OAAM,GAAGqmD,EAAC,GAAG,IAAI,OAAOrmD,KAAI,CAAC,CAAC,EAAE;AAAA,MACzD,EAAM,KAAK,GAAG;AAAA,IACd;AAEE,WAAO,GAAGsC,CAAM,GAAGzQ,CAAI;AAAA,EACzB;AAAA,EAGA,MAAMykE,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOjB,YAAYzhC,GAAWh8B,GAAS;AAC9B,WAAK,SAAS,IACd,KAAK,cAAcA,EAAQ,aAC3Bg8B,EAAU,KAAK,IAAI;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA,IAME,QAAQpwB,GAAM;AACZ,WAAK,UAAUqxD,EAAWrxD,CAAI;AAAA,IAClC;AAAA;AAAA;AAAA;AAAA;AAAA,IAME,SAAS9Q,GAAM;AACb,UAAI,CAACwiE,EAAkBxiE,CAAI,EAAG;AAE9B,YAAMooC,IAAYq6B;AAAA,QAAgBziE,EAAK;AAAA,QACrC,EAAE,QAAQ,KAAK;MAAa;AAC9B,WAAK,KAAKooC,CAAS;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA,IAME,UAAUpoC,GAAM;AACd,MAAKwiE,EAAkBxiE,CAAI,MAE3B,KAAK,UAAUuiE;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA,IAKE,QAAQ;AACN,aAAO,KAAK;AAAA,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQE,KAAKn6B,GAAW;AACd,WAAK,UAAU,gBAAgBA,CAAS;AAAA,IAC5C;AAAA,EACA;AAQA,QAAMw6B,IAAU,CAACjH,IAAO,OAAO;AAE7B,UAAM56D,IAAS,EAAE,UAAU,GAAE;AAC7B,kBAAO,OAAOA,GAAQ46D,CAAI,GACnB56D;AAAA,EACT;AAAA,EAEA,MAAM8hE,EAAU;AAAA,IACd,cAAc;AAEZ,WAAK,WAAWD,EAAO,GACvB,KAAK,QAAQ,CAAC,KAAK,QAAQ;AAAA,IAC/B;AAAA,IAEE,IAAI,MAAM;AACR,aAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAAA,IAC3C;AAAA,IAEE,IAAI,OAAO;AAAE,aAAO,KAAK;AAAA,IAAS;AAAA;AAAA,IAGlC,IAAI5iE,GAAM;AACR,WAAK,IAAI,SAAS,KAAKA,CAAI;AAAA,IAC/B;AAAA;AAAA,IAGE,SAAS8iE,GAAO;AAEd,YAAM9iE,IAAO4iE,EAAQ,EAAE,OAAAE,GAAO;AAC9B,WAAK,IAAI9iE,CAAI,GACb,KAAK,MAAM,KAAKA,CAAI;AAAA,IACxB;AAAA,IAEE,YAAY;AACV,UAAI,KAAK,MAAM,SAAS;AACtB,eAAO,KAAK,MAAM,IAAG;AAAA,IAI3B;AAAA,IAEE,gBAAgB;AACd,aAAO,KAAK,cAAY;AAAA,IAC5B;AAAA,IAEE,SAAS;AACP,aAAO,KAAK,UAAU,KAAK,UAAU,MAAM,CAAC;AAAA,IAChD;AAAA;AAAA;AAAA;AAAA;AAAA,IAME,KAAK+iE,GAAS;AAEZ,aAAO,KAAK,YAAY,MAAMA,GAAS,KAAK,QAAQ;AAAA,IAGxD;AAAA;AAAA;AAAA;AAAA;AAAA,IAME,OAAO,MAAMA,GAAS/iE,GAAM;AAC1B,aAAI,OAAOA,KAAS,WAClB+iE,EAAQ,QAAQ/iE,CAAI,IACXA,EAAK,aACd+iE,EAAQ,SAAS/iE,CAAI,GACrBA,EAAK,SAAS,QAAQ,CAACmR,OAAU,KAAK,MAAM4xD,GAAS5xD,EAAK,CAAC,GAC3D4xD,EAAQ,UAAU/iE,CAAI,IAEjB+iE;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAKE,OAAO,UAAU/iE,GAAM;AACrB,MAAI,OAAOA,KAAS,YACfA,EAAK,aAENA,EAAK,SAAS,MAAM,CAAAgjE,MAAM,OAAOA,KAAO,QAAQ,IAGlDhjE,EAAK,WAAW,CAACA,EAAK,SAAS,KAAK,EAAE,CAAC,IAEvCA,EAAK,SAAS,QAAQ,CAACmR,MAAU;AAC/B,QAAA0xD,EAAU,UAAU1xD,CAAK;AAAA,MACjC,CAAO;AAAA,IAEP;AAAA,EACA;AAAA,EAoBA,MAAM8xD,UAAyBJ,EAAU;AAAA;AAAA;AAAA;AAAA,IAIvC,YAAY39D,GAAS;AACnB,YAAK,GACL,KAAK,UAAUA;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA,IAKE,QAAQ4L,GAAM;AACZ,MAAIA,MAAS,MAEb,KAAK,IAAIA,CAAI;AAAA,IACjB;AAAA;AAAA,IAGE,WAAWgyD,GAAO;AAChB,WAAK,SAASA,CAAK;AAAA,IACvB;AAAA,IAEE,WAAW;AACT,WAAK,UAAS;AAAA,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA,IAME,iBAAiBI,GAAShlE,GAAM;AAE9B,YAAM8B,KAAOkjE,EAAQ;AACrB,MAAIhlE,MAAM8B,GAAK,QAAQ,YAAY9B,CAAI,KAEvC,KAAK,IAAI8B,EAAI;AAAA,IACjB;AAAA,IAEE,SAAS;AAEP,aADiB,IAAI2iE,EAAa,MAAM,KAAK,OAAO,EACpC,MAAK;AAAA,IACzB;AAAA,IAEE,WAAW;AACT,kBAAK,cAAa,GACX;AAAA,IACX;AAAA,EACA;AAWA,WAASvjE,EAAOoI,GAAI;AAClB,WAAKA,IACD,OAAOA,KAAO,WAAiBA,IAE5BA,EAAG,SAHM;AAAA,EAIlB;AAMA,WAASqxD,EAAUrxD,GAAI;AACrB,WAAOjG,EAAO,OAAOiG,GAAI,GAAG;AAAA,EAC9B;AAMA,WAAS27D,EAAiB37D,GAAI;AAC5B,WAAOjG,EAAO,OAAOiG,GAAI,IAAI;AAAA,EAC/B;AAMA,WAAS47D,EAAS57D,GAAI;AACpB,WAAOjG,EAAO,OAAOiG,GAAI,IAAI;AAAA,EAC/B;AAMA,WAASjG,KAAUglC,GAAM;AAEvB,WADeA,EAAK,IAAI,CAACmsB,MAAMtzD,EAAOszD,CAAC,CAAC,EAAE,KAAK,EAAE;AAAA,EAEnD;AAMA,WAASgJ,EAAqBn1B,GAAM;AAClC,UAAMo1B,IAAOp1B,EAAKA,EAAK,SAAS,CAAC;AAEjC,WAAI,OAAOo1B,KAAS,YAAYA,EAAK,gBAAgB,UACnDp1B,EAAK,OAAOA,EAAK,SAAS,GAAG,CAAC,GACvBo1B,KAEA,CAAA;AAAA,EAEX;AAWA,WAASC,KAAUr1B,GAAM;AAMvB,WAHe,OADFm1B,EAAqBn1B,CAAI,EAE5B,UAAU,KAAK,QACrBA,EAAK,IAAI,CAACmsB,OAAMtzD,EAAOszD,EAAC,CAAC,EAAE,KAAK,GAAG,IAAI;AAAA,EAE7C;AAMA,WAAS2Q,EAAiB77D,GAAI;AAC5B,WAAQ,IAAI,OAAOA,EAAG,SAAQ,IAAK,GAAG,EAAG,KAAK,EAAE,EAAE,SAAS;AAAA,EAC7D;AAOA,WAAS87D,EAAW97D,GAAI+7D,GAAQ;AAC9B,UAAM92D,IAAQjF,KAAMA,EAAG,KAAK+7D,CAAM;AAClC,WAAO92D,KAASA,EAAM,UAAU;AAAA,EAClC;AASA,QAAM+2D,IAAa;AAanB,WAASC,EAAuBC,GAAS,EAAE,UAAAC,KAAY;AACrD,QAAIC,IAAc;AAElB,WAAOF,EAAQ,IAAI,CAAC9tD,OAAU;AAC5B,MAAAguD,KAAe;AACf,YAAMtqD,KAASsqD;AACf,UAAIp8D,KAAKpI,EAAOwW,EAAK,GACjB4gB,IAAM;AAEV,aAAOhvB,GAAG,SAAS,KAAG;AACpB,cAAMiF,IAAQ+2D,EAAW,KAAKh8D,EAAE;AAChC,YAAI,CAACiF,GAAO;AACV,UAAA+pB,KAAOhvB;AACP;AAAA,QACR;AACM,QAAAgvB,KAAOhvB,GAAG,UAAU,GAAGiF,EAAM,KAAK,GAClCjF,KAAKA,GAAG,UAAUiF,EAAM,QAAQA,EAAM,CAAC,EAAE,MAAM,GAC3CA,EAAM,CAAC,EAAE,CAAC,MAAM,QAAQA,EAAM,CAAC,IAEjC+pB,KAAO,OAAO,OAAO,OAAO/pB,EAAM,CAAC,CAAC,IAAI6M,EAAM,KAE9Ckd,KAAO/pB,EAAM,CAAC,GACVA,EAAM,CAAC,MAAM,OACfm3D;AAAA,MAGV;AACI,aAAOptC;AAAA,IACX,CAAG,EAAE,IAAI,CAAAhvB,OAAM,IAAIA,EAAE,GAAG,EAAE,KAAKm8D,CAAQ;AAAA,EACvC;AAMA,QAAME,IAAmB,QACnBxU,IAAW,gBACX4K,IAAsB,iBACtB6J,IAAY,qBACZC,IAAc,0EACdC,IAAmB,gBACnBC,IAAiB,gJAKjBC,IAAU,CAACvI,IAAO,OAAO;AAC7B,UAAMwI,IAAe;AACrB,WAAIxI,EAAK,WACPA,EAAK,QAAQp6D;AAAA,MACX4iE;AAAA,MACA;AAAA,MACAxI,EAAK;AAAA,MACL;AAAA,IAAM,IAEHyG,EAAU;AAAA,MACf,OAAO;AAAA,MACP,OAAO+B;AAAA,MACP,KAAK;AAAA,MACL,WAAW;AAAA;AAAA,MAEX,YAAY,CAACz3D,GAAG+qD,OAAS;AACvB,QAAI/qD,EAAE,UAAU,KAAG+qD,GAAK,YAAW;AAAA,MACzC;AAAA,OACKkE,CAAI;AAAA,EACT,GAGMyI,IAAmB;AAAA,IACvB,OAAO;AAAA,IAAgB,WAAW;AAAA,KAE9BC,IAAmB;AAAA,IACvB,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU,CAACD,CAAgB;AAAA,KAEvBE,IAAoB;AAAA,IACxB,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU,CAACF,CAAgB;AAAA,KAEvBG,KAAqB;AAAA,IACzB,OAAO;AAAA,KAUHnY,IAAU,SAAS5rC,GAAOpR,GAAKo1D,IAAc,CAAA,GAAI;AACrD,UAAMlF,KAAO8C;AAAA,MACX;AAAA,QACE,OAAO;AAAA,QACP,OAAA5hD;AAAA,QACA,KAAApR;AAAA,QACA,UAAU,CAAA;AAAA;MAEZo1D;AAAA;AAEF,IAAAlF,GAAK,SAAS,KAAK;AAAA,MACjB,OAAO;AAAA;AAAA;AAAA,MAGP,OAAO;AAAA,MACP,KAAK;AAAA,MACL,cAAc;AAAA,MACd,WAAW;AAAA,IACf,CAAG;AACD,UAAMmF,KAAe7I;AAAA;AAAA,MAEnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA;AAGF,WAAA0D,GAAK,SAAS;AAAA,MACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBE,OAAO/9D;AAAA,UACL;AAAA;AAAA,UACA;AAAA,UACAkjE;AAAA,UACA;AAAA,UACA;AAAA,QAAM;AAAA;AAAA,MACd;AAAA,OAESnF;AAAA,EACT,GACM7U,KAAsB2B,EAAQ,MAAM,GAAG,GACvCsY,IAAuBtY,EAAQ,QAAQ,MAAM,GAC7CuY,IAAoBvY,EAAQ,KAAK,GAAG,GACpCwY,IAAc;AAAA,IAClB,OAAO;AAAA,IACP,OAAOd;AAAA,IACP,WAAW;AAAA,KAEPe,IAAgB;AAAA,IACpB,OAAO;AAAA,IACP,OAAOd;AAAA,IACP,WAAW;AAAA,KAEPe,KAAqB;AAAA,IACzB,OAAO;AAAA,IACP,OAAOd;AAAA,IACP,WAAW;AAAA,KAEPe,KAAc;AAAA,IAClB,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACRX;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,QACX,UAAU,CAACA,CAAgB;AAAA,MACjC;AAAA,IACA;AAAA,KAEMnZ,KAAa;AAAA,IACjB,OAAO;AAAA,IACP,OAAOoE;AAAA,IACP,WAAW;AAAA,KAEP2V,KAAwB;AAAA,IAC5B,OAAO;AAAA,IACP,OAAO/K;AAAA,IACP,WAAW;AAAA,KAEPgL,KAAe;AAAA;AAAA,IAEnB,OAAO,YAAYhL;AAAA,IACnB,WAAW;AAAA;AAoBb,MAAIzL,KAAqB,uBAAO,OAAO;AAAA,IACrC,WAAW;AAAA,IACX,kBAAkB6V;AAAA,IAClB,kBAAkBD;AAAA,IAClB,oBAAoBU;AAAA,IACpB,kBAAkBd;AAAA,IAClB,SAAS5X;AAAA,IACT,sBAAsBsY;AAAA,IACtB,qBAAqBja;AAAA,IACrB,eAAeoa;AAAA,IACf,aAAad;AAAA,IACb,mBArBwB,SAASzE,GAAM;AACvC,aAAO,OAAO;AAAA,QAAOA;AAAA,QACnB;AAAA;AAAA,UAEE,YAAY,CAAC5yD,GAAG+qD,MAAS;AAAE,YAAAA,EAAK,KAAK,cAAc/qD,EAAE,CAAC;AAAA,UAAE;AAAA;AAAA,UAExD,UAAU,CAACA,GAAG+qD,MAAS;AAAE,YAAIA,EAAK,KAAK,gBAAgB/qD,EAAE,CAAC,KAAG+qD,EAAK,YAAW;AAAA,UAAG;AAAA,QACtF;AAAA,MAAK;AAAA,IACL;AAAA,IAcE,mBAAmBkN;AAAA,IACnB,UAAUtV;AAAA,IACV,kBAAkBwU;AAAA,IAClB,cAAcoB;AAAA,IACd,aAAaL;AAAA,IACb,WAAWd;AAAA,IACX,oBAAoBS;AAAA,IACpB,mBAAmBD;AAAA,IACnB,aAAaS;AAAA,IACb,gBAAgBd;AAAA,IAChB,SAASC;AAAA,IACT,YAAYjZ;AAAA,IACZ,qBAAqBgP;AAAA,IACrB,uBAAuB+K;AAAA,EACzB,CAAC;AA+BD,WAASE,GAAsBz4D,GAAOhI,GAAU;AAE9C,IADegI,EAAM,MAAMA,EAAM,QAAQ,CAAC,MAC3B,OACbhI,EAAS,YAAW;AAAA,EAExB;AAMA,WAAS0gE,GAAe7F,GAAM8F,GAAS;AAErC,IAAI9F,EAAK,cAAc,WACrBA,EAAK,QAAQA,EAAK,WAClB,OAAOA,EAAK;AAAA,EAEhB;AAMA,WAAS+F,GAAc/F,GAAM1vD,GAAQ;AACnC,IAAKA,KACA0vD,EAAK,kBAOVA,EAAK,QAAQ,SAASA,EAAK,cAAc,MAAM,GAAG,EAAE,KAAK,GAAG,IAAI,uBAChEA,EAAK,gBAAgB4F,IACrB5F,EAAK,WAAWA,EAAK,YAAYA,EAAK,eACtC,OAAOA,EAAK,eAKRA,EAAK,cAAc,WAAWA,EAAK,YAAY;AAAA,EACrD;AAMA,WAASgG,GAAehG,GAAM8F,GAAS;AACrC,IAAK,MAAM,QAAQ9F,EAAK,OAAO,MAE/BA,EAAK,UAAU1D,EAAO,GAAG0D,EAAK,OAAO;AAAA,EACvC;AAMA,WAASiG,GAAajG,GAAM8F,GAAS;AACnC,QAAK9F,EAAK,OACV;AAAA,UAAIA,EAAK,SAASA,EAAK,IAAK,OAAM,IAAI,MAAM,0CAA0C;AAEtF,MAAAA,EAAK,QAAQA,EAAK,OAClB,OAAOA,EAAK;AAAA;AAAA,EACd;AAMA,WAASkG,GAAiBlG,GAAM8F,GAAS;AAEvC,IAAI9F,EAAK,cAAc,WAAWA,EAAK,YAAY;AAAA,EACrD;AAIA,QAAMmG,KAAiB,CAACnG,GAAM1vD,MAAW;AACvC,QAAI,CAAC0vD,EAAK,YAAa;AAGvB,QAAIA,EAAK,OAAQ,OAAM,IAAI,MAAM,wCAAwC;AAEzE,UAAMoG,IAAe,OAAO,OAAO,CAAA,GAAIpG,CAAI;AAC3C,WAAO,KAAKA,CAAI,EAAE,QAAQ,CAAC5iE,OAAQ;AAAE,aAAO4iE,EAAK5iE,EAAG;AAAA,KAAI,GAExD4iE,EAAK,WAAWoG,EAAa,UAC7BpG,EAAK,QAAQ/9D,EAAOmkE,EAAa,aAAa7M,EAAU6M,EAAa,KAAK,CAAC,GAC3EpG,EAAK,SAAS;AAAA,MACZ,WAAW;AAAA,MACX,UAAU;AAAA,QACR,OAAO,OAAOoG,GAAc,EAAE,YAAY,GAAI,CAAE;AAAA,MACtD;AAAA,OAEEpG,EAAK,YAAY,GAEjB,OAAOoG,EAAa;AAAA,EACtB,GAGMC,KAAkB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,KAGIC,KAAwB;AAQ9B,WAASC,GAAgBC,GAAaC,GAAiBC,IAAYJ,IAAuB;AAExF,UAAMK,KAAmB,uBAAO,OAAO,IAAI;AAI3C,WAAI,OAAOH,KAAgB,WACzBI,GAAYF,GAAWF,EAAY,MAAM,GAAG,CAAC,IACpC,MAAM,QAAQA,CAAW,IAClCI,GAAYF,GAAWF,CAAW,IAElC,OAAO,KAAKA,CAAW,EAAE,QAAQ,SAASE,IAAW;AAEnD,aAAO;AAAA,QACLC;AAAA,QACAJ,GAAgBC,EAAYE,EAAS,GAAGD,GAAiBC,EAAS;AAAA;IAE1E,CAAK,GAEIC;AAYP,aAASC,GAAYF,IAAWG,GAAa;AAC3C,MAAIJ,MACFI,IAAcA,EAAY,IAAI,CAAAzT,MAAKA,EAAE,YAAW,CAAE,IAEpDyT,EAAY,QAAQ,SAASlL,GAAS;AACpC,cAAM1jC,KAAO0jC,EAAQ,MAAM,GAAG;AAC9B,QAAAgL,GAAiB1uC,GAAK,CAAC,CAAC,IAAI,CAACyuC,IAAWI,GAAgB7uC,GAAK,CAAC,GAAGA,GAAK,CAAC,CAAC,CAAC;AAAA,MAC/E,CAAK;AAAA,IACL;AAAA,EACA;AAUA,WAAS6uC,GAAgBnL,GAASoL,GAAe;AAG/C,WAAIA,IACK,OAAOA,CAAa,IAGtBC,GAAcrL,CAAO,IAAI,IAAI;AAAA,EACtC;AAMA,WAASqL,GAAcrL,GAAS;AAC9B,WAAO0K,GAAgB,SAAS1K,EAAQ,YAAW,CAAE;AAAA,EACvD;AAYA,QAAMsL,KAAmB,CAAA,GAKnB/gE,KAAQ,CAACzD,MAAY;AACzB,YAAQ,MAAMA,CAAO;AAAA,EACvB,GAMMykE,KAAO,CAACzkE,MAAYwkC,MAAS;AACjC,YAAQ,IAAI,SAASxkC,CAAO,IAAI,GAAGwkC,CAAI;AAAA,EACzC,GAMMkgC,IAAa,CAACC,GAAS3kE,MAAY;AACvC,IAAIwkE,GAAiB,GAAGG,CAAO,IAAI3kE,CAAO,EAAE,MAE5C,QAAQ,IAAI,oBAAoB2kE,CAAO,KAAK3kE,CAAO,EAAE,GACrDwkE,GAAiB,GAAGG,CAAO,IAAI3kE,CAAO,EAAE,IAAI;AAAA,EAC9C,GAQM4kE,IAAkB,IAAI,MAAK;AA8BjC,WAASC,EAAgBtH,GAAMuH,GAAS,EAAE,KAAAnqE,EAAG,GAAI;AAC/C,QAAI4c,KAAS;AACb,UAAMwtD,KAAaxH,EAAK5iE,CAAG,GAErBqqE,KAAO,CAAA,GAEPC,IAAY,CAAA;AAElB,aAAS36D,IAAI,GAAGA,KAAKw6D,EAAQ,QAAQx6D;AACnC,MAAA26D,EAAU36D,IAAIiN,EAAM,IAAIwtD,GAAWz6D,CAAC,GACpC06D,GAAK16D,IAAIiN,EAAM,IAAI,IACnBA,MAAU+pD,EAAiBwD,EAAQx6D,IAAI,CAAC,CAAC;AAI3C,IAAAizD,EAAK5iE,CAAG,IAAIsqE,GACZ1H,EAAK5iE,CAAG,EAAE,QAAQqqE,IAClBzH,EAAK5iE,CAAG,EAAE,SAAS;AAAA,EACrB;AAKA,WAASuqE,GAAgB3H,GAAM;AAC7B,QAAK,MAAM,QAAQA,EAAK,KAAK,GAE7B;AAAA,UAAIA,EAAK,QAAQA,EAAK,gBAAgBA,EAAK;AACzC,cAAA95D,GAAM,oEAAoE,GACpEmhE;AAGR,UAAI,OAAOrH,EAAK,cAAe,YAAYA,EAAK,eAAe;AAC7D,cAAA95D,GAAM,2BAA2B,GAC3BmhE;AAGR,MAAAC,EAAgBtH,GAAMA,EAAK,OAAO,EAAE,KAAK,cAAc,GACvDA,EAAK,QAAQmE,EAAuBnE,EAAK,OAAO,EAAE,UAAU,IAAI;AAAA;AAAA,EAClE;AAKA,WAAS4H,GAAc5H,GAAM;AAC3B,QAAK,MAAM,QAAQA,EAAK,GAAG,GAE3B;AAAA,UAAIA,EAAK,QAAQA,EAAK,cAAcA,EAAK;AACvC,cAAA95D,GAAM,8DAA8D,GAC9DmhE;AAGR,UAAI,OAAOrH,EAAK,YAAa,YAAYA,EAAK,aAAa;AACzD,cAAA95D,GAAM,yBAAyB,GACzBmhE;AAGR,MAAAC,EAAgBtH,GAAMA,EAAK,KAAK,EAAE,KAAK,YAAY,GACnDA,EAAK,MAAMmE,EAAuBnE,EAAK,KAAK,EAAE,UAAU,IAAI;AAAA;AAAA,EAC9D;AAaA,WAAS6H,GAAW7H,GAAM;AACxB,IAAIA,EAAK,SAAS,OAAOA,EAAK,SAAU,YAAYA,EAAK,UAAU,SACjEA,EAAK,aAAaA,EAAK,OACvB,OAAOA,EAAK;AAAA,EAEhB;AAKA,WAAS8H,GAAW9H,GAAM;AACxB,IAAA6H,GAAW7H,CAAI,GAEX,OAAOA,EAAK,cAAe,aAC7BA,EAAK,aAAa,EAAE,OAAOA,EAAK,WAAU,IAExC,OAAOA,EAAK,YAAa,aAC3BA,EAAK,WAAW,EAAE,OAAOA,EAAK,SAAQ,IAGxC2H,GAAgB3H,CAAI,GACpB4H,GAAc5H,CAAI;AAAA,EACpB;AAoBA,WAAS+H,GAAgBC,GAAU;AAOjC,aAASC,EAAO3pE,GAAO4pE,GAAQ;AAC7B,aAAO,IAAI;AAAA,QACTpoE,EAAOxB,CAAK;AAAA,QACZ,OACG0pE,EAAS,mBAAmB,MAAM,OAClCA,EAAS,eAAe,MAAM,OAC9BE,IAAS,MAAM;AAAA;IAExB;AAAA,IAeE,MAAMC,EAAW;AAAA,MACf,cAAc;AACZ,aAAK,eAAe,CAAA,GAEpB,KAAK,UAAU,CAAA,GACf,KAAK,UAAU,GACf,KAAK,WAAW;AAAA,MACtB;AAAA;AAAA,MAGI,QAAQjgE,GAAIm0D,IAAM;AAChB,QAAAA,GAAK,WAAW,KAAK,YAErB,KAAK,aAAa,KAAK,OAAO,IAAIA,IAClC,KAAK,QAAQ,KAAK,CAACA,IAAMn0D,CAAE,CAAC,GAC5B,KAAK,WAAW67D,EAAiB77D,CAAE,IAAI;AAAA,MAC7C;AAAA,MAEI,UAAU;AACR,QAAI,KAAK,QAAQ,WAAW,MAG1B,KAAK,OAAO,MAAM;AAEpB,cAAMkgE,IAAc,KAAK,QAAQ,IAAI,CAAA1E,OAAMA,GAAG,CAAC,CAAC;AAChD,aAAK,YAAYuE,EAAO9D,EAAuBiE,GAAa,EAAE,UAAU,KAAK,GAAG,EAAI,GACpF,KAAK,YAAY;AAAA,MACvB;AAAA;AAAA,MAGI,KAAKhlE,GAAG;AACN,aAAK,UAAU,YAAY,KAAK;AAChC,cAAM+J,KAAQ,KAAK,UAAU,KAAK/J,CAAC;AACnC,YAAI,CAAC+J;AAAS,iBAAO;AAGrB,cAAMJ,KAAII,GAAM,UAAU,CAACu2D,IAAI32D,OAAMA,KAAI,KAAK22D,OAAO,MAAS,GAExD2E,KAAY,KAAK,aAAat7D,EAAC;AAGrC,eAAAI,GAAM,OAAO,GAAGJ,EAAC,GAEV,OAAO,OAAOI,IAAOk7D,EAAS;AAAA,MAC3C;AAAA,IACA;AAAA,IAiCE,MAAMC,GAAoB;AAAA,MACxB,cAAc;AAEZ,aAAK,QAAQ,CAAA,GAEb,KAAK,eAAe,CAAA,GACpB,KAAK,QAAQ,GAEb,KAAK,YAAY,GACjB,KAAK,aAAa;AAAA,MACxB;AAAA;AAAA,MAGI,WAAWz+D,GAAO;AAChB,YAAI,KAAK,aAAaA,CAAK,EAAG,QAAO,KAAK,aAAaA,CAAK;AAE5D,cAAM0+D,KAAU,IAAIJ,EAAU;AAC9B,oBAAK,MAAM,MAAMt+D,CAAK,EAAE,QAAQ,CAAC,CAAC3B,IAAIm0D,EAAI,MAAMkM,GAAQ,QAAQrgE,IAAIm0D,EAAI,CAAC,GACzEkM,GAAQ,QAAO,GACf,KAAK,aAAa1+D,CAAK,IAAI0+D,IACpBA;AAAA,MACb;AAAA,MAEI,6BAA6B;AAC3B,eAAO,KAAK,eAAe;AAAA,MACjC;AAAA,MAEI,cAAc;AACZ,aAAK,aAAa;AAAA,MACxB;AAAA;AAAA,MAGI,QAAQrgE,GAAIm0D,IAAM;AAChB,aAAK,MAAM,KAAK,CAACn0D,GAAIm0D,EAAI,CAAC,GACtBA,GAAK,SAAS,WAAS,KAAK;AAAA,MACtC;AAAA;AAAA,MAGI,KAAKj5D,GAAG;AACN,cAAMgK,KAAI,KAAK,WAAW,KAAK,UAAU;AACzC,QAAAA,GAAE,YAAY,KAAK;AACnB,YAAI3L,KAAS2L,GAAE,KAAKhK,CAAC;AAiCrB,YAAI,KAAK,gCACH,EAAA3B,MAAUA,GAAO,UAAU,KAAK,YAAkB;AACpD,gBAAM+mE,KAAK,KAAK,WAAW,CAAC;AAC5B,UAAAA,GAAG,YAAY,KAAK,YAAY,GAChC/mE,KAAS+mE,GAAG,KAAKplE,CAAC;AAAA,QAC5B;AAGM,eAAI3B,OACF,KAAK,cAAcA,GAAO,WAAW,GACjC,KAAK,eAAe,KAAK,SAE3B,KAAK,YAAW,IAIbA;AAAA,MACb;AAAA,IACA;AASE,aAASgnE,GAAezI,GAAM;AAC5B,YAAM0I,IAAK,IAAIJ,GAAmB;AAElC,aAAAtI,EAAK,SAAS,QAAQ,CAAA2I,OAAQD,EAAG,QAAQC,GAAK,OAAO,EAAE,MAAMA,IAAM,MAAM,QAAO,CAAE,CAAC,GAE/E3I,EAAK,iBACP0I,EAAG,QAAQ1I,EAAK,eAAe,EAAE,MAAM,OAAO,GAE5CA,EAAK,WACP0I,EAAG,QAAQ1I,EAAK,SAAS,EAAE,MAAM,WAAW,GAGvC0I;AAAA,IACX;AAyCE,aAASE,GAAY5I,GAAM1vD,GAAQ;AACjC,YAAMu4D;AAAA;AAAA,QAAmC7I;AAAA;AACzC,UAAIA,EAAK,WAAY,QAAO6I;AAE5B;AAAA,QACEhD;AAAA;AAAA;AAAA,QAGAI;AAAA,QACA6B;AAAA,QACA3B;AAAA,QACA,QAAQ,CAAA2C,OAAOA,GAAI9I,GAAM1vD,CAAM,CAAC,GAElC03D,EAAS,mBAAmB,QAAQ,CAAAc,OAAOA,GAAI9I,GAAM1vD,CAAM,CAAC,GAG5D0vD,EAAK,gBAAgB,MAErB;AAAA,QACE+F;AAAA;AAAA;AAAA,QAGAC;AAAA;AAAA,QAEAE;AAAA,QACA,QAAQ,CAAA4C,OAAOA,GAAI9I,GAAM1vD,CAAM,CAAC,GAElC0vD,EAAK,aAAa;AAElB,UAAI+I,KAAiB;AACrB,aAAI,OAAO/I,EAAK,YAAa,YAAYA,EAAK,SAAS,aAIrDA,EAAK,WAAW,OAAO,OAAO,CAAA,GAAIA,EAAK,QAAQ,GAC/C+I,KAAiB/I,EAAK,SAAS,UAC/B,OAAOA,EAAK,SAAS,WAEvB+I,KAAiBA,MAAkB,OAE/B/I,EAAK,aACPA,EAAK,WAAWuG,GAAgBvG,EAAK,UAAUgI,EAAS,gBAAgB,IAG1Ea,GAAM,mBAAmBZ,EAAOc,IAAgB,EAAI,GAEhDz4D,MACG0vD,EAAK,UAAOA,EAAK,QAAQ,UAC9B6I,GAAM,UAAUZ,EAAOY,GAAM,KAAK,GAC9B,CAAC7I,EAAK,OAAO,CAACA,EAAK,mBAAgBA,EAAK,MAAM,UAC9CA,EAAK,QAAK6I,GAAM,QAAQZ,EAAOY,GAAM,GAAG,IAC5CA,GAAM,gBAAgB/oE,EAAO+oE,GAAM,GAAG,KAAK,IACvC7I,EAAK,kBAAkB1vD,EAAO,kBAChCu4D,GAAM,kBAAkB7I,EAAK,MAAM,MAAM,MAAM1vD,EAAO,iBAGtD0vD,EAAK,YAAS6I,GAAM,YAAYZ;AAAA;AAAA,QAAuCjI,EAAK;AAAA,MAAO,IAClFA,EAAK,aAAUA,EAAK,WAAW,CAAA,IAEpCA,EAAK,WAAW,CAAA,EAAG,OAAO,GAAGA,EAAK,SAAS,IAAI,SAASzyD,IAAG;AACzD,eAAOy7D,GAAkBz7D,OAAM,SAASyyD,IAAOzyD,EAAC;AAAA,MACtD,CAAK,CAAC,GACFyyD,EAAK,SAAS,QAAQ,SAASzyD,IAAG;AAAE,QAAAq7D;AAAA;AAAA,UAA+Br7D;AAAA,UAAIs7D;AAAA,QAAK;AAAA,OAAI,GAE5E7I,EAAK,UACP4I,GAAY5I,EAAK,QAAQ1vD,CAAM,GAGjCu4D,GAAM,UAAUJ,GAAeI,EAAK,GAC7BA;AAAA,IACX;AAKE,QAHKb,EAAS,uBAAoBA,EAAS,qBAAqB,CAAA,IAG5DA,EAAS,YAAYA,EAAS,SAAS,SAAS,MAAM;AACxD,YAAM,IAAI,MAAM,2FAA2F;AAI7G,WAAAA,EAAS,mBAAmBlF,EAAUkF,EAAS,oBAAoB,CAAA,CAAE,GAE9DY;AAAA;AAAA,MAA+BZ;AAAA,IAAQ;AAAA,EAChD;AAaA,WAASiB,GAAmBjJ,GAAM;AAChC,WAAKA,IAEEA,EAAK,kBAAkBiJ,GAAmBjJ,EAAK,MAAM,IAF1C;AAAA,EAGpB;AAYA,WAASgJ,GAAkBhJ,GAAM;AAU/B,WATIA,EAAK,YAAY,CAACA,EAAK,mBACzBA,EAAK,iBAAiBA,EAAK,SAAS,IAAI,SAASl4B,GAAS;AACxD,aAAOg7B,EAAU9C,GAAM,EAAE,UAAU,KAAI,GAAIl4B,CAAO;AAAA,IACxD,CAAK,IAMCk4B,EAAK,iBACAA,EAAK,iBAOViJ,GAAmBjJ,CAAI,IAClB8C,EAAU9C,GAAM,EAAE,QAAQA,EAAK,SAAS8C,EAAU9C,EAAK,MAAM,IAAI,KAAI,CAAE,IAG5E,OAAO,SAASA,CAAI,IACf8C,EAAU9C,CAAI,IAIhBA;AAAA,EACT;AAEA,MAAIoH,KAAU;AAAA,EAEd,MAAM8B,WAA2B,MAAM;AAAA,IACrC,YAAY94D,GAAQ5F,GAAM;AACxB,YAAM4F,CAAM,GACZ,KAAK,OAAO,sBACZ,KAAK,OAAO5F;AAAA,IAChB;AAAA,EACA;AA+BA,QAAM2W,KAAS0hD,GACTsG,KAAUrG,GACVsG,KAAW,OAAO,SAAS,GAC3BC,KAAmB,GAMnBC,KAAO,SAASpe,GAAM;AAG1B,UAAMqe,IAAY,uBAAO,OAAO,IAAI,GAE9BC,IAAU,uBAAO,OAAO,IAAI,GAE5B1mC,KAAU,CAAA;AAIhB,QAAI2mC,KAAY;AAChB,UAAMC,KAAqB,uFAErBC,IAAqB,EAAE,mBAAmB,IAAM,MAAM,cAAc,UAAU,GAAE;AAKtF,QAAI/jE,IAAU;AAAA,MACZ,qBAAqB;AAAA,MACrB,oBAAoB;AAAA,MACpB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,WAAW;AAAA;AAAA;AAAA,MAGX,WAAW+9D;AAAA;AASb,aAASiG,GAAmBC,GAAc;AACxC,aAAOjkE,EAAQ,cAAc,KAAKikE,CAAY;AAAA,IAClD;AAKE,aAASC,GAActf,GAAO;AAC5B,UAAIhU,IAAUgU,EAAM,YAAY;AAEhC,MAAAhU,KAAWgU,EAAM,aAAaA,EAAM,WAAW,YAAY;AAG3D,YAAMr9C,KAAQvH,EAAQ,iBAAiB,KAAK4wC,CAAO;AACnD,UAAIrpC,IAAO;AACT,cAAM66D,KAAW+B,GAAY58D,GAAM,CAAC,CAAC;AACrC,eAAK66D,OACHd,GAAKwC,GAAmB,QAAQ,MAAMv8D,GAAM,CAAC,CAAC,CAAC,GAC/C+5D,GAAK,qDAAqD1c,CAAK,IAE1Dwd,KAAW76D,GAAM,CAAC,IAAI;AAAA,MACnC;AAEI,aAAOqpC,EACJ,MAAM,KAAK,EACX,KAAK,CAACwzB,OAAWJ,GAAmBI,EAAM,KAAKD,GAAYC,EAAM,CAAC;AAAA,IACzE;AAuBE,aAASC,GAAUC,GAAoBC,GAAeC,IAAgB;AACpE,UAAIl1D,KAAO,IACP20D,KAAe;AACnB,MAAI,OAAOM,KAAkB,YAC3Bj1D,KAAOg1D,GACPE,KAAiBD,EAAc,gBAC/BN,KAAeM,EAAc,aAG7BhD,EAAW,UAAU,qDAAqD,GAC1EA,EAAW,UAAU;AAAA,wDAAuG,GAC5H0C,KAAeK,GACfh1D,KAAOi1D,IAKLC,OAAmB,WAAaA,KAAiB;AAGrD,YAAM/wD,KAAU;AAAA,QACd,MAAAnE;AAAA,QACA,UAAU20D;AAAA;AAIZ,MAAAQ,GAAK,oBAAoBhxD,EAAO;AAIhC,YAAM5X,KAAS4X,GAAQ,SACnBA,GAAQ,SACRixD,GAAWjxD,GAAQ,UAAUA,GAAQ,MAAM+wD,EAAc;AAE7D,aAAA3oE,GAAO,OAAO4X,GAAQ,MAEtBgxD,GAAK,mBAAmB5oE,EAAM,GAEvBA;AAAA,IACX;AAWE,aAAS6oE,GAAWT,GAAcU,GAAiBH,IAAgB5mD,IAAc;AAC/E,YAAMgnD,KAAc,uBAAO,OAAO,IAAI;AAQtC,eAASC,GAAYzK,GAAM0K,GAAW;AACpC,eAAO1K,EAAK,SAAS0K,CAAS;AAAA,MACpC;AAEI,eAASC,KAAkB;AACzB,YAAI,CAACC,GAAI,UAAU;AACjB,UAAAhH,GAAQ,QAAQiH,EAAU;AAC1B;AAAA,QACR;AAEM,YAAIC,IAAY;AAChB,QAAAF,GAAI,iBAAiB,YAAY;AACjC,YAAIz9D,IAAQy9D,GAAI,iBAAiB,KAAKC,EAAU,GAC5CE,KAAM;AAEV,eAAO59D,KAAO;AACZ,UAAA49D,MAAOF,GAAW,UAAUC,GAAW39D,EAAM,KAAK;AAClD,gBAAM69D,KAAOhD,GAAS,mBAAmB76D,EAAM,CAAC,EAAE,YAAW,IAAKA,EAAM,CAAC,GACnEtH,KAAO4kE,GAAYG,IAAKI,EAAI;AAClC,cAAInlE,IAAM;AACR,kBAAM,CAACwjB,IAAM4hD,EAAgB,IAAIplE;AAMjC,gBALA+9D,GAAQ,QAAQmH,EAAG,GACnBA,KAAM,IAENP,GAAYQ,EAAI,KAAKR,GAAYQ,EAAI,KAAK,KAAK,GAC3CR,GAAYQ,EAAI,KAAK3B,OAAkBxU,MAAaoW,KACpD5hD,GAAK,WAAW,GAAG;AAGrB,cAAA0hD,MAAO59D,EAAM,CAAC;AAAA,iBACT;AACL,oBAAM+9D,KAAWlD,GAAS,iBAAiB3+C,EAAI,KAAKA;AACpD,cAAA8hD,GAAYh+D,EAAM,CAAC,GAAG+9D,EAAQ;AAAA,YAC1C;AAAA,UACA;AACU,YAAAH,MAAO59D,EAAM,CAAC;AAEhB,UAAA29D,IAAYF,GAAI,iBAAiB,WACjCz9D,IAAQy9D,GAAI,iBAAiB,KAAKC,EAAU;AAAA,QACpD;AACM,QAAAE,MAAOF,GAAW,UAAUC,CAAS,GACrClH,GAAQ,QAAQmH,EAAG;AAAA,MACzB;AAEI,eAASK,KAAqB;AAC5B,YAAIP,OAAe,GAAI;AAEvB,YAAIppE,IAAS;AAEb,YAAI,OAAOmpE,GAAI,eAAgB,UAAU;AACvC,cAAI,CAACrB,EAAUqB,GAAI,WAAW,GAAG;AAC/B,YAAAhH,GAAQ,QAAQiH,EAAU;AAC1B;AAAA,UACV;AACQ,UAAAppE,IAAS6oE,GAAWM,GAAI,aAAaC,IAAY,IAAMQ,GAAcT,GAAI,WAAW,CAAC,GACrFS,GAAcT,GAAI,WAAW;AAAA,UAAiCnpE,EAAO;AAAA,QAC7E;AACQ,UAAAA,IAAS6pE,GAAcT,IAAYD,GAAI,YAAY,SAASA,GAAI,cAAc,IAAI;AAOpF,QAAIA,GAAI,YAAY,MAClB/V,MAAapzD,EAAO,YAEtBmiE,GAAQ,iBAAiBniE,EAAO,UAAUA,EAAO,QAAQ;AAAA,MAC/D;AAEI,eAAS8pE,KAAgB;AACvB,QAAIX,GAAI,eAAe,OACrBQ,GAAkB,IAElBT,GAAe,GAEjBE,KAAa;AAAA,MACnB;AAMI,eAASM,GAAYxP,GAAS6H,GAAO;AACnC,QAAI7H,MAAY,OAEhBiI,GAAQ,WAAWJ,CAAK,GACxBI,GAAQ,QAAQjI,CAAO,GACvBiI,GAAQ,SAAQ;AAAA,MACtB;AAMI,eAAS4H,GAAehI,GAAOr2D,GAAO;AACpC,YAAIJ,KAAI;AACR,cAAM+J,KAAM3J,EAAM,SAAS;AAC3B,eAAOJ,MAAK+J,MAAK;AACf,cAAI,CAAC0sD,EAAM,MAAMz2D,EAAC,GAAG;AAAE,YAAAA;AAAK;AAAA,UAAS;AACrC,gBAAM0+D,KAAQzD,GAAS,iBAAiBxE,EAAMz2D,EAAC,CAAC,KAAKy2D,EAAMz2D,EAAC,GACtDyE,KAAOrE,EAAMJ,EAAC;AACpB,UAAI0+D,KACFN,GAAY35D,IAAMi6D,EAAK,KAEvBZ,KAAar5D,IACbm5D,GAAe,GACfE,KAAa,KAEf99D;AAAA,QACR;AAAA,MACA;AAMI,eAAS2+D,GAAa1L,GAAM7yD,GAAO;AACjC,eAAI6yD,EAAK,SAAS,OAAOA,EAAK,SAAU,YACtC4D,GAAQ,SAASoE,GAAS,iBAAiBhI,EAAK,KAAK,KAAKA,EAAK,KAAK,GAElEA,EAAK,eAEHA,EAAK,WAAW,SAClBmL,GAAYN,IAAY7C,GAAS,iBAAiBhI,EAAK,WAAW,KAAK,KAAKA,EAAK,WAAW,KAAK,GACjG6K,KAAa,MACJ7K,EAAK,WAAW,WAEzBwL,GAAexL,EAAK,YAAY7yD,CAAK,GACrC09D,KAAa,MAIjBD,KAAM,OAAO,OAAO5K,GAAM,EAAE,QAAQ,EAAE,OAAO4K,GAAG,GAAI,GAC7CA;AAAA,MACb;AAQI,eAASe,GAAU3L,GAAM7yD,GAAOy+D,IAAoB;AAClD,YAAIC,KAAU7H,EAAWhE,EAAK,OAAO4L,EAAkB;AAEvD,YAAIC,IAAS;AACX,cAAI7L,EAAK,QAAQ,GAAG;AAClB,kBAAM7H,KAAO,IAAIyK,EAAS5C,CAAI;AAC9B,YAAAA,EAAK,QAAQ,EAAE7yD,GAAOgrD,EAAI,GACtBA,GAAK,mBAAgB0T,KAAU;AAAA,UAC7C;AAEQ,cAAIA,IAAS;AACX,mBAAO7L,EAAK,cAAcA,EAAK;AAC7B,cAAAA,IAAOA,EAAK;AAEd,mBAAOA;AAAA,UACjB;AAAA,QACA;AAGM,YAAIA,EAAK;AACP,iBAAO2L,GAAU3L,EAAK,QAAQ7yD,GAAOy+D,EAAkB;AAAA,MAE/D;AAOI,eAASE,GAAS7H,GAAQ;AACxB,eAAI2G,GAAI,QAAQ,eAAe,KAG7BC,MAAc5G,EAAO,CAAC,GACf,MAIP8H,KAA2B,IACpB;AAAA,MAEf;AAQI,eAASC,GAAa7+D,GAAO;AAC3B,cAAM82D,IAAS92D,EAAM,CAAC,GAChB8+D,KAAU9+D,EAAM,MAEhBgrD,KAAO,IAAIyK,EAASqJ,EAAO,GAE3BC,KAAkB,CAACD,GAAQ,eAAeA,GAAQ,UAAU,CAAC;AACnE,mBAAWE,MAAMD;AACf,cAAKC,OACLA,GAAGh/D,GAAOgrD,EAAI,GACVA,GAAK;AAAgB,mBAAO2T,GAAS7H,CAAM;AAGjD,eAAIgI,GAAQ,OACVpB,MAAc5G,KAEVgI,GAAQ,iBACVpB,MAAc5G,IAEhBsH,GAAa,GACT,CAACU,GAAQ,eAAe,CAACA,GAAQ,iBACnCpB,KAAa5G,KAGjByH,GAAaO,IAAS9+D,CAAK,GACpB8+D,GAAQ,cAAc,IAAIhI,EAAO;AAAA,MAC9C;AAOI,eAASmI,GAAWj/D,GAAO;AACzB,cAAM82D,IAAS92D,EAAM,CAAC,GAChBy+D,KAAqBrB,EAAgB,UAAUp9D,EAAM,KAAK,GAE1Dk/D,KAAUV,GAAUf,IAAKz9D,GAAOy+D,EAAkB;AACxD,YAAI,CAACS;AAAW,iBAAOjD;AAEvB,cAAMj5D,KAASy6D;AACf,QAAIA,GAAI,YAAYA,GAAI,SAAS,SAC/BW,GAAa,GACbJ,GAAYlH,GAAQ2G,GAAI,SAAS,KAAK,KAC7BA,GAAI,YAAYA,GAAI,SAAS,UACtCW,GAAa,GACbC,GAAeZ,GAAI,UAAUz9D,CAAK,KACzBgD,GAAO,OAChB06D,MAAc5G,KAER9zD,GAAO,aAAaA,GAAO,eAC/B06D,MAAc5G,IAEhBsH,GAAa,GACTp7D,GAAO,eACT06D,KAAa5G;AAGjB;AACE,UAAI2G,GAAI,SACNhH,GAAQ,UAAS,GAEf,CAACgH,GAAI,QAAQ,CAACA,GAAI,gBACpB/V,MAAa+V,GAAI,YAEnBA,KAAMA,GAAI;AAAA,eACHA,OAAQyB,GAAQ;AACzB,eAAIA,GAAQ,UACVX,GAAaW,GAAQ,QAAQl/D,CAAK,GAE7BgD,GAAO,YAAY,IAAI8zD,EAAO;AAAA,MAC3C;AAEI,eAASqI,KAAuB;AAC9B,cAAMj4D,IAAO,CAAA;AACb,iBAASgL,IAAUurD,IAAKvrD,MAAY2oD,IAAU3oD,IAAUA,EAAQ;AAC9D,UAAIA,EAAQ,SACVhL,EAAK,QAAQgL,EAAQ,KAAK;AAG9B,QAAAhL,EAAK,QAAQ,CAAA2D,MAAQ4rD,GAAQ,SAAS5rD,CAAI,CAAC;AAAA,MACjD;AAGI,UAAIu0D,KAAY,CAAA;AAQhB,eAASC,GAAcC,GAAiBt/D,GAAO;AAC7C,cAAM82D,KAAS92D,KAASA,EAAM,CAAC;AAK/B,YAFA09D,MAAc4B,GAEVxI,MAAU;AACZ,iBAAAsH,GAAa,GACN;AAOT,YAAIgB,GAAU,SAAS,WAAWp/D,EAAM,SAAS,SAASo/D,GAAU,UAAUp/D,EAAM,SAAS82D,OAAW,IAAI;AAG1G,cADA4G,MAAcN,EAAgB,MAAMp9D,EAAM,OAAOA,EAAM,QAAQ,CAAC,GAC5D,CAACs8D,IAAW;AAEd,kBAAMpkE,KAAM,IAAI,MAAM,wBAAwBwkE,CAAY,GAAG;AAC7D,kBAAAxkE,GAAI,eAAewkE,GACnBxkE,GAAI,UAAUknE,GAAU,MAClBlnE;AAAA,UAChB;AACQ,iBAAO;AAAA,QACf;AAGM,YAFAknE,KAAYp/D,GAERA,EAAM,SAAS;AACjB,iBAAO6+D,GAAa7+D,CAAK;AACpB,YAAIA,EAAM,SAAS,aAAa,CAACi9D,IAAgB;AAGtD,gBAAM/kE,KAAM,IAAI,MAAM,qBAAqB4+D,KAAS,kBAAkB2G,GAAI,SAAS,eAAe,GAAG;AACrG,gBAAAvlE,GAAI,OAAOulE,IACLvlE;AAAA,QACd,WAAiB8H,EAAM,SAAS,OAAO;AAC/B,gBAAMu/D,KAAYN,GAAWj/D,CAAK;AAClC,cAAIu/D,OAActD;AAChB,mBAAOsD;AAAA,QAEjB;AAKM,YAAIv/D,EAAM,SAAS,aAAa82D,OAAW;AAEzC,iBAAA4G,MAAc;AAAA,GACP;AAOT,YAAI8B,KAAa,OAAUA,KAAax/D,EAAM,QAAQ;AAEpD,gBADY,IAAI,MAAM,2DAA2D;AAYnF,eAAA09D,MAAc5G,IACPA,GAAO;AAAA,MACpB;AAEI,YAAM+D,KAAW+B,GAAYF,CAAY;AACzC,UAAI,CAAC7B;AACH,cAAA9hE,GAAMwjE,GAAmB,QAAQ,MAAMG,CAAY,CAAC,GAC9C,IAAI,MAAM,wBAAwBA,IAAe,GAAG;AAG5D,YAAM+C,KAAK7E,GAAgBC,EAAQ;AACnC,UAAIvmE,KAAS,IAETmpE,KAAMpnD,MAAgBopD;AAE1B,YAAMvB,KAAgB,CAAA,GAChBzH,KAAU,IAAIh+D,EAAQ,UAAUA,CAAO;AAC7C,MAAA0mE,GAAoB;AACpB,UAAIzB,KAAa,IACbhW,KAAY,GACZhrD,KAAQ,GACR8iE,KAAa,GACbZ,KAA2B;AAE/B,UAAI;AACF,YAAK/D,GAAS;AAyBZ,UAAAA,GAAS,aAAauC,GAAiB3G,EAAO;AAAA,aAzBpB;AAG1B,eAFAgH,GAAI,QAAQ,YAAW,OAEd;AACP,YAAA+B,MACIZ,KAGFA,KAA2B,KAE3BnB,GAAI,QAAQ,YAAW,GAEzBA,GAAI,QAAQ,YAAY/gE;AAExB,kBAAMsD,IAAQy9D,GAAI,QAAQ,KAAKL,CAAe;AAG9C,gBAAI,CAACp9D,EAAO;AAEZ,kBAAM0/D,IAActC,EAAgB,UAAU1gE,IAAOsD,EAAM,KAAK,GAC1D2/D,KAAiBN,GAAcK,GAAa1/D,CAAK;AACvD,YAAAtD,KAAQsD,EAAM,QAAQ2/D;AAAA,UAChC;AACQ,UAAAN,GAAcjC,EAAgB,UAAU1gE,EAAK,CAAC;AAAA,QACtD;AAIM,eAAA+5D,GAAQ,SAAQ,GAChBniE,KAASmiE,GAAQ,OAAM,GAEhB;AAAA,UACL,UAAUiG;AAAA,UACV,OAAOpoE;AAAA,UACP,WAAAozD;AAAA,UACA,SAAS;AAAA,UACT,UAAU+O;AAAA,UACV,MAAMgH;AAAA;MAEd,SAAavlE,GAAK;AACZ,YAAIA,EAAI,WAAWA,EAAI,QAAQ,SAAS,SAAS;AAC/C,iBAAO;AAAA,YACL,UAAUwkE;AAAA,YACV,OAAO1oD,GAAOopD,CAAe;AAAA,YAC7B,SAAS;AAAA,YACT,WAAW;AAAA,YACX,YAAY;AAAA,cACV,SAASllE,EAAI;AAAA,cACb,OAAAwE;AAAA,cACA,SAAS0gE,EAAgB,MAAM1gE,KAAQ,KAAKA,KAAQ,GAAG;AAAA,cACvD,MAAMxE,EAAI;AAAA,cACV,aAAa5D;AAAA;YAEf,UAAUmiE;AAAA;AAEP,YAAI6F;AACT,iBAAO;AAAA,YACL,UAAUI;AAAA,YACV,OAAO1oD,GAAOopD,CAAe;AAAA,YAC7B,SAAS;AAAA,YACT,WAAW;AAAA,YACX,aAAallE;AAAA,YACb,UAAUu+D;AAAA,YACV,MAAMgH;AAAA;AAGR,cAAMvlE;AAAA,MAEd;AAAA,IACA;AASE,aAAS0nE,GAAwB73D,GAAM;AACrC,YAAMzT,IAAS;AAAA,QACb,OAAO0f,GAAOjM,CAAI;AAAA,QAClB,SAAS;AAAA,QACT,WAAW;AAAA,QACX,MAAMy0D;AAAA,QACN,UAAU,IAAI/jE,EAAQ,UAAUA,CAAO;AAAA;AAEzC,aAAAnE,EAAO,SAAS,QAAQyT,CAAI,GACrBzT;AAAA,IACX;AAgBE,aAAS6pE,GAAcp2D,GAAM83D,GAAgB;AAC3C,MAAAA,IAAiBA,KAAkBpnE,EAAQ,aAAa,OAAO,KAAK2jE,CAAS;AAC7E,YAAMvQ,KAAY+T,GAAwB73D,CAAI,GAExC4f,KAAUk4C,EAAe,OAAOjD,EAAW,EAAE,OAAOkD,EAAa,EAAE;AAAA,QAAI,CAAAruE,OAC3E0rE,GAAW1rE,IAAMsW,GAAM,EAAK;AAAA;AAE9B,MAAA4f,GAAQ,QAAQkkC,EAAS;AAEzB,YAAMkU,KAASp4C,GAAQ,KAAK,CAAC9xB,IAAGC,OAAM;AAEpC,YAAID,GAAE,cAAcC,GAAE,UAAW,QAAOA,GAAE,YAAYD,GAAE;AAIxD,YAAIA,GAAE,YAAYC,GAAE,UAAU;AAC5B,cAAI8mE,GAAY/mE,GAAE,QAAQ,EAAE,eAAeC,GAAE;AAC3C,mBAAO;AACF,cAAI8mE,GAAY9mE,GAAE,QAAQ,EAAE,eAAeD,GAAE;AAClD,mBAAO;AAAA,QAEjB;AAMM,eAAO;AAAA,MACb,CAAK,GAEK,CAACmqE,IAAMC,EAAU,IAAIF,IAGrBzrE,KAAS0rE;AACf,aAAA1rE,GAAO,aAAa2rE,IAEb3rE;AAAA,IACX;AASE,aAAS4rE,GAAgBl8D,GAASm8D,GAAaC,IAAY;AACzD,YAAMvF,KAAYsF,KAAe9D,EAAQ8D,CAAW,KAAMC;AAE1D,MAAAp8D,EAAQ,UAAU,IAAI,MAAM,GAC5BA,EAAQ,UAAU,IAAI,YAAY62D,EAAQ,EAAE;AAAA,IAChD;AAOE,aAASwF,GAAiBr8D,GAAS;AAEjC,UAAIzQ,IAAO;AACX,YAAMsnE,KAAW8B,GAAc34D,CAAO;AAEtC,UAAIy4D,GAAmB5B,EAAQ,EAAG;AAKlC,UAHAqC;AAAA,QAAK;AAAA,QACH,EAAE,IAAIl5D,GAAS,UAAA62D;MAAU,GAEvB72D,EAAQ,QAAQ,aAAa;AAC/B,gBAAQ,IAAI,0FAA0FA,CAAO;AAC7G;AAAA,MACN;AAOI,UAAIA,EAAQ,SAAS,SAAS,MACvBvL,EAAQ,wBACX,QAAQ,KAAK,+FAA+F,GAC5G,QAAQ,KAAK,2DAA2D,GACxE,QAAQ,KAAK,kCAAkC,GAC/C,QAAQ,KAAKuL,CAAO,IAElBvL,EAAQ;AAKV,cAJY,IAAIsjE;AAAA,UACd;AAAA,UACA/3D,EAAQ;AAAA;AAMd,MAAAzQ,IAAOyQ;AACP,YAAMK,KAAO9Q,EAAK,aACZe,KAASumE,KAAWiC,GAAUz4D,IAAM,EAAE,UAAAw2D,IAAU,gBAAgB,GAAI,CAAE,IAAIsD,GAAc95D,EAAI;AAElG,MAAAL,EAAQ,YAAY1P,GAAO,OAC3B0P,EAAQ,QAAQ,cAAc,OAC9Bk8D,GAAgBl8D,GAAS62D,IAAUvmE,GAAO,QAAQ,GAClD0P,EAAQ,SAAS;AAAA,QACf,UAAU1P,GAAO;AAAA;AAAA,QAEjB,IAAIA,GAAO;AAAA,QACX,WAAWA,GAAO;AAAA,SAEhBA,GAAO,eACT0P,EAAQ,aAAa;AAAA,QACnB,UAAU1P,GAAO,WAAW;AAAA,QAC5B,WAAWA,GAAO,WAAW;AAAA,UAIjC4oE,GAAK,0BAA0B,EAAE,IAAIl5D,GAAS,QAAA1P,IAAQ,MAAA+P,IAAM;AAAA,IAChE;AAOE,aAAS8gB,GAAUm7C,GAAa;AAC9B,MAAA7nE,IAAUujE,GAAQvjE,GAAS6nE,CAAW;AAAA,IAC1C;AAGE,UAAMC,KAAmB,MAAM;AAC7B,MAAAC,GAAY,GACZxG,EAAW,UAAU,yDAAyD;AAAA,IAClF;AAGE,aAASyG,KAAyB;AAChC,MAAAD,GAAY,GACZxG,EAAW,UAAU,+DAA+D;AAAA,IACxF;AAEE,QAAI0G,KAAiB;AAKrB,aAASF,KAAe;AACtB,eAASG,IAAO;AAEd,QAAAH,GAAY;AAAA,MAClB;AAGI,UAAI,SAAS,eAAe,WAAW;AAErC,QAAKE,MACH,OAAO,iBAAiB,oBAAoBC,GAAM,EAAK,GAEzDD,KAAiB;AACjB;AAAA,MACN;AAGI,MADe,SAAS,iBAAiBjoE,EAAQ,WAAW,EACrD,QAAQ4nE,EAAgB;AAAA,IACnC;AAQE,aAASO,GAAiBlE,GAAcmE,GAAoB;AAC1D,UAAIC,KAAO;AACX,UAAI;AACF,QAAAA,KAAOD,EAAmB9iB,CAAI;AAAA,MACpC,SAAagjB,IAAS;AAGhB,YAFAhoE,GAAM,wDAAwD,QAAQ,MAAM2jE,CAAY,CAAC,GAEpFJ;AAAqC,UAAAvjE,GAAMgoE,EAAO;AAAA;AAArC,gBAAMA;AAKxB,QAAAD,KAAOtE;AAAA,MACb;AAEI,MAAKsE,GAAK,SAAMA,GAAK,OAAOpE,IAC5BN,EAAUM,CAAY,IAAIoE,IAC1BA,GAAK,gBAAgBD,EAAmB,KAAK,MAAM9iB,CAAI,GAEnD+iB,GAAK,WACPE,GAAgBF,GAAK,SAAS,EAAE,cAAApE,EAAY,CAAE;AAAA,IAEpD;AAOE,aAASuE,GAAmBvE,GAAc;AACxC,aAAON,EAAUM,CAAY;AAC7B,iBAAWwE,KAAS,OAAO,KAAK7E,CAAO;AACrC,QAAIA,EAAQ6E,CAAK,MAAMxE,KACrB,OAAOL,EAAQ6E,CAAK;AAAA,IAG5B;AAKE,aAASC,KAAgB;AACvB,aAAO,OAAO,KAAK/E,CAAS;AAAA,IAChC;AAME,aAASQ,GAAYnrE,GAAM;AACzB,aAAAA,KAAQA,KAAQ,IAAI,YAAW,GACxB2qE,EAAU3qE,CAAI,KAAK2qE,EAAUC,EAAQ5qE,CAAI,CAAC;AAAA,IACrD;AAOE,aAASuvE,GAAgBI,GAAW,EAAE,cAAA1E,KAAgB;AACpD,MAAI,OAAO0E,KAAc,aACvBA,IAAY,CAACA,CAAS,IAExBA,EAAU,QAAQ,CAAAF,OAAS;AAAE,QAAA7E,EAAQ6E,GAAM,aAAa,IAAIxE;AAAA,OAAe;AAAA,IAC/E;AAME,aAASoD,GAAcruE,GAAM;AAC3B,YAAMqvE,IAAOlE,GAAYnrE,CAAI;AAC7B,aAAOqvE,KAAQ,CAACA,EAAK;AAAA,IACzB;AAOE,aAASO,GAAiB3rC,GAAQ;AAEhC,MAAIA,EAAO,uBAAuB,KAAK,CAACA,EAAO,yBAAyB,MACtEA,EAAO,yBAAyB,IAAI,CAACh9B,MAAS;AAC5C,QAAAg9B,EAAO,uBAAuB;AAAA,UAC5B,OAAO,OAAO,EAAE,OAAOh9B,EAAK,GAAE,GAAIA,CAAI;AAAA;MAEhD,IAEQg9B,EAAO,sBAAsB,KAAK,CAACA,EAAO,wBAAwB,MACpEA,EAAO,wBAAwB,IAAI,CAACh9B,MAAS;AAC3C,QAAAg9B,EAAO,sBAAsB;AAAA,UAC3B,OAAO,OAAO,EAAE,OAAOh9B,EAAK,GAAE,GAAIA,CAAI;AAAA;MAEhD;AAAA,IAEA;AAKE,aAAS48B,GAAUI,GAAQ;AACzB,MAAA2rC,GAAiB3rC,CAAM,GACvBC,GAAQ,KAAKD,CAAM;AAAA,IACvB;AAKE,aAAS4rC,GAAa5rC,GAAQ;AAC5B,YAAMh5B,IAAQi5B,GAAQ,QAAQD,CAAM;AACpC,MAAIh5B,MAAU,MACZi5B,GAAQ,OAAOj5B,GAAO,CAAC;AAAA,IAE7B;AAOE,aAASwgE,GAAKljE,GAAO8/B,GAAM;AACzB,YAAMklC,KAAKhlE;AACX,MAAA27B,GAAQ,QAAQ,SAASD,IAAQ;AAC/B,QAAIA,GAAOspC,EAAE,KACXtpC,GAAOspC,EAAE,EAAEllC,CAAI;AAAA,MAEvB,CAAK;AAAA,IACL;AAME,aAASynC,GAAwBhL,GAAI;AACnC,aAAAyD,EAAW,UAAU,kDAAkD,GACvEA,EAAW,UAAU,kCAAkC,GAEhDqG,GAAiB9J,CAAE;AAAA,IAC9B;AAGE,WAAO,OAAOxY,GAAM;AAAA,MAClB,WAAA+e;AAAA,MACA,eAAAqB;AAAA,MACA,cAAAqC;AAAA,MACA,kBAAAH;AAAA;AAAA,MAEA,gBAAgBkB;AAAA,MAChB,WAAAp8C;AAAA,MACA,kBAAAo7C;AAAA,MACA,wBAAAE;AAAA,MACA,kBAAAG;AAAA,MACA,oBAAAK;AAAA,MACA,eAAAE;AAAA,MACA,aAAAvE;AAAA,MACA,iBAAAoE;AAAA,MACA,eAAAlB;AAAA,MACA,SAAA9D;AAAA,MACA,WAAA1mC;AAAA,MACA,cAAAgsC;AAAA,IACJ,CAAG,GAEDvjB,EAAK,YAAY,WAAW;AAAE,MAAAue,KAAY;AAAA,IAAM,GAChDve,EAAK,WAAW,WAAW;AAAE,MAAAue,KAAY;AAAA,IAAK,GAC9Cve,EAAK,gBAAgBkc,IAErBlc,EAAK,QAAQ;AAAA,MACX,QAAQjpD;AAAA,MACR,WAAWs3D;AAAA,MACX,QAAQ+C;AAAA,MACR,UAAUwH;AAAA,MACV,kBAAkBD;AAAA;AAGpB,eAAWzmE,KAAO8xD;AAEhB,MAAI,OAAOA,GAAM9xD,CAAG,KAAM,YAExBulE,EAAWzT,GAAM9xD,CAAG,CAAC;AAKzB,kBAAO,OAAO8tD,GAAMgE,EAAK,GAElBhE;AAAA,EACT,GAGM+e,KAAYX,GAAK,EAAE;AAIzB,SAAAW,GAAU,cAAc,MAAMX,GAAK,EAAE,GAErCqF,KAAiB1E,IACjBA,GAAU,cAAcA,IACxBA,GAAU,UAAUA;;;mCC5gFdhiE,KAAe,CAAA,GAEf2mE,KAAgB;AAUf,SAASC,GAAenM,GAAU;AACvC,QAAMoM,IAAOC,GAAY,YAAW;AAEpC,SAAIrM,KACFsM,EAAStM,CAAQ,GAGZ;AAAA,IACL,WAAAuH;AAAA,IACA,eAAAqB;AAAA,IACA,eAAAgD;AAAA,IACA,UAAAU;AAAA,IACA,eAAAC;AAAA,IACA,YAAAC;AAAA,EACJ;AA+BE,WAASjF,EAAUjC,GAAU1pE,GAAOsH,GAAS;AAG3C,UAAMkC,IAAWlC,KAAWqC,IACtBoH,IACJ,OAAOvH,EAAS,UAAW,WAAWA,EAAS,SAAS8mE;AAE1D,QAAI,CAACE,EAAK,YAAY9G,CAAQ;AAC5B,YAAM,IAAI,MAAM,wBAAwBA,IAAW,qBAAqB;AAI1E,IAAA8G,EAAK,UAAU,EAAC,WAAWK,IAAa,aAAa9/D,EAAM,CAAC;AAE5D,UAAM5N;AAAA;AAAA,MACJqtE,EAAK,UAAUxwE,GAAO,EAAC,gBAAgB,IAAM,UAAA0pE,EAAQ,CAAC;AAAA;AAMxD,QAAIvmE,EAAO;AACT,YAAM,IAAI,MAAM,2CAA2C;AAAA,QACzD,OAAOA,EAAO;AAAA,MACtB,CAAO;AAGH,UAAM8P,IAAO9P,EAAO,SAAS,MAGvBoE;AAAA;AAAA,MAAgC0L,EAAK;AAAA;AAE3C,WAAA1L,EAAK,WAAWpE,EAAO,UACvBoE,EAAK,YAAYpE,EAAO,WAEjB8P;AAAA,EACT;AA6BA,WAAS+5D,EAAchtE,GAAOsH,GAAS;AAGrC,UAAMwpE,KADWxpE,KAAWqC,IACJ,UAAUqmE,EAAa;AAE/C,QAAIzkE,IAAQ,IACRgrD,IAAY,GAEZpzD;AAEJ,WAAO,EAAEoI,IAAQulE,EAAO,UAAQ;AAC9B,YAAMxwE,IAAOwwE,EAAOvlE,CAAK;AAEzB,UAAI,CAACilE,EAAK,YAAYlwE,CAAI,EAAG;AAE7B,YAAMygB,IAAU4qD,EAAUrrE,GAAMN,GAAOsH,CAAO;AAE9C,MACEyZ,EAAQ,QACRA,EAAQ,KAAK,cAAc,UAC3BA,EAAQ,KAAK,YAAYw1C,MAEzBA,IAAYx1C,EAAQ,KAAK,WACzB5d,IAAS4d;AAAA,IAEb;AAEA,WACE5d,KAAU;AAAA,MACR,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,MACV,MAAM,EAAC,UAAU,QAAW,WAAAozD,EAAS;AAAA,IAC7C;AAAA,EAEE;AAsBA,WAASyZ,IAAgB;AACvB,WAAOQ,EAAK,cAAa;AAAA,EAC3B;AAwCA,WAASE,EAASK,GAAgBC,GAAS;AACzC,QAAI,OAAOD,KAAmB;AAE5B,MAAAP,EAAK,iBAAiBO,GAAgBC,CAAO;AAAA,SACxC;AAEL,UAAI1wE;AAEJ,WAAKA,KAAQywE;AACX,QAAI,OAAO,OAAOA,GAAgBzwE,CAAI,KACpCkwE,EAAK,iBAAiBlwE,GAAMywE,EAAezwE,CAAI,CAAC;AAAA,IAGtD;AAAA,EACF;AAuCA,WAASqwE,EAAcM,GAAelB,GAAO;AAC3C,QAAI,OAAOkB,KAAkB;AAE3B,MAAAT,EAAK;AAAA;AAAA,QAEH,OAAOT,KAAU,WAAWA,IAAQ,CAAC,GAAGA,CAAK;AAAA,QAC7C,EAAC,cAAckB,EAAa;AAAA,MACpC;AAAA,SACW;AAEL,UAAInyE;AAEJ,WAAKA,KAAOmyE;AACV,YAAI,OAAO,OAAOA,GAAenyE,CAAG,GAAG;AACrC,gBAAMosE,IAAU+F,EAAcnyE,CAAG;AACjC,UAAA0xE,EAAK;AAAA;AAAA,YAEH,OAAOtF,KAAY,WAAWA,IAAU,CAAC,GAAGA,CAAO;AAAA,YACnD,EAAC,cAAcpsE,EAAG;AAAA,UAC9B;AAAA,QACQ;AAAA,IAEJ;AAAA,EACF;AAuBA,WAAS8xE,EAAWM,GAAa;AAC/B,WAAO,EAAQV,EAAK,YAAYU,CAAW;AAAA,EAC7C;AACF;AAGA,MAAML,GAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOhB,YAAYvpE,GAAS;AAEnB,SAAK,UAAUA,GAEf,KAAK,OAAO;AAAA,MACV,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,MACV,MAAM,EAAC,UAAU,QAAW,WAAW,EAAC;AAAA,IAC9C,GAEI,KAAK,QAAQ,CAAC,KAAK,IAAI;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQtH,GAAO;AACb,QAAIA,MAAU,GAAI;AAElB,UAAM+gB,IAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAC1ChD,IAAOgD,EAAQ,SAASA,EAAQ,SAAS,SAAS,CAAC;AAEzD,IAAIhD,KAAQA,EAAK,SAAS,SACxBA,EAAK,SAAS/d,IAEd+gB,EAAQ,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAA/gB,EAAK,CAAC;AAAA,EAE/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAWmxE,GAAS;AAClB,SAAK,SAAS,OAAOA,CAAO,CAAC;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW;AACT,SAAK,UAAS;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,iBAAiBC,GAAO9wE,GAAM;AAC5B,UAAMygB,IAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAE1CyV;AAAA;AAAA,MAAgD46C,EAAM,KAAK;AAAA;AAEjE,IAAI9wE,IACFygB,EAAQ,SAAS,KAAK;AAAA,MACpB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,WAAW,CAACzgB,CAAI,EAAC;AAAA,MAC9B,UAAUk2B;AAAA,IAClB,CAAO,IAEDzV,EAAQ,SAAS,KAAK,GAAGyV,CAAO;AAAA,EAEpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,SAASl2B,GAAM;AACb,UAAMiB,IAAO,MAIPipC,IAAYlqC,EAAK,MAAM,GAAG,EAAE,IAAI,SAAU+0B,GAAG5mB,GAAG;AACpD,aAAOA,IAAI4mB,IAAI,IAAI,OAAO5mB,CAAC,IAAIlN,EAAK,QAAQ,cAAc8zB;AAAA,IAC5D,CAAC,GACKtU,IAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAE1CxN,IAAQ;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,WAAAi3B,EAAS;AAAA,MACtB,UAAU,CAAA;AAAA,IAChB;AAEI,IAAAzpB,EAAQ,SAAS,KAAKxN,CAAK,GAC3B,KAAK,MAAM,KAAKA,CAAK;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY;AACV,SAAK,MAAM,IAAG;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,SAAS;AACP,WAAO;AAAA,EACT;AACF;AChcA,MAAM5J,KAAe,CAAA;AAUN,SAAS0nE,GAAgB/pE,GAAS;AAC/C,QAAMkC,IAAWlC,KAAWqC,IACtBuhE,IAAU1hE,EAAS,SACnB8nE,IAAS9nE,EAAS,UAAU,IAC5ByhE,IAAYzhE,EAAS,aAAa+nE,IAClCC,IAAYhoE,EAAS,WACrBuH,IAASvH,EAAS,QAClBsnE,IAAStnE,EAAS;AACxB,MAAIlJ,IAAO;AAEX,QAAMmxE,IAAWlB,GAAetF,CAAS;AAMzC,MAJIC,KACFuG,EAAS,cAAcvG,CAAO,GAG5Bn6D,GAAQ;AACV,UAAM5B,IAAM4B,EAAO,QAAQ,GAAG;AAC9B,IAAAzQ,IAAO6O,MAAQ,KAAK4B,IAASA,EAAO,MAAM,GAAG5B,CAAG;AAAA,EAClD;AAYA,SAAO,SAAUoD,GAAM0rB,GAAM;AAC3B,IAAA7B,GAAM7pB,GAAM,WAAW,SAAUnQ,GAAM0J,GAAGkG,GAAQ;AAChD,UACE5P,EAAK,YAAY,UACjB,CAAC4P,KACDA,EAAO,SAAS,aAChBA,EAAO,YAAY;AAEnB;AAGF,YAAM29D,IAAOjG,GAAStnE,CAAI;AAE1B,UACEutE,MAAS,MACR,CAACA,KAAQ,CAAC2B,KACV3B,KAAQ6B,KAAaA,EAAU,SAAS7B,CAAI;AAE7C;AAGF,MAAK,MAAM,QAAQvtE,EAAK,WAAW,SAAS,MAC1CA,EAAK,WAAW,YAAY,CAAA,IAGzBA,EAAK,WAAW,UAAU,SAAS9B,CAAI,KAC1C8B,EAAK,WAAW,UAAU,QAAQ9B,CAAI;AAGxC,YAAM4S,IAAO84C,GAAO5pD,GAAM,EAAC,YAAY,MAAK,CAAC;AAE7C,UAAIe;AAEJ,UAAI;AACF,QAAAA,IAASwsE,IACL8B,EAAS,UAAU9B,GAAMz8D,GAAM,EAAC,QAAAnC,EAAM,CAAC,IACvC0gE,EAAS,cAAcv+D,GAAM,EAAC,QAAAnC,GAAQ,QAAA+/D,EAAM,CAAC;AAAA,MACnD,SAASlpE,GAAO;AACd,cAAMgN;AAAA;AAAA,UAA8BhN;AAAA;AAEpC,YAAI+nE,KAAQ,mBAAmB,KAAK/6D,EAAM,OAAO,GAAG;AAClD,UAAAqpB,EAAK;AAAA,YACH,0BAA0B0xC,IAAO;AAAA,YACjC;AAAA,cACE,WAAW,CAAC39D,GAAQ5P,CAAI;AAAA,cACxB,OAAAwS;AAAA,cACA,OAAOxS,EAAK;AAAA,cACZ,QAAQ;AAAA,cACR,QAAQ;AAAA,YACtB;AAAA,UACA;AAGU;AAAA,QACF;AAEA,cAAMwS;AAAA,MACR;AAEA,MAAI,CAAC+6D,KAAQxsE,EAAO,QAAQA,EAAO,KAAK,YACtCf,EAAK,WAAW,UAAU,KAAK,cAAce,EAAO,KAAK,QAAQ,GAG/DA,EAAO,SAAS,SAAS,MAC3Bf,EAAK;AAAA,MAAiDe,EAAO;AAAA,IAEjE,CAAC;AAAA,EACH;AACF;AAWA,SAASumE,GAAStnE,GAAM;AACtB,QAAM2T,IAAO3T,EAAK,WAAW;AAC7B,MAAImJ,IAAQ;AAEZ,MAAI,CAAC,MAAM,QAAQwK,CAAI;AACrB;AAIF,MAAIzV;AAEJ,SAAO,EAAEiL,IAAQwK,EAAK,UAAQ;AAC5B,UAAM/V,IAAQ,OAAO+V,EAAKxK,CAAK,CAAC;AAEhC,QAAIvL,MAAU,kBAAkBA,MAAU;AACxC,aAAO;AAGT,IAAI,CAACM,KAAQN,EAAM,MAAM,GAAG,CAAC,MAAM,YACjCM,IAAON,EAAM,MAAM,CAAC,IAGlB,CAACM,KAAQN,EAAM,MAAM,GAAG,CAAC,MAAM,gBACjCM,IAAON,EAAM,MAAM,CAAC;AAAA,EAExB;AAEA,SAAOM;AACT;AC1KA,MAAMoxE,KAAqB;AAAA,EAAA,YACzBte;AAAAA,EACA,IAAIA;AAAAA,EACJ,YAAAwO;AAAA,EACA,IAAIA;AAAA,EACJ,QAAAjH;AAAA,EACA,IAAIA;AAAA,EACJ,MAAAhI;AAAA,EAAA,MACAzmD;AAAAA,EACA,KAAAklD;AAAA,EACA,MAAA13B;AAAA,EACA,MAAA00B;AAAA,EACA,IAAIA;AAAA,EACJ,KAAAwO;AAAA,EACA,UAAAlF;AAAA,EACA,IAAIA;AACN,GAEMia,KAAkB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GC1BMC,KAAgB,CAAC;AAAA,EACrB,SAAAzoE,IAAU;AAAA,EACV,aAAA0oE,IAAc;AAAA,EACd,UAAAC,IAAW;AACb,IAAwB,OAAO;AAC7B,QAAM,CAACC,GAAgBC,CAAiB,IAAIvqE,GAAS,EAAE,GACjD,CAACwqE,GAAUC,CAAW,IAAIzqE,GAAS,EAAK,GACxC,CAAC0qE,GAAYC,CAAa,IAAI3qE,GAAS,EAAK,GAE5C4qE,IAAoBpqE,GAAkB,EAAE,GACxCqqE,IAAkBrqE,GAAO,CAAC,GAC1BsqE,IAAWtqE,GAA6C,IAAI,GAC5DuqE,IAAevqE,GAAO,EAAI,GAC1BwqE,IAAiBxqE,GAAO,EAAE,GAG1ByqE,IAAajqE,GAAY,MAAM;AACnC,IAAI8pE,EAAS,YACX,aAAaA,EAAS,OAAO,GAC7BA,EAAS,UAAU;AAAA,EAEvB,GAAG,CAAA,CAAE,GAGCI,IAAmB1qE,GAAO;AAAA,IAC9B,EAAE,SAAS,gBAAgB,MAAM,aAAA;AAAA,IACjC,EAAE,SAAS,kBAAkB,MAAM,aAAA;AAAA,IACnC,EAAE,SAAS,qBAAqB,MAAM,SAAA;AAAA,IACtC,EAAE,SAAS,qBAAqB,MAAM,cAAA;AAAA,IACtC,EAAE,SAAS,iBAAiB,MAAM,OAAA;AAAA,IAClC,EAAE,SAAS,WAAA,4BAAA,GAA0B,MAAM,SAAA;AAAA,IAC3C,EAAE,SAAS,aAAa,MAAM,gBAAA;AAAA,IAC9B,EAAE,SAAS,WAAW,MAAM,cAAA;AAAA,IAC5B,EAAE,SAAS,yBAAyB,MAAM,QAAA;AAAA,IAC1C,EAAE,SAAS,WAAA,oCAAA,GAA+B,MAAM,OAAA;AAAA,IAChD,EAAE,SAAS,oBAAoB,MAAM,aAAA;AAAA,IACrC,EAAE,SAAS,eAAe,MAAM,KAAA;AAAA,IAChC,EAAE,SAAS,oBAAoB,MAAM,YAAA;AAAA,IACrC,EAAE,SAAS,qBAAqB,MAAM,oBAAA;AAAA,EAAoB,CAC3D,EAAE,SAGG2qE,IAAenqE,GAAY,CAACyK,MAA4B;AAC5D,UAAMguB,IAAsB,CAAA;AAC5B,QAAI2xC,IAAgB3/D,KAAQ;AAE5B,WAAO2/D,EAAc,SAAS,KAAG;AAC/B,UAAItF,IAAU,IACVuF,IAAwF,MACxFC,IAAgB;AAEpB,iBAAWp0B,KAAWg0B,GAAkB;AACtC,cAAM9jE,IAAQ8vC,EAAQ,QAAQ,KAAKk0B,CAAa;AAChD,QAAIhkE,KAASA,EAAM,QAAQkkE,MACzBA,IAAgBlkE,EAAM,OACtBikE,IAAgB,EAAE,OAAAjkE,GAAO,SAAA8vC,EAAA;AAAA,MAE7B;AAEA,UAAIm0B,KAAiBC,KAAiB,GAAG;AACvC,YAAIA,IAAgB,GAAG;AACrB,gBAAMvB,IAAYqB,EAAc,UAAU,GAAGE,CAAa;AAC1D,UAAA7xC,EAAS,KAAK,GAAG,MAAM,KAAKswC,CAAS,EAAE,IAAI,CAAAwB,OAAS;AAAA,YAClD,SAASA;AAAA,YACT,YAAY;AAAA,UAAA,EACZ,CAAC,GACHH,IAAgBA,EAAc,UAAUE,CAAa;AAAA,QACvD;AAEA,QAAA7xC,EAAS,KAAK;AAAA,UACZ,SAAS4xC,EAAc,MAAM,CAAC;AAAA,UAC9B,YAAY;AAAA,UACZ,MAAMA,EAAc,QAAQ;AAAA,QAAA,CAC7B,GACDD,IAAgBA,EAAc,UAAUC,EAAc,MAAM,CAAC,EAAE,MAAM,GACrEvF,IAAU;AAAA,MACZ;AAEA,MAAKA,MACHrsC,EAAS,KAAK;AAAA,QACZ,SAAS2xC,EAAc,CAAC;AAAA,QACxB,YAAY;AAAA,MAAA,CACb,GACDA,IAAgBA,EAAc,UAAU,CAAC;AAAA,IAE7C;AAEA,WAAO3xC;AAAA,EACT,GAAG,CAACyxC,CAAgB,CAAC,GAGfh0E,IAAO8J,GAAY,MAAM;AAC7B,QAAK+pE,EAAa;AAElB,UAAIF,EAAgB,UAAUD,EAAkB,QAAQ,QAAQ;AAC9D,cAAMY,IAAUZ,EAAkB,QAAQC,EAAgB,OAAO;AACjE,QAAAN,EAAkB,CAAAkB,MAAQA,KAAQD,GAAS,WAAW,GAAG,GACzDX,EAAgB,WAEZE,EAAa,YACfD,EAAS,UAAU,WAAW5zE,GAAMkzE,CAAW;AAAA,MAEnD;AACE,QAAAK,EAAY,EAAK,GACjBE,EAAc,EAAI;AAAA,EAEtB,GAAG,CAACP,CAAW,CAAC;AAGhB,EAAA7oE,GAAU,MAAM;AACd,UAAMmqE,IAAahqE,KAAW,IACxBiqE,IAAaX,EAAe;AAGlC,QAAIU,MAAeC;AACjB;AAIF,QAAItB,GAAU;AACZ,MAAAY,EAAA;AACA,YAAMxxC,IAAW0xC,EAAaO,CAAU;AACxC,MAAAnB,EAAkB9wC,EAAS,IAAI,CAAAp8B,MAAKA,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,GACvDotE,EAAY,EAAK,GACjBE,EAAc,EAAI,GAClBK,EAAe,UAAUU;AACzB;AAAA,IACF;AAKA,QAFwBA,EAAW,UAAUC,EAAW,UAAUD,EAAW,WAAWC,CAAU,KAE3EA,GAAY;AAEjC,YAAMlyC,IAAW0xC,EAAaO,CAAU,GAClCE,IAAkBhB,EAAkB,QAAQ;AAClD,MAAAA,EAAkB,UAAUnxC;AAG5B,YAAMoyC,IAAgBhB,EAAgB,WAAWpxC,EAAS;AAC1D,MAAAkxC,EAAckB,CAAa,GAGvB,CAACA,MAAkB,CAACrB,KAAYK,EAAgB,WAAWe,OAC7DnB,EAAY,EAAI,GAChBvzE,EAAA;AAAA,IAEJ,OAAO;AAEL,MAAA+zE,EAAA,GACAV,EAAkB,EAAE;AACpB,YAAM9wC,IAAW0xC,EAAaO,CAAU;AACxC,MAAAd,EAAkB,UAAUnxC,GAC5BoxC,EAAgB,UAAU;AAE1B,YAAMgB,IAAgBpyC,EAAS,WAAW;AAC1C,MAAAkxC,EAAckB,CAAa,GAEvB,CAACA,KAAiBH,KAAcX,EAAa,YAC/CN,EAAY,EAAI,GAChBvzE,EAAA;AAAA,IAEJ;AAEA,IAAA8zE,EAAe,UAAUU;AAAA,EAC3B,GAAG,CAAChqE,GAAS2oE,GAAUY,GAAYE,GAAcj0E,GAAMszE,CAAQ,CAAC,GAGhEjpE,GAAU,OACRwpE,EAAa,UAAU,IAChB,MAAM;AACX,IAAAA,EAAa,UAAU,IACvBE,EAAA;AAAA,EACF,IACC,CAACA,CAAU,CAAC;AAEf,QAAMa,IAAQ9qE,GAAY,MAAM;AAC9B,IAAAiqE,EAAA,GACAV,EAAkB,EAAE,GACpBK,EAAkB,UAAU,CAAA,GAC5BC,EAAgB,UAAU,GAC1BJ,EAAY,EAAK,GACjBE,EAAc,EAAK,GACnBK,EAAe,UAAU;AAAA,EAC3B,GAAG,CAACC,CAAU,CAAC,GAEThkE,IAAQjG,GAAY,MAAM;AAC9B,IAAAiqE,EAAA,GACAJ,EAAgB,UAAU,GAC1BN,EAAkB,EAAE,GACpBE,EAAY,EAAI,GAChBE,EAAc,EAAK,GACnBzzE,EAAA;AAAA,EACF,GAAG,CAAC+zE,GAAY/zE,CAAI,CAAC;AAErB,SAAO;AAAA,IACL,gBAAAozE;AAAA,IACA,UAAAE;AAAA,IACA,YAAAE;AAAA;AAAA,IACA,OAAAoB;AAAA,IACA,OAAA7kE;AAAA,IACA,aAAa,MAAM2jE,EAAkB;AAAA,EAAA;AAEzC;AC1MO,SAASmB,GAAejhE,GAAM;AACnC,EAAAwnC,GAAexnC,GAAM,CAAC,aAAa4F,EAAO,CAAC;AAC7C;AAOA,SAASA,KAAU;AACjB,SAAO,EAAC,MAAM,QAAO;AACvB;ACbe,SAASs7D,KAAe;AASrC,SAAO,SAAUlhE,GAAM;AACrB,IAAAihE,GAAejhE,CAAI;AAAA,EACrB;AACF;ACzBA,MAAMmhE,KAAmB,CAACC,MAAiC;AAEzD,QAAMC,IAAoC;AAAA,IACxC,QAAQ;AAAA;AAAA,IACR,OAAO;AAAA;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,EAAA,GAIHC,IAAc;AAEpB,SAAOF,EAAa;AAAA,IAClBE;AAAA,IACA,CAAChlE,GAAeoiB,MAEVA,IACK,OAAO,aAAa,SAASA,GAAK,EAAE,CAAC,IAIvC2iD,EAAU/kE,CAAK,KAAKA;AAAA,EAC7B;AAEJ,GAEMilE,KAAsB,CAAC5gE,MAAyB;AAEpD,MAAIk7D,IAAYsF,GAAiBxgE,CAAI;AAGrC,SAAAk7D,IAAYA,EAAU,QAAQ,UAAU;AAAA,CAAI,EAAE,QAAQ,UAAU,GAAI,GAGpEA,IAAYA,EAAU,QAAQ,SAAS;AAAA,CAAI,GAG3CA,IAAYA,EAAU,QAAQ,WAAW;AAAA;AAAA,CAAM,GAG/CA,IAAYA,EAAU,QAAQ,kBAAkB,GAAG,GAE5CA,KAAa;AACtB,GCNM2F,KAA8C,CAAC;AAAA,EACnD,SAAA5qE;AAAA,EACA,iBAAA6qE;AAAA,EACA,QAAAr9B;AAAA,EACA,aAAAk7B,IAAc;AAAA,EACd,eAAAoC,IAAgB;AAAA,EAChB,mBAAAv9B;AAAA,EACA,kBAAA4C;AAAA,EACA,UAAA7C,IAAW;AAAA,EACX,gBAAAy9B;AACF,MAAM;AAEJ,QAAM,EAAE,gBAAAnC,GAAgB,UAAAE,GAAU,YAAAE,EAAA,IAAeP,GAAc;AAAA,IAC7D,SAASkC,GAAoB3qE,CAAO;AAAA,IACpC,aAAA0oE;AAAA,IACA,UAAUoC;AAAA,EAAA,CACX,GAEKjuC,IAA+B;AAAA,IACnC,mBAAmB,CAAAjlC,MACjB+S,gBAAAA,GAAAA;AAAAA,MAACulC;AAAA,MAAA;AAAA,QACE,GAAGt4C;AAAA,QACJ,UAAA01C;AAAA,QACA,mBAAAC;AAAA,QACA,kBAAA4C;AAAA,QACA,QAAA3C;AAAA,MAAA;AAAA,IAAA;AAAA,IAGJ,iBAAiB,CAAA51C,MACf+S,gBAAAA,GAAAA;AAAAA,MAAC0iC;AAAA,MAAA;AAAA,QACE,GAAGz1C;AAAA,QACJ,UAAA01C;AAAA,QACA,mBAAAC;AAAA,QACA,QAAAC;AAAA,MAAA;AAAA,IAAA;AAAA,IAGJ,MAAM,CAAA51C,MAAS;AACb,YAAM,EAAE,QAAAozE,GAAQ,WAAA3pC,GAAW,UAAA1oC,GAAU,GAAGkE,MAASjF,GAC3C8N,IAAQ,iBAAiB,KAAK27B,KAAa,EAAE;AACnD,aAAO,CAAC2pC,KAAUtlE,IAChBiF,gBAAAA,GAAAA,IAAC,UAAK,WAAA02B,GAAuB,GAAGxkC,GAC7B,UAAAlE,EAAA,CACH,IAEAgS,gBAAAA,GAAAA,IAAC,QAAA,EAAK,WAAA02B,GAAuB,GAAGxkC,GAC7B,UAAAlE,GACH;AAAA,IAEJ;AAAA,IACA,OAAO,CAAC,EAAE,MAAAM,GAAM,GAAGrB,QACjB+S,gBAAAA,GAAAA,IAAC,OAAA,EAAI,WAAU,kCACb,UAAAA,gBAAAA,GAAAA,IAAC,SAAA,EAAM,WAAU,wBAAwB,GAAG/S,GAAO,GACrD;AAAA,IAEF,IAAI,CAAC,EAAE,MAAAqB,GAAM,GAAGrB,EAAA,MAAY+S,gBAAAA,GAAAA,IAAC,MAAA,EAAG,WAAU,qBAAqB,GAAG/S,EAAA,CAAO;AAAA,IACzE,IAAI,CAAC,EAAE,MAAAqB,GAAM,GAAGrB,EAAA,MAAY+S,gBAAAA,GAAAA,IAAC,MAAA,EAAG,WAAU,qBAAqB,GAAG/S,EAAA,CAAO;AAAA,IACzE,IAAI,CAAC,EAAE,MAAAqB,GAAM,GAAGrB,EAAA,MAAY+S,gBAAAA,GAAAA,IAAC,MAAA,EAAG,WAAU,qBAAqB,GAAG/S,EAAA,CAAO;AAAA,IACzE,IAAI,CAAC,EAAE,MAAAqB,GAAM,GAAGrB,QAAY;AAC1B,YAAMypC,IAAYpoC,GAAM,YAAY;AAKpC,aAHG,OAAOooC,KAAc,YACpBA,EAAU,SAAS,gBAAgB,KACpC,MAAM,QAAQA,CAAS,KAAKA,EAAU,SAAS,gBAAgB,IAEzD12B,gBAAAA,GAAAA,IAAC,MAAA,EAAG,WAAU,iCAAiC,GAAG/S,GAAO,IAE3D+S,gBAAAA,OAAC,MAAA,EAAI,GAAG/S,EAAA,CAAO;AAAA,IACxB;AAAA,IACA,OAAO,CAAC,EAAE,MAAAqB,GAAM,GAAGrB,QACbA,EAAM,SAAS,aAEf+S,gBAAAA,GAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC,MAAK;AAAA,QACL,WAAU;AAAA,QACV,UAAQ;AAAA,QACP,GAAG/S;AAAA,MAAA;AAAA,IAAA,IAIH+S,gBAAAA,OAAC,SAAA,EAAO,GAAG/S,EAAA,CAAO;AAAA,EAC3B,GAGIqzE,IAAensE,GAAO,EAAK;AAEjC,SAAAe,GAAU,MAAM;AACd,IAAImpE,KAAc,CAACiC,EAAa,YAC9B,QAAQ,IAAI,4DAA4D,GACxEA,EAAa,UAAU,IACvBF,IAAA;AAAA,EAEJ,GAAG,CAAC/B,GAAY+B,CAAc,CAAC,GAC/BlrE,GAAU,MAAM;AACd,IAAAorE,EAAa,UAAU;AAAA,EACzB,GAAG,CAACjrE,CAAO,CAAC,GAGV4K,gBAAAA,GAAAA,KAAC,OAAA,EAAI,WAAU,kBACb,UAAA;AAAA,IAAAD,gBAAAA,GAAAA;AAAAA,MAACugE;AAAAA,MAAA;AAAA,QACC,eAAe;AAAA,UACbrpB;AAAA,UACAvT;AAAA,UACA5Q;AAAA,UACA4sC;AAAA,QAAA;AAAA,QAEF,eAAe;AAAA,UACb;AAAA,YACEpC;AAAA,YACA;AAAA,cACE,WAAWK;AAAA,cACX,QAAQC;AAAA,YAAA;AAAA,UACV;AAAA,QACF;AAAA,QAEF,YAAA3rC;AAAA,QAEC,UAAA+rC;AAAA,MAAA;AAAA,IAAA;AAAA,IAEFiC,KACC3xE,GAAM,cAAc2xE,GAAiB;AAAA,MACnC,SAAA7qE;AAAA,MACA,gBAAA4oE;AAAA,MACA,QAAAp7B;AAAA,IAAA,CACD;AAAA,IACFs7B,KAAYn+D,gBAAAA,GAAAA,IAAC,QAAA,EAAK,WAAU,oCAAmC,UAAA,IAAA,CAAC;AAAA,EAAA,GACnE;AAEJ,GCpJMwgE,KAA4C,CAAC;AAAA,EACjD,oBAAAC,IAAqB,CAAA;AAAA,EACrB,iBAAAP;AAAA,EACA,QAAQQ;AAAA,EACR,aAAaC;AAAA,EACb,eAAeC;AAAA,EACf,iBAAAC;AACF,MAEI7gE,gBAAAA,OAAC,SAAI,WAAU,iBACZ,YAAmB,IAAI,CAAC8gE,GAAarpE,MAAU;AAC9C,QAAMspE,IAAaD,EAAY,cAAc,IACvCX,IAAgBY,KAAcH,GAC9B/9B,IAASk+B,IAAa,SAAYL,GAClC3C,IAAcgD,IAAa,SAAYJ;AAE7C,SACE3gE,gBAAAA,GAAAA;AAAAA,IAACigE;AAAA,IAAA;AAAA,MAEC,SAASa,EAAY;AAAA,MACrB,kBAAkBA,EAAY;AAAA,MAC9B,mBAAmBA,EAAY;AAAA,MAC/B,UAAUA,EAAY;AAAA,MACtB,eAAAX;AAAA,MACA,iBAAAD;AAAA,MACA,QAAAr9B;AAAA,MACA,aAAAk7B;AAAA,MACA,gBAAgB,MAAM;AACpB,gBAAQ,IAAI,SAAStmE,CAAK,kBAAkB,GAC5CopE,IAAkBppE,CAAK;AAAA,MACzB;AAAA,IAAA;AAAA,IAZKA;AAAA,EAAA;AAeX,CAAC,EAAA,CACH,GCrCEupE,KAAoB,CACxBC,GACAC,IAAsB,CAAA,GACtB1tE,IAAoC,CAAA,MACR;AAC5B,QAAM;AAAA,IACJ,UAAA2tE,IAAW;AAAA,IACX,kBAAAC,IAAmB;AAAA,IACnB,aAAAC,IAAc;AAAA,IACd,iBAAAC,IAAkB;AAAA,EAAA,IAChB9tE,GAEE,CAAC+tE,GAAoBC,CAAqB,IAAI7tE,GAAS,EAAK,GAC5D,CAAC8tE,GAAYC,CAAa,IAAI/tE,GAAS,EAAI,GAC3CguE,IAAmBxtE,GAAO,EAAI,GAC9BytE,IAAcztE,GAAO,EAAI,GACzB0tE,IAAS1tE,GAAO;AAAA,IACpB,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,EAAA,CACV,GAGK2tE,IAAiBntE,GAAY,MAAM;AACvC,WAAO,OAAOktE,EAAO,OAAO,EAAE,QAAQ,CAAAE,MAAS;AAC7C,MAAIA,kBAAoBA,CAAK;AAAA,IAC/B,CAAC;AAAA,EACH,GAAG,CAAA,CAAE,GAGCC,IAAkBrtE,GAAY,MAAe;AACjD,UAAMstE,IAAYhB,EAAa;AAC/B,QAAI,CAACgB,EAAW,QAAO;AAEvB,UAAM,EAAE,WAAAC,GAAW,cAAAC,GAAc,cAAAC,EAAA,IAAiBH;AAClD,WAAOC,IAAYE,KAAgBD,IAAeb;AAAA,EACpD,GAAG,CAACL,GAAcK,CAAe,CAAC,GAG5Be,IAAiB1tE,GAAY,MAAM;AACvC,UAAMstE,IAAYhB,EAAa;AAC/B,IAAIgB,KACFA,EAAU,SAAS;AAAA,MACjB,KAAKA,EAAU;AAAA,MACf,UAAAd;AAAA,IAAA,CACD;AAAA,EAEL,GAAG,CAACF,GAAcE,CAAQ,CAAC,GAGrBmB,IAAoB3tE,GAAY,MAAM;AAC1C,UAAM4tE,IAAWP,EAAA;AACjB,WAAAN,EAAca,CAAQ,GACtBf,EAAsB,CAACe,CAAQ,GACxBA;AAAA,EACT,GAAG,CAACP,CAAe,CAAC,GAGdQ,IAA2B7tE,GAAY,MAAM;AACjD,IAAA0tE,EAAA,GACAV,EAAiB,UAAU,IAC3BH,EAAsB,EAAK,GAC3BE,EAAc,EAAI;AAAA,EACpB,GAAG,CAACW,CAAc,CAAC;AAGnB,SAAAntE,GAAU,MAAM;AACd,UAAM+sE,IAAYhB,EAAa;AAC/B,QAAI,CAACgB,EAAW;AAEhB,UAAMQ,IAAe,MAAM;AAEzB,MAAIZ,EAAO,QAAQ,UACjB,aAAaA,EAAO,QAAQ,MAAM,GAGpCA,EAAO,QAAQ,SAAS,WAAW,MAAM;AAIvC,QAHiBS,EAAA,IAMfX,EAAiB,UAAU,KAF3BA,EAAiB,UAAU;AAAA,MAI/B,GAAG,GAAG;AAAA,IACR;AAEA,WAAAM,EAAU,iBAAiB,UAAUQ,CAAY,GAEjDH,EAAA,GAEO,MAAM;AACX,MAAAL,EAAU,oBAAoB,UAAUQ,CAAY,GAChDZ,EAAO,QAAQ,UACjB,aAAaA,EAAO,QAAQ,MAAM;AAAA,IAEtC;AAAA,EACF,GAAG,CAACZ,GAAcqB,CAAiB,CAAC,GAGpCptE,GAAU,OACJksE,KAAoBQ,EAAY,YAClCC,EAAO,QAAQ,OAAO,WAAW,MAAM;AACrC,IAAAQ,EAAA,GACAX,EAAc,EAAI,GAClBF,EAAsB,EAAK,GAC3BG,EAAiB,UAAU,IAC3BC,EAAY,UAAU;AAAA,EACxB,GAAGP,CAAW,IAGT,MAAM;AACX,IAAIQ,EAAO,QAAQ,QACjB,aAAaA,EAAO,QAAQ,IAAI;AAAA,EAEpC,IACC,CAACT,GAAkBiB,GAAgBhB,CAAW,CAAC,GAGlDnsE,GAAU,MAAM;AACd,QAAI,CAAA0sE,EAAY;AAEhB,aAAAC,EAAO,QAAQ,UAAU,WAAW,MAAM;AACxC,QAAIF,EAAiB,WAEnBU,EAAA,GACAX,EAAc,EAAI,GAClBF,EAAsB,EAAK,KAG3Bc,EAAA;AAAA,MAEJ,GAAG,EAAE,GAEE,MAAM;AACX,QAAIT,EAAO,QAAQ,WACjB,aAAaA,EAAO,QAAQ,OAAO;AAAA,MAEvC;AAAA,EACF,GAAG,CAAC,GAAGX,GAAcmB,GAAgBC,CAAiB,CAAC,GAGvDptE,GAAU,MACD,MAAM;AACX,IAAA4sE,EAAA;AAAA,EACF,GACC,CAACA,CAAc,CAAC,GAEZ;AAAA,IACL,oBAAAP;AAAA,IACA,gBAAgBiB;AAAA,IAChB,0BAAAA;AAAA,IACA,YAAAf;AAAA,IACA,kBAAkBE,EAAiB;AAAA,EAAA;AAEvC,GC9JMe,KAAgE,CAAC;AAAA,EACrE,oBAAAjC,IAAqB,CAAA;AAAA,EACrB,iBAAAP;AAAA,EACA,QAAAr9B;AAAA,EACA,iBAAAg+B;AAAA,EACA,aAAA9C;AAAA,EACA,eAAAoC;AAAA,EACA,QAAAwC,IAAS;AAAA,EACT,WAAAjsC,IAAY;AAAA,EACZ,GAAGqM;AACL,MAAM;AACJ,QAAMk+B,IAAe9sE,GAAuB,IAAI,GAE1C,EAAE,oBAAAotE,GAAoB,0BAAAiB,EAAA,IAA6BxB;AAAA,IACvDC;AAAA,IACA;AAAA,MACER,GAAoB,UAAU,IAC1B,KAAK,UAAUA,EAAmBA,GAAoB,SAAS,CAAC,CAAC,IACjE;AAAA,IAAA;AAAA,IAEN;AAAA;AAAA,MAEE,UAAU;AAAA,MACV,kBAAkB;AAAA,MAClB,aAAa;AAAA,IAAA;AAAA,EACf;AAGF,SACExgE,gBAAAA,GAAAA;AAAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW,iCAAiCy2B,CAAS;AAAA,MACrD,OAAO,EAAE,QAAAisC,GAAQ,UAAU,WAAA;AAAA,MAC1B,GAAG5/B;AAAA,MAEJ,UAAA;AAAA,QAAA/iC,gBAAAA,GAAAA,IAAC,OAAA,EAAI,KAAKihE,GAAc,OAAO,EAAE,QAAQ,QAAQ,UAAU,OAAA,GACzD,UAAAjhE,gBAAAA,GAAAA;AAAAA,UAACwgE;AAAA,UAAA;AAAA,YACC,oBAAAC;AAAA,YACA,iBAAAP;AAAA,YACA,QAAAr9B;AAAA,YACA,aAAAk7B;AAAA,YACA,eAAe;AAAA,YACf,iBAAA8C;AAAA,UAAA;AAAA,QAAA,GAEJ;AAAA,QACCU,KACCvhE,gBAAAA,GAAAA;AAAAA,UAACuiC;AAAA,UAAA;AAAA,YACC,WAAU;AAAA,YACV,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAASigC;AAAA,YACT,cAAW;AAAA,YAEX,iCAACn9B,IAAA,CAAA,CAAY;AAAA,UAAA;AAAA,QAAA;AAAA,MACf;AAAA,IAAA;AAAA,EAAA;AAIR,GCtCMu9B,KAA0D,CAAC;AAAA,EAC/D,gBAAAC;AAAA,EACA,kBAAAC,IAAmB,CAAA;AAAA,EACnB,uBAAAC,IAAwB;AAAA,EACxB,QAAAC,IAAS,CAAA;AAAA,EACT,QAAAC,IAAS;AAAA,EACT,WAAAC;AACF,MAAM;AACJ,QAAM,EAAE,MAAMC,GAAc,SAASC,EAAA,IACnChuE,GAAgBytE,CAAc,GAC1B,EAAE,aAAAQ,IAAc,GAAG,oBAAAC,IAAqB,CAAA,EAAC,IAAMH,KAAgB,CAAA,GAE/D,CAACI,GAAmBC,CAAoB,IAAI7vE,GAAiB,CAAC,GAC9D,CAAC8vE,GAAaC,CAAc,IAAI/vE,GAA+B,CAAA,CAAE,GAEjE,CAACgwE,GAAWC,CAAY,IAAIjwE,GAAoB;AAAA,IACpD,SAASkvE;AAAA,IACT,aAAa;AAAA,IACb,SAAS,CAAC,EAAE,MAAM,aAAa,SAAS,IAAI;AAAA,IAC5C,WAAWC;AAAA,IACX,YAAY;AAAA,IACZ,iBAAiBC;AAAA,IACjB,oBAAoB;AAAA,IACpB,0BAA0B;AAAA,IAC1B,OAAO;AAAA,EAAA,CACR,GAEKc,IAAa,MACV,KAAK,UAAUF,CAAS,GAG3BG,IAA4B,CAACrwE,MAA0B;AAC3D,UAAMswE,IAAYR,IAAoB;AACtC,WAAO,EACJ9vE,KAAQ6vE,EAAmB,SAASC,CAAiB,KACtDQ,KAAaV;AAAA,EAEjB,GAEMW,IAAkC,CACtCC,MAC6C;AAC7C,UAAMC,IAAa,CAAC,GAAGP,EAAU,OAAO;AAGxC,WAAOO,EAAW,UAAUX;AAC1B,MAAAW,EAAW,KAAK,EAAE,MAAM,aAAa,SAAS,IAAI;AAIpD,WAAAA,EAAWX,CAAiB,IAAI;AAAA,MAC9B,GAAGW,EAAWX,CAAiB;AAAA,MAC/B,SAASU;AAAA,IAAA,GAIPC,EAAW,UAAUX,IAAoB,KAC3CW,EAAW,KAAK,EAAE,MAAM,aAAa,SAAS,IAAI,GAG7CA;AAAA,EACT,GAEMC,IAA+B,CACnCC,MACyB;AACzB,UAAMC,IAAU,CAAC,GAAGZ,CAAW;AAG/B,WAAOY,EAAQ,UAAUd;AACvB,MAAAc,EAAQ,KAAK,EAAE,SAAS,GAAA,CAAI;AAI9B,WAAAA,EAAQd,CAAiB,IAAI;AAAA,MAC3B,GAAGc,EAAQd,CAAiB;AAAA,MAC5B,SAASa;AAAA,IAAA,GAGJC;AAAA,EACT,GAGMC,IAAmC,CACvCC,MACyB;AACzB,UAAMF,IAAU,CAAC,GAAGZ,CAAW,GACzB/K,IAAY2L,EAAQ,SAAS;AAEnC,WAAI3L,KAAa,MACf2L,EAAQ3L,CAAS,IAAI;AAAA,MACnB,GAAG2L,EAAQ3L,CAAS;AAAA,MACpB,UAAU;AAAA,MACV,mBAAmB6L,EAAO;AAAA,MAC1B,kBAAkBA,EAAO;AAAA,IAAA,IAItBF;AAAA,EACT,GAEMG,IAAiB,CAAC/wE,MAAiB;AACvC,QAAI,CAACqwE,EAA0BrwE,CAAI;AACjC;AAGF,UAAMywE,IAAaF,EAAgCvwE,CAAI,GACjDswE,IAAYR,IAAoB;AAEtC,IAAAK,EAAa,CAAAxE,OAAS;AAAA,MACpB,GAAGA;AAAA,MACH,YAAY;AAAA,MACZ,aAAa2E;AAAA,MACb,SAASG;AAAA,IAAA,EACT,GAEFV,EAAqBO,CAAS;AAAA,EAChC,GAEM,EAAE,MAAAtwE,GAAM,SAAAiB,MAAYpB,GAAY2vE,GAAQ;AAAA,IAC5C,QAAQ;AAAA,IACR,MAAMY,EAAA;AAAA,IACN,SAASX,IAAY,EAAE,cAAcA,EAAA,IAAc,CAAA;AAAA,IACnD,aAAa,CAAC,CAACC,KAAgB,CAACC;AAAA,IAChC,UAAUoB;AAAA,EAAA,CACX;AAED,EAAAtvE,GAAU,MAAM;AACd,IAAIiuE,KAAgB,CAACC,KACnB1uE,EAAA;AAAA,EAEJ,GAAG,CAACyuE,GAAcC,GAAmB1uE,CAAO,CAAC,GAE7CQ,GAAU,MAAM;AACd,QAAIzB;AACF,UAAI;AACF,cAAMgxE,IAAcN,EAA6B1wE,CAAI;AACrD,QAAAiwE,EAAee,CAAW;AAAA,MAC5B,SAAS3wE,GAAO;AACd,gBAAQ,MAAM,iCAAiCA,CAAK;AAAA,MACtD;AAAA,EAEJ,GAAG,CAACL,CAAI,CAAC;AAET,QAAMixE,IAAa,CAACH,MAAgC;AAClD,UAAMI,IAAYJ,EAAO,aAAaA,EAAO,cAAc,IAGrDL,IAAa,CAAC,GAAGP,EAAU,OAAO;AACxC,IAAIO,EAAWX,CAAiB,MAC9BW,EAAWX,CAAiB,IAAI;AAAA,MAC9B,GAAGW,EAAWX,CAAiB;AAAA,MAC/B,SAASoB;AAAA,MACT,MAAM;AAAA,IAAA,IAKVf,EAAa,CAAAxE,OAAS;AAAA,MACpB,GAAGA;AAAA,MACH,SAAS8E;AAAA,MACT,YAAYS,KAAa;AAAA,MACzB,WAAW;AAAA,QACT,GAAGvF,EAAK;AAAA,QACR,CAACmF,EAAO,gBAAgB,EAAE,GAAGI;AAAA,MAAA;AAAA,IAC/B,EACA;AAGF,UAAMF,IAAcH,EAAiCC,CAAM;AAC3D,IAAAb,EAAee,CAAW;AAAA,EAC5B;AAEA,SACEzkE,gBAAAA,GAAAA,IAAC,OAAA,EAAI,OAAOgjE,GACV,UAAAhjE,gBAAAA,GAAAA,IAACwgE,MAAa,oBAAoBiD,GAAa,QAAQiB,EAAA,CAAY,EAAA,CACrE;AAEJ;","x_google_ignoreList":[0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,260,261]}